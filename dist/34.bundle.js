(function(){(this||window).webpackJsonp.registerAbsMids({"esri/Basemap":1244,"C:/Users/mlinden.LUCIDENERGY/Desktop/Web Apps/Node Dev/esri-webpack-template/node_modules/arcgis-js-api/Basemap":1244})})(),(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{1244:function(e,r,t){var o,a;o=[t.dj.c(e.i),r,t(12),t(2),t(1),t(18),t(252),t(32),t(6),t(5),t(180),t(7),t(8),t(22),t(0),t(77),t(49),t(114),t(1599)],void 0===(a=function(e,r,o,a,n,i,s,p,l,u,c,f,y,d,h,m,b,L,w){var v=0,I=i.ofType(m),g=f.getLogger("esri.Basemap");return function(e){function r(r){var t=e.call(this)||this;t.id=null,t.portalItem=null,t.thumbnailUrl=null,t.title="Basemap",t.id=Date.now().toString(16)+"-basemap-"+v++,t.baseLayers=new I,t.referenceLayers=new I;var o=function(e){e.parent&&e.parent!==t&&"remove"in e.parent&&e.parent.remove(e),e.parent=t,"elevation"===e.type&&g.error("Layer '"+e.title+", id:"+e.id+"' of type '"+e.type+"' is not supported as a basemap layer and will therefore be ignored.")},a=function(e){e.parent=null};return t.baseLayers.on("after-add",function(e){return o(e.item)}),t.referenceLayers.on("after-add",function(e){return o(e.item)}),t.baseLayers.on("after-remove",function(e){return a(e.item)}),t.referenceLayers.on("after-remove",function(e){return a(e.item)}),t}var i;return a(r,e),i=r,r.prototype.initialize=function(){var e=this;this.when().catch(function(r){g.error("#load()","Failed to load basemap (title: '"+e.title+"', id: '"+e.id+"')",r)}),this.resourceInfo&&this.read(this.resourceInfo.data,this.resourceInfo.context)},r.prototype.normalizeCtorArgs=function(e){return e&&"resourceInfo"in e&&(this._set("resourceInfo",e.resourceInfo),delete(e=o({},e)).resourceInfo),e},Object.defineProperty(r.prototype,"baseLayers",{set:function(e){this._set("baseLayers",s.referenceSetter(e,this._get("baseLayers"),I))},enumerable:!0,configurable:!0}),r.prototype.writeBaseLayers=function(e,r,t,a){var n=[];e?(a=o({},a,{layerContainerType:"basemap"}),this.baseLayers.forEach(function(e){if(e.write){var r={};e.write(r,a)&&n.push(r)}}),this.referenceLayers.forEach(function(e){if(e.write){var r={isReference:!0};e.write(r,a)&&n.push(r)}}),r[t]=n):r[t]=n},Object.defineProperty(r.prototype,"referenceLayers",{set:function(e){this._set("referenceLayers",s.referenceSetter(e,this._get("referenceLayers"),I))},enumerable:!0,configurable:!0}),r.prototype.writeTitle=function(e,r){r.title=e||"Basemap"},r.prototype.load=function(){return this.addResolvingPromise(this._loadFromSource()),this.when()},r.prototype.clone=function(){var e={id:this.id,title:this.title,portalItem:this.portalItem,baseLayers:this.baseLayers.slice(),referenceLayers:this.referenceLayers.slice()};return this.loaded&&(e.loadStatus="loaded"),new i({resourceInfo:this.resourceInfo}).set(e)},r.prototype.read=function(e,r){return this.resourceInfo||this._set("resourceInfo",{data:e,context:r}),this.inherited(arguments)},r.prototype.write=function(e,r){return e=e||{},r&&r.origin||(r=o({origin:"web-map"},r)),this.inherited(arguments,[e,r]),!this.loaded&&this.resourceInfo&&this.resourceInfo.data.baseMapLayers&&(e.baseMapLayers=this.resourceInfo.data.baseMapLayers.map(function(e){var r=u.clone(e);return r.url&&d.isProtocolRelative(r.url)&&(r.url="https:"+r.url),r.templateUrl&&d.isProtocolRelative(r.templateUrl)&&(r.templateUrl="https:"+r.templateUrl),r})),e},r.prototype._loadFromSource=function(){var e=this.resourceInfo,r=this.portalItem;return e?this._loadLayersFromJSON(e.data,e.context?e.context.url:null):r?this._loadFromItem(r):y.resolve(null)},r.prototype._loadLayersFromJSON=function(e,r){var o=this,a=this.resourceInfo&&this.resourceInfo.context,n=this.portalItem&&this.portalItem.portal||a&&a.portal||null,i=a&&"web-scene"===a.origin?"web-scene":"web-map";return y.create(function(e){return t.e(24).then(function(){var r=[t(1648)];e.apply(null,r)}.bind(this)).catch(t.oe)}).then(function(t){var a=[];if(e.baseMapLayers&&Array.isArray(e.baseMapLayers)){var s={context:{origin:i,url:r,portal:n,layerContainerType:"basemap"},defaultLayerType:"DefaultTileLayer"},p=t.populateOperationalLayers(o.baseLayers,e.baseMapLayers.filter(function(e){return!e.isReference}),s);a.push.apply(a,p);var l=t.populateOperationalLayers(o.referenceLayers,e.baseMapLayers.filter(function(e){return e.isReference}),s);a.push.apply(a,l)}return y.eachAlways(a)}).then(function(){})},r.prototype._loadFromItem=function(e){var r=this;return e.load().then(function(e){return e.fetchData()}).then(function(t){var o=d.urlToObject(e.itemUrl);return r._set("resourceInfo",{data:t.baseMap,context:{origin:"web-map",portal:e.portal||b.getDefault(),url:o}}),r.read(r.resourceInfo.data,r.resourceInfo.context),r.read({title:e.title,thumbnailUrl:e.thumbnailUrl},{origin:"portal-item",portal:e.portal||b.getDefault(),url:o}),r._loadLayersFromJSON(r.resourceInfo.data,o)})},r.fromId=function(e){var r=w[e];return r?i.fromJSON(r):null},n([h.property({type:I,json:{write:{ignoreOrigin:!0,target:"baseMapLayers"}}}),h.cast(s.castForReferenceSetter)],r.prototype,"baseLayers",null),n([h.writer("baseLayers")],r.prototype,"writeBaseLayers",null),n([h.property({type:String,json:{origins:{"web-scene":{write:!0}}}})],r.prototype,"id",void 0),n([h.property({type:L})],r.prototype,"portalItem",void 0),n([h.property({type:I}),h.cast(s.castForReferenceSetter)],r.prototype,"referenceLayers",null),n([h.property({readOnly:!0})],r.prototype,"resourceInfo",void 0),n([h.property()],r.prototype,"thumbnailUrl",void 0),n([h.property({type:String,json:{origins:{"web-scene":{write:{isRequired:!0}}}}})],r.prototype,"title",void 0),n([h.writer("title")],r.prototype,"writeTitle",null),i=n([h.subclass("esri.Basemap")],r)}(h.declared(l,p,c))}.apply(null,o))||(e.exports=a)}}]);
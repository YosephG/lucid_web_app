(function(){
(this||window)["webpackJsonp"].registerAbsMids({
	'dojo/fx':"./node_modules/dojo/fx.js",
	'dojo/fx/easing':"./node_modules/dojo/fx/easing.js",
	'dojox/charting/Chart':"./node_modules/dojox/charting/Chart.js",
	'dojox/charting/Chart2D':"./node_modules/dojox/charting/Chart2D.js",
	'dojox/charting/Element':"./node_modules/dojox/charting/Element.js",
	'dojox/charting/Series':"./node_modules/dojox/charting/Series.js",
	'dojox/charting/SimpleTheme':"./node_modules/dojox/charting/SimpleTheme.js",
	'dojox/charting/action2d/Base':"./node_modules/dojox/charting/action2d/Base.js",
	'dojox/charting/action2d/PlotAction':"./node_modules/dojox/charting/action2d/PlotAction.js",
	'dojox/charting/action2d/Tooltip':"./node_modules/dojox/charting/action2d/Tooltip.js",
	'dojox/charting/axis2d/Base':"./node_modules/dojox/charting/axis2d/Base.js",
	'dojox/charting/axis2d/Default':"./node_modules/dojox/charting/axis2d/Default.js",
	'dojox/charting/axis2d/Invisible':"./node_modules/dojox/charting/axis2d/Invisible.js",
	'dojox/charting/axis2d/common':"./node_modules/dojox/charting/axis2d/common.js",
	'dojox/charting/bidi/Chart':"./node_modules/dojox/charting/bidi/Chart.js",
	'dojox/charting/bidi/_bidiutils':"./node_modules/dojox/charting/bidi/_bidiutils.js",
	'dojox/charting/bidi/action2d/Tooltip':"./node_modules/dojox/charting/bidi/action2d/Tooltip.js",
	'dojox/charting/bidi/axis2d/Default':"./node_modules/dojox/charting/bidi/axis2d/Default.js",
	'dojox/charting/plot2d/Areas':"./node_modules/dojox/charting/plot2d/Areas.js",
	'dojox/charting/plot2d/Bars':"./node_modules/dojox/charting/plot2d/Bars.js",
	'dojox/charting/plot2d/Base':"./node_modules/dojox/charting/plot2d/Base.js",
	'dojox/charting/plot2d/Bubble':"./node_modules/dojox/charting/plot2d/Bubble.js",
	'dojox/charting/plot2d/Candlesticks':"./node_modules/dojox/charting/plot2d/Candlesticks.js",
	'dojox/charting/plot2d/CartesianBase':"./node_modules/dojox/charting/plot2d/CartesianBase.js",
	'dojox/charting/plot2d/ClusteredBars':"./node_modules/dojox/charting/plot2d/ClusteredBars.js",
	'dojox/charting/plot2d/ClusteredColumns':"./node_modules/dojox/charting/plot2d/ClusteredColumns.js",
	'dojox/charting/plot2d/Columns':"./node_modules/dojox/charting/plot2d/Columns.js",
	'dojox/charting/plot2d/Default':"./node_modules/dojox/charting/plot2d/Default.js",
	'dojox/charting/plot2d/Grid':"./node_modules/dojox/charting/plot2d/Grid.js",
	'dojox/charting/plot2d/Lines':"./node_modules/dojox/charting/plot2d/Lines.js",
	'dojox/charting/plot2d/Markers':"./node_modules/dojox/charting/plot2d/Markers.js",
	'dojox/charting/plot2d/MarkersOnly':"./node_modules/dojox/charting/plot2d/MarkersOnly.js",
	'dojox/charting/plot2d/OHLC':"./node_modules/dojox/charting/plot2d/OHLC.js",
	'dojox/charting/plot2d/Pie':"./node_modules/dojox/charting/plot2d/Pie.js",
	'dojox/charting/plot2d/Scatter':"./node_modules/dojox/charting/plot2d/Scatter.js",
	'dojox/charting/plot2d/Spider':"./node_modules/dojox/charting/plot2d/Spider.js",
	'dojox/charting/plot2d/Stacked':"./node_modules/dojox/charting/plot2d/Stacked.js",
	'dojox/charting/plot2d/StackedAreas':"./node_modules/dojox/charting/plot2d/StackedAreas.js",
	'dojox/charting/plot2d/StackedBars':"./node_modules/dojox/charting/plot2d/StackedBars.js",
	'dojox/charting/plot2d/StackedColumns':"./node_modules/dojox/charting/plot2d/StackedColumns.js",
	'dojox/charting/plot2d/StackedLines':"./node_modules/dojox/charting/plot2d/StackedLines.js",
	'dojox/charting/plot2d/_PlotEvents':"./node_modules/dojox/charting/plot2d/_PlotEvents.js",
	'dojox/charting/plot2d/common':"./node_modules/dojox/charting/plot2d/common.js",
	'dojox/charting/plot2d/commonStacked':"./node_modules/dojox/charting/plot2d/commonStacked.js",
	'dojox/charting/scaler/common':"./node_modules/dojox/charting/scaler/common.js",
	'dojox/charting/scaler/linear':"./node_modules/dojox/charting/scaler/linear.js",
	'dojox/charting/scaler/primitive':"./node_modules/dojox/charting/scaler/primitive.js",
	'dojox/gfx':"./node_modules/dojox/gfx.js",
	'dojox/gfx/_gfxBidiSupport':"./node_modules/dojox/gfx/_gfxBidiSupport.js",
	'dojox/gfx/fx':"./node_modules/dojox/gfx/fx.js",
	'dojox/gfx/gradutils':"./node_modules/dojox/gfx/gradutils.js",
	'dojox/gfx/path':"./node_modules/dojox/gfx/path.js",
	'dojox/gfx/shape':"./node_modules/dojox/gfx/shape.js",
	'dojox/gfx/renderer!':"./node_modules/dojox/gfx/svg.js",
	'dojox/gfx/svg':"./node_modules/dojox/gfx/svg.js",
	'dojox/gfx/utils':"./node_modules/dojox/gfx/utils.js",
	'dojox/lang/functional':"./node_modules/dojox/lang/functional.js",
	'dojox/lang/functional/array':"./node_modules/dojox/lang/functional/array.js",
	'dojox/lang/functional/fold':"./node_modules/dojox/lang/functional/fold.js",
	'dojox/lang/functional/lambda':"./node_modules/dojox/lang/functional/lambda.js",
	'dojox/lang/functional/object':"./node_modules/dojox/lang/functional/object.js",
	'dojox/lang/functional/reversed':"./node_modules/dojox/lang/functional/reversed.js",
	'dojox/lang/functional/scan':"./node_modules/dojox/lang/functional/scan.js",
	'dojox/lang/utils':"./node_modules/dojox/lang/utils.js",
	'dojox/main':"./node_modules/dojox/main.js"
})
})(),(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[96],{

/***/ "./node_modules/dojo/fx.js":
/*!*********************************!*\
  !*** ./node_modules/dojo/fx.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! ./_base/lang */ \"./node_modules/dojo/_base/lang.js\"),\r\n\t__webpack_require__(/*! ./Evented */ \"./node_modules/dojo/Evented.js\"),\r\n\t__webpack_require__(/*! ./_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"),\r\n\t__webpack_require__(/*! ./_base/array */ \"./node_modules/dojo/_base/array.js\"),\r\n\t__webpack_require__(/*! ./aspect */ \"./node_modules/dojo/aspect.js\"),\r\n\t__webpack_require__(/*! ./_base/fx */ \"./node_modules/dojo/_base/fx.js\"),\r\n\t__webpack_require__(/*! ./dom */ \"./node_modules/dojo/dom.js\"),\r\n\t__webpack_require__(/*! ./dom-style */ \"./node_modules/dojo/dom-style.js\"),\r\n\t__webpack_require__(/*! ./dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"),\r\n\t__webpack_require__(/*! ./ready */ \"./node_modules/dojo/ready.js\"),\r\n\t__webpack_require__.dj.c(module.i) // for context sensitive loading of Toggler\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, Evented, dojo, arrayUtil, aspect, baseFx, dom, domStyle, geom, ready, require){\r\n\r\n\t// module:\r\n\t//\t\tdojo/fx\r\n\r\n\t// For back-compat, remove in 2.0.\r\n\tif(!dojo.isAsync){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"./fx/Toggler\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\tvar coreFx = dojo.fx = {\r\n\t\t// summary:\r\n\t\t//\t\tEffects library on top of Base animations\r\n\t};\r\n\r\n\tvar _baseObj = {\r\n\t\t\t_fire: function(evt, args){\r\n\t\t\t\tif(this[evt]){\r\n\t\t\t\t\tthis[evt].apply(this, args||[]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\tvar _chain = function(animations){\r\n\t\tthis._index = -1;\r\n\t\tthis._animations = animations||[];\r\n\t\tthis._current = this._onAnimateCtx = this._onEndCtx = null;\r\n\r\n\t\tthis.duration = 0;\r\n\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\tif(a){\r\n\t\t\t\tif(typeof a.duration != \"undefined\"){\r\n\t        \t\tthis.duration += a.duration;\r\n\t\t\t\t}\r\n\t\t\t\tif(a.delay){\r\n\t\t\t\t\tthis.duration += a.delay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this);\r\n\t};\r\n\t_chain.prototype = new Evented();\r\n\tlang.extend(_chain, {\r\n\t\t_onAnimate: function(){\r\n\t\t\tthis._fire(\"onAnimate\", arguments);\r\n\t\t},\r\n\t\t_onEnd: function(){\r\n\t\t\tthis._onAnimateCtx.remove();\r\n\t\t\tthis._onEndCtx.remove();\r\n\t\t\tthis._onAnimateCtx = this._onEndCtx = null;\r\n\t\t\tif(this._index + 1 == this._animations.length){\r\n\t\t\t\tthis._fire(\"onEnd\");\r\n\t\t\t}else{\r\n\t\t\t\t// switch animations\r\n\t\t\t\tthis._current = this._animations[++this._index];\r\n\t\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\r\n\t\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\r\n\t\t\t\tthis._current.play(0, true);\r\n\t\t\t}\r\n\t\t},\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\tif(!this._current){ this._current = this._animations[this._index = 0]; }\r\n\t\t\tif(!gotoStart && this._current.status() == \"playing\"){ return this; }\r\n\t\t\tvar beforeBegin = aspect.after(this._current, \"beforeBegin\", lang.hitch(this, function(){\r\n\t\t\t\t\tthis._fire(\"beforeBegin\");\r\n\t\t\t\t}), true),\r\n\t\t\t\tonBegin = aspect.after(this._current, \"onBegin\", lang.hitch(this, function(arg){\r\n\t\t\t\t\tthis._fire(\"onBegin\", arguments);\r\n\t\t\t\t}), true),\r\n\t\t\t\tonPlay = aspect.after(this._current, \"onPlay\", lang.hitch(this, function(arg){\r\n\t\t\t\t\tthis._fire(\"onPlay\", arguments);\r\n\t\t\t\t\tbeforeBegin.remove();\r\n\t\t\t\t\tonBegin.remove();\r\n\t\t\t\t\tonPlay.remove();\r\n\t\t\t\t}));\r\n\t\t\tif(this._onAnimateCtx){\r\n\t\t\t\tthis._onAnimateCtx.remove();\r\n\t\t\t}\r\n\t\t\tthis._onAnimateCtx = aspect.after(this._current, \"onAnimate\", lang.hitch(this, \"_onAnimate\"), true);\r\n\t\t\tif(this._onEndCtx){\r\n\t\t\t\tthis._onEndCtx.remove();\r\n\t\t\t}\r\n\t\t\tthis._onEndCtx = aspect.after(this._current, \"onEnd\", lang.hitch(this, \"_onEnd\"), true);\r\n\t\t\tthis._current.play.apply(this._current, arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpause: function(){\r\n\t\t\tif(this._current){\r\n\t\t\t\tvar e = aspect.after(this._current, \"onPause\", lang.hitch(this, function(arg){\r\n\t\t\t\t\t\tthis._fire(\"onPause\", arguments);\r\n\t\t\t\t\t\te.remove();\r\n\t\t\t\t\t}), true);\r\n\t\t\t\tthis._current.pause();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\r\n\t\t\tthis.pause();\r\n\t\t\tvar offset = this.duration * percent;\r\n\t\t\tthis._current = null;\r\n\r\n\t\t\tarrayUtil.some(this._animations, function(a, index){\r\n\t\t\t\tif(offset <= a.duration){\r\n\t\t\t\t\tthis._current = a;\r\n\t\t\t\t\tthis._index = index;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\toffset -= a.duration;\r\n\t\t\t\treturn false;\r\n\t\t\t}, this);\r\n\t\t\tif(this._current){\r\n\t\t\t\tthis._current.gotoPercent(offset / this._current.duration);\r\n\t\t\t}\r\n\t\t\tif (andPlay) { this.play(); }\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\tif(this._current){\r\n\t\t\t\tif(gotoEnd){\r\n\t\t\t\t\tfor(; this._index + 1 < this._animations.length; ++this._index){\r\n\t\t\t\t\t\tthis._animations[this._index].stop(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._current = this._animations[this._index];\r\n\t\t\t\t}\r\n\t\t\t\tvar e = aspect.after(this._current, \"onStop\", lang.hitch(this, function(arg){\r\n\t\t\t\t\t\tthis._fire(\"onStop\", arguments);\r\n\t\t\t\t\t\te.remove();\r\n\t\t\t\t\t}), true);\r\n\t\t\t\tthis._current.stop();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstatus: function(){\r\n\t\t\treturn this._current ? this._current.status() : \"stopped\";\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.stop();\r\n\t\t\tif(this._onAnimateCtx){ this._onAnimateCtx.remove(); }\r\n\t\t\tif(this._onEndCtx){ this._onEndCtx.remove(); }\r\n\t\t}\r\n\t});\r\n\tlang.extend(_chain, _baseObj);\r\n\r\n\tcoreFx.chain = function(/*dojo/_base/fx.Animation[]*/ animations){\r\n\t\t// summary:\r\n\t\t//\t\tChain a list of `dojo/_base/fx.Animation`s to run in sequence\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturn a `dojo/_base/fx.Animation` which will play all passed\r\n\t\t//\t\t`dojo/_base/fx.Animation` instances in sequence, firing its own\r\n\t\t//\t\tsynthesized events simulating a single animation. (eg:\r\n\t\t//\t\tonEnd of this animation means the end of the chain,\r\n\t\t//\t\tnot the individual animations within)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tOnce `node` is faded out, fade in `otherNode`\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.chain([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\r\n\t\t//\t|\t\t]).play();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\treturn new _chain(lang.isArray(animations) ? animations : Array.prototype.slice.call(animations, 0)); // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tvar _combine = function(animations){\r\n\t\tthis._animations = animations||[];\r\n\t\tthis._connects = [];\r\n\t\tthis._finished = 0;\r\n\r\n\t\tthis.duration = 0;\r\n\t\tarrayUtil.forEach(animations, function(a){\r\n\t\t\tvar duration = a.duration;\r\n\t\t\tif(a.delay){ duration += a.delay; }\r\n\t\t\tif(this.duration < duration){ this.duration = duration; }\r\n\t\t\tthis._connects.push(aspect.after(a, \"onEnd\", lang.hitch(this, \"_onEnd\"), true));\r\n\t\t}, this);\r\n\r\n\t\tthis._pseudoAnimation = new baseFx.Animation({curve: [0, 1], duration: this.duration});\r\n\t\tvar self = this;\r\n\t\tarrayUtil.forEach([\"beforeBegin\", \"onBegin\", \"onPlay\", \"onAnimate\", \"onPause\", \"onStop\", \"onEnd\"],\r\n\t\t\tfunction(evt){\r\n\t\t\t\tself._connects.push(aspect.after(self._pseudoAnimation, evt,\r\n\t\t\t\t\tfunction(){ self._fire(evt, arguments); },\r\n\t\t\t\ttrue));\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\tlang.extend(_combine, {\r\n\t\t_doAction: function(action, args){\r\n\t\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\t\ta[action].apply(a, args);\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_onEnd: function(){\r\n\t\t\tif(++this._finished > this._animations.length){\r\n\t\t\t\tthis._fire(\"onEnd\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t_call: function(action, args){\r\n\t\t\tvar t = this._pseudoAnimation;\r\n\t\t\tt[action].apply(t, args);\r\n\t\t},\r\n\t\tplay: function(/*int?*/ delay, /*Boolean?*/ gotoStart){\r\n\t\t\tthis._finished = 0;\r\n\t\t\tthis._doAction(\"play\", arguments);\r\n\t\t\tthis._call(\"play\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tpause: function(){\r\n\t\t\tthis._doAction(\"pause\", arguments);\r\n\t\t\tthis._call(\"pause\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tgotoPercent: function(/*Decimal*/percent, /*Boolean?*/ andPlay){\r\n\t\t\tvar ms = this.duration * percent;\r\n\t\t\tarrayUtil.forEach(this._animations, function(a){\r\n\t\t\t\ta.gotoPercent(a.duration < ms ? 1 : (ms / a.duration), andPlay);\r\n\t\t\t});\r\n\t\t\tthis._call(\"gotoPercent\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstop: function(/*boolean?*/ gotoEnd){\r\n\t\t\tthis._doAction(\"stop\", arguments);\r\n\t\t\tthis._call(\"stop\", arguments);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tstatus: function(){\r\n\t\t\treturn this._pseudoAnimation.status();\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\tthis.stop();\r\n\t\t\tarrayUtil.forEach(this._connects, function(handle){\r\n\t\t\t\thandle.remove();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\tlang.extend(_combine, _baseObj);\r\n\r\n\tcoreFx.combine = function(/*dojo/_base/fx.Animation[]*/ animations){\r\n\t\t// summary:\r\n\t\t//\t\tCombine a list of `dojo/_base/fx.Animation`s to run in parallel\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tCombine an array of `dojo/_base/fx.Animation`s or N\r\n\t\t//\t\t`dojo/_base/fx.Animation`s  to run in parallel, providing\r\n\t\t//\t\ta new `dojo/_base/fx.Animation` instance encompassing each\r\n\t\t//\t\tanimation, firing standard animation events.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tFade out `node` while fading in `otherNode` simultaneously\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.combine([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node:node }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node:otherNode })\r\n\t\t//\t|\t\t]).play();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\tWhen the longest animation ends, execute a function:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tvar anim = fx.combine([\r\n\t\t//\t|\t\t\tfx.fadeIn({ node: n, duration:700 }),\r\n\t\t//\t|\t\t\tfx.fadeOut({ node: otherNode, duration: 300 })\r\n\t\t//\t|\t\t]);\r\n\t\t//\t|\t\taspect.after(anim, \"onEnd\", function(){\r\n\t\t//\t|\t\t\t// overall animation is done.\r\n\t\t//\t|\t\t}, true);\r\n\t\t//\t|\t\tanim.play(); // play the animation\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\treturn new _combine(lang.isArray(animations) ? animations : Array.prototype.slice.call(animations, 0)); // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.wipeIn = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tExpand a node to it's natural height.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will expand the\r\n\t\t//\t\tnode defined in 'args' object from it's current height to\r\n\t\t//\t\tit's natural height (with no scrollbar).\r\n\t\t//\t\tNode must have no margin/border/padding.\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.wipeIn({\r\n\t\t//\t|\t\t\tnode:\"someId\"\r\n\t\t//\t|\t\t}).play()\r\n\t\t//\t|\t});\r\n\r\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\theight: {\r\n\t\t\t\t\t// wrapped in functions so we wait till the last second to query (in case value has changed)\r\n\t\t\t\t\tstart: function(){\r\n\t\t\t\t\t\t// start at current [computed] height, but use 1px rather than 0\r\n\t\t\t\t\t\t// because 0 causes IE to display the whole panel\r\n\t\t\t\t\t\to = s.overflow;\r\n\t\t\t\t\t\ts.overflow = \"hidden\";\r\n\t\t\t\t\t\tif(s.visibility == \"hidden\" || s.display == \"none\"){\r\n\t\t\t\t\t\t\ts.height = \"1px\";\r\n\t\t\t\t\t\t\ts.display = \"\";\r\n\t\t\t\t\t\t\ts.visibility = \"\";\r\n\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tvar height = domStyle.get(node, \"height\");\r\n\t\t\t\t\t\t\treturn Math.max(height, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tend: function(){\r\n\t\t\t\t\t\treturn node.scrollHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, args));\r\n\r\n\t\tvar fini = function(){\r\n\t\t\ts.height = \"auto\";\r\n\t\t\ts.overflow = o;\r\n\t\t};\r\n\t\taspect.after(anim, \"onStop\", fini, true);\r\n\t\taspect.after(anim, \"onEnd\", fini, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.wipeOut = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tShrink a node to nothing and hide it.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will shrink node defined in \"args\"\r\n\t\t//\t\tfrom it's current height to 1px, and then hide it.\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on)\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/fx\"], function(fx){\r\n\t\t//\t|\t\tfx.wipeOut({ node:\"someId\" }).play()\r\n\t\t//\t|\t});\r\n\r\n\t\tvar node = args.node = dom.byId(args.node), s = node.style, o;\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\theight: {\r\n\t\t\t\t\tend: 1 // 0 causes IE to display the whole panel\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, args));\r\n\r\n\t\taspect.after(anim, \"beforeBegin\", function(){\r\n\t\t\to = s.overflow;\r\n\t\t\ts.overflow = \"hidden\";\r\n\t\t\ts.display = \"\";\r\n\t\t}, true);\r\n\t\tvar fini = function(){\r\n\t\t\ts.overflow = o;\r\n\t\t\ts.height = \"auto\";\r\n\t\t\ts.display = \"none\";\r\n\t\t};\r\n\t\taspect.after(anim, \"onStop\", fini, true);\r\n\t\taspect.after(anim, \"onEnd\", fini, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\tcoreFx.slideTo = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tSlide a node to a new top/left position\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tReturns an animation that will slide \"node\"\r\n\t\t//\t\tdefined in args Object from its current position to\r\n\t\t//\t\tthe position defined by (args.left, args.top).\r\n\t\t//\r\n\t\t// args: Object\r\n\t\t//\t\tA hash-map of standard `dojo/_base/fx.Animation` constructor properties\r\n\t\t//\t\t(such as easing: node: duration: and so on). Special args members\r\n\t\t//\t\tare `top` and `left`, which indicate the new position to slide to.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\t.slideTo({ node: node, left:\"40\", top:\"50\", units:\"px\" }).play()\r\n\r\n\t\tvar node = args.node = dom.byId(args.node),\r\n\t\t\ttop = null, left = null;\r\n\r\n\t\tvar init = (function(n){\r\n\t\t\treturn function(){\r\n\t\t\t\tvar cs = domStyle.getComputedStyle(n);\r\n\t\t\t\tvar pos = cs.position;\r\n\t\t\t\ttop = (pos == 'absolute' ? n.offsetTop : parseInt(cs.top) || 0);\r\n\t\t\t\tleft = (pos == 'absolute' ? n.offsetLeft : parseInt(cs.left) || 0);\r\n\t\t\t\tif(pos != 'absolute' && pos != 'relative'){\r\n\t\t\t\t\tvar ret = geom.position(n, true);\r\n\t\t\t\t\ttop = ret.y;\r\n\t\t\t\t\tleft = ret.x;\r\n\t\t\t\t\tn.style.position=\"absolute\";\r\n\t\t\t\t\tn.style.top=top+\"px\";\r\n\t\t\t\t\tn.style.left=left+\"px\";\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t})(node);\r\n\t\tinit();\r\n\r\n\t\tvar anim = baseFx.animateProperty(lang.mixin({\r\n\t\t\tproperties: {\r\n\t\t\t\ttop: args.top || 0,\r\n\t\t\t\tleft: args.left || 0\r\n\t\t\t}\r\n\t\t}, args));\r\n\t\taspect.after(anim, \"beforeBegin\", init, true);\r\n\r\n\t\treturn anim; // dojo/_base/fx.Animation\r\n\t};\r\n\r\n\treturn coreFx;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojo/fx.js\n");

/***/ }),

/***/ "./node_modules/dojo/fx/easing.js":
/*!****************************************!*\
  !*** ./node_modules/dojo/fx/easing.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../_base/lang */ \"./node_modules/dojo/_base/lang.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang){\r\n\r\n// module:\r\n//\t\tdojo/fx/easing\r\n\r\nvar easingFuncs = {\r\n\t// summary:\r\n\t//\t\tCollection of easing functions to use beyond the default\r\n\t//\t\t`dojo._defaultEasing` function.\r\n\t// description:\r\n\t//\t\tEasing functions are used to manipulate the iteration through\r\n\t//\t\tan `dojo.Animation`s _Line. _Line being the properties of an Animation,\r\n\t//\t\tand the easing function progresses through that Line determining\r\n\t//\t\thow quickly (or slowly) it should go. Or more accurately: modify\r\n\t//\t\tthe value of the _Line based on the percentage of animation completed.\r\n\t//\r\n\t//\t\tAll functions follow a simple naming convention of \"ease type\" + \"when\".\r\n\t//\t\tIf the name of the function ends in Out, the easing described appears\r\n\t//\t\ttowards the end of the animation. \"In\" means during the beginning,\r\n\t//\t\tand InOut means both ranges of the Animation will applied, both\r\n\t//\t\tbeginning and end.\r\n\t//\r\n\t//\t\tOne does not call the easing function directly, it must be passed to\r\n\t//\t\tthe `easing` property of an animation.\r\n\t// example:\r\n\t//\t|\tdojo.require(\"dojo.fx.easing\");\r\n\t//\t|\tvar anim = dojo.fadeOut({\r\n\t//\t|\t\tnode: 'node',\r\n\t//\t|\t\tduration: 2000,\r\n\t//\t|\t\t//\tnote there is no ()\r\n\t//\t|\t\teasing: dojo.fx.easing.quadIn\r\n\t//\t|\t}).play();\r\n\t//\r\n\r\n\tlinear: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tA linear easing function\r\n\t\treturn n;\r\n\t},\r\n\r\n\tquadIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 2);\r\n\t},\r\n\r\n\tquadOut: function(/* Decimal? */n){\r\n\t\treturn n * (n - 2) * -1;\r\n\t},\r\n\r\n\tquadInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 2) / 2; }\r\n\t\treturn -1 * ((--n) * (n - 2) - 1) / 2;\r\n\t},\r\n\r\n\tcubicIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 3);\r\n\t},\r\n\r\n\tcubicOut: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n - 1, 3) + 1;\r\n\t},\r\n\r\n\tcubicInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 3) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn (Math.pow(n, 3) + 2) / 2;\r\n\t},\r\n\r\n\tquartIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 4);\r\n\t},\r\n\r\n\tquartOut: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.pow(n - 1, 4) - 1);\r\n\t},\r\n\r\n\tquartInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 4) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn -1 / 2 * (Math.pow(n, 4) - 2);\r\n\t},\r\n\r\n\tquintIn: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n, 5);\r\n\t},\r\n\r\n\tquintOut: function(/* Decimal? */n){\r\n\t\treturn Math.pow(n - 1, 5) + 1;\r\n\t},\r\n\r\n\tquintInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(n, 5) / 2; }\r\n\t\tn -= 2;\r\n\t\treturn (Math.pow(n, 5) + 2) / 2;\r\n\t},\r\n\r\n\tsineIn: function(/* Decimal? */n){\r\n\t\treturn -1 * Math.cos(n * (Math.PI / 2)) + 1;\r\n\t},\r\n\r\n\tsineOut: function(/* Decimal? */n){\r\n\t\treturn Math.sin(n * (Math.PI / 2));\r\n\t},\r\n\r\n\tsineInOut: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.cos(Math.PI * n) - 1) / 2;\r\n\t},\r\n\r\n\texpoIn: function(/* Decimal? */n){\r\n\t\treturn (n == 0) ? 0 : Math.pow(2, 10 * (n - 1));\r\n\t},\r\n\r\n\texpoOut: function(/* Decimal? */n){\r\n\t\treturn (n == 1) ? 1 : (-1 * Math.pow(2, -10 * n) + 1);\r\n\t},\r\n\r\n\texpoInOut: function(/* Decimal? */n){\r\n\t\tif(n == 0){ return 0; }\r\n\t\tif(n == 1){ return 1; }\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return Math.pow(2, 10 * (n - 1)) / 2; }\r\n\t\t--n;\r\n\t\treturn (-1 * Math.pow(2, -10 * n) + 2) / 2;\r\n\t},\r\n\r\n\tcircIn: function(/* Decimal? */n){\r\n\t\treturn -1 * (Math.sqrt(1 - Math.pow(n, 2)) - 1);\r\n\t},\r\n\r\n\tcircOut: function(/* Decimal? */n){\r\n\t\tn = n - 1;\r\n\t\treturn Math.sqrt(1 - Math.pow(n, 2));\r\n\t},\r\n\r\n\tcircInOut: function(/* Decimal? */n){\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return -1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) - 1); }\r\n\t\tn -= 2;\r\n\t\treturn 1 / 2 * (Math.sqrt(1 - Math.pow(n, 2)) + 1);\r\n\t},\r\n\r\n\tbackIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that starts away from the target,\r\n\t\t//\t\tand quickly accelerates towards the end value.\r\n\t\t//\r\n\t\t//\t\tUse caution when the easing will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tvar s = 1.70158;\r\n\t\treturn Math.pow(n, 2) * ((s + 1) * n - s);\r\n\t},\r\n\r\n\tbackOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that pops past the range briefly, and slowly comes back.\r\n\t\t//\r\n\t\t//\t\tUse caution when the easing will cause values to become negative as some\r\n\t\t//\t\tproperties cannot be set to negative values.\r\n\r\n\t\tn = n - 1;\r\n\t\tvar s = 1.70158;\r\n\t\treturn Math.pow(n, 2) * ((s + 1) * n + s) + 1;\r\n\t},\r\n\r\n\tbackInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`\r\n\t\t// description:\r\n\t\t//\t\tAn easing function combining the effects of `backIn` and `backOut`.\r\n\t\t//\t\tUse caution when the easing will cause values to become negative\r\n\t\t//\t\tas some properties cannot be set to negative values.\r\n\t\tvar s = 1.70158 * 1.525;\r\n\t\tn = n * 2;\r\n\t\tif(n < 1){ return (Math.pow(n, 2) * ((s + 1) * n - s)) / 2; }\r\n\t\tn-=2;\r\n\t\treturn (Math.pow(n, 2) * ((s + 1) * n + s) + 2) / 2;\r\n\t},\r\n\r\n\telasticIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function the elastically snaps from the start value\r\n\t\t// description:\r\n\t\t//\t\tAn easing function the elastically snaps from the start value\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become negative\r\n\t\t//\t\tas some properties cannot be set to negative values.\r\n\t\tif(n == 0 || n == 1){ return n; }\r\n\t\tvar p = .3;\r\n\t\tvar s = p / 4;\r\n\t\tn = n - 1;\r\n\t\treturn -1 * Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p);\r\n\t},\r\n\r\n\telasticOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\r\n\t\t//\t\tnear the end of the Animation\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that elasticly snaps around the target value,\r\n\t\t//\t\tnear the end of the Animation\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tif(n==0 || n == 1){ return n; }\r\n\t\tvar p = .3;\r\n\t\tvar s = p / 4;\r\n\t\treturn Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p) + 1;\r\n\t},\r\n\r\n\telasticInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\r\n\t\t//\t\tthe beginning and end of the Animation.\r\n\t\t// description:\r\n\t\t//\t\tAn easing function that elasticly snaps around the value, near\r\n\t\t//\t\tthe beginning and end of the Animation.\r\n\t\t//\r\n\t\t//\t\tUse caution when the elasticity will cause values to become\r\n\t\t//\t\tnegative as some properties cannot be set to negative values.\r\n\t\tif(n == 0) return 0;\r\n\t\tn = n * 2;\r\n\t\tif(n == 2) return 1;\r\n\t\tvar p = .3 * 1.5;\r\n\t\tvar s = p / 4;\r\n\t\tif(n < 1){\r\n\t\t\tn -= 1;\r\n\t\t\treturn -.5 * (Math.pow(2, 10 * n) * Math.sin((n - s) * (2 * Math.PI) / p));\r\n\t\t}\r\n\t\tn -= 1;\r\n\t\treturn .5 * (Math.pow(2, -10 * n) * Math.sin((n - s) * (2 * Math.PI) / p)) + 1;\r\n\t},\r\n\r\n\tbounceIn: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' near the beginning of an Animation\r\n\t\treturn (1 - easingFuncs.bounceOut(1 - n)); // Decimal\r\n\t},\r\n\r\n\tbounceOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' near the end of an Animation\r\n\t\tvar s = 7.5625;\r\n\t\tvar p = 2.75;\r\n\t\tvar l;\r\n\t\tif(n < (1 / p)){\r\n\t\t\tl = s * Math.pow(n, 2);\r\n\t\t}else if(n < (2 / p)){\r\n\t\t\tn -= (1.5 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .75;\r\n\t\t}else if(n < (2.5 / p)){\r\n\t\t\tn -= (2.25 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .9375;\r\n\t\t}else{\r\n\t\t\tn -= (2.625 / p);\r\n\t\t\tl = s * Math.pow(n, 2) + .984375;\r\n\t\t}\r\n\t\treturn l;\r\n\t},\r\n\r\n\tbounceInOut: function(/* Decimal? */n){\r\n\t\t// summary:\r\n\t\t//\t\tAn easing function that 'bounces' at the beginning and end of the Animation\r\n\t\tif(n < 0.5){ return easingFuncs.bounceIn(n * 2) / 2; }\r\n\t\treturn (easingFuncs.bounceOut(n * 2 - 1) / 2) + 0.5; // Decimal\r\n\t}\r\n};\r\n\r\nlang.setObject(\"dojo.fx.easing\", easingFuncs);\r\n\r\nreturn easingFuncs;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojo/fx/easing.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/Chart.js":
/*!**********************************************!*\
  !*** ./node_modules/dojox/charting/Chart.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../main */ \"./node_modules/dojox/main.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"),__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"),\r\n\t__webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"), __webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"),__webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"), __webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"),\r\n\t__webpack_require__(/*! ./Element */ \"./node_modules/dojox/charting/Element.js\"), __webpack_require__(/*! ./SimpleTheme */ \"./node_modules/dojox/charting/SimpleTheme.js\"), __webpack_require__(/*! ./Series */ \"./node_modules/dojox/charting/Series.js\"), __webpack_require__(/*! ./axis2d/common */ \"./node_modules/dojox/charting/axis2d/common.js\"), __webpack_require__(/*! dojox/gfx/shape */ \"./node_modules/dojox/gfx/shape.js\"),\r\n\t__webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__.dj.h(\"dojo-bidi?./node_modules/dojox/charting/bidi/Chart.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/fold */ \"./node_modules/dojox/lang/functional/fold.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojox, lang, arr, declare, domStyle,\r\n\t \t\t dom, domGeom, domConstruct, Color, has,\r\n\t \t\t Element, SimpleTheme, Series, common, shape,\r\n\t \t\t g, BidiChart, func){\r\n\t/*=====\r\n\tvar __ChartCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tThe keyword arguments that can be passed in a Chart constructor.\r\n\t\t// margins: Object?\r\n\t\t//\t\tOptional margins for the chart, in the form of { l, t, r, b}.\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional outline/stroke for the chart.\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tAn optional fill for the chart.\r\n\t\t// delayInMs: Number\r\n\t\t//\t\tDelay in ms for delayedRender(). Default: 200.\r\n\t};\r\n\t=====*/\r\n\r\n\t/*=====\r\n\tvar __SeriesCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\r\n\t\t// plot: String?\r\n\t\t//\t\tThe plot (by name) that this series belongs to.\r\n\t};\r\n\t=====*/\r\n\r\n\t/*=====\r\n\tvar __BaseAxisCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\r\n\t\t// vertical: Boolean?\r\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\r\n\t\t// min: Number?\r\n\t\t//\t\tThe smallest value on an axis. Default is 0.\r\n\t\t// max: Number?\r\n\t\t//\t\tThe largest value on an axis. Default is 1.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar dc = lang.getObject(\"charting\", true, dojox),\r\n\t\tclear = func.lambda(\"item.clear()\"),\r\n\t\tpurge = func.lambda(\"item.purgeGroup()\"),\r\n\t\tdestroy = func.lambda(\"item.destroy()\"),\r\n\t\tmakeClean = func.lambda(\"item.dirty = false\"),\r\n\t\tmakeDirty = func.lambda(\"item.dirty = true\"),\r\n\t\tgetName = func.lambda(\"item.name\"),\r\n\t\tdefaultMargins = {l: 10, t: 10, r: 10, b: 10};\r\n\r\n\tvar Chart = declare(has(\"dojo-bidi\")? \"dojox.charting.NonBidiChart\" : \"dojox.charting.Chart\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tThe main chart object in dojox.charting.  This will create a two dimensional\r\n\t\t//\t\tchart based on dojox.gfx.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tdojox.charting.Chart is the primary object used for any kind of charts.  It\r\n\t\t//\t\tis simple to create--just pass it a node reference, which is used as the\r\n\t\t//\t\tcontainer for the chart--and a set of optional keyword arguments and go.\r\n\t\t//\r\n\t\t//\t\tNote that like most of dojox.gfx, most of dojox.charting.Chart's methods are\r\n\t\t//\t\tdesigned to return a reference to the chart itself, to allow for functional\r\n\t\t//\t\tchaining.  This makes defining everything on a Chart very easy to do.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tCreate an area chart, with smoothing.\r\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/themes/Shrooms\", \"dojox/charting/plot2d/Areas\", ...],\r\n\t\t// \t|\t\tfunction(Chart, Shrooms, Areas, ...){\r\n\t\t//\t|\t\tnew Chart(node)\r\n\t\t//\t|\t\t\t.addPlot(\"default\", { type: Areas, tension: \"X\" })\r\n\t\t//\t|\t\t\t.setTheme(Shrooms)\r\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [1, 2, 0.5, 1.5, 1, 2.8, 0.4])\r\n\t\t//\t|\t\t\t.addSeries(\"Series B\", [2.6, 1.8, 2, 1, 1.4, 0.7, 2])\r\n\t\t//\t|\t\t\t.addSeries(\"Series C\", [6.3, 1.8, 3, 0.5, 4.4, 2.7, 2])\r\n\t\t//\t|\t\t\t.render();\r\n\t\t//\t|\t});\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tThe form of data in a data series can take a number of forms: a simple array,\r\n\t\t//\t\tan array of objects {x,y}, or something custom (as determined by the plot).\r\n\t\t//\t\tHere's an example of a Candlestick chart, which expects an object of\r\n\t\t//\t\t{ open, high, low, close }.\r\n\t\t//\t|\trequire([\"dojox/charting/Chart\", \"dojox/charting/plot2d/Candlesticks\", ...],\r\n\t\t// \t|\t\tfunction(Chart, Candlesticks, ...){\r\n\t\t//\t|\t\tnew Chart(node)\r\n\t\t//\t|\t\t\t.addPlot(\"default\", {type: Candlesticks, gap: 1})\r\n\t\t//\t|\t\t\t.addAxis(\"x\", {fixLower: \"major\", fixUpper: \"major\", includeZero: true})\r\n\t\t//\t|\t\t\t.addAxis(\"y\", {vertical: true, fixLower: \"major\", fixUpper: \"major\", natural: true})\r\n\t\t//\t|\t\t\t.addSeries(\"Series A\", [\r\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\r\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\r\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\r\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\r\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\r\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\r\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\r\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\r\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\r\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\r\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6, mid: 18 },\r\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11, mid: 21 },\r\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14, mid: 27 },\r\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13, mid: 27 },\r\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\r\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\r\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\r\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\r\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 },\r\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 22, high: 26, low: 6 },\r\n\t\t//\t|\t\t\t\t\t{ open: 22, close: 18, high: 22, low: 11 },\r\n\t\t//\t|\t\t\t\t\t{ open: 18, close: 29, high: 32, low: 14 },\r\n\t\t//\t|\t\t\t\t\t{ open: 29, close: 24, high: 29, low: 13 },\r\n\t\t//\t|\t\t\t\t\t{ open: 24, close: 8, high: 24, low: 5 },\r\n\t\t//\t|\t\t\t\t\t{ open: 8, close: 16, high: 22, low: 2 },\r\n\t\t//\t|\t\t\t\t\t{ open: 16, close: 12, high: 19, low: 7 },\r\n\t\t//\t|\t\t\t\t\t{ open: 12, close: 20, high: 22, low: 8 },\r\n\t\t//\t|\t\t\t\t\t{ open: 20, close: 16, high: 22, low: 8 }\r\n\t\t//\t|\t\t\t\t],\r\n\t\t//\t|\t\t\t\t{ stroke: { color: \"green\" }, fill: \"lightgreen\" }\r\n\t\t//\t|\t\t\t)\r\n\t\t//\t|\t\t\t.render();\r\n\t\t//\t|\t});\r\n\t\t\r\n\t\t// theme: dojox/charting/SimpleTheme?\r\n\t\t//\t\tAn optional theme to use for styling the chart.\r\n\t\t// axes: dojox/charting/axis2d/Base{}?\r\n\t\t//\t\tA map of axes for use in plotting a chart.\r\n\t\t// stack: dojox/charting/plot2d/Base[]\r\n\t\t//\t\tA stack of plotters.\r\n\t\t// plots: dojox/charting/plot2d/Base{}\r\n\t\t//\t\tA map of plotter indices\r\n\t\t// series: dojox/charting/Series[]\r\n\t\t//\t\tThe stack of data runs used to create plots.\r\n\t\t// runs: dojox/charting/Series{}\r\n\t\t//\t\tA map of series indices\r\n\t\t// margins: Object?\r\n\t\t//\t\tThe margins around the chart. Default is { l:10, t:10, r:10, b:10 }.\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tThe outline of the chart (stroke in vector graphics terms).\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tThe color for the chart.\r\n\t\t// node: DOMNode\r\n\t\t//\t\tThe container node passed to the constructor.\r\n\t\t// surface: dojox/gfx/shape.Surface\r\n\t\t//\t\tThe main graphics surface upon which a chart is drawn.\r\n\t\t// dirty: Boolean\r\n\t\t//\t\tA boolean flag indicating whether or not the chart needs to be updated/re-rendered.\r\n\t\t// htmlLabels: Boolean\r\n\t\t//\t\tA boolean flag indicating whether or not it should try to use HTML-based labels for the title or not.\r\n\t\t//\t\tThe default is true.  The only caveat is IE and Opera browsers will always use GFX-based labels.\r\n\r\n\t\tconstructor: function(/* DOMNode */node, /* __ChartCtorArgs? */kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a new Chart.  Initializes all parameters used for a chart.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tThe newly created chart.\r\n\r\n\t\t\t// initialize parameters\r\n\t\t\tif(!kwArgs){ kwArgs = {}; }\r\n\t\t\tthis.margins = kwArgs.margins || defaultMargins;\r\n\t\t\tthis._customMargins = !!kwArgs.margins;\r\n\t\t\tthis.stroke    = kwArgs.stroke;\r\n\t\t\tthis.fill      = kwArgs.fill;\r\n\t\t\tthis.delayInMs = kwArgs.delayInMs || 200;\r\n\t\t\tthis.title     = kwArgs.title;\r\n\t\t\tthis.titleGap  = kwArgs.titleGap;\r\n\t\t\tthis.titlePos  = kwArgs.titlePos;\r\n\t\t\tthis.titleFont = kwArgs.titleFont;\r\n\t\t\tthis.titleFontColor = kwArgs.titleFontColor;\r\n\t\t\tthis.titleAlign = kwArgs.titleAlign; // This can be middle, left, right, or edge \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // edge is left or right aligned with chart plot edge depending on bidi.\r\n\t\t\tthis.chartTitle = null;\r\n\t\t\tthis.htmlLabels = true;\r\n\t\t\tif(\"htmlLabels\" in kwArgs){\r\n\t\t\t\tthis.htmlLabels = kwArgs.htmlLabels;\r\n\t\t\t}\r\n\r\n\t\t\t// default initialization\r\n\t\t\tthis.theme = null;\r\n\t\t\tthis.axes = {};\t\t// map of axes\r\n\t\t\tthis.stack = [];\t// stack of plotters\r\n\t\t\tthis.plots = {};\t// map of plotter indices\r\n\t\t\tthis.series = [];\t// stack of data runs\r\n\t\t\tthis.runs = {};\t\t// map of data run indices\r\n\t\t\tthis.dirty = true;\r\n\r\n\t\t\t// create a surface\r\n\t\t\tthis.node = dom.byId(node);\r\n\t\t\tvar box = domGeom.getMarginBox(node);\r\n\t\t\tthis.surface = g.createSurface(this.node, box.w || 400, box.h || 300);\r\n\t\t\tif(this.surface.declaredClass.indexOf(\"vml\") == -1){\r\n\t\t\t\t// except if vml use native clipping\r\n\t\t\t\tthis._nativeClip = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCleanup when a chart is to be destroyed.\r\n\t\t\t// returns: void\r\n\t\t\tarr.forEach(this.series, destroy);\r\n\t\t\tarr.forEach(this.stack,  destroy);\r\n\t\t\tfunc.forIn(this.axes, destroy);\r\n\t\t\tthis.surface.destroy();\r\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\r\n\t\t\t\t// destroy title if it is a DOM node\r\n\t\t\t\tdomConstruct.destroy(this.chartTitle);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetCoords: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the coordinates and dimensions of the containing DOMNode, as\r\n\t\t\t//\t\treturned by dojo.coords.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe resulting coordinates of the chart.  See dojo.coords for details.\r\n\t\t\tvar node = this.node;\r\n\t\t\tvar s = domStyle.getComputedStyle(node), coords = domGeom.getMarginBox(node, s);\r\n\t\t\tvar abs = domGeom.position(node, true);\r\n\t\t\tcoords.x = abs.x;\r\n\t\t\tcoords.y = abs.y;\r\n\t\t\treturn coords;\t//\tObject\r\n\t\t},\r\n\t\tsetTheme: function(theme){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a theme of the chart.\r\n\t\t\t// theme: dojox/charting/SimpleTheme\r\n\t\t\t//\t\tThe theme to be used for visual rendering.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tthis.theme = theme.clone();\r\n\t\t\tif(!this._customMargins){\r\n\t\t\t\tthis.margins = this.theme.chart.margins || defaultMargins;\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\taddAxis: function(name, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd an axis to the chart, for rendering.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the axis.\r\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object for use in defining details of an axis.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tvar axis, axisType = kwArgs && kwArgs.type || \"Default\";\r\n\t\t\tif(typeof axisType == \"string\"){\r\n\t\t\t\tif(!dc.axis2d || !dc.axis2d[axisType]){\r\n\t\t\t\t\tthrow Error(\"Can't find axis: \" + axisType + \" - Check \" + \"require() dependencies.\");\r\n\t\t\t\t}\r\n\t\t\t\taxis = new dc.axis2d[axisType](this, kwArgs);\r\n\t\t\t}else{\r\n\t\t\t\taxis = new axisType(this, kwArgs);\r\n\t\t\t}\r\n\t\t\taxis.name = name;\r\n\t\t\taxis.dirty = true;\r\n\t\t\tif(name in this.axes){\r\n\t\t\t\tthis.axes[name].destroy();\r\n\t\t\t}\r\n\t\t\tthis.axes[name] = axis;\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tgetAxis: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the given axis, by name.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name the axis was defined by.\r\n\t\t\t// returns: dojox/charting/axis2d/Default\r\n\t\t\t//\t\tThe axis as stored in the chart's axis map.\r\n\t\t\treturn this.axes[name];\t//\tdojox/charting/axis2d/Default\r\n\t\t},\r\n\t\tremoveAxis: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove the axis that was defined using name.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe axis name, as defined in addAxis.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.axes){\r\n\t\t\t\t// destroy the axis\r\n\t\t\t\tthis.axes[name].destroy();\r\n\t\t\t\tdelete this.axes[name];\r\n\t\t\t\t// mark the chart as dirty\r\n\t\t\t\tthis.dirty = true;\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\taddPlot: function(name, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a new plot to the chart, defined by name and using the optional keyword arguments object.\r\n\t\t\t//\t\tNote that dojox.charting assumes the main plot to be called \"default\"; if you do not have\r\n\t\t\t//\t\ta plot called \"default\" and attempt to add data series to the chart without specifying the\r\n\t\t\t//\t\tplot to be rendered on, you WILL get errors.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the plot to be added to the chart.  If you only plan on using one plot, call it \"default\".\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs\r\n\t\t\t//\t\tAn object with optional parameters for the plot in question.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tvar plot, plotType = kwArgs && kwArgs.type || \"Default\";\r\n\t\t\tif(typeof plotType == \"string\"){\r\n\t\t\t\tif(!dc.plot2d || !dc.plot2d[plotType]){\r\n\t\t\t\t\tthrow Error(\"Can't find plot: \" + plotType + \" - didn't you forget to dojo\" + \".require() it?\");\r\n\t\t\t\t}\r\n\t\t\t\tplot = new dc.plot2d[plotType](this, kwArgs);\r\n\t\t\t}else{\r\n\t\t\t\tplot = new plotType(this, kwArgs);\r\n\t\t\t}\r\n\t\t\tplot.name = name;\r\n\t\t\tplot.dirty = true;\r\n\t\t\tif(name in this.plots){\r\n\t\t\t\tthis.stack[this.plots[name]].destroy();\r\n\t\t\t\tthis.stack[this.plots[name]] = plot;\r\n\t\t\t}else{\r\n\t\t\t\tthis.plots[name] = this.stack.length;\r\n\t\t\t\tthis.stack.push(plot);\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tgetPlot: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the given plot, by name.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name the plot was defined by.\r\n\t\t\t// returns: dojox/charting/plot2d/Base\r\n\t\t\t//\t\tThe plot.\r\n\t\t\treturn this.stack[this.plots[name]];\r\n\t\t},\r\n\t\tremovePlot: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove the plot defined using name from the chart's plot stack.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the plot as defined using addPlot.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.plots){\r\n\t\t\t\t// get the index and remove the name\r\n\t\t\t\tvar index = this.plots[name];\r\n\t\t\t\tdelete this.plots[name];\r\n\t\t\t\t// destroy the plot\r\n\t\t\t\tthis.stack[index].destroy();\r\n\t\t\t\t// remove the plot from the stack\r\n\t\t\t\tthis.stack.splice(index, 1);\r\n\t\t\t\t// update indices to reflect the shift\r\n\t\t\t\tfunc.forIn(this.plots, function(idx, name, plots){\r\n\t\t\t\t\tif(idx > index){\r\n\t\t\t\t\t\tplots[name] = idx - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// remove all related series\r\n\t\t\t\tvar ns = arr.filter(this.series, function(run){ return run.plot != name; });\r\n\t\t\t\tif(ns.length < this.series.length){\r\n\t\t\t\t\t// kill all removed series\r\n\t\t\t\t\tarr.forEach(this.series, function(run){\r\n\t\t\t\t\t\tif(run.plot == name){\r\n\t\t\t\t\t\t\trun.destroy();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// rebuild all necessary data structures\r\n\t\t\t\t\tthis.runs = {};\r\n\t\t\t\t\tarr.forEach(ns, function(run, index){\r\n\t\t\t\t\t\tthis.runs[run.plot] = index;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tthis.series = ns;\r\n\t\t\t\t}\r\n\t\t\t\t// mark the chart as dirty\r\n\t\t\t\tthis.dirty = true;\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tgetPlotOrder: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an array of plot names in the current order\r\n\t\t\t//\t\t(the top-most plot is the first).\r\n\t\t\t// returns: Array\r\n\t\t\treturn func.map(this.stack, getName); // Array\r\n\t\t},\r\n\t\tsetPlotOrder: function(newOrder){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets new order of plots. newOrder cannot add or remove\r\n\t\t\t//\t\tplots. Wrong names, or dups are ignored.\r\n\t\t\t// newOrder: Array\r\n\t\t\t//\t\tArray of plot names compatible with getPlotOrder().\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tvar names = {},\r\n\t\t\t\torder = func.filter(newOrder, function(name){\r\n\t\t\t\t\tif(!(name in this.plots) || (name in names)){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnames[name] = 1;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}, this);\r\n\t\t\tif(order.length < this.stack.length){\r\n\t\t\t\tfunc.forEach(this.stack, function(plot){\r\n\t\t\t\t\tvar name = plot.name;\r\n\t\t\t\t\tif(!(name in names)){\r\n\t\t\t\t\t\torder.push(name);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tvar newStack = func.map(order, function(name){\r\n\t\t\t\t\treturn this.stack[this.plots[name]];\r\n\t\t\t\t}, this);\r\n\t\t\tfunc.forEach(newStack, function(plot, i){\r\n\t\t\t\tthis.plots[plot.name] = i;\r\n\t\t\t}, this);\r\n\t\t\tthis.stack = newStack;\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tmovePlotToFront: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves a given plot to front.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPlot's name to move.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.plots){\r\n\t\t\t\tvar index = this.plots[name];\r\n\t\t\t\tif(index){\r\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\r\n\t\t\t\t\tnewOrder.splice(index, 1);\r\n\t\t\t\t\tnewOrder.unshift(name);\r\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tmovePlotToBack: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves a given plot to back.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tPlot's name to move.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.plots){\r\n\t\t\t\tvar index = this.plots[name];\r\n\t\t\t\tif(index < this.stack.length - 1){\r\n\t\t\t\t\tvar newOrder = this.getPlotOrder();\r\n\t\t\t\t\tnewOrder.splice(index, 1);\r\n\t\t\t\t\tnewOrder.push(name);\r\n\t\t\t\t\treturn this.setPlotOrder(newOrder);\t//\tdojox/charting/Chart\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\taddSeries: function(name, data, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a data series to the chart for rendering.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the data series to be plotted.\r\n\t\t\t// data: Array|Object\r\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\r\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\r\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\r\n\t\t\t//\t\tdestroy(), and setSeriesObject().\r\n\t\t\t// kwArgs: __SeriesCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object that will be mixed into\r\n\t\t\t//\t\tthe resultant series object.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tvar run = new Series(this, data, kwArgs);\r\n\t\t\trun.name = name;\r\n\t\t\tif(name in this.runs){\r\n\t\t\t\tthis.series[this.runs[name]].destroy();\r\n\t\t\t\tthis.series[this.runs[name]] = run;\r\n\t\t\t}else{\r\n\t\t\t\tthis.runs[name] = this.series.length;\r\n\t\t\t\tthis.series.push(run);\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\t// fix min/max\r\n\t\t\tif(!(\"ymin\" in run) && \"min\" in run){ run.ymin = run.min; }\r\n\t\t\tif(!(\"ymax\" in run) && \"max\" in run){ run.ymax = run.max; }\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tgetSeries: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the given series, by name.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name the series was defined by.\r\n\t\t\t// returns: dojox/charting/Series\r\n\t\t\t//\t\tThe series.\r\n\t\t\treturn this.series[this.runs[name]];\r\n\t\t},\r\n\t\tremoveSeries: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove the series defined by name from the chart.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the series as defined by addSeries.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.runs){\r\n\t\t\t\t// get the index and remove the name\r\n\t\t\t\tvar index = this.runs[name];\r\n\t\t\t\tdelete this.runs[name];\r\n\t\t\t\t// destroy the run\r\n\t\t\t\tthis.series[index].destroy();\r\n\t\t\t\t// remove the run from the stack of series\r\n\t\t\t\tthis.series.splice(index, 1);\r\n\t\t\t\t// update indices to reflect the shift\r\n\t\t\t\tfunc.forIn(this.runs, function(idx, name, runs){\r\n\t\t\t\t\tif(idx > index){\r\n\t\t\t\t\t\truns[name] = idx - 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.dirty = true;\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tupdateSeries: function(name, data, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdate the given series with a new set of data points.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the series as defined in addSeries.\r\n\t\t\t// data: Array|Object\r\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\r\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\r\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\r\n\t\t\t//\t\tdestroy(), and setSeriesObject().\r\n\t\t\t// offsets: Boolean?\r\n\t\t\t//\t\tIf true recomputes the offsets of the chart based on the new\r\n\t\t\t//\t\tdata. This is useful if the range of data is drastically changing\r\n\t\t\t//\t\tand offsets need to be recomputed.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.runs){\r\n\t\t\t\tvar run = this.series[this.runs[name]];\r\n\t\t\t\trun.update(data);\r\n\t\t\t\tif(offsets){\r\n\t\t\t\t\tthis.dirty = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, false);\r\n\t\t\t\t\tthis._invalidateDependentPlots(run.plot, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tgetSeriesOrder: function(plotName){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns an array of series names in the current order\r\n\t\t\t//\t\t(the top-most series is the first) within a plot.\r\n\t\t\t// plotName: String\r\n\t\t\t//\t\tPlot's name.\r\n\t\t\t// returns: Array\r\n\t\t\treturn func.map(func.filter(this.series, function(run){\r\n\t\t\t\t\treturn run.plot == plotName;\r\n\t\t\t\t}), getName);\r\n\t\t},\r\n\t\tsetSeriesOrder: function(newOrder){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets new order of series within a plot. newOrder cannot add\r\n\t\t\t//\t\tor remove series. Wrong names, or dups are ignored.\r\n\t\t\t// newOrder: Array\r\n\t\t\t//\t\tArray of series names compatible with getPlotOrder(). All\r\n\t\t\t//\t\tseries should belong to the same plot.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tvar plotName, names = {},\r\n\t\t\t\torder = func.filter(newOrder, function(name){\r\n\t\t\t\t\tif(!(name in this.runs) || (name in names)){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar run = this.series[this.runs[name]];\r\n\t\t\t\t\tif(plotName){\r\n\t\t\t\t\t\tif(run.plot != plotName){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tplotName = run.plot;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnames[name] = 1;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}, this);\r\n\t\t\tfunc.forEach(this.series, function(run){\r\n\t\t\t\tvar name = run.name;\r\n\t\t\t\tif(!(name in names) && run.plot == plotName){\r\n\t\t\t\t\torder.push(name);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tvar newSeries = func.map(order, function(name){\r\n\t\t\t\t\treturn this.series[this.runs[name]];\r\n\t\t\t\t}, this);\r\n\t\t\tthis.series = newSeries.concat(func.filter(this.series, function(run){\r\n\t\t\t\treturn run.plot != plotName;\r\n\t\t\t}));\r\n\t\t\tfunc.forEach(this.series, function(run, i){\r\n\t\t\t\tthis.runs[run.name] = i;\r\n\t\t\t}, this);\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tmoveSeriesToFront: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves a given series to front of a plot.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tSeries' name to move.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.runs){\r\n\t\t\t\tvar index = this.runs[name],\r\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\r\n\t\t\t\tif(name != newOrder[0]){\r\n\t\t\t\t\tnewOrder.splice(index, 1);\r\n\t\t\t\t\tnewOrder.unshift(name);\r\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tmoveSeriesToBack: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMoves a given series to back of a plot.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tSeries' name to move.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(name in this.runs){\r\n\t\t\t\tvar index = this.runs[name],\r\n\t\t\t\t\tnewOrder = this.getSeriesOrder(this.series[index].plot);\r\n\t\t\t\tif(name != newOrder[newOrder.length - 1]){\r\n\t\t\t\t\tnewOrder.splice(index, 1);\r\n\t\t\t\t\tnewOrder.push(name);\r\n\t\t\t\t\treturn this.setSeriesOrder(newOrder);\t//\tdojox/charting/Chart\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tresize: function(width, height){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the chart to the dimensions of width and height.\r\n\t\t\t// description:\r\n\t\t\t//\t\tResize the chart and its surface to the width and height dimensions.\r\n\t\t\t//\t\tIf a single argument of the form {w: value1, h: value2} is provided take that argument as the dimensions to use.\r\n\t\t\t//\t\tFinally if no argument is provided, resize the surface to the marginBox of the chart.\r\n\t\t\t// width: Number|Object?\r\n\t\t\t//\t\tThe new width of the chart or the box definition.\r\n\t\t\t// height: Number?\r\n\t\t\t//\t\tThe new height of the chart.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tswitch(arguments.length){\r\n\t\t\t\t// case 0, do not resize the div, just the surface\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\t// argument, override node box\r\n\t\t\t\t\tdomGeom.setMarginBox(this.node, width);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t// argument, override node box\r\n\t\t\t\t\tdomGeom.setMarginBox(this.node, {w: width, h: height});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// in all cases take back the computed box\r\n\t\t\tvar box = domGeom.getMarginBox(this.node);\r\n\t\t\tvar d = this.surface.getDimensions();\r\n\t\t\tif(d.width != box.w || d.height != box.h){\r\n\t\t\t\t// and set it on the surface\r\n\t\t\t\tthis.surface.setDimensions(box.w, box.h);\r\n\t\t\t\tthis.dirty = true;\r\n\t\t\t\treturn this.render();\t//\tdojox/charting/Chart\r\n\t\t\t}else{\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetGeometry: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a map of information about all axes in a chart and what they represent\r\n\t\t\t//\t\tin terms of scaling (see dojox.charting.axis2d.Default.getScaler).\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tAn map of geometry objects, a one-to-one mapping of axes.\r\n\t\t\tvar ret = {};\r\n\t\t\tfunc.forIn(this.axes, function(axis){\r\n\t\t\t\tif(axis.initialized()){\r\n\t\t\t\t\tret[axis.name] = {\r\n\t\t\t\t\t\tname:\t\taxis.name,\r\n\t\t\t\t\t\tvertical:\taxis.vertical,\r\n\t\t\t\t\t\tscaler:\t\taxis.scaler,\r\n\t\t\t\t\t\tticks:\t\taxis.ticks\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\t//\tObject\r\n\t\t},\r\n\t\tsetAxisWindow: function(name, scale, offset, zoom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tZooms an axis and all dependent plots. Can be used to zoom in 1D.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\r\n\t\t\t// scale: Number\r\n\t\t\t//\t\tThe scale on the target axis.\r\n\t\t\t// offset: Number\r\n\t\t\t//\t\tAny offest, as measured by axis tick\r\n\t\t\t// zoom: Boolean|Object?\r\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\r\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tvar axis = this.axes[name];\r\n\t\t\tif(axis){\r\n\t\t\t\taxis.setWindow(scale, offset);\r\n\t\t\t\tarr.forEach(this.stack,function(plot){\r\n\t\t\t\t\tif(plot.hAxis == name || plot.vAxis == name){\r\n\t\t\t\t\t\tplot.zoom = zoom;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tsetWindow: function(sx, sy, dx, dy, zoom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tZooms in or out any plots in two dimensions.\r\n\t\t\t// sx: Number\r\n\t\t\t//\t\tThe scale for the x axis.\r\n\t\t\t// sy: Number\r\n\t\t\t//\t\tThe scale for the y axis.\r\n\t\t\t// dx: Number\r\n\t\t\t//\t\tThe pixel offset on the x axis.\r\n\t\t\t// dy: Number\r\n\t\t\t//\t\tThe pixel offset on the y axis.\r\n\t\t\t// zoom: Boolean|Object?\r\n\t\t\t//\t\tThe chart zooming animation trigger.  This is null by default,\r\n\t\t\t//\t\te.g. {duration: 1200}, or just set true.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(!(\"plotArea\" in this)){\r\n\t\t\t\tthis.calculateGeometry();\r\n\t\t\t}\r\n\t\t\tfunc.forIn(this.axes, function(axis){\r\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds,\r\n\t\t\t\t\ts = bounds.span / (bounds.upper - bounds.lower);\r\n\t\t\t\tif(axis.vertical){\r\n\t\t\t\t\tscale  = sy;\r\n\t\t\t\t\toffset = dy / s / scale;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tscale  = sx;\r\n\t\t\t\t\toffset = dx / s / scale;\r\n\t\t\t\t}\r\n\t\t\t\taxis.setWindow(scale, offset);\r\n\t\t\t});\r\n\t\t\tarr.forEach(this.stack, function(plot){ plot.zoom = zoom; });\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tzoomIn:\tfunction(name, range, delayed){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tZoom the chart to a specific range on one axis.  This calls render()\r\n\t\t\t//\t\tdirectly as a convenience method.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the axis as defined by addAxis.\r\n\t\t\t// range: Array\r\n\t\t\t//\t\tThe end points of the zoom range, measured in axis ticks.\r\n\t\t\tvar axis = this.axes[name];\r\n\t\t\tif(axis){\r\n\t\t\t\tvar scale, offset, bounds = axis.getScaler().bounds;\r\n\t\t\t\tvar lower = Math.min(range[0],range[1]);\r\n\t\t\t\tvar upper = Math.max(range[0],range[1]);\r\n\t\t\t\tlower = range[0] < bounds.lower ? bounds.lower : lower;\r\n\t\t\t\tupper = range[1] > bounds.upper ? bounds.upper : upper;\r\n\t\t\t\tscale = (bounds.upper - bounds.lower) / (upper - lower);\r\n\t\t\t\toffset = lower - bounds.lower;\r\n\t\t\t\tthis.setAxisWindow(name, scale, offset);\r\n\t\t\t\tif(delayed){\r\n\t\t\t\t\tthis.delayedRender();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcalculateGeometry: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the geometry of the chart based on the defined axes of\r\n\t\t\t//\t\ta chart.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(this.dirty){\r\n\t\t\t\treturn this.fullGeometry();\r\n\t\t\t}\r\n\r\n\t\t\t// calculate geometry\r\n\t\t\tvar dirty = arr.filter(this.stack, function(plot){\r\n\t\t\t\t\treturn plot.dirty ||\r\n\t\t\t\t\t\t(plot.hAxis && this.axes[plot.hAxis].dirty) ||\r\n\t\t\t\t\t\t(plot.vAxis && this.axes[plot.vAxis].dirty);\r\n\t\t\t\t}, this);\r\n\t\t\tcalculateAxes(dirty, this.plotArea);\r\n\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tfullGeometry: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the full geometry of the chart.  This includes passing\r\n\t\t\t//\t\tover all major elements of a chart (plots, axes, series, container)\r\n\t\t\t//\t\tin order to ensure proper rendering.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tthis._makeDirty();\r\n\r\n\t\t\t// clear old values\r\n\t\t\tarr.forEach(this.stack, clear);\r\n\r\n\t\t\t// rebuild new connections, and add defaults\r\n\r\n\t\t\t// set up a theme\r\n\t\t\tif(!this.theme){\r\n\t\t\t\tthis.setTheme(new SimpleTheme());\r\n\t\t\t}\r\n\r\n\t\t\t// assign series\r\n\t\t\tarr.forEach(this.series, function(run){\r\n\t\t\t\tif(!(run.plot in this.plots)){\r\n\t\t\t\t\t// TODO remove auto-assignment\r\n\t\t\t\t\tif(!dc.plot2d || !dc.plot2d.Default){\r\n\t\t\t\t\t\tthrow Error(\"Can't find plot: Default - didn't you forget to dojo\" + \".require() it?\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar plot = new dc.plot2d.Default(this, {});\r\n\t\t\t\t\tplot.name = run.plot;\r\n\t\t\t\t\tthis.plots[run.plot] = this.stack.length;\r\n\t\t\t\t\tthis.stack.push(plot);\r\n\t\t\t\t}\r\n\t\t\t\tthis.stack[this.plots[run.plot]].addSeries(run);\r\n\t\t\t}, this);\r\n\t\t\t// assign axes\r\n\t\t\tarr.forEach(this.stack, function(plot){\r\n\t\t\t\tif(plot.assignAxes){\r\n\t\t\t\t\tplot.assignAxes(this.axes);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// calculate geometry\r\n\r\n\t\t\t// 1st pass\r\n\t\t\tvar dim = this.dim = this.surface.getDimensions();\r\n\t\t\tdim.width  = g.normalizedLength(dim.width);\r\n\t\t\tdim.height = g.normalizedLength(dim.height);\r\n\t\t\tfunc.forIn(this.axes, clear);\r\n\t\t\tcalculateAxes(this.stack, dim);\r\n\r\n\t\t\t// assumption: we don't have stacked axes yet\r\n\t\t\tvar offsets = this.offsets = {l: 0, r: 0, t: 0, b: 0};\r\n\t\t\t// chart mirroring starts\r\n\t\t\tvar self = this;\r\n\t\t\tfunc.forIn(this.axes, function(axis){\r\n\t\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\t\tself._resetLeftBottom(axis);\r\n\t\t\t\t}\r\n\t\t\t\tfunc.forIn(axis.getOffsets(), function(o, i){ offsets[i] = Math.max(o, offsets[i]); });\r\n\t\t\t});\r\n\t\t\t// chart mirroring ends\r\n\t\t\t// add title area\r\n\t\t\tif(this.title){\r\n\t\t\t\tthis.titleGap = (this.titleGap==0) ? 0 : this.titleGap || this.theme.chart.titleGap || 20;\r\n\t\t\t\tthis.titlePos = this.titlePos || this.theme.chart.titlePos || \"top\";\r\n\t\t\t\tthis.titleFont = this.titleFont || this.theme.chart.titleFont;\r\n\t\t\t\tthis.titleFontColor = this.titleFontColor || this.theme.chart.titleFontColor || \"black\";\r\n\t\t\t\tthis.titleAlign = this.titleAlign || this.theme && this.theme.chart && this.theme.chart.titleAlign || \"middle\";\r\n\t\t\t\tvar tsize = g.normalizedLength(g.splitFontString(this.titleFont).size);\r\n\t\t\t\toffsets[this.titlePos == \"top\" ? \"t\" : \"b\"] += (tsize + this.titleGap);\r\n\t\t\t}\r\n\t\t\t// add margins\r\n\t\t\tfunc.forIn(this.margins, function(o, i){ offsets[i] += o; });\r\n\r\n\t\t\t// 2nd pass with realistic dimensions\r\n\t\t\tthis.plotArea = {\r\n\t\t\t\twidth: dim.width - offsets.l - offsets.r,\r\n\t\t\t\theight: dim.height - offsets.t - offsets.b\r\n\t\t\t};\r\n\t\t\tfunc.forIn(this.axes, clear);\r\n\t\t\tcalculateAxes(this.stack, this.plotArea);\r\n\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\trender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender the chart according to the current information defined.  This should\r\n\t\t\t//\t\tbe the last call made when defining/creating a chart, or if data within the\r\n\t\t\t//\t\tchart has been changed.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\r\n\t\t\t// do we have a delayed renderer pending? If yes we need to clear it\r\n\t\t\tif(this._delayedRenderHandle){\r\n\t\t\t\tclearTimeout(this._delayedRenderHandle);\r\n\t\t\t\tthis._delayedRenderHandle = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.theme){\r\n\t\t\t\tthis.theme.clear();\r\n\t\t\t}\r\n\r\n\t\t\tif(this.dirty){\r\n\t\t\t\treturn this.fullRender();\r\n\t\t\t}\r\n\r\n\t\t\tthis.calculateGeometry();\r\n\r\n\t\t\t// go over the stack backwards\r\n\t\t\tfunc.forEachRev(this.stack, function(plot){ plot.render(this.dim, this.offsets); }, this);\r\n\r\n\t\t\t// go over axes\r\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(this.dim, this.offsets); }, this);\r\n\r\n\t\t\tthis._makeClean();\r\n\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tfullRender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tForce a full rendering of the chart, including full resets on the chart itself.\r\n\t\t\t//\t\tYou should not call this method directly unless absolutely necessary.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\r\n\t\t\t// calculate geometry\r\n\t\t\tthis.fullGeometry();\r\n\t\t\tvar offsets = this.offsets, dim = this.dim;\r\n\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\r\n\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\r\n\r\n\t\t\t// get required colors\r\n\t\t\t//var requiredColors = func.foldl(this.stack, \"z + plot.getRequiredColors()\", 0);\r\n\t\t\t//this.theme.defineColors({num: requiredColors, cache: false});\r\n\r\n\t\t\t// clear old shapes\r\n\t\t\tarr.forEach(this.series, purge);\r\n\t\t\tfunc.forIn(this.axes, purge);\r\n\t\t\tarr.forEach(this.stack,  purge);\r\n\t\t\tvar children = this.surface.children;\r\n\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\tif(shape.dispose){\r\n\t\t\t\tfor(var i = 0; i < children.length;++i){\r\n\t\t\t\t\tshape.dispose(children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.chartTitle && this.chartTitle.tagName){\r\n\t\t\t\t// destroy title if it is a DOM node\r\n\t\t\t    domConstruct.destroy(this.chartTitle);\r\n\t\t\t}\r\n\t\t\tthis.surface.clear();\r\n\t\t\tthis.chartTitle = null;\r\n\r\n\t\t\tthis._renderChartBackground(dim, offsets);\r\n\t\t\tif(this._nativeClip){\r\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\r\n\t\t\t}else{\r\n\t\t\t\t// VML\r\n\t\t\t\tthis._renderPlotBackground(dim, offsets, w, h);\r\n\t\t\t}\r\n\r\n\t\t\t// go over the stack backwards\r\n\t\t\tfunc.foldr(this.stack, function(z, plot){ return plot.render(dim, offsets), 0; }, 0);\r\n\r\n\t\t\tif(!this._nativeClip){\r\n\t\t\t\t// VML, matting-clipping\r\n\t\t\t\tthis._renderChartBackground(dim, offsets);\r\n\t\t\t}\r\n\r\n\t\t\t//create title: Whether to make chart title as a widget which extends dojox.charting.Element?\r\n\t\t\tif(this.title){\r\n\t\t\t\tthis._renderTitle(dim, offsets);\r\n\t\t\t}\r\n\r\n\t\t\t// go over axes\r\n\t\t\tfunc.forIn(this.axes, function(axis){ axis.render(dim, offsets); });\r\n\r\n\t\t\tthis._makeClean();\r\n\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\t_renderTitle: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to render the chart title.\r\n\t\t\t// dim:\r\n\t\t\t//\t\tThe dimension object of the chart\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar forceHtmlLabels = (g.renderer == \"canvas\") && this.htmlLabels,\r\n\t\t\t\tlabelType = forceHtmlLabels || !has(\"ie\") && !has(\"opera\") && this.htmlLabels ? \"html\" : \"gfx\",\r\n\t\t\t\ttsize = g.normalizedLength(g.splitFontString(this.titleFont).size),\r\n\t\t\t\ttBox = g._base._getTextBox(this.title,{ font: this.titleFont });\r\n\t\t\t\t\r\n\t\t\tvar titleAlign = this.titleAlign;\r\n\t\t\tvar isRtl = has(\"dojo-bidi\") && this.isRightToLeft();\r\n\t\t\tvar posX = dim.width/2; // Default is middle.\r\n\t\t\tif(titleAlign === \"edge\"){\r\n\t\t\t\ttitleAlign = \"left\";\r\n\t\t\t\tif(isRtl){\r\n\t\t\t\t\tposX = dim.width - (offsets.r + tBox.w);\r\n\t\t\t\t}else {\r\n\t\t\t\t\tposX = offsets.l;\r\n\t\t\t\t}\r\n\t\t\t}else if(titleAlign != \"middle\"){\r\n\t\t\t\tif(isRtl){\r\n\t\t\t\t\t// We're in BIDI mode, reverse the alignment.\r\n\t\t\t\t\ttitleAlign = titleAlign === \"left\" ? \"right\" : \"left\";\r\n\t\t\t\t}\r\n\t\t\t\tif(titleAlign === \"left\"){\r\n\t\t\t\t\tposX = this.margins.l;\r\n\t\t\t\t}else if(titleAlign === \"right\"){\r\n\t\t\t\t\ttitleAlign = \"left\";\r\n\t\t\t\t\tposX = dim.width - (this.margins.l + tBox.w);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.chartTitle = common.createText[labelType](\r\n\t\t\t\tthis,\r\n\t\t\t\tthis.surface,\r\n\t\t\t\tposX,\r\n\t\t\t\tthis.titlePos==\"top\" ? tsize + this.margins.t : dim.height - this.margins.b,\r\n\t\t\t\ttitleAlign,\r\n\t\t\t\tthis.title,\r\n\t\t\t\tthis.titleFont,\r\n\t\t\t\tthis.titleFontColor\r\n\t\t\t);\r\n\t\t},\r\n\t\t_renderChartBackground: function(dim, offsets){\r\n\t\t\tvar t = this.theme, rect;\r\n\t\t\t// chart background\r\n\t\t\tvar fill   = this.fill   !== undefined ? this.fill   : (t.chart && t.chart.fill);\r\n\t\t\tvar stroke = this.stroke !== undefined ? this.stroke : (t.chart && t.chart.stroke);\r\n\r\n\t\t\t// TRT: support for \"inherit\" as a named value in a theme.\r\n\t\t\tif(fill == \"inherit\"){\r\n\t\t\t\t//\tfind the background color of the nearest ancestor node, and use that explicitly.\r\n\t\t\t\tvar node = this.node;\r\n\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\r\n\t\t\t\twhile(fill.a==0 && node!=document.documentElement){\r\n\t\t\t\t\tfill = new Color(domStyle.get(node, \"backgroundColor\"));\r\n\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(fill){\r\n\t\t\t\tif(this._nativeClip){\r\n\t\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim),\r\n\t\t\t\t\t\t{ x:0, y: 0, width: dim.width + 1, height: dim.height + 1 });\r\n\t\t\t\t\tthis.surface.createRect({ width: dim.width + 1, height: dim.height + 1 }).setFill(fill);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// VML\r\n\t\t\t\t\tfill = Element.prototype._plotFill(fill, dim, offsets);\r\n\t\t\t\t\tif(offsets.l){\t// left\r\n\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth:  offsets.l,\r\n\t\t\t\t\t\t\theight: dim.height + 1\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(offsets.r){\t// right\r\n\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\tx: dim.width - offsets.r,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth:  offsets.r + 1,\r\n\t\t\t\t\t\t\theight: dim.height + 2\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(offsets.t){\t// top\r\n\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth:  dim.width + 1,\r\n\t\t\t\t\t\t\theight: offsets.t\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(offsets.b){\t// bottom\r\n\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: dim.height - offsets.b,\r\n\t\t\t\t\t\t\twidth:  dim.width + 1,\r\n\t\t\t\t\t\t\theight: offsets.b + 2\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.surface.createRect(rect).setFill(Element.prototype._shapeFill(fill, rect));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(stroke){\r\n\t\t\t\tthis.surface.createRect({\r\n\t\t\t\t\twidth:  dim.width - 1,\r\n\t\t\t\t\theight: dim.height - 1\r\n\t\t\t\t}).setStroke(stroke);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_renderPlotBackground: function(dim, offsets, w, h){\r\n\t\t\tvar t = this.theme;\r\n\r\n\t\t\t// draw a plot background\r\n\t\t\tvar fill   = t.plotarea && t.plotarea.fill;\r\n\t\t\tvar stroke = t.plotarea && t.plotarea.stroke;\r\n\t\t\t// size might be neg if offsets are bigger that chart size this happens quite often at\r\n\t\t\t// initialization time if the chart widget is used in a BorderContainer\r\n\t\t\t// this will fail on IE/VML\r\n\t\t\tvar rect = {\r\n\t\t\t\tx: offsets.l - 1, y: offsets.t - 1,\r\n\t\t\t\twidth:  w + 2,\r\n\t\t\t\theight: h + 2\r\n\t\t\t};\r\n\t\t\tif(fill){\r\n\t\t\t\tfill = Element.prototype._shapeFill(Element.prototype._plotFill(fill, dim, offsets), rect);\r\n\t\t\t\tthis.surface.createRect(rect).setFill(fill);\r\n\t\t\t}\r\n\t\t\tif(stroke){\r\n\t\t\t\tthis.surface.createRect({\r\n\t\t\t\t\tx: offsets.l, y: offsets.t,\r\n\t\t\t\t\twidth:  w + 1,\r\n\t\t\t\t\theight: h + 1\r\n\t\t\t\t}).setStroke(stroke);\r\n\t\t\t}\r\n\t\t},\r\n\t\tdelayedRender: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDelayed render, which is used to collect multiple updates\r\n\t\t\t//\t\twithin a delayInMs time window.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\r\n\t\t\tif(!this._delayedRenderHandle){\r\n\t\t\t\tthis._delayedRenderHandle = setTimeout(\r\n\t\t\t\t\tlang.hitch(this, function(){\r\n\t\t\t\t\t\tthis.render();\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.delayInMs\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\tconnectToPlot: function(name, object, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA convenience method to connect a function to a plot.\r\n\t\t\t// name: String\r\n\t\t\t//\t\tThe name of the plot as defined by addPlot.\r\n\t\t\t// object: Object\r\n\t\t\t//\t\tThe object to be connected.\r\n\t\t\t// method: Function\r\n\t\t\t//\t\tThe function to be executed.\r\n\t\t\t// returns: Array\r\n\t\t\t//\t\tA handle to the connection, as defined by dojo.connect (see dojo.connect).\r\n\t\t\treturn name in this.plots ? this.stack[this.plots[name]].connect(object, method) : null;\t//\tArray\r\n\t\t},\r\n\t\tfireEvent: function(seriesName, eventName, index){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFires a synthetic event for a series item.\r\n\t\t\t// seriesName: String\r\n\t\t\t//\t\tSeries name.\r\n\t\t\t// eventName: String\r\n\t\t\t//\t\tEvent name to simulate: onmouseover, onmouseout, onclick.\r\n\t\t\t// index: Number\r\n\t\t\t//\t\tValid data value index for the event.\r\n\t\t\t// returns: dojox/charting/Chart\r\n\t\t\t//\t\tA reference to the current chart for functional chaining.\r\n\t\t\tif(seriesName in this.runs){\r\n\t\t\t\tvar plotName = this.series[this.runs[seriesName]].plot;\r\n\t\t\t\tif(plotName in this.plots){\r\n\t\t\t\t\tvar plot = this.stack[this.plots[plotName]];\r\n\t\t\t\t\tif(plot){\r\n\t\t\t\t\t\tplot.fireEvent(seriesName, eventName, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/Chart\r\n\t\t},\r\n\t\t_makeClean: function(){\r\n\t\t\t// reset dirty flags\r\n\t\t\tarr.forEach(this.axes,   makeClean);\r\n\t\t\tarr.forEach(this.stack,  makeClean);\r\n\t\t\tarr.forEach(this.series, makeClean);\r\n\t\t\tthis.dirty = false;\r\n\t\t},\r\n\t\t_makeDirty: function(){\r\n\t\t\t// reset dirty flags\r\n\t\t\tarr.forEach(this.axes,   makeDirty);\r\n\t\t\tarr.forEach(this.stack,  makeDirty);\r\n\t\t\tarr.forEach(this.series, makeDirty);\r\n\t\t\tthis.dirty = true;\r\n\t\t},\r\n\t\t_invalidateDependentPlots: function(plotName, /* Boolean */ verticalAxis){\r\n\t\t\tif(plotName in this.plots){\r\n\t\t\t\tvar plot = this.stack[this.plots[plotName]], axis,\r\n\t\t\t\t\taxisName = verticalAxis ? \"vAxis\" : \"hAxis\";\r\n\t\t\t\tif(plot[axisName]){\r\n\t\t\t\t\taxis = this.axes[plot[axisName]];\r\n\t\t\t\t\tif(axis && axis.dependOnData()){\r\n\t\t\t\t\t\taxis.dirty = true;\r\n\t\t\t\t\t\t// find all plots and mark them dirty\r\n\t\t\t\t\t\tarr.forEach(this.stack, function(p){\r\n\t\t\t\t\t\t\tif(p[axisName] && p[axisName] == plot[axisName]){\r\n\t\t\t\t\t\t\t\tp.dirty = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tplot.dirty = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetDir : function(dir){\r\n\t\t\treturn this; \r\n\t\t},\r\n\t\t_resetLeftBottom: function(axis){\r\n\t\t},\r\n\t\tformatTruncatedLabel: function(element, label, labelType){\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n\tfunction hSection(stats){\r\n\t\treturn {min: stats.hmin, max: stats.hmax};\r\n\t}\r\n\r\n\tfunction vSection(stats){\r\n\t\treturn {min: stats.vmin, max: stats.vmax};\r\n\t}\r\n\r\n\tfunction hReplace(stats, h){\r\n\t\tstats.hmin = h.min;\r\n\t\tstats.hmax = h.max;\r\n\t}\r\n\r\n\tfunction vReplace(stats, v){\r\n\t\tstats.vmin = v.min;\r\n\t\tstats.vmax = v.max;\r\n\t}\r\n\r\n\tfunction combineStats(target, source){\r\n\t\tif(target && source){\r\n\t\t\ttarget.min = Math.min(target.min, source.min);\r\n\t\t\ttarget.max = Math.max(target.max, source.max);\r\n\t\t}\r\n\t\treturn target || source;\r\n\t}\r\n\r\n\tfunction calculateAxes(stack, plotArea){\r\n\t\tvar plots = {}, axes = {};\r\n\t\tarr.forEach(stack, function(plot){\r\n\t\t\tvar stats = plots[plot.name] = plot.getSeriesStats();\r\n\t\t\tif(plot.hAxis){\r\n\t\t\t\taxes[plot.hAxis] = combineStats(axes[plot.hAxis], hSection(stats));\r\n\t\t\t}\r\n\t\t\tif(plot.vAxis){\r\n\t\t\t\taxes[plot.vAxis] = combineStats(axes[plot.vAxis], vSection(stats));\r\n\t\t\t}\r\n\t\t});\r\n\t\tarr.forEach(stack, function(plot){\r\n\t\t\tvar stats = plots[plot.name];\r\n\t\t\tif(plot.hAxis){\r\n\t\t\t\thReplace(stats, axes[plot.hAxis]);\r\n\t\t\t}\r\n\t\t\tif(plot.vAxis){\r\n\t\t\t\tvReplace(stats, axes[plot.vAxis]);\r\n\t\t\t}\r\n\t\t\tplot.initializeScalers(plotArea, stats);\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.Chart\", [Chart, BidiChart]) : Chart;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvQ2hhcnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvQ2hhcnQuanM/NTViMiJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiLi4vbWFpblwiLCBcImRvam8vX2Jhc2UvbGFuZ1wiLCBcImRvam8vX2Jhc2UvYXJyYXlcIixcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcImRvam8vZG9tLXN0eWxlXCIsXHJcblx0XCJkb2pvL2RvbVwiLCBcImRvam8vZG9tLWdlb21ldHJ5XCIsIFwiZG9qby9kb20tY29uc3RydWN0XCIsXCJkb2pvL19iYXNlL0NvbG9yXCIsIFwiZG9qby9zbmlmZlwiLFxyXG5cdFwiLi9FbGVtZW50XCIsIFwiLi9TaW1wbGVUaGVtZVwiLCBcIi4vU2VyaWVzXCIsIFwiLi9heGlzMmQvY29tbW9uXCIsIFwiZG9qb3gvZ2Z4L3NoYXBlXCIsXHJcblx0XCJkb2pveC9nZnhcIiwgXCJkb2pvL2hhcyFkb2pvLWJpZGk/Li9iaWRpL0NoYXJ0XCIsIFwiZG9qb3gvbGFuZy9mdW5jdGlvbmFsXCIsIFwiZG9qb3gvbGFuZy9mdW5jdGlvbmFsL2ZvbGRcIiwgXCJkb2pveC9sYW5nL2Z1bmN0aW9uYWwvcmV2ZXJzZWRcIl0sXHJcblx0ZnVuY3Rpb24oZG9qb3gsIGxhbmcsIGFyciwgZGVjbGFyZSwgZG9tU3R5bGUsXHJcblx0IFx0XHQgZG9tLCBkb21HZW9tLCBkb21Db25zdHJ1Y3QsIENvbG9yLCBoYXMsXHJcblx0IFx0XHQgRWxlbWVudCwgU2ltcGxlVGhlbWUsIFNlcmllcywgY29tbW9uLCBzaGFwZSxcclxuXHQgXHRcdCBnLCBCaWRpQ2hhcnQsIGZ1bmMpe1xyXG5cdC8qPT09PT1cclxuXHR2YXIgX19DaGFydEN0b3JBcmdzID0ge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFRoZSBrZXl3b3JkIGFyZ3VtZW50cyB0aGF0IGNhbiBiZSBwYXNzZWQgaW4gYSBDaGFydCBjb25zdHJ1Y3Rvci5cclxuXHRcdC8vIG1hcmdpbnM6IE9iamVjdD9cclxuXHRcdC8vXHRcdE9wdGlvbmFsIG1hcmdpbnMgZm9yIHRoZSBjaGFydCwgaW4gdGhlIGZvcm0gb2YgeyBsLCB0LCByLCBifS5cclxuXHRcdC8vIHN0cm9rZTogZG9qb3guZ2Z4LlN0cm9rZT9cclxuXHRcdC8vXHRcdEFuIG9wdGlvbmFsIG91dGxpbmUvc3Ryb2tlIGZvciB0aGUgY2hhcnQuXHJcblx0XHQvLyBmaWxsOiBkb2pveC5nZnguRmlsbD9cclxuXHRcdC8vXHRcdEFuIG9wdGlvbmFsIGZpbGwgZm9yIHRoZSBjaGFydC5cclxuXHRcdC8vIGRlbGF5SW5NczogTnVtYmVyXHJcblx0XHQvL1x0XHREZWxheSBpbiBtcyBmb3IgZGVsYXllZFJlbmRlcigpLiBEZWZhdWx0OiAyMDAuXHJcblx0fTtcclxuXHQ9PT09PSovXHJcblxyXG5cdC8qPT09PT1cclxuXHR2YXIgX19TZXJpZXNDdG9yQXJncyA9IHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRBbiBvcHRpb25hbCBhcmd1bWVudHMgb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgaW4gdGhlIFNlcmllcyBjb25zdHJ1Y3Rvci5cclxuXHRcdC8vIHBsb3Q6IFN0cmluZz9cclxuXHRcdC8vXHRcdFRoZSBwbG90IChieSBuYW1lKSB0aGF0IHRoaXMgc2VyaWVzIGJlbG9uZ3MgdG8uXHJcblx0fTtcclxuXHQ9PT09PSovXHJcblxyXG5cdC8qPT09PT1cclxuXHR2YXIgX19CYXNlQXhpc0N0b3JBcmdzID0ge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdE9wdGlvbmFsIGFyZ3VtZW50cyB1c2VkIGluIHRoZSBkZWZpbml0aW9uIG9mIGFuIGludmlzaWJsZSBheGlzLlxyXG5cdFx0Ly8gdmVydGljYWw6IEJvb2xlYW4/XHJcblx0XHQvL1x0XHRBIGZsYWcgdGhhdCBzYXlzIHdoZXRoZXIgYW4gYXhpcyBpcyB2ZXJ0aWNhbCAoaS5lLiB5IGF4aXMpIG9yIGhvcml6b250YWwuIERlZmF1bHQgaXMgZmFsc2UgKGhvcml6b250YWwpLlxyXG5cdFx0Ly8gbWluOiBOdW1iZXI/XHJcblx0XHQvL1x0XHRUaGUgc21hbGxlc3QgdmFsdWUgb24gYW4gYXhpcy4gRGVmYXVsdCBpcyAwLlxyXG5cdFx0Ly8gbWF4OiBOdW1iZXI/XHJcblx0XHQvL1x0XHRUaGUgbGFyZ2VzdCB2YWx1ZSBvbiBhbiBheGlzLiBEZWZhdWx0IGlzIDEuXHJcblx0fTtcclxuXHQ9PT09PSovXHJcblxyXG5cdHZhciBkYyA9IGxhbmcuZ2V0T2JqZWN0KFwiY2hhcnRpbmdcIiwgdHJ1ZSwgZG9qb3gpLFxyXG5cdFx0Y2xlYXIgPSBmdW5jLmxhbWJkYShcIml0ZW0uY2xlYXIoKVwiKSxcclxuXHRcdHB1cmdlID0gZnVuYy5sYW1iZGEoXCJpdGVtLnB1cmdlR3JvdXAoKVwiKSxcclxuXHRcdGRlc3Ryb3kgPSBmdW5jLmxhbWJkYShcIml0ZW0uZGVzdHJveSgpXCIpLFxyXG5cdFx0bWFrZUNsZWFuID0gZnVuYy5sYW1iZGEoXCJpdGVtLmRpcnR5ID0gZmFsc2VcIiksXHJcblx0XHRtYWtlRGlydHkgPSBmdW5jLmxhbWJkYShcIml0ZW0uZGlydHkgPSB0cnVlXCIpLFxyXG5cdFx0Z2V0TmFtZSA9IGZ1bmMubGFtYmRhKFwiaXRlbS5uYW1lXCIpLFxyXG5cdFx0ZGVmYXVsdE1hcmdpbnMgPSB7bDogMTAsIHQ6IDEwLCByOiAxMCwgYjogMTB9O1xyXG5cclxuXHR2YXIgQ2hhcnQgPSBkZWNsYXJlKGhhcyhcImRvam8tYmlkaVwiKT8gXCJkb2pveC5jaGFydGluZy5Ob25CaWRpQ2hhcnRcIiA6IFwiZG9qb3guY2hhcnRpbmcuQ2hhcnRcIiwgbnVsbCwge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFRoZSBtYWluIGNoYXJ0IG9iamVjdCBpbiBkb2pveC5jaGFydGluZy4gIFRoaXMgd2lsbCBjcmVhdGUgYSB0d28gZGltZW5zaW9uYWxcclxuXHRcdC8vXHRcdGNoYXJ0IGJhc2VkIG9uIGRvam94LmdmeC5cclxuXHRcdC8vXHJcblx0XHQvLyBkZXNjcmlwdGlvbjpcclxuXHRcdC8vXHRcdGRvam94LmNoYXJ0aW5nLkNoYXJ0IGlzIHRoZSBwcmltYXJ5IG9iamVjdCB1c2VkIGZvciBhbnkga2luZCBvZiBjaGFydHMuICBJdFxyXG5cdFx0Ly9cdFx0aXMgc2ltcGxlIHRvIGNyZWF0ZS0tanVzdCBwYXNzIGl0IGEgbm9kZSByZWZlcmVuY2UsIHdoaWNoIGlzIHVzZWQgYXMgdGhlXHJcblx0XHQvL1x0XHRjb250YWluZXIgZm9yIHRoZSBjaGFydC0tYW5kIGEgc2V0IG9mIG9wdGlvbmFsIGtleXdvcmQgYXJndW1lbnRzIGFuZCBnby5cclxuXHRcdC8vXHJcblx0XHQvL1x0XHROb3RlIHRoYXQgbGlrZSBtb3N0IG9mIGRvam94LmdmeCwgbW9zdCBvZiBkb2pveC5jaGFydGluZy5DaGFydCdzIG1ldGhvZHMgYXJlXHJcblx0XHQvL1x0XHRkZXNpZ25lZCB0byByZXR1cm4gYSByZWZlcmVuY2UgdG8gdGhlIGNoYXJ0IGl0c2VsZiwgdG8gYWxsb3cgZm9yIGZ1bmN0aW9uYWxcclxuXHRcdC8vXHRcdGNoYWluaW5nLiAgVGhpcyBtYWtlcyBkZWZpbmluZyBldmVyeXRoaW5nIG9uIGEgQ2hhcnQgdmVyeSBlYXN5IHRvIGRvLlxyXG5cdFx0Ly9cclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRDcmVhdGUgYW4gYXJlYSBjaGFydCwgd2l0aCBzbW9vdGhpbmcuXHJcblx0XHQvL1x0fFx0cmVxdWlyZShbXCJkb2pveC9jaGFydGluZy9DaGFydFwiLCBcImRvam94L2NoYXJ0aW5nL3RoZW1lcy9TaHJvb21zXCIsIFwiZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0FyZWFzXCIsIC4uLl0sXHJcblx0XHQvLyBcdHxcdFx0ZnVuY3Rpb24oQ2hhcnQsIFNocm9vbXMsIEFyZWFzLCAuLi4pe1xyXG5cdFx0Ly9cdHxcdFx0bmV3IENoYXJ0KG5vZGUpXHJcblx0XHQvL1x0fFx0XHRcdC5hZGRQbG90KFwiZGVmYXVsdFwiLCB7IHR5cGU6IEFyZWFzLCB0ZW5zaW9uOiBcIlhcIiB9KVxyXG5cdFx0Ly9cdHxcdFx0XHQuc2V0VGhlbWUoU2hyb29tcylcclxuXHRcdC8vXHR8XHRcdFx0LmFkZFNlcmllcyhcIlNlcmllcyBBXCIsIFsxLCAyLCAwLjUsIDEuNSwgMSwgMi44LCAwLjRdKVxyXG5cdFx0Ly9cdHxcdFx0XHQuYWRkU2VyaWVzKFwiU2VyaWVzIEJcIiwgWzIuNiwgMS44LCAyLCAxLCAxLjQsIDAuNywgMl0pXHJcblx0XHQvL1x0fFx0XHRcdC5hZGRTZXJpZXMoXCJTZXJpZXMgQ1wiLCBbNi4zLCAxLjgsIDMsIDAuNSwgNC40LCAyLjcsIDJdKVxyXG5cdFx0Ly9cdHxcdFx0XHQucmVuZGVyKCk7XHJcblx0XHQvL1x0fFx0fSk7XHJcblx0XHQvL1xyXG5cdFx0Ly8gZXhhbXBsZTpcclxuXHRcdC8vXHRcdFRoZSBmb3JtIG9mIGRhdGEgaW4gYSBkYXRhIHNlcmllcyBjYW4gdGFrZSBhIG51bWJlciBvZiBmb3JtczogYSBzaW1wbGUgYXJyYXksXHJcblx0XHQvL1x0XHRhbiBhcnJheSBvZiBvYmplY3RzIHt4LHl9LCBvciBzb21ldGhpbmcgY3VzdG9tIChhcyBkZXRlcm1pbmVkIGJ5IHRoZSBwbG90KS5cclxuXHRcdC8vXHRcdEhlcmUncyBhbiBleGFtcGxlIG9mIGEgQ2FuZGxlc3RpY2sgY2hhcnQsIHdoaWNoIGV4cGVjdHMgYW4gb2JqZWN0IG9mXHJcblx0XHQvL1x0XHR7IG9wZW4sIGhpZ2gsIGxvdywgY2xvc2UgfS5cclxuXHRcdC8vXHR8XHRyZXF1aXJlKFtcImRvam94L2NoYXJ0aW5nL0NoYXJ0XCIsIFwiZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0NhbmRsZXN0aWNrc1wiLCAuLi5dLFxyXG5cdFx0Ly8gXHR8XHRcdGZ1bmN0aW9uKENoYXJ0LCBDYW5kbGVzdGlja3MsIC4uLil7XHJcblx0XHQvL1x0fFx0XHRuZXcgQ2hhcnQobm9kZSlcclxuXHRcdC8vXHR8XHRcdFx0LmFkZFBsb3QoXCJkZWZhdWx0XCIsIHt0eXBlOiBDYW5kbGVzdGlja3MsIGdhcDogMX0pXHJcblx0XHQvL1x0fFx0XHRcdC5hZGRBeGlzKFwieFwiLCB7Zml4TG93ZXI6IFwibWFqb3JcIiwgZml4VXBwZXI6IFwibWFqb3JcIiwgaW5jbHVkZVplcm86IHRydWV9KVxyXG5cdFx0Ly9cdHxcdFx0XHQuYWRkQXhpcyhcInlcIiwge3ZlcnRpY2FsOiB0cnVlLCBmaXhMb3dlcjogXCJtYWpvclwiLCBmaXhVcHBlcjogXCJtYWpvclwiLCBuYXR1cmFsOiB0cnVlfSlcclxuXHRcdC8vXHR8XHRcdFx0LmFkZFNlcmllcyhcIlNlcmllcyBBXCIsIFtcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMjAsIGNsb3NlOiAxNiwgaGlnaDogMjIsIGxvdzogOCB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAxNiwgY2xvc2U6IDIyLCBoaWdoOiAyNiwgbG93OiA2LCBtaWQ6IDE4IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDIyLCBjbG9zZTogMTgsIGhpZ2g6IDIyLCBsb3c6IDExLCBtaWQ6IDIxIH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDE4LCBjbG9zZTogMjksIGhpZ2g6IDMyLCBsb3c6IDE0LCBtaWQ6IDI3IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDI5LCBjbG9zZTogMjQsIGhpZ2g6IDI5LCBsb3c6IDEzLCBtaWQ6IDI3IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDI0LCBjbG9zZTogOCwgaGlnaDogMjQsIGxvdzogNSB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiA4LCBjbG9zZTogMTYsIGhpZ2g6IDIyLCBsb3c6IDIgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMTYsIGNsb3NlOiAxMiwgaGlnaDogMTksIGxvdzogNyB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAxMiwgY2xvc2U6IDIwLCBoaWdoOiAyMiwgbG93OiA4IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDIwLCBjbG9zZTogMTYsIGhpZ2g6IDIyLCBsb3c6IDggfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMTYsIGNsb3NlOiAyMiwgaGlnaDogMjYsIGxvdzogNiwgbWlkOiAxOCB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAyMiwgY2xvc2U6IDE4LCBoaWdoOiAyMiwgbG93OiAxMSwgbWlkOiAyMSB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAxOCwgY2xvc2U6IDI5LCBoaWdoOiAzMiwgbG93OiAxNCwgbWlkOiAyNyB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAyOSwgY2xvc2U6IDI0LCBoaWdoOiAyOSwgbG93OiAxMywgbWlkOiAyNyB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAyNCwgY2xvc2U6IDgsIGhpZ2g6IDI0LCBsb3c6IDUgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogOCwgY2xvc2U6IDE2LCBoaWdoOiAyMiwgbG93OiAyIH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDE2LCBjbG9zZTogMTIsIGhpZ2g6IDE5LCBsb3c6IDcgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMTIsIGNsb3NlOiAyMCwgaGlnaDogMjIsIGxvdzogOCB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAyMCwgY2xvc2U6IDE2LCBoaWdoOiAyMiwgbG93OiA4IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDE2LCBjbG9zZTogMjIsIGhpZ2g6IDI2LCBsb3c6IDYgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMjIsIGNsb3NlOiAxOCwgaGlnaDogMjIsIGxvdzogMTEgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMTgsIGNsb3NlOiAyOSwgaGlnaDogMzIsIGxvdzogMTQgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMjksIGNsb3NlOiAyNCwgaGlnaDogMjksIGxvdzogMTMgfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMjQsIGNsb3NlOiA4LCBoaWdoOiAyNCwgbG93OiA1IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDgsIGNsb3NlOiAxNiwgaGlnaDogMjIsIGxvdzogMiB9LFxyXG5cdFx0Ly9cdHxcdFx0XHRcdFx0eyBvcGVuOiAxNiwgY2xvc2U6IDEyLCBoaWdoOiAxOSwgbG93OiA3IH0sXHJcblx0XHQvL1x0fFx0XHRcdFx0XHR7IG9wZW46IDEyLCBjbG9zZTogMjAsIGhpZ2g6IDIyLCBsb3c6IDggfSxcclxuXHRcdC8vXHR8XHRcdFx0XHRcdHsgb3BlbjogMjAsIGNsb3NlOiAxNiwgaGlnaDogMjIsIGxvdzogOCB9XHJcblx0XHQvL1x0fFx0XHRcdFx0XSxcclxuXHRcdC8vXHR8XHRcdFx0XHR7IHN0cm9rZTogeyBjb2xvcjogXCJncmVlblwiIH0sIGZpbGw6IFwibGlnaHRncmVlblwiIH1cclxuXHRcdC8vXHR8XHRcdFx0KVxyXG5cdFx0Ly9cdHxcdFx0XHQucmVuZGVyKCk7XHJcblx0XHQvL1x0fFx0fSk7XHJcblx0XHRcclxuXHRcdC8vIHRoZW1lOiBkb2pveC9jaGFydGluZy9TaW1wbGVUaGVtZT9cclxuXHRcdC8vXHRcdEFuIG9wdGlvbmFsIHRoZW1lIHRvIHVzZSBmb3Igc3R5bGluZyB0aGUgY2hhcnQuXHJcblx0XHQvLyBheGVzOiBkb2pveC9jaGFydGluZy9heGlzMmQvQmFzZXt9P1xyXG5cdFx0Ly9cdFx0QSBtYXAgb2YgYXhlcyBmb3IgdXNlIGluIHBsb3R0aW5nIGEgY2hhcnQuXHJcblx0XHQvLyBzdGFjazogZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0Jhc2VbXVxyXG5cdFx0Ly9cdFx0QSBzdGFjayBvZiBwbG90dGVycy5cclxuXHRcdC8vIHBsb3RzOiBkb2pveC9jaGFydGluZy9wbG90MmQvQmFzZXt9XHJcblx0XHQvL1x0XHRBIG1hcCBvZiBwbG90dGVyIGluZGljZXNcclxuXHRcdC8vIHNlcmllczogZG9qb3gvY2hhcnRpbmcvU2VyaWVzW11cclxuXHRcdC8vXHRcdFRoZSBzdGFjayBvZiBkYXRhIHJ1bnMgdXNlZCB0byBjcmVhdGUgcGxvdHMuXHJcblx0XHQvLyBydW5zOiBkb2pveC9jaGFydGluZy9TZXJpZXN7fVxyXG5cdFx0Ly9cdFx0QSBtYXAgb2Ygc2VyaWVzIGluZGljZXNcclxuXHRcdC8vIG1hcmdpbnM6IE9iamVjdD9cclxuXHRcdC8vXHRcdFRoZSBtYXJnaW5zIGFyb3VuZCB0aGUgY2hhcnQuIERlZmF1bHQgaXMgeyBsOjEwLCB0OjEwLCByOjEwLCBiOjEwIH0uXHJcblx0XHQvLyBzdHJva2U6IGRvam94LmdmeC5TdHJva2U/XHJcblx0XHQvL1x0XHRUaGUgb3V0bGluZSBvZiB0aGUgY2hhcnQgKHN0cm9rZSBpbiB2ZWN0b3IgZ3JhcGhpY3MgdGVybXMpLlxyXG5cdFx0Ly8gZmlsbDogZG9qb3guZ2Z4LkZpbGw/XHJcblx0XHQvL1x0XHRUaGUgY29sb3IgZm9yIHRoZSBjaGFydC5cclxuXHRcdC8vIG5vZGU6IERPTU5vZGVcclxuXHRcdC8vXHRcdFRoZSBjb250YWluZXIgbm9kZSBwYXNzZWQgdG8gdGhlIGNvbnN0cnVjdG9yLlxyXG5cdFx0Ly8gc3VyZmFjZTogZG9qb3gvZ2Z4L3NoYXBlLlN1cmZhY2VcclxuXHRcdC8vXHRcdFRoZSBtYWluIGdyYXBoaWNzIHN1cmZhY2UgdXBvbiB3aGljaCBhIGNoYXJ0IGlzIGRyYXduLlxyXG5cdFx0Ly8gZGlydHk6IEJvb2xlYW5cclxuXHRcdC8vXHRcdEEgYm9vbGVhbiBmbGFnIGluZGljYXRpbmcgd2hldGhlciBvciBub3QgdGhlIGNoYXJ0IG5lZWRzIHRvIGJlIHVwZGF0ZWQvcmUtcmVuZGVyZWQuXHJcblx0XHQvLyBodG1sTGFiZWxzOiBCb29sZWFuXHJcblx0XHQvL1x0XHRBIGJvb2xlYW4gZmxhZyBpbmRpY2F0aW5nIHdoZXRoZXIgb3Igbm90IGl0IHNob3VsZCB0cnkgdG8gdXNlIEhUTUwtYmFzZWQgbGFiZWxzIGZvciB0aGUgdGl0bGUgb3Igbm90LlxyXG5cdFx0Ly9cdFx0VGhlIGRlZmF1bHQgaXMgdHJ1ZS4gIFRoZSBvbmx5IGNhdmVhdCBpcyBJRSBhbmQgT3BlcmEgYnJvd3NlcnMgd2lsbCBhbHdheXMgdXNlIEdGWC1iYXNlZCBsYWJlbHMuXHJcblxyXG5cdFx0Y29uc3RydWN0b3I6IGZ1bmN0aW9uKC8qIERPTU5vZGUgKi9ub2RlLCAvKiBfX0NoYXJ0Q3RvckFyZ3M/ICova3dBcmdzKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0VGhlIGNvbnN0cnVjdG9yIGZvciBhIG5ldyBDaGFydC4gIEluaXRpYWxpemVzIGFsbCBwYXJhbWV0ZXJzIHVzZWQgZm9yIGEgY2hhcnQuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdFRoZSBuZXdseSBjcmVhdGVkIGNoYXJ0LlxyXG5cclxuXHRcdFx0Ly8gaW5pdGlhbGl6ZSBwYXJhbWV0ZXJzXHJcblx0XHRcdGlmKCFrd0FyZ3MpeyBrd0FyZ3MgPSB7fTsgfVxyXG5cdFx0XHR0aGlzLm1hcmdpbnMgPSBrd0FyZ3MubWFyZ2lucyB8fCBkZWZhdWx0TWFyZ2lucztcclxuXHRcdFx0dGhpcy5fY3VzdG9tTWFyZ2lucyA9ICEha3dBcmdzLm1hcmdpbnM7XHJcblx0XHRcdHRoaXMuc3Ryb2tlICAgID0ga3dBcmdzLnN0cm9rZTtcclxuXHRcdFx0dGhpcy5maWxsICAgICAgPSBrd0FyZ3MuZmlsbDtcclxuXHRcdFx0dGhpcy5kZWxheUluTXMgPSBrd0FyZ3MuZGVsYXlJbk1zIHx8IDIwMDtcclxuXHRcdFx0dGhpcy50aXRsZSAgICAgPSBrd0FyZ3MudGl0bGU7XHJcblx0XHRcdHRoaXMudGl0bGVHYXAgID0ga3dBcmdzLnRpdGxlR2FwO1xyXG5cdFx0XHR0aGlzLnRpdGxlUG9zICA9IGt3QXJncy50aXRsZVBvcztcclxuXHRcdFx0dGhpcy50aXRsZUZvbnQgPSBrd0FyZ3MudGl0bGVGb250O1xyXG5cdFx0XHR0aGlzLnRpdGxlRm9udENvbG9yID0ga3dBcmdzLnRpdGxlRm9udENvbG9yO1xyXG5cdFx0XHR0aGlzLnRpdGxlQWxpZ24gPSBrd0FyZ3MudGl0bGVBbGlnbjsgLy8gVGhpcyBjYW4gYmUgbWlkZGxlLCBsZWZ0LCByaWdodCwgb3IgZWRnZSBcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0IC8vIGVkZ2UgaXMgbGVmdCBvciByaWdodCBhbGlnbmVkIHdpdGggY2hhcnQgcGxvdCBlZGdlIGRlcGVuZGluZyBvbiBiaWRpLlxyXG5cdFx0XHR0aGlzLmNoYXJ0VGl0bGUgPSBudWxsO1xyXG5cdFx0XHR0aGlzLmh0bWxMYWJlbHMgPSB0cnVlO1xyXG5cdFx0XHRpZihcImh0bWxMYWJlbHNcIiBpbiBrd0FyZ3Mpe1xyXG5cdFx0XHRcdHRoaXMuaHRtbExhYmVscyA9IGt3QXJncy5odG1sTGFiZWxzO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBkZWZhdWx0IGluaXRpYWxpemF0aW9uXHJcblx0XHRcdHRoaXMudGhlbWUgPSBudWxsO1xyXG5cdFx0XHR0aGlzLmF4ZXMgPSB7fTtcdFx0Ly8gbWFwIG9mIGF4ZXNcclxuXHRcdFx0dGhpcy5zdGFjayA9IFtdO1x0Ly8gc3RhY2sgb2YgcGxvdHRlcnNcclxuXHRcdFx0dGhpcy5wbG90cyA9IHt9O1x0Ly8gbWFwIG9mIHBsb3R0ZXIgaW5kaWNlc1xyXG5cdFx0XHR0aGlzLnNlcmllcyA9IFtdO1x0Ly8gc3RhY2sgb2YgZGF0YSBydW5zXHJcblx0XHRcdHRoaXMucnVucyA9IHt9O1x0XHQvLyBtYXAgb2YgZGF0YSBydW4gaW5kaWNlc1xyXG5cdFx0XHR0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuXHJcblx0XHRcdC8vIGNyZWF0ZSBhIHN1cmZhY2VcclxuXHRcdFx0dGhpcy5ub2RlID0gZG9tLmJ5SWQobm9kZSk7XHJcblx0XHRcdHZhciBib3ggPSBkb21HZW9tLmdldE1hcmdpbkJveChub2RlKTtcclxuXHRcdFx0dGhpcy5zdXJmYWNlID0gZy5jcmVhdGVTdXJmYWNlKHRoaXMubm9kZSwgYm94LncgfHwgNDAwLCBib3guaCB8fCAzMDApO1xyXG5cdFx0XHRpZih0aGlzLnN1cmZhY2UuZGVjbGFyZWRDbGFzcy5pbmRleE9mKFwidm1sXCIpID09IC0xKXtcclxuXHRcdFx0XHQvLyBleGNlcHQgaWYgdm1sIHVzZSBuYXRpdmUgY2xpcHBpbmdcclxuXHRcdFx0XHR0aGlzLl9uYXRpdmVDbGlwID0gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGRlc3Ryb3k6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENsZWFudXAgd2hlbiBhIGNoYXJ0IGlzIHRvIGJlIGRlc3Ryb3llZC5cclxuXHRcdFx0Ly8gcmV0dXJuczogdm9pZFxyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnNlcmllcywgZGVzdHJveSk7XHJcblx0XHRcdGFyci5mb3JFYWNoKHRoaXMuc3RhY2ssICBkZXN0cm95KTtcclxuXHRcdFx0ZnVuYy5mb3JJbih0aGlzLmF4ZXMsIGRlc3Ryb3kpO1xyXG5cdFx0XHR0aGlzLnN1cmZhY2UuZGVzdHJveSgpO1xyXG5cdFx0XHRpZih0aGlzLmNoYXJ0VGl0bGUgJiYgdGhpcy5jaGFydFRpdGxlLnRhZ05hbWUpe1xyXG5cdFx0XHRcdC8vIGRlc3Ryb3kgdGl0bGUgaWYgaXQgaXMgYSBET00gbm9kZVxyXG5cdFx0XHRcdGRvbUNvbnN0cnVjdC5kZXN0cm95KHRoaXMuY2hhcnRUaXRsZSk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRnZXRDb29yZHM6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEdldCB0aGUgY29vcmRpbmF0ZXMgYW5kIGRpbWVuc2lvbnMgb2YgdGhlIGNvbnRhaW5pbmcgRE9NTm9kZSwgYXNcclxuXHRcdFx0Ly9cdFx0cmV0dXJuZWQgYnkgZG9qby5jb29yZHMuXHJcblx0XHRcdC8vIHJldHVybnM6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRUaGUgcmVzdWx0aW5nIGNvb3JkaW5hdGVzIG9mIHRoZSBjaGFydC4gIFNlZSBkb2pvLmNvb3JkcyBmb3IgZGV0YWlscy5cclxuXHRcdFx0dmFyIG5vZGUgPSB0aGlzLm5vZGU7XHJcblx0XHRcdHZhciBzID0gZG9tU3R5bGUuZ2V0Q29tcHV0ZWRTdHlsZShub2RlKSwgY29vcmRzID0gZG9tR2VvbS5nZXRNYXJnaW5Cb3gobm9kZSwgcyk7XHJcblx0XHRcdHZhciBhYnMgPSBkb21HZW9tLnBvc2l0aW9uKG5vZGUsIHRydWUpO1xyXG5cdFx0XHRjb29yZHMueCA9IGFicy54O1xyXG5cdFx0XHRjb29yZHMueSA9IGFicy55O1xyXG5cdFx0XHRyZXR1cm4gY29vcmRzO1x0Ly9cdE9iamVjdFxyXG5cdFx0fSxcclxuXHRcdHNldFRoZW1lOiBmdW5jdGlvbih0aGVtZSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFNldCBhIHRoZW1lIG9mIHRoZSBjaGFydC5cclxuXHRcdFx0Ly8gdGhlbWU6IGRvam94L2NoYXJ0aW5nL1NpbXBsZVRoZW1lXHJcblx0XHRcdC8vXHRcdFRoZSB0aGVtZSB0byBiZSB1c2VkIGZvciB2aXN1YWwgcmVuZGVyaW5nLlxyXG5cdFx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRBIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCBjaGFydCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0dGhpcy50aGVtZSA9IHRoZW1lLmNsb25lKCk7XHJcblx0XHRcdGlmKCF0aGlzLl9jdXN0b21NYXJnaW5zKXtcclxuXHRcdFx0XHR0aGlzLm1hcmdpbnMgPSB0aGlzLnRoZW1lLmNoYXJ0Lm1hcmdpbnMgfHwgZGVmYXVsdE1hcmdpbnM7XHJcblx0XHRcdH1cclxuXHRcdFx0dGhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0YWRkQXhpczogZnVuY3Rpb24obmFtZSwga3dBcmdzKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0QWRkIGFuIGF4aXMgdG8gdGhlIGNoYXJ0LCBmb3IgcmVuZGVyaW5nLlxyXG5cdFx0XHQvLyBuYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0VGhlIG5hbWUgb2YgdGhlIGF4aXMuXHJcblx0XHRcdC8vIGt3QXJnczogX19CYXNlQXhpc0N0b3JBcmdzP1xyXG5cdFx0XHQvL1x0XHRBbiBvcHRpb25hbCBrZXl3b3JkIGFyZ3VtZW50cyBvYmplY3QgZm9yIHVzZSBpbiBkZWZpbmluZyBkZXRhaWxzIG9mIGFuIGF4aXMuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHR2YXIgYXhpcywgYXhpc1R5cGUgPSBrd0FyZ3MgJiYga3dBcmdzLnR5cGUgfHwgXCJEZWZhdWx0XCI7XHJcblx0XHRcdGlmKHR5cGVvZiBheGlzVHlwZSA9PSBcInN0cmluZ1wiKXtcclxuXHRcdFx0XHRpZighZGMuYXhpczJkIHx8ICFkYy5heGlzMmRbYXhpc1R5cGVdKXtcclxuXHRcdFx0XHRcdHRocm93IEVycm9yKFwiQ2FuJ3QgZmluZCBheGlzOiBcIiArIGF4aXNUeXBlICsgXCIgLSBDaGVjayBcIiArIFwicmVxdWlyZSgpIGRlcGVuZGVuY2llcy5cIik7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGF4aXMgPSBuZXcgZGMuYXhpczJkW2F4aXNUeXBlXSh0aGlzLCBrd0FyZ3MpO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRheGlzID0gbmV3IGF4aXNUeXBlKHRoaXMsIGt3QXJncyk7XHJcblx0XHRcdH1cclxuXHRcdFx0YXhpcy5uYW1lID0gbmFtZTtcclxuXHRcdFx0YXhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdGlmKG5hbWUgaW4gdGhpcy5heGVzKXtcclxuXHRcdFx0XHR0aGlzLmF4ZXNbbmFtZV0uZGVzdHJveSgpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMuYXhlc1tuYW1lXSA9IGF4aXM7XHJcblx0XHRcdHRoaXMuZGlydHkgPSB0cnVlO1xyXG5cdFx0XHRyZXR1cm4gdGhpcztcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0fSxcclxuXHRcdGdldEF4aXM6IGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRHZXQgdGhlIGdpdmVuIGF4aXMsIGJ5IG5hbWUuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRUaGUgbmFtZSB0aGUgYXhpcyB3YXMgZGVmaW5lZCBieS5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvYXhpczJkL0RlZmF1bHRcclxuXHRcdFx0Ly9cdFx0VGhlIGF4aXMgYXMgc3RvcmVkIGluIHRoZSBjaGFydCdzIGF4aXMgbWFwLlxyXG5cdFx0XHRyZXR1cm4gdGhpcy5heGVzW25hbWVdO1x0Ly9cdGRvam94L2NoYXJ0aW5nL2F4aXMyZC9EZWZhdWx0XHJcblx0XHR9LFxyXG5cdFx0cmVtb3ZlQXhpczogZnVuY3Rpb24obmFtZSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlbW92ZSB0aGUgYXhpcyB0aGF0IHdhcyBkZWZpbmVkIHVzaW5nIG5hbWUuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRUaGUgYXhpcyBuYW1lLCBhcyBkZWZpbmVkIGluIGFkZEF4aXMuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZihuYW1lIGluIHRoaXMuYXhlcyl7XHJcblx0XHRcdFx0Ly8gZGVzdHJveSB0aGUgYXhpc1xyXG5cdFx0XHRcdHRoaXMuYXhlc1tuYW1lXS5kZXN0cm95KCk7XHJcblx0XHRcdFx0ZGVsZXRlIHRoaXMuYXhlc1tuYW1lXTtcclxuXHRcdFx0XHQvLyBtYXJrIHRoZSBjaGFydCBhcyBkaXJ0eVxyXG5cdFx0XHRcdHRoaXMuZGlydHkgPSB0cnVlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0YWRkUGxvdDogZnVuY3Rpb24obmFtZSwga3dBcmdzKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0QWRkIGEgbmV3IHBsb3QgdG8gdGhlIGNoYXJ0LCBkZWZpbmVkIGJ5IG5hbWUgYW5kIHVzaW5nIHRoZSBvcHRpb25hbCBrZXl3b3JkIGFyZ3VtZW50cyBvYmplY3QuXHJcblx0XHRcdC8vXHRcdE5vdGUgdGhhdCBkb2pveC5jaGFydGluZyBhc3N1bWVzIHRoZSBtYWluIHBsb3QgdG8gYmUgY2FsbGVkIFwiZGVmYXVsdFwiOyBpZiB5b3UgZG8gbm90IGhhdmVcclxuXHRcdFx0Ly9cdFx0YSBwbG90IGNhbGxlZCBcImRlZmF1bHRcIiBhbmQgYXR0ZW1wdCB0byBhZGQgZGF0YSBzZXJpZXMgdG8gdGhlIGNoYXJ0IHdpdGhvdXQgc3BlY2lmeWluZyB0aGVcclxuXHRcdFx0Ly9cdFx0cGxvdCB0byBiZSByZW5kZXJlZCBvbiwgeW91IFdJTEwgZ2V0IGVycm9ycy5cclxuXHRcdFx0Ly8gbmFtZTogU3RyaW5nXHJcblx0XHRcdC8vXHRcdFRoZSBuYW1lIG9mIHRoZSBwbG90IHRvIGJlIGFkZGVkIHRvIHRoZSBjaGFydC4gIElmIHlvdSBvbmx5IHBsYW4gb24gdXNpbmcgb25lIHBsb3QsIGNhbGwgaXQgXCJkZWZhdWx0XCIuXHJcblx0XHRcdC8vIGt3QXJnczogZG9qb3guY2hhcnRpbmcucGxvdDJkLl9fUGxvdEN0b3JBcmdzXHJcblx0XHRcdC8vXHRcdEFuIG9iamVjdCB3aXRoIG9wdGlvbmFsIHBhcmFtZXRlcnMgZm9yIHRoZSBwbG90IGluIHF1ZXN0aW9uLlxyXG5cdFx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRBIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCBjaGFydCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0dmFyIHBsb3QsIHBsb3RUeXBlID0ga3dBcmdzICYmIGt3QXJncy50eXBlIHx8IFwiRGVmYXVsdFwiO1xyXG5cdFx0XHRpZih0eXBlb2YgcGxvdFR5cGUgPT0gXCJzdHJpbmdcIil7XHJcblx0XHRcdFx0aWYoIWRjLnBsb3QyZCB8fCAhZGMucGxvdDJkW3Bsb3RUeXBlXSl7XHJcblx0XHRcdFx0XHR0aHJvdyBFcnJvcihcIkNhbid0IGZpbmQgcGxvdDogXCIgKyBwbG90VHlwZSArIFwiIC0gZGlkbid0IHlvdSBmb3JnZXQgdG8gZG9qb1wiICsgXCIucmVxdWlyZSgpIGl0P1wiKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cGxvdCA9IG5ldyBkYy5wbG90MmRbcGxvdFR5cGVdKHRoaXMsIGt3QXJncyk7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdHBsb3QgPSBuZXcgcGxvdFR5cGUodGhpcywga3dBcmdzKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRwbG90Lm5hbWUgPSBuYW1lO1xyXG5cdFx0XHRwbG90LmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0aWYobmFtZSBpbiB0aGlzLnBsb3RzKXtcclxuXHRcdFx0XHR0aGlzLnN0YWNrW3RoaXMucGxvdHNbbmFtZV1dLmRlc3Ryb3koKTtcclxuXHRcdFx0XHR0aGlzLnN0YWNrW3RoaXMucGxvdHNbbmFtZV1dID0gcGxvdDtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0dGhpcy5wbG90c1tuYW1lXSA9IHRoaXMuc3RhY2subGVuZ3RoO1xyXG5cdFx0XHRcdHRoaXMuc3RhY2sucHVzaChwbG90KTtcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRnZXRQbG90OiBmdW5jdGlvbihuYW1lKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0R2V0IHRoZSBnaXZlbiBwbG90LCBieSBuYW1lLlxyXG5cdFx0XHQvLyBuYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0VGhlIG5hbWUgdGhlIHBsb3Qgd2FzIGRlZmluZWQgYnkuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL3Bsb3QyZC9CYXNlXHJcblx0XHRcdC8vXHRcdFRoZSBwbG90LlxyXG5cdFx0XHRyZXR1cm4gdGhpcy5zdGFja1t0aGlzLnBsb3RzW25hbWVdXTtcclxuXHRcdH0sXHJcblx0XHRyZW1vdmVQbG90OiBmdW5jdGlvbihuYW1lKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UmVtb3ZlIHRoZSBwbG90IGRlZmluZWQgdXNpbmcgbmFtZSBmcm9tIHRoZSBjaGFydCdzIHBsb3Qgc3RhY2suXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRUaGUgbmFtZSBvZiB0aGUgcGxvdCBhcyBkZWZpbmVkIHVzaW5nIGFkZFBsb3QuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZihuYW1lIGluIHRoaXMucGxvdHMpe1xyXG5cdFx0XHRcdC8vIGdldCB0aGUgaW5kZXggYW5kIHJlbW92ZSB0aGUgbmFtZVxyXG5cdFx0XHRcdHZhciBpbmRleCA9IHRoaXMucGxvdHNbbmFtZV07XHJcblx0XHRcdFx0ZGVsZXRlIHRoaXMucGxvdHNbbmFtZV07XHJcblx0XHRcdFx0Ly8gZGVzdHJveSB0aGUgcGxvdFxyXG5cdFx0XHRcdHRoaXMuc3RhY2tbaW5kZXhdLmRlc3Ryb3koKTtcclxuXHRcdFx0XHQvLyByZW1vdmUgdGhlIHBsb3QgZnJvbSB0aGUgc3RhY2tcclxuXHRcdFx0XHR0aGlzLnN0YWNrLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRcdFx0Ly8gdXBkYXRlIGluZGljZXMgdG8gcmVmbGVjdCB0aGUgc2hpZnRcclxuXHRcdFx0XHRmdW5jLmZvckluKHRoaXMucGxvdHMsIGZ1bmN0aW9uKGlkeCwgbmFtZSwgcGxvdHMpe1xyXG5cdFx0XHRcdFx0aWYoaWR4ID4gaW5kZXgpe1xyXG5cdFx0XHRcdFx0XHRwbG90c1tuYW1lXSA9IGlkeCAtIDE7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0Ly8gcmVtb3ZlIGFsbCByZWxhdGVkIHNlcmllc1xyXG5cdFx0XHRcdHZhciBucyA9IGFyci5maWx0ZXIodGhpcy5zZXJpZXMsIGZ1bmN0aW9uKHJ1bil7IHJldHVybiBydW4ucGxvdCAhPSBuYW1lOyB9KTtcclxuXHRcdFx0XHRpZihucy5sZW5ndGggPCB0aGlzLnNlcmllcy5sZW5ndGgpe1xyXG5cdFx0XHRcdFx0Ly8ga2lsbCBhbGwgcmVtb3ZlZCBzZXJpZXNcclxuXHRcdFx0XHRcdGFyci5mb3JFYWNoKHRoaXMuc2VyaWVzLCBmdW5jdGlvbihydW4pe1xyXG5cdFx0XHRcdFx0XHRpZihydW4ucGxvdCA9PSBuYW1lKXtcclxuXHRcdFx0XHRcdFx0XHRydW4uZGVzdHJveSgpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdC8vIHJlYnVpbGQgYWxsIG5lY2Vzc2FyeSBkYXRhIHN0cnVjdHVyZXNcclxuXHRcdFx0XHRcdHRoaXMucnVucyA9IHt9O1xyXG5cdFx0XHRcdFx0YXJyLmZvckVhY2gobnMsIGZ1bmN0aW9uKHJ1biwgaW5kZXgpe1xyXG5cdFx0XHRcdFx0XHR0aGlzLnJ1bnNbcnVuLnBsb3RdID0gaW5kZXg7XHJcblx0XHRcdFx0XHR9LCB0aGlzKTtcclxuXHRcdFx0XHRcdHRoaXMuc2VyaWVzID0gbnM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIG1hcmsgdGhlIGNoYXJ0IGFzIGRpcnR5XHJcblx0XHRcdFx0dGhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRnZXRQbG90T3JkZXI6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJldHVybnMgYW4gYXJyYXkgb2YgcGxvdCBuYW1lcyBpbiB0aGUgY3VycmVudCBvcmRlclxyXG5cdFx0XHQvL1x0XHQodGhlIHRvcC1tb3N0IHBsb3QgaXMgdGhlIGZpcnN0KS5cclxuXHRcdFx0Ly8gcmV0dXJuczogQXJyYXlcclxuXHRcdFx0cmV0dXJuIGZ1bmMubWFwKHRoaXMuc3RhY2ssIGdldE5hbWUpOyAvLyBBcnJheVxyXG5cdFx0fSxcclxuXHRcdHNldFBsb3RPcmRlcjogZnVuY3Rpb24obmV3T3JkZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRTZXRzIG5ldyBvcmRlciBvZiBwbG90cy4gbmV3T3JkZXIgY2Fubm90IGFkZCBvciByZW1vdmVcclxuXHRcdFx0Ly9cdFx0cGxvdHMuIFdyb25nIG5hbWVzLCBvciBkdXBzIGFyZSBpZ25vcmVkLlxyXG5cdFx0XHQvLyBuZXdPcmRlcjogQXJyYXlcclxuXHRcdFx0Ly9cdFx0QXJyYXkgb2YgcGxvdCBuYW1lcyBjb21wYXRpYmxlIHdpdGggZ2V0UGxvdE9yZGVyKCkuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHR2YXIgbmFtZXMgPSB7fSxcclxuXHRcdFx0XHRvcmRlciA9IGZ1bmMuZmlsdGVyKG5ld09yZGVyLCBmdW5jdGlvbihuYW1lKXtcclxuXHRcdFx0XHRcdGlmKCEobmFtZSBpbiB0aGlzLnBsb3RzKSB8fCAobmFtZSBpbiBuYW1lcykpe1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRuYW1lc1tuYW1lXSA9IDE7XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHR9LCB0aGlzKTtcclxuXHRcdFx0aWYob3JkZXIubGVuZ3RoIDwgdGhpcy5zdGFjay5sZW5ndGgpe1xyXG5cdFx0XHRcdGZ1bmMuZm9yRWFjaCh0aGlzLnN0YWNrLCBmdW5jdGlvbihwbG90KXtcclxuXHRcdFx0XHRcdHZhciBuYW1lID0gcGxvdC5uYW1lO1xyXG5cdFx0XHRcdFx0aWYoIShuYW1lIGluIG5hbWVzKSl7XHJcblx0XHRcdFx0XHRcdG9yZGVyLnB1c2gobmFtZSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIG5ld1N0YWNrID0gZnVuYy5tYXAob3JkZXIsIGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuc3RhY2tbdGhpcy5wbG90c1tuYW1lXV07XHJcblx0XHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdGZ1bmMuZm9yRWFjaChuZXdTdGFjaywgZnVuY3Rpb24ocGxvdCwgaSl7XHJcblx0XHRcdFx0dGhpcy5wbG90c1twbG90Lm5hbWVdID0gaTtcclxuXHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdHRoaXMuc3RhY2sgPSBuZXdTdGFjaztcclxuXHRcdFx0dGhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0bW92ZVBsb3RUb0Zyb250OiBmdW5jdGlvbihuYW1lKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0TW92ZXMgYSBnaXZlbiBwbG90IHRvIGZyb250LlxyXG5cdFx0XHQvLyBuYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0UGxvdCdzIG5hbWUgdG8gbW92ZS5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdGlmKG5hbWUgaW4gdGhpcy5wbG90cyl7XHJcblx0XHRcdFx0dmFyIGluZGV4ID0gdGhpcy5wbG90c1tuYW1lXTtcclxuXHRcdFx0XHRpZihpbmRleCl7XHJcblx0XHRcdFx0XHR2YXIgbmV3T3JkZXIgPSB0aGlzLmdldFBsb3RPcmRlcigpO1xyXG5cdFx0XHRcdFx0bmV3T3JkZXIuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0XHRcdG5ld09yZGVyLnVuc2hpZnQobmFtZSk7XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5zZXRQbG90T3JkZXIobmV3T3JkZXIpO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0bW92ZVBsb3RUb0JhY2s6IGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRNb3ZlcyBhIGdpdmVuIHBsb3QgdG8gYmFjay5cclxuXHRcdFx0Ly8gbmFtZTogU3RyaW5nXHJcblx0XHRcdC8vXHRcdFBsb3QncyBuYW1lIHRvIG1vdmUuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZihuYW1lIGluIHRoaXMucGxvdHMpe1xyXG5cdFx0XHRcdHZhciBpbmRleCA9IHRoaXMucGxvdHNbbmFtZV07XHJcblx0XHRcdFx0aWYoaW5kZXggPCB0aGlzLnN0YWNrLmxlbmd0aCAtIDEpe1xyXG5cdFx0XHRcdFx0dmFyIG5ld09yZGVyID0gdGhpcy5nZXRQbG90T3JkZXIoKTtcclxuXHRcdFx0XHRcdG5ld09yZGVyLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRcdFx0XHRuZXdPcmRlci5wdXNoKG5hbWUpO1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuc2V0UGxvdE9yZGVyKG5ld09yZGVyKTtcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0fSxcclxuXHRcdGFkZFNlcmllczogZnVuY3Rpb24obmFtZSwgZGF0YSwga3dBcmdzKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0QWRkIGEgZGF0YSBzZXJpZXMgdG8gdGhlIGNoYXJ0IGZvciByZW5kZXJpbmcuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRUaGUgbmFtZSBvZiB0aGUgZGF0YSBzZXJpZXMgdG8gYmUgcGxvdHRlZC5cclxuXHRcdFx0Ly8gZGF0YTogQXJyYXl8T2JqZWN0XHJcblx0XHRcdC8vXHRcdFRoZSBhcnJheSBvZiBkYXRhIHBvaW50cyAoZWl0aGVyIG51bWJlcnMgb3Igb2JqZWN0cykgdGhhdFxyXG5cdFx0XHQvL1x0XHRyZXByZXNlbnRzIHRoZSBkYXRhIHRvIGJlIGRyYXduLiBPciBpdCBjYW4gYmUgYW4gb2JqZWN0LiBJblxyXG5cdFx0XHQvL1x0XHR0aGUgbGF0dGVyIGNhc2UsIGl0IHNob3VsZCBoYXZlIGEgcHJvcGVydHkgXCJkYXRhXCIgKGFuIGFycmF5KSxcclxuXHRcdFx0Ly9cdFx0ZGVzdHJveSgpLCBhbmQgc2V0U2VyaWVzT2JqZWN0KCkuXHJcblx0XHRcdC8vIGt3QXJnczogX19TZXJpZXNDdG9yQXJncz9cclxuXHRcdFx0Ly9cdFx0QW4gb3B0aW9uYWwga2V5d29yZCBhcmd1bWVudHMgb2JqZWN0IHRoYXQgd2lsbCBiZSBtaXhlZCBpbnRvXHJcblx0XHRcdC8vXHRcdHRoZSByZXN1bHRhbnQgc2VyaWVzIG9iamVjdC5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdHZhciBydW4gPSBuZXcgU2VyaWVzKHRoaXMsIGRhdGEsIGt3QXJncyk7XHJcblx0XHRcdHJ1bi5uYW1lID0gbmFtZTtcclxuXHRcdFx0aWYobmFtZSBpbiB0aGlzLnJ1bnMpe1xyXG5cdFx0XHRcdHRoaXMuc2VyaWVzW3RoaXMucnVuc1tuYW1lXV0uZGVzdHJveSgpO1xyXG5cdFx0XHRcdHRoaXMuc2VyaWVzW3RoaXMucnVuc1tuYW1lXV0gPSBydW47XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdHRoaXMucnVuc1tuYW1lXSA9IHRoaXMuc2VyaWVzLmxlbmd0aDtcclxuXHRcdFx0XHR0aGlzLnNlcmllcy5wdXNoKHJ1bik7XHJcblx0XHRcdH1cclxuXHRcdFx0dGhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdC8vIGZpeCBtaW4vbWF4XHJcblx0XHRcdGlmKCEoXCJ5bWluXCIgaW4gcnVuKSAmJiBcIm1pblwiIGluIHJ1bil7IHJ1bi55bWluID0gcnVuLm1pbjsgfVxyXG5cdFx0XHRpZighKFwieW1heFwiIGluIHJ1bikgJiYgXCJtYXhcIiBpbiBydW4peyBydW4ueW1heCA9IHJ1bi5tYXg7IH1cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRnZXRTZXJpZXM6IGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRHZXQgdGhlIGdpdmVuIHNlcmllcywgYnkgbmFtZS5cclxuXHRcdFx0Ly8gbmFtZTogU3RyaW5nXHJcblx0XHRcdC8vXHRcdFRoZSBuYW1lIHRoZSBzZXJpZXMgd2FzIGRlZmluZWQgYnkuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL1Nlcmllc1xyXG5cdFx0XHQvL1x0XHRUaGUgc2VyaWVzLlxyXG5cdFx0XHRyZXR1cm4gdGhpcy5zZXJpZXNbdGhpcy5ydW5zW25hbWVdXTtcclxuXHRcdH0sXHJcblx0XHRyZW1vdmVTZXJpZXM6IGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZW1vdmUgdGhlIHNlcmllcyBkZWZpbmVkIGJ5IG5hbWUgZnJvbSB0aGUgY2hhcnQuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRUaGUgbmFtZSBvZiB0aGUgc2VyaWVzIGFzIGRlZmluZWQgYnkgYWRkU2VyaWVzLlxyXG5cdFx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRBIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCBjaGFydCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0aWYobmFtZSBpbiB0aGlzLnJ1bnMpe1xyXG5cdFx0XHRcdC8vIGdldCB0aGUgaW5kZXggYW5kIHJlbW92ZSB0aGUgbmFtZVxyXG5cdFx0XHRcdHZhciBpbmRleCA9IHRoaXMucnVuc1tuYW1lXTtcclxuXHRcdFx0XHRkZWxldGUgdGhpcy5ydW5zW25hbWVdO1xyXG5cdFx0XHRcdC8vIGRlc3Ryb3kgdGhlIHJ1blxyXG5cdFx0XHRcdHRoaXMuc2VyaWVzW2luZGV4XS5kZXN0cm95KCk7XHJcblx0XHRcdFx0Ly8gcmVtb3ZlIHRoZSBydW4gZnJvbSB0aGUgc3RhY2sgb2Ygc2VyaWVzXHJcblx0XHRcdFx0dGhpcy5zZXJpZXMuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0XHQvLyB1cGRhdGUgaW5kaWNlcyB0byByZWZsZWN0IHRoZSBzaGlmdFxyXG5cdFx0XHRcdGZ1bmMuZm9ySW4odGhpcy5ydW5zLCBmdW5jdGlvbihpZHgsIG5hbWUsIHJ1bnMpe1xyXG5cdFx0XHRcdFx0aWYoaWR4ID4gaW5kZXgpe1xyXG5cdFx0XHRcdFx0XHRydW5zW25hbWVdID0gaWR4IC0gMTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHR0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0fSxcclxuXHRcdHVwZGF0ZVNlcmllczogZnVuY3Rpb24obmFtZSwgZGF0YSwgb2Zmc2V0cyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFVwZGF0ZSB0aGUgZ2l2ZW4gc2VyaWVzIHdpdGggYSBuZXcgc2V0IG9mIGRhdGEgcG9pbnRzLlxyXG5cdFx0XHQvLyBuYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0VGhlIG5hbWUgb2YgdGhlIHNlcmllcyBhcyBkZWZpbmVkIGluIGFkZFNlcmllcy5cclxuXHRcdFx0Ly8gZGF0YTogQXJyYXl8T2JqZWN0XHJcblx0XHRcdC8vXHRcdFRoZSBhcnJheSBvZiBkYXRhIHBvaW50cyAoZWl0aGVyIG51bWJlcnMgb3Igb2JqZWN0cykgdGhhdFxyXG5cdFx0XHQvL1x0XHRyZXByZXNlbnRzIHRoZSBkYXRhIHRvIGJlIGRyYXduLiBPciBpdCBjYW4gYmUgYW4gb2JqZWN0LiBJblxyXG5cdFx0XHQvL1x0XHR0aGUgbGF0dGVyIGNhc2UsIGl0IHNob3VsZCBoYXZlIGEgcHJvcGVydHkgXCJkYXRhXCIgKGFuIGFycmF5KSxcclxuXHRcdFx0Ly9cdFx0ZGVzdHJveSgpLCBhbmQgc2V0U2VyaWVzT2JqZWN0KCkuXHJcblx0XHRcdC8vIG9mZnNldHM6IEJvb2xlYW4/XHJcblx0XHRcdC8vXHRcdElmIHRydWUgcmVjb21wdXRlcyB0aGUgb2Zmc2V0cyBvZiB0aGUgY2hhcnQgYmFzZWQgb24gdGhlIG5ld1xyXG5cdFx0XHQvL1x0XHRkYXRhLiBUaGlzIGlzIHVzZWZ1bCBpZiB0aGUgcmFuZ2Ugb2YgZGF0YSBpcyBkcmFzdGljYWxseSBjaGFuZ2luZ1xyXG5cdFx0XHQvL1x0XHRhbmQgb2Zmc2V0cyBuZWVkIHRvIGJlIHJlY29tcHV0ZWQuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZihuYW1lIGluIHRoaXMucnVucyl7XHJcblx0XHRcdFx0dmFyIHJ1biA9IHRoaXMuc2VyaWVzW3RoaXMucnVuc1tuYW1lXV07XHJcblx0XHRcdFx0cnVuLnVwZGF0ZShkYXRhKTtcclxuXHRcdFx0XHRpZihvZmZzZXRzKXtcclxuXHRcdFx0XHRcdHRoaXMuZGlydHkgPSB0cnVlO1xyXG5cdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0dGhpcy5faW52YWxpZGF0ZURlcGVuZGVudFBsb3RzKHJ1bi5wbG90LCBmYWxzZSk7XHJcblx0XHRcdFx0XHR0aGlzLl9pbnZhbGlkYXRlRGVwZW5kZW50UGxvdHMocnVuLnBsb3QsIHRydWUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0fSxcclxuXHRcdGdldFNlcmllc09yZGVyOiBmdW5jdGlvbihwbG90TmFtZSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJldHVybnMgYW4gYXJyYXkgb2Ygc2VyaWVzIG5hbWVzIGluIHRoZSBjdXJyZW50IG9yZGVyXHJcblx0XHRcdC8vXHRcdCh0aGUgdG9wLW1vc3Qgc2VyaWVzIGlzIHRoZSBmaXJzdCkgd2l0aGluIGEgcGxvdC5cclxuXHRcdFx0Ly8gcGxvdE5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRQbG90J3MgbmFtZS5cclxuXHRcdFx0Ly8gcmV0dXJuczogQXJyYXlcclxuXHRcdFx0cmV0dXJuIGZ1bmMubWFwKGZ1bmMuZmlsdGVyKHRoaXMuc2VyaWVzLCBmdW5jdGlvbihydW4pe1xyXG5cdFx0XHRcdFx0cmV0dXJuIHJ1bi5wbG90ID09IHBsb3ROYW1lO1xyXG5cdFx0XHRcdH0pLCBnZXROYW1lKTtcclxuXHRcdH0sXHJcblx0XHRzZXRTZXJpZXNPcmRlcjogZnVuY3Rpb24obmV3T3JkZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRTZXRzIG5ldyBvcmRlciBvZiBzZXJpZXMgd2l0aGluIGEgcGxvdC4gbmV3T3JkZXIgY2Fubm90IGFkZFxyXG5cdFx0XHQvL1x0XHRvciByZW1vdmUgc2VyaWVzLiBXcm9uZyBuYW1lcywgb3IgZHVwcyBhcmUgaWdub3JlZC5cclxuXHRcdFx0Ly8gbmV3T3JkZXI6IEFycmF5XHJcblx0XHRcdC8vXHRcdEFycmF5IG9mIHNlcmllcyBuYW1lcyBjb21wYXRpYmxlIHdpdGggZ2V0UGxvdE9yZGVyKCkuIEFsbFxyXG5cdFx0XHQvL1x0XHRzZXJpZXMgc2hvdWxkIGJlbG9uZyB0byB0aGUgc2FtZSBwbG90LlxyXG5cdFx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRBIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCBjaGFydCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0dmFyIHBsb3ROYW1lLCBuYW1lcyA9IHt9LFxyXG5cdFx0XHRcdG9yZGVyID0gZnVuYy5maWx0ZXIobmV3T3JkZXIsIGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHRcdFx0aWYoIShuYW1lIGluIHRoaXMucnVucykgfHwgKG5hbWUgaW4gbmFtZXMpKXtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0dmFyIHJ1biA9IHRoaXMuc2VyaWVzW3RoaXMucnVuc1tuYW1lXV07XHJcblx0XHRcdFx0XHRpZihwbG90TmFtZSl7XHJcblx0XHRcdFx0XHRcdGlmKHJ1bi5wbG90ICE9IHBsb3ROYW1lKXtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHRwbG90TmFtZSA9IHJ1bi5wbG90O1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0bmFtZXNbbmFtZV0gPSAxO1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdGZ1bmMuZm9yRWFjaCh0aGlzLnNlcmllcywgZnVuY3Rpb24ocnVuKXtcclxuXHRcdFx0XHR2YXIgbmFtZSA9IHJ1bi5uYW1lO1xyXG5cdFx0XHRcdGlmKCEobmFtZSBpbiBuYW1lcykgJiYgcnVuLnBsb3QgPT0gcGxvdE5hbWUpe1xyXG5cdFx0XHRcdFx0b3JkZXIucHVzaChuYW1lKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHR2YXIgbmV3U2VyaWVzID0gZnVuYy5tYXAob3JkZXIsIGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXMuc2VyaWVzW3RoaXMucnVuc1tuYW1lXV07XHJcblx0XHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdHRoaXMuc2VyaWVzID0gbmV3U2VyaWVzLmNvbmNhdChmdW5jLmZpbHRlcih0aGlzLnNlcmllcywgZnVuY3Rpb24ocnVuKXtcclxuXHRcdFx0XHRyZXR1cm4gcnVuLnBsb3QgIT0gcGxvdE5hbWU7XHJcblx0XHRcdH0pKTtcclxuXHRcdFx0ZnVuYy5mb3JFYWNoKHRoaXMuc2VyaWVzLCBmdW5jdGlvbihydW4sIGkpe1xyXG5cdFx0XHRcdHRoaXMucnVuc1tydW4ubmFtZV0gPSBpO1xyXG5cdFx0XHR9LCB0aGlzKTtcclxuXHRcdFx0dGhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0bW92ZVNlcmllc1RvRnJvbnQ6IGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRNb3ZlcyBhIGdpdmVuIHNlcmllcyB0byBmcm9udCBvZiBhIHBsb3QuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRTZXJpZXMnIG5hbWUgdG8gbW92ZS5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdGlmKG5hbWUgaW4gdGhpcy5ydW5zKXtcclxuXHRcdFx0XHR2YXIgaW5kZXggPSB0aGlzLnJ1bnNbbmFtZV0sXHJcblx0XHRcdFx0XHRuZXdPcmRlciA9IHRoaXMuZ2V0U2VyaWVzT3JkZXIodGhpcy5zZXJpZXNbaW5kZXhdLnBsb3QpO1xyXG5cdFx0XHRcdGlmKG5hbWUgIT0gbmV3T3JkZXJbMF0pe1xyXG5cdFx0XHRcdFx0bmV3T3JkZXIuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0XHRcdG5ld09yZGVyLnVuc2hpZnQobmFtZSk7XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5zZXRTZXJpZXNPcmRlcihuZXdPcmRlcik7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRtb3ZlU2VyaWVzVG9CYWNrOiBmdW5jdGlvbihuYW1lKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0TW92ZXMgYSBnaXZlbiBzZXJpZXMgdG8gYmFjayBvZiBhIHBsb3QuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRTZXJpZXMnIG5hbWUgdG8gbW92ZS5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdGlmKG5hbWUgaW4gdGhpcy5ydW5zKXtcclxuXHRcdFx0XHR2YXIgaW5kZXggPSB0aGlzLnJ1bnNbbmFtZV0sXHJcblx0XHRcdFx0XHRuZXdPcmRlciA9IHRoaXMuZ2V0U2VyaWVzT3JkZXIodGhpcy5zZXJpZXNbaW5kZXhdLnBsb3QpO1xyXG5cdFx0XHRcdGlmKG5hbWUgIT0gbmV3T3JkZXJbbmV3T3JkZXIubGVuZ3RoIC0gMV0pe1xyXG5cdFx0XHRcdFx0bmV3T3JkZXIuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdFx0XHRcdG5ld09yZGVyLnB1c2gobmFtZSk7XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5zZXRTZXJpZXNPcmRlcihuZXdPcmRlcik7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRyZXNpemU6IGZ1bmN0aW9uKHdpZHRoLCBoZWlnaHQpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXNpemUgdGhlIGNoYXJ0IHRvIHRoZSBkaW1lbnNpb25zIG9mIHdpZHRoIGFuZCBoZWlnaHQuXHJcblx0XHRcdC8vIGRlc2NyaXB0aW9uOlxyXG5cdFx0XHQvL1x0XHRSZXNpemUgdGhlIGNoYXJ0IGFuZCBpdHMgc3VyZmFjZSB0byB0aGUgd2lkdGggYW5kIGhlaWdodCBkaW1lbnNpb25zLlxyXG5cdFx0XHQvL1x0XHRJZiBhIHNpbmdsZSBhcmd1bWVudCBvZiB0aGUgZm9ybSB7dzogdmFsdWUxLCBoOiB2YWx1ZTJ9IGlzIHByb3ZpZGVkIHRha2UgdGhhdCBhcmd1bWVudCBhcyB0aGUgZGltZW5zaW9ucyB0byB1c2UuXHJcblx0XHRcdC8vXHRcdEZpbmFsbHkgaWYgbm8gYXJndW1lbnQgaXMgcHJvdmlkZWQsIHJlc2l6ZSB0aGUgc3VyZmFjZSB0byB0aGUgbWFyZ2luQm94IG9mIHRoZSBjaGFydC5cclxuXHRcdFx0Ly8gd2lkdGg6IE51bWJlcnxPYmplY3Q/XHJcblx0XHRcdC8vXHRcdFRoZSBuZXcgd2lkdGggb2YgdGhlIGNoYXJ0IG9yIHRoZSBib3ggZGVmaW5pdGlvbi5cclxuXHRcdFx0Ly8gaGVpZ2h0OiBOdW1iZXI/XHJcblx0XHRcdC8vXHRcdFRoZSBuZXcgaGVpZ2h0IG9mIHRoZSBjaGFydC5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdHN3aXRjaChhcmd1bWVudHMubGVuZ3RoKXtcclxuXHRcdFx0XHQvLyBjYXNlIDAsIGRvIG5vdCByZXNpemUgdGhlIGRpdiwganVzdCB0aGUgc3VyZmFjZVxyXG5cdFx0XHRcdGNhc2UgMTpcclxuXHRcdFx0XHRcdC8vIGFyZ3VtZW50LCBvdmVycmlkZSBub2RlIGJveFxyXG5cdFx0XHRcdFx0ZG9tR2VvbS5zZXRNYXJnaW5Cb3godGhpcy5ub2RlLCB3aWR0aCk7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlIDI6XHJcblx0XHRcdFx0XHQvLyBhcmd1bWVudCwgb3ZlcnJpZGUgbm9kZSBib3hcclxuXHRcdFx0XHRcdGRvbUdlb20uc2V0TWFyZ2luQm94KHRoaXMubm9kZSwge3c6IHdpZHRoLCBoOiBoZWlnaHR9KTtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdC8vIGluIGFsbCBjYXNlcyB0YWtlIGJhY2sgdGhlIGNvbXB1dGVkIGJveFxyXG5cdFx0XHR2YXIgYm94ID0gZG9tR2VvbS5nZXRNYXJnaW5Cb3godGhpcy5ub2RlKTtcclxuXHRcdFx0dmFyIGQgPSB0aGlzLnN1cmZhY2UuZ2V0RGltZW5zaW9ucygpO1xyXG5cdFx0XHRpZihkLndpZHRoICE9IGJveC53IHx8IGQuaGVpZ2h0ICE9IGJveC5oKXtcclxuXHRcdFx0XHQvLyBhbmQgc2V0IGl0IG9uIHRoZSBzdXJmYWNlXHJcblx0XHRcdFx0dGhpcy5zdXJmYWNlLnNldERpbWVuc2lvbnMoYm94LncsIGJveC5oKTtcclxuXHRcdFx0XHR0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5yZW5kZXIoKTtcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGdldEdlb21ldHJ5OiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXR1cm5zIGEgbWFwIG9mIGluZm9ybWF0aW9uIGFib3V0IGFsbCBheGVzIGluIGEgY2hhcnQgYW5kIHdoYXQgdGhleSByZXByZXNlbnRcclxuXHRcdFx0Ly9cdFx0aW4gdGVybXMgb2Ygc2NhbGluZyAoc2VlIGRvam94LmNoYXJ0aW5nLmF4aXMyZC5EZWZhdWx0LmdldFNjYWxlcikuXHJcblx0XHRcdC8vIHJldHVybnM6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRBbiBtYXAgb2YgZ2VvbWV0cnkgb2JqZWN0cywgYSBvbmUtdG8tb25lIG1hcHBpbmcgb2YgYXhlcy5cclxuXHRcdFx0dmFyIHJldCA9IHt9O1xyXG5cdFx0XHRmdW5jLmZvckluKHRoaXMuYXhlcywgZnVuY3Rpb24oYXhpcyl7XHJcblx0XHRcdFx0aWYoYXhpcy5pbml0aWFsaXplZCgpKXtcclxuXHRcdFx0XHRcdHJldFtheGlzLm5hbWVdID0ge1xyXG5cdFx0XHRcdFx0XHRuYW1lOlx0XHRheGlzLm5hbWUsXHJcblx0XHRcdFx0XHRcdHZlcnRpY2FsOlx0YXhpcy52ZXJ0aWNhbCxcclxuXHRcdFx0XHRcdFx0c2NhbGVyOlx0XHRheGlzLnNjYWxlcixcclxuXHRcdFx0XHRcdFx0dGlja3M6XHRcdGF4aXMudGlja3NcclxuXHRcdFx0XHRcdH07XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0cmV0dXJuIHJldDtcdC8vXHRPYmplY3RcclxuXHRcdH0sXHJcblx0XHRzZXRBeGlzV2luZG93OiBmdW5jdGlvbihuYW1lLCBzY2FsZSwgb2Zmc2V0LCB6b29tKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Wm9vbXMgYW4gYXhpcyBhbmQgYWxsIGRlcGVuZGVudCBwbG90cy4gQ2FuIGJlIHVzZWQgdG8gem9vbSBpbiAxRC5cclxuXHRcdFx0Ly8gbmFtZTogU3RyaW5nXHJcblx0XHRcdC8vXHRcdFRoZSBuYW1lIG9mIHRoZSBheGlzIGFzIGRlZmluZWQgYnkgYWRkQXhpcy5cclxuXHRcdFx0Ly8gc2NhbGU6IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgc2NhbGUgb24gdGhlIHRhcmdldCBheGlzLlxyXG5cdFx0XHQvLyBvZmZzZXQ6IE51bWJlclxyXG5cdFx0XHQvL1x0XHRBbnkgb2ZmZXN0LCBhcyBtZWFzdXJlZCBieSBheGlzIHRpY2tcclxuXHRcdFx0Ly8gem9vbTogQm9vbGVhbnxPYmplY3Q/XHJcblx0XHRcdC8vXHRcdFRoZSBjaGFydCB6b29taW5nIGFuaW1hdGlvbiB0cmlnZ2VyLiAgVGhpcyBpcyBudWxsIGJ5IGRlZmF1bHQsXHJcblx0XHRcdC8vXHRcdGUuZy4ge2R1cmF0aW9uOiAxMjAwfSwgb3IganVzdCBzZXQgdHJ1ZS5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdHZhciBheGlzID0gdGhpcy5heGVzW25hbWVdO1xyXG5cdFx0XHRpZihheGlzKXtcclxuXHRcdFx0XHRheGlzLnNldFdpbmRvdyhzY2FsZSwgb2Zmc2V0KTtcclxuXHRcdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnN0YWNrLGZ1bmN0aW9uKHBsb3Qpe1xyXG5cdFx0XHRcdFx0aWYocGxvdC5oQXhpcyA9PSBuYW1lIHx8IHBsb3QudkF4aXMgPT0gbmFtZSl7XHJcblx0XHRcdFx0XHRcdHBsb3Quem9vbSA9IHpvb207XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRzZXRXaW5kb3c6IGZ1bmN0aW9uKHN4LCBzeSwgZHgsIGR5LCB6b29tKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Wm9vbXMgaW4gb3Igb3V0IGFueSBwbG90cyBpbiB0d28gZGltZW5zaW9ucy5cclxuXHRcdFx0Ly8gc3g6IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgc2NhbGUgZm9yIHRoZSB4IGF4aXMuXHJcblx0XHRcdC8vIHN5OiBOdW1iZXJcclxuXHRcdFx0Ly9cdFx0VGhlIHNjYWxlIGZvciB0aGUgeSBheGlzLlxyXG5cdFx0XHQvLyBkeDogTnVtYmVyXHJcblx0XHRcdC8vXHRcdFRoZSBwaXhlbCBvZmZzZXQgb24gdGhlIHggYXhpcy5cclxuXHRcdFx0Ly8gZHk6IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgcGl4ZWwgb2Zmc2V0IG9uIHRoZSB5IGF4aXMuXHJcblx0XHRcdC8vIHpvb206IEJvb2xlYW58T2JqZWN0P1xyXG5cdFx0XHQvL1x0XHRUaGUgY2hhcnQgem9vbWluZyBhbmltYXRpb24gdHJpZ2dlci4gIFRoaXMgaXMgbnVsbCBieSBkZWZhdWx0LFxyXG5cdFx0XHQvL1x0XHRlLmcuIHtkdXJhdGlvbjogMTIwMH0sIG9yIGp1c3Qgc2V0IHRydWUuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZighKFwicGxvdEFyZWFcIiBpbiB0aGlzKSl7XHJcblx0XHRcdFx0dGhpcy5jYWxjdWxhdGVHZW9tZXRyeSgpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGZ1bmMuZm9ySW4odGhpcy5heGVzLCBmdW5jdGlvbihheGlzKXtcclxuXHRcdFx0XHR2YXIgc2NhbGUsIG9mZnNldCwgYm91bmRzID0gYXhpcy5nZXRTY2FsZXIoKS5ib3VuZHMsXHJcblx0XHRcdFx0XHRzID0gYm91bmRzLnNwYW4gLyAoYm91bmRzLnVwcGVyIC0gYm91bmRzLmxvd2VyKTtcclxuXHRcdFx0XHRpZihheGlzLnZlcnRpY2FsKXtcclxuXHRcdFx0XHRcdHNjYWxlICA9IHN5O1xyXG5cdFx0XHRcdFx0b2Zmc2V0ID0gZHkgLyBzIC8gc2NhbGU7XHJcblx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRzY2FsZSAgPSBzeDtcclxuXHRcdFx0XHRcdG9mZnNldCA9IGR4IC8gcyAvIHNjYWxlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRheGlzLnNldFdpbmRvdyhzY2FsZSwgb2Zmc2V0KTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdGFyci5mb3JFYWNoKHRoaXMuc3RhY2ssIGZ1bmN0aW9uKHBsb3QpeyBwbG90Lnpvb20gPSB6b29tOyB9KTtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHR6b29tSW46XHRmdW5jdGlvbihuYW1lLCByYW5nZSwgZGVsYXllZCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFpvb20gdGhlIGNoYXJ0IHRvIGEgc3BlY2lmaWMgcmFuZ2Ugb24gb25lIGF4aXMuICBUaGlzIGNhbGxzIHJlbmRlcigpXHJcblx0XHRcdC8vXHRcdGRpcmVjdGx5IGFzIGEgY29udmVuaWVuY2UgbWV0aG9kLlxyXG5cdFx0XHQvLyBuYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0VGhlIG5hbWUgb2YgdGhlIGF4aXMgYXMgZGVmaW5lZCBieSBhZGRBeGlzLlxyXG5cdFx0XHQvLyByYW5nZTogQXJyYXlcclxuXHRcdFx0Ly9cdFx0VGhlIGVuZCBwb2ludHMgb2YgdGhlIHpvb20gcmFuZ2UsIG1lYXN1cmVkIGluIGF4aXMgdGlja3MuXHJcblx0XHRcdHZhciBheGlzID0gdGhpcy5heGVzW25hbWVdO1xyXG5cdFx0XHRpZihheGlzKXtcclxuXHRcdFx0XHR2YXIgc2NhbGUsIG9mZnNldCwgYm91bmRzID0gYXhpcy5nZXRTY2FsZXIoKS5ib3VuZHM7XHJcblx0XHRcdFx0dmFyIGxvd2VyID0gTWF0aC5taW4ocmFuZ2VbMF0scmFuZ2VbMV0pO1xyXG5cdFx0XHRcdHZhciB1cHBlciA9IE1hdGgubWF4KHJhbmdlWzBdLHJhbmdlWzFdKTtcclxuXHRcdFx0XHRsb3dlciA9IHJhbmdlWzBdIDwgYm91bmRzLmxvd2VyID8gYm91bmRzLmxvd2VyIDogbG93ZXI7XHJcblx0XHRcdFx0dXBwZXIgPSByYW5nZVsxXSA+IGJvdW5kcy51cHBlciA/IGJvdW5kcy51cHBlciA6IHVwcGVyO1xyXG5cdFx0XHRcdHNjYWxlID0gKGJvdW5kcy51cHBlciAtIGJvdW5kcy5sb3dlcikgLyAodXBwZXIgLSBsb3dlcik7XHJcblx0XHRcdFx0b2Zmc2V0ID0gbG93ZXIgLSBib3VuZHMubG93ZXI7XHJcblx0XHRcdFx0dGhpcy5zZXRBeGlzV2luZG93KG5hbWUsIHNjYWxlLCBvZmZzZXQpO1xyXG5cdFx0XHRcdGlmKGRlbGF5ZWQpe1xyXG5cdFx0XHRcdFx0dGhpcy5kZWxheWVkUmVuZGVyKCk7XHJcblx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHR0aGlzLnJlbmRlcigpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGNhbGN1bGF0ZUdlb21ldHJ5OiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRDYWxjdWxhdGUgdGhlIGdlb21ldHJ5IG9mIHRoZSBjaGFydCBiYXNlZCBvbiB0aGUgZGVmaW5lZCBheGVzIG9mXHJcblx0XHRcdC8vXHRcdGEgY2hhcnQuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZih0aGlzLmRpcnR5KXtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5mdWxsR2VvbWV0cnkoKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gY2FsY3VsYXRlIGdlb21ldHJ5XHJcblx0XHRcdHZhciBkaXJ0eSA9IGFyci5maWx0ZXIodGhpcy5zdGFjaywgZnVuY3Rpb24ocGxvdCl7XHJcblx0XHRcdFx0XHRyZXR1cm4gcGxvdC5kaXJ0eSB8fFxyXG5cdFx0XHRcdFx0XHQocGxvdC5oQXhpcyAmJiB0aGlzLmF4ZXNbcGxvdC5oQXhpc10uZGlydHkpIHx8XHJcblx0XHRcdFx0XHRcdChwbG90LnZBeGlzICYmIHRoaXMuYXhlc1twbG90LnZBeGlzXS5kaXJ0eSk7XHJcblx0XHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdGNhbGN1bGF0ZUF4ZXMoZGlydHksIHRoaXMucGxvdEFyZWEpO1xyXG5cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRmdWxsR2VvbWV0cnk6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENhbGN1bGF0ZSB0aGUgZnVsbCBnZW9tZXRyeSBvZiB0aGUgY2hhcnQuICBUaGlzIGluY2x1ZGVzIHBhc3NpbmdcclxuXHRcdFx0Ly9cdFx0b3ZlciBhbGwgbWFqb3IgZWxlbWVudHMgb2YgYSBjaGFydCAocGxvdHMsIGF4ZXMsIHNlcmllcywgY29udGFpbmVyKVxyXG5cdFx0XHQvL1x0XHRpbiBvcmRlciB0byBlbnN1cmUgcHJvcGVyIHJlbmRlcmluZy5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdHRoaXMuX21ha2VEaXJ0eSgpO1xyXG5cclxuXHRcdFx0Ly8gY2xlYXIgb2xkIHZhbHVlc1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnN0YWNrLCBjbGVhcik7XHJcblxyXG5cdFx0XHQvLyByZWJ1aWxkIG5ldyBjb25uZWN0aW9ucywgYW5kIGFkZCBkZWZhdWx0c1xyXG5cclxuXHRcdFx0Ly8gc2V0IHVwIGEgdGhlbWVcclxuXHRcdFx0aWYoIXRoaXMudGhlbWUpe1xyXG5cdFx0XHRcdHRoaXMuc2V0VGhlbWUobmV3IFNpbXBsZVRoZW1lKCkpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBhc3NpZ24gc2VyaWVzXHJcblx0XHRcdGFyci5mb3JFYWNoKHRoaXMuc2VyaWVzLCBmdW5jdGlvbihydW4pe1xyXG5cdFx0XHRcdGlmKCEocnVuLnBsb3QgaW4gdGhpcy5wbG90cykpe1xyXG5cdFx0XHRcdFx0Ly8gVE9ETyByZW1vdmUgYXV0by1hc3NpZ25tZW50XHJcblx0XHRcdFx0XHRpZighZGMucGxvdDJkIHx8ICFkYy5wbG90MmQuRGVmYXVsdCl7XHJcblx0XHRcdFx0XHRcdHRocm93IEVycm9yKFwiQ2FuJ3QgZmluZCBwbG90OiBEZWZhdWx0IC0gZGlkbid0IHlvdSBmb3JnZXQgdG8gZG9qb1wiICsgXCIucmVxdWlyZSgpIGl0P1wiKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHZhciBwbG90ID0gbmV3IGRjLnBsb3QyZC5EZWZhdWx0KHRoaXMsIHt9KTtcclxuXHRcdFx0XHRcdHBsb3QubmFtZSA9IHJ1bi5wbG90O1xyXG5cdFx0XHRcdFx0dGhpcy5wbG90c1tydW4ucGxvdF0gPSB0aGlzLnN0YWNrLmxlbmd0aDtcclxuXHRcdFx0XHRcdHRoaXMuc3RhY2sucHVzaChwbG90KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0dGhpcy5zdGFja1t0aGlzLnBsb3RzW3J1bi5wbG90XV0uYWRkU2VyaWVzKHJ1bik7XHJcblx0XHRcdH0sIHRoaXMpO1xyXG5cdFx0XHQvLyBhc3NpZ24gYXhlc1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnN0YWNrLCBmdW5jdGlvbihwbG90KXtcclxuXHRcdFx0XHRpZihwbG90LmFzc2lnbkF4ZXMpe1xyXG5cdFx0XHRcdFx0cGxvdC5hc3NpZ25BeGVzKHRoaXMuYXhlcyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB0aGlzKTtcclxuXHJcblx0XHRcdC8vIGNhbGN1bGF0ZSBnZW9tZXRyeVxyXG5cclxuXHRcdFx0Ly8gMXN0IHBhc3NcclxuXHRcdFx0dmFyIGRpbSA9IHRoaXMuZGltID0gdGhpcy5zdXJmYWNlLmdldERpbWVuc2lvbnMoKTtcclxuXHRcdFx0ZGltLndpZHRoICA9IGcubm9ybWFsaXplZExlbmd0aChkaW0ud2lkdGgpO1xyXG5cdFx0XHRkaW0uaGVpZ2h0ID0gZy5ub3JtYWxpemVkTGVuZ3RoKGRpbS5oZWlnaHQpO1xyXG5cdFx0XHRmdW5jLmZvckluKHRoaXMuYXhlcywgY2xlYXIpO1xyXG5cdFx0XHRjYWxjdWxhdGVBeGVzKHRoaXMuc3RhY2ssIGRpbSk7XHJcblxyXG5cdFx0XHQvLyBhc3N1bXB0aW9uOiB3ZSBkb24ndCBoYXZlIHN0YWNrZWQgYXhlcyB5ZXRcclxuXHRcdFx0dmFyIG9mZnNldHMgPSB0aGlzLm9mZnNldHMgPSB7bDogMCwgcjogMCwgdDogMCwgYjogMH07XHJcblx0XHRcdC8vIGNoYXJ0IG1pcnJvcmluZyBzdGFydHNcclxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xyXG5cdFx0XHRmdW5jLmZvckluKHRoaXMuYXhlcywgZnVuY3Rpb24oYXhpcyl7XHJcblx0XHRcdFx0aWYoaGFzKFwiZG9qby1iaWRpXCIpKXtcclxuXHRcdFx0XHRcdHNlbGYuX3Jlc2V0TGVmdEJvdHRvbShheGlzKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0ZnVuYy5mb3JJbihheGlzLmdldE9mZnNldHMoKSwgZnVuY3Rpb24obywgaSl7IG9mZnNldHNbaV0gPSBNYXRoLm1heChvLCBvZmZzZXRzW2ldKTsgfSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHQvLyBjaGFydCBtaXJyb3JpbmcgZW5kc1xyXG5cdFx0XHQvLyBhZGQgdGl0bGUgYXJlYVxyXG5cdFx0XHRpZih0aGlzLnRpdGxlKXtcclxuXHRcdFx0XHR0aGlzLnRpdGxlR2FwID0gKHRoaXMudGl0bGVHYXA9PTApID8gMCA6IHRoaXMudGl0bGVHYXAgfHwgdGhpcy50aGVtZS5jaGFydC50aXRsZUdhcCB8fCAyMDtcclxuXHRcdFx0XHR0aGlzLnRpdGxlUG9zID0gdGhpcy50aXRsZVBvcyB8fCB0aGlzLnRoZW1lLmNoYXJ0LnRpdGxlUG9zIHx8IFwidG9wXCI7XHJcblx0XHRcdFx0dGhpcy50aXRsZUZvbnQgPSB0aGlzLnRpdGxlRm9udCB8fCB0aGlzLnRoZW1lLmNoYXJ0LnRpdGxlRm9udDtcclxuXHRcdFx0XHR0aGlzLnRpdGxlRm9udENvbG9yID0gdGhpcy50aXRsZUZvbnRDb2xvciB8fCB0aGlzLnRoZW1lLmNoYXJ0LnRpdGxlRm9udENvbG9yIHx8IFwiYmxhY2tcIjtcclxuXHRcdFx0XHR0aGlzLnRpdGxlQWxpZ24gPSB0aGlzLnRpdGxlQWxpZ24gfHwgdGhpcy50aGVtZSAmJiB0aGlzLnRoZW1lLmNoYXJ0ICYmIHRoaXMudGhlbWUuY2hhcnQudGl0bGVBbGlnbiB8fCBcIm1pZGRsZVwiO1xyXG5cdFx0XHRcdHZhciB0c2l6ZSA9IGcubm9ybWFsaXplZExlbmd0aChnLnNwbGl0Rm9udFN0cmluZyh0aGlzLnRpdGxlRm9udCkuc2l6ZSk7XHJcblx0XHRcdFx0b2Zmc2V0c1t0aGlzLnRpdGxlUG9zID09IFwidG9wXCIgPyBcInRcIiA6IFwiYlwiXSArPSAodHNpemUgKyB0aGlzLnRpdGxlR2FwKTtcclxuXHRcdFx0fVxyXG5cdFx0XHQvLyBhZGQgbWFyZ2luc1xyXG5cdFx0XHRmdW5jLmZvckluKHRoaXMubWFyZ2lucywgZnVuY3Rpb24obywgaSl7IG9mZnNldHNbaV0gKz0gbzsgfSk7XHJcblxyXG5cdFx0XHQvLyAybmQgcGFzcyB3aXRoIHJlYWxpc3RpYyBkaW1lbnNpb25zXHJcblx0XHRcdHRoaXMucGxvdEFyZWEgPSB7XHJcblx0XHRcdFx0d2lkdGg6IGRpbS53aWR0aCAtIG9mZnNldHMubCAtIG9mZnNldHMucixcclxuXHRcdFx0XHRoZWlnaHQ6IGRpbS5oZWlnaHQgLSBvZmZzZXRzLnQgLSBvZmZzZXRzLmJcclxuXHRcdFx0fTtcclxuXHRcdFx0ZnVuYy5mb3JJbih0aGlzLmF4ZXMsIGNsZWFyKTtcclxuXHRcdFx0Y2FsY3VsYXRlQXhlcyh0aGlzLnN0YWNrLCB0aGlzLnBsb3RBcmVhKTtcclxuXHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0cmVuZGVyOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZW5kZXIgdGhlIGNoYXJ0IGFjY29yZGluZyB0byB0aGUgY3VycmVudCBpbmZvcm1hdGlvbiBkZWZpbmVkLiAgVGhpcyBzaG91bGRcclxuXHRcdFx0Ly9cdFx0YmUgdGhlIGxhc3QgY2FsbCBtYWRlIHdoZW4gZGVmaW5pbmcvY3JlYXRpbmcgYSBjaGFydCwgb3IgaWYgZGF0YSB3aXRoaW4gdGhlXHJcblx0XHRcdC8vXHRcdGNoYXJ0IGhhcyBiZWVuIGNoYW5nZWQuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cclxuXHRcdFx0Ly8gZG8gd2UgaGF2ZSBhIGRlbGF5ZWQgcmVuZGVyZXIgcGVuZGluZz8gSWYgeWVzIHdlIG5lZWQgdG8gY2xlYXIgaXRcclxuXHRcdFx0aWYodGhpcy5fZGVsYXllZFJlbmRlckhhbmRsZSl7XHJcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMuX2RlbGF5ZWRSZW5kZXJIYW5kbGUpO1xyXG5cdFx0XHRcdHRoaXMuX2RlbGF5ZWRSZW5kZXJIYW5kbGUgPSBudWxsO1xyXG5cdFx0XHR9XHJcblx0XHRcdFxyXG5cdFx0XHRpZih0aGlzLnRoZW1lKXtcclxuXHRcdFx0XHR0aGlzLnRoZW1lLmNsZWFyKCk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmKHRoaXMuZGlydHkpe1xyXG5cdFx0XHRcdHJldHVybiB0aGlzLmZ1bGxSZW5kZXIoKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dGhpcy5jYWxjdWxhdGVHZW9tZXRyeSgpO1xyXG5cclxuXHRcdFx0Ly8gZ28gb3ZlciB0aGUgc3RhY2sgYmFja3dhcmRzXHJcblx0XHRcdGZ1bmMuZm9yRWFjaFJldih0aGlzLnN0YWNrLCBmdW5jdGlvbihwbG90KXsgcGxvdC5yZW5kZXIodGhpcy5kaW0sIHRoaXMub2Zmc2V0cyk7IH0sIHRoaXMpO1xyXG5cclxuXHRcdFx0Ly8gZ28gb3ZlciBheGVzXHJcblx0XHRcdGZ1bmMuZm9ySW4odGhpcy5heGVzLCBmdW5jdGlvbihheGlzKXsgYXhpcy5yZW5kZXIodGhpcy5kaW0sIHRoaXMub2Zmc2V0cyk7IH0sIHRoaXMpO1xyXG5cclxuXHRcdFx0dGhpcy5fbWFrZUNsZWFuKCk7XHJcblxyXG5cdFx0XHRyZXR1cm4gdGhpcztcdC8vXHRkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0fSxcclxuXHRcdGZ1bGxSZW5kZXI6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEZvcmNlIGEgZnVsbCByZW5kZXJpbmcgb2YgdGhlIGNoYXJ0LCBpbmNsdWRpbmcgZnVsbCByZXNldHMgb24gdGhlIGNoYXJ0IGl0c2VsZi5cclxuXHRcdFx0Ly9cdFx0WW91IHNob3VsZCBub3QgY2FsbCB0aGlzIG1ldGhvZCBkaXJlY3RseSB1bmxlc3MgYWJzb2x1dGVseSBuZWNlc3NhcnkuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBjdXJyZW50IGNoYXJ0IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cclxuXHRcdFx0Ly8gY2FsY3VsYXRlIGdlb21ldHJ5XHJcblx0XHRcdHRoaXMuZnVsbEdlb21ldHJ5KCk7XHJcblx0XHRcdHZhciBvZmZzZXRzID0gdGhpcy5vZmZzZXRzLCBkaW0gPSB0aGlzLmRpbTtcclxuXHRcdFx0dmFyIHcgPSBNYXRoLm1heCgwLCBkaW0ud2lkdGggIC0gb2Zmc2V0cy5sIC0gb2Zmc2V0cy5yKSxcclxuXHRcdFx0XHRoID0gTWF0aC5tYXgoMCwgZGltLmhlaWdodCAtIG9mZnNldHMudCAtIG9mZnNldHMuYik7XHJcblxyXG5cdFx0XHQvLyBnZXQgcmVxdWlyZWQgY29sb3JzXHJcblx0XHRcdC8vdmFyIHJlcXVpcmVkQ29sb3JzID0gZnVuYy5mb2xkbCh0aGlzLnN0YWNrLCBcInogKyBwbG90LmdldFJlcXVpcmVkQ29sb3JzKClcIiwgMCk7XHJcblx0XHRcdC8vdGhpcy50aGVtZS5kZWZpbmVDb2xvcnMoe251bTogcmVxdWlyZWRDb2xvcnMsIGNhY2hlOiBmYWxzZX0pO1xyXG5cclxuXHRcdFx0Ly8gY2xlYXIgb2xkIHNoYXBlc1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnNlcmllcywgcHVyZ2UpO1xyXG5cdFx0XHRmdW5jLmZvckluKHRoaXMuYXhlcywgcHVyZ2UpO1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnN0YWNrLCAgcHVyZ2UpO1xyXG5cdFx0XHR2YXIgY2hpbGRyZW4gPSB0aGlzLnN1cmZhY2UuY2hpbGRyZW47XHJcblx0XHRcdC8vIHN0YXJ0aW5nIHdpdGggMS45IHRoZSByZWdpc3RyeSBpcyBvcHRpb25hbCBhbmQgdGh1cyBkaXNwb3NlIGlzXHJcblx0XHRcdGlmKHNoYXBlLmRpc3Bvc2Upe1xyXG5cdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7KytpKXtcclxuXHRcdFx0XHRcdHNoYXBlLmRpc3Bvc2UoY2hpbGRyZW5baV0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZih0aGlzLmNoYXJ0VGl0bGUgJiYgdGhpcy5jaGFydFRpdGxlLnRhZ05hbWUpe1xyXG5cdFx0XHRcdC8vIGRlc3Ryb3kgdGl0bGUgaWYgaXQgaXMgYSBET00gbm9kZVxyXG5cdFx0XHQgICAgZG9tQ29uc3RydWN0LmRlc3Ryb3kodGhpcy5jaGFydFRpdGxlKTtcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLnN1cmZhY2UuY2xlYXIoKTtcclxuXHRcdFx0dGhpcy5jaGFydFRpdGxlID0gbnVsbDtcclxuXHJcblx0XHRcdHRoaXMuX3JlbmRlckNoYXJ0QmFja2dyb3VuZChkaW0sIG9mZnNldHMpO1xyXG5cdFx0XHRpZih0aGlzLl9uYXRpdmVDbGlwKXtcclxuXHRcdFx0XHR0aGlzLl9yZW5kZXJQbG90QmFja2dyb3VuZChkaW0sIG9mZnNldHMsIHcsIGgpO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHQvLyBWTUxcclxuXHRcdFx0XHR0aGlzLl9yZW5kZXJQbG90QmFja2dyb3VuZChkaW0sIG9mZnNldHMsIHcsIGgpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBnbyBvdmVyIHRoZSBzdGFjayBiYWNrd2FyZHNcclxuXHRcdFx0ZnVuYy5mb2xkcih0aGlzLnN0YWNrLCBmdW5jdGlvbih6LCBwbG90KXsgcmV0dXJuIHBsb3QucmVuZGVyKGRpbSwgb2Zmc2V0cyksIDA7IH0sIDApO1xyXG5cclxuXHRcdFx0aWYoIXRoaXMuX25hdGl2ZUNsaXApe1xyXG5cdFx0XHRcdC8vIFZNTCwgbWF0dGluZy1jbGlwcGluZ1xyXG5cdFx0XHRcdHRoaXMuX3JlbmRlckNoYXJ0QmFja2dyb3VuZChkaW0sIG9mZnNldHMpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvL2NyZWF0ZSB0aXRsZTogV2hldGhlciB0byBtYWtlIGNoYXJ0IHRpdGxlIGFzIGEgd2lkZ2V0IHdoaWNoIGV4dGVuZHMgZG9qb3guY2hhcnRpbmcuRWxlbWVudD9cclxuXHRcdFx0aWYodGhpcy50aXRsZSl7XHJcblx0XHRcdFx0dGhpcy5fcmVuZGVyVGl0bGUoZGltLCBvZmZzZXRzKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gZ28gb3ZlciBheGVzXHJcblx0XHRcdGZ1bmMuZm9ySW4odGhpcy5heGVzLCBmdW5jdGlvbihheGlzKXsgYXhpcy5yZW5kZXIoZGltLCBvZmZzZXRzKTsgfSk7XHJcblxyXG5cdFx0XHR0aGlzLl9tYWtlQ2xlYW4oKTtcclxuXHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0X3JlbmRlclRpdGxlOiBmdW5jdGlvbihkaW0sIG9mZnNldHMpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRJbnRlcm5hbCBmdW5jdGlvbiB0byByZW5kZXIgdGhlIGNoYXJ0IHRpdGxlLlxyXG5cdFx0XHQvLyBkaW06XHJcblx0XHRcdC8vXHRcdFRoZSBkaW1lbnNpb24gb2JqZWN0IG9mIHRoZSBjaGFydFxyXG5cdFx0XHQvLyB0YWdzOlxyXG5cdFx0XHQvL1x0XHRwcml2YXRlXHJcblx0XHRcdHZhciBmb3JjZUh0bWxMYWJlbHMgPSAoZy5yZW5kZXJlciA9PSBcImNhbnZhc1wiKSAmJiB0aGlzLmh0bWxMYWJlbHMsXHJcblx0XHRcdFx0bGFiZWxUeXBlID0gZm9yY2VIdG1sTGFiZWxzIHx8ICFoYXMoXCJpZVwiKSAmJiAhaGFzKFwib3BlcmFcIikgJiYgdGhpcy5odG1sTGFiZWxzID8gXCJodG1sXCIgOiBcImdmeFwiLFxyXG5cdFx0XHRcdHRzaXplID0gZy5ub3JtYWxpemVkTGVuZ3RoKGcuc3BsaXRGb250U3RyaW5nKHRoaXMudGl0bGVGb250KS5zaXplKSxcclxuXHRcdFx0XHR0Qm94ID0gZy5fYmFzZS5fZ2V0VGV4dEJveCh0aGlzLnRpdGxlLHsgZm9udDogdGhpcy50aXRsZUZvbnQgfSk7XHJcblx0XHRcdFx0XHJcblx0XHRcdHZhciB0aXRsZUFsaWduID0gdGhpcy50aXRsZUFsaWduO1xyXG5cdFx0XHR2YXIgaXNSdGwgPSBoYXMoXCJkb2pvLWJpZGlcIikgJiYgdGhpcy5pc1JpZ2h0VG9MZWZ0KCk7XHJcblx0XHRcdHZhciBwb3NYID0gZGltLndpZHRoLzI7IC8vIERlZmF1bHQgaXMgbWlkZGxlLlxyXG5cdFx0XHRpZih0aXRsZUFsaWduID09PSBcImVkZ2VcIil7XHJcblx0XHRcdFx0dGl0bGVBbGlnbiA9IFwibGVmdFwiO1xyXG5cdFx0XHRcdGlmKGlzUnRsKXtcclxuXHRcdFx0XHRcdHBvc1ggPSBkaW0ud2lkdGggLSAob2Zmc2V0cy5yICsgdEJveC53KTtcclxuXHRcdFx0XHR9ZWxzZSB7XHJcblx0XHRcdFx0XHRwb3NYID0gb2Zmc2V0cy5sO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fWVsc2UgaWYodGl0bGVBbGlnbiAhPSBcIm1pZGRsZVwiKXtcclxuXHRcdFx0XHRpZihpc1J0bCl7XHJcblx0XHRcdFx0XHQvLyBXZSdyZSBpbiBCSURJIG1vZGUsIHJldmVyc2UgdGhlIGFsaWdubWVudC5cclxuXHRcdFx0XHRcdHRpdGxlQWxpZ24gPSB0aXRsZUFsaWduID09PSBcImxlZnRcIiA/IFwicmlnaHRcIiA6IFwibGVmdFwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZih0aXRsZUFsaWduID09PSBcImxlZnRcIil7XHJcblx0XHRcdFx0XHRwb3NYID0gdGhpcy5tYXJnaW5zLmw7XHJcblx0XHRcdFx0fWVsc2UgaWYodGl0bGVBbGlnbiA9PT0gXCJyaWdodFwiKXtcclxuXHRcdFx0XHRcdHRpdGxlQWxpZ24gPSBcImxlZnRcIjtcclxuXHRcdFx0XHRcdHBvc1ggPSBkaW0ud2lkdGggLSAodGhpcy5tYXJnaW5zLmwgKyB0Qm94LncpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLmNoYXJ0VGl0bGUgPSBjb21tb24uY3JlYXRlVGV4dFtsYWJlbFR5cGVdKFxyXG5cdFx0XHRcdHRoaXMsXHJcblx0XHRcdFx0dGhpcy5zdXJmYWNlLFxyXG5cdFx0XHRcdHBvc1gsXHJcblx0XHRcdFx0dGhpcy50aXRsZVBvcz09XCJ0b3BcIiA/IHRzaXplICsgdGhpcy5tYXJnaW5zLnQgOiBkaW0uaGVpZ2h0IC0gdGhpcy5tYXJnaW5zLmIsXHJcblx0XHRcdFx0dGl0bGVBbGlnbixcclxuXHRcdFx0XHR0aGlzLnRpdGxlLFxyXG5cdFx0XHRcdHRoaXMudGl0bGVGb250LFxyXG5cdFx0XHRcdHRoaXMudGl0bGVGb250Q29sb3JcclxuXHRcdFx0KTtcclxuXHRcdH0sXHJcblx0XHRfcmVuZGVyQ2hhcnRCYWNrZ3JvdW5kOiBmdW5jdGlvbihkaW0sIG9mZnNldHMpe1xyXG5cdFx0XHR2YXIgdCA9IHRoaXMudGhlbWUsIHJlY3Q7XHJcblx0XHRcdC8vIGNoYXJ0IGJhY2tncm91bmRcclxuXHRcdFx0dmFyIGZpbGwgICA9IHRoaXMuZmlsbCAgICE9PSB1bmRlZmluZWQgPyB0aGlzLmZpbGwgICA6ICh0LmNoYXJ0ICYmIHQuY2hhcnQuZmlsbCk7XHJcblx0XHRcdHZhciBzdHJva2UgPSB0aGlzLnN0cm9rZSAhPT0gdW5kZWZpbmVkID8gdGhpcy5zdHJva2UgOiAodC5jaGFydCAmJiB0LmNoYXJ0LnN0cm9rZSk7XHJcblxyXG5cdFx0XHQvLyBUUlQ6IHN1cHBvcnQgZm9yIFwiaW5oZXJpdFwiIGFzIGEgbmFtZWQgdmFsdWUgaW4gYSB0aGVtZS5cclxuXHRcdFx0aWYoZmlsbCA9PSBcImluaGVyaXRcIil7XHJcblx0XHRcdFx0Ly9cdGZpbmQgdGhlIGJhY2tncm91bmQgY29sb3Igb2YgdGhlIG5lYXJlc3QgYW5jZXN0b3Igbm9kZSwgYW5kIHVzZSB0aGF0IGV4cGxpY2l0bHkuXHJcblx0XHRcdFx0dmFyIG5vZGUgPSB0aGlzLm5vZGU7XHJcblx0XHRcdFx0ZmlsbCA9IG5ldyBDb2xvcihkb21TdHlsZS5nZXQobm9kZSwgXCJiYWNrZ3JvdW5kQ29sb3JcIikpO1xyXG5cdFx0XHRcdHdoaWxlKGZpbGwuYT09MCAmJiBub2RlIT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpe1xyXG5cdFx0XHRcdFx0ZmlsbCA9IG5ldyBDb2xvcihkb21TdHlsZS5nZXQobm9kZSwgXCJiYWNrZ3JvdW5kQ29sb3JcIikpO1xyXG5cdFx0XHRcdFx0bm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmKGZpbGwpe1xyXG5cdFx0XHRcdGlmKHRoaXMuX25hdGl2ZUNsaXApe1xyXG5cdFx0XHRcdFx0ZmlsbCA9IEVsZW1lbnQucHJvdG90eXBlLl9zaGFwZUZpbGwoRWxlbWVudC5wcm90b3R5cGUuX3Bsb3RGaWxsKGZpbGwsIGRpbSksXHJcblx0XHRcdFx0XHRcdHsgeDowLCB5OiAwLCB3aWR0aDogZGltLndpZHRoICsgMSwgaGVpZ2h0OiBkaW0uaGVpZ2h0ICsgMSB9KTtcclxuXHRcdFx0XHRcdHRoaXMuc3VyZmFjZS5jcmVhdGVSZWN0KHsgd2lkdGg6IGRpbS53aWR0aCArIDEsIGhlaWdodDogZGltLmhlaWdodCArIDEgfSkuc2V0RmlsbChmaWxsKTtcclxuXHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdC8vIFZNTFxyXG5cdFx0XHRcdFx0ZmlsbCA9IEVsZW1lbnQucHJvdG90eXBlLl9wbG90RmlsbChmaWxsLCBkaW0sIG9mZnNldHMpO1xyXG5cdFx0XHRcdFx0aWYob2Zmc2V0cy5sKXtcdC8vIGxlZnRcclxuXHRcdFx0XHRcdFx0cmVjdCA9IHtcclxuXHRcdFx0XHRcdFx0XHR4OiAwLFxyXG5cdFx0XHRcdFx0XHRcdHk6IDAsXHJcblx0XHRcdFx0XHRcdFx0d2lkdGg6ICBvZmZzZXRzLmwsXHJcblx0XHRcdFx0XHRcdFx0aGVpZ2h0OiBkaW0uaGVpZ2h0ICsgMVxyXG5cdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHR0aGlzLnN1cmZhY2UuY3JlYXRlUmVjdChyZWN0KS5zZXRGaWxsKEVsZW1lbnQucHJvdG90eXBlLl9zaGFwZUZpbGwoZmlsbCwgcmVjdCkpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYob2Zmc2V0cy5yKXtcdC8vIHJpZ2h0XHJcblx0XHRcdFx0XHRcdHJlY3QgPSB7XHJcblx0XHRcdFx0XHRcdFx0eDogZGltLndpZHRoIC0gb2Zmc2V0cy5yLFxyXG5cdFx0XHRcdFx0XHRcdHk6IDAsXHJcblx0XHRcdFx0XHRcdFx0d2lkdGg6ICBvZmZzZXRzLnIgKyAxLFxyXG5cdFx0XHRcdFx0XHRcdGhlaWdodDogZGltLmhlaWdodCArIDJcclxuXHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0dGhpcy5zdXJmYWNlLmNyZWF0ZVJlY3QocmVjdCkuc2V0RmlsbChFbGVtZW50LnByb3RvdHlwZS5fc2hhcGVGaWxsKGZpbGwsIHJlY3QpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmKG9mZnNldHMudCl7XHQvLyB0b3BcclxuXHRcdFx0XHRcdFx0cmVjdCA9IHtcclxuXHRcdFx0XHRcdFx0XHR4OiAwLFxyXG5cdFx0XHRcdFx0XHRcdHk6IDAsXHJcblx0XHRcdFx0XHRcdFx0d2lkdGg6ICBkaW0ud2lkdGggKyAxLFxyXG5cdFx0XHRcdFx0XHRcdGhlaWdodDogb2Zmc2V0cy50XHJcblx0XHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRcdHRoaXMuc3VyZmFjZS5jcmVhdGVSZWN0KHJlY3QpLnNldEZpbGwoRWxlbWVudC5wcm90b3R5cGUuX3NoYXBlRmlsbChmaWxsLCByZWN0KSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZihvZmZzZXRzLmIpe1x0Ly8gYm90dG9tXHJcblx0XHRcdFx0XHRcdHJlY3QgPSB7XHJcblx0XHRcdFx0XHRcdFx0eDogMCxcclxuXHRcdFx0XHRcdFx0XHR5OiBkaW0uaGVpZ2h0IC0gb2Zmc2V0cy5iLFxyXG5cdFx0XHRcdFx0XHRcdHdpZHRoOiAgZGltLndpZHRoICsgMSxcclxuXHRcdFx0XHRcdFx0XHRoZWlnaHQ6IG9mZnNldHMuYiArIDJcclxuXHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0dGhpcy5zdXJmYWNlLmNyZWF0ZVJlY3QocmVjdCkuc2V0RmlsbChFbGVtZW50LnByb3RvdHlwZS5fc2hhcGVGaWxsKGZpbGwsIHJlY3QpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0aWYoc3Ryb2tlKXtcclxuXHRcdFx0XHR0aGlzLnN1cmZhY2UuY3JlYXRlUmVjdCh7XHJcblx0XHRcdFx0XHR3aWR0aDogIGRpbS53aWR0aCAtIDEsXHJcblx0XHRcdFx0XHRoZWlnaHQ6IGRpbS5oZWlnaHQgLSAxXHJcblx0XHRcdFx0fSkuc2V0U3Ryb2tlKHN0cm9rZSk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRfcmVuZGVyUGxvdEJhY2tncm91bmQ6IGZ1bmN0aW9uKGRpbSwgb2Zmc2V0cywgdywgaCl7XHJcblx0XHRcdHZhciB0ID0gdGhpcy50aGVtZTtcclxuXHJcblx0XHRcdC8vIGRyYXcgYSBwbG90IGJhY2tncm91bmRcclxuXHRcdFx0dmFyIGZpbGwgICA9IHQucGxvdGFyZWEgJiYgdC5wbG90YXJlYS5maWxsO1xyXG5cdFx0XHR2YXIgc3Ryb2tlID0gdC5wbG90YXJlYSAmJiB0LnBsb3RhcmVhLnN0cm9rZTtcclxuXHRcdFx0Ly8gc2l6ZSBtaWdodCBiZSBuZWcgaWYgb2Zmc2V0cyBhcmUgYmlnZ2VyIHRoYXQgY2hhcnQgc2l6ZSB0aGlzIGhhcHBlbnMgcXVpdGUgb2Z0ZW4gYXRcclxuXHRcdFx0Ly8gaW5pdGlhbGl6YXRpb24gdGltZSBpZiB0aGUgY2hhcnQgd2lkZ2V0IGlzIHVzZWQgaW4gYSBCb3JkZXJDb250YWluZXJcclxuXHRcdFx0Ly8gdGhpcyB3aWxsIGZhaWwgb24gSUUvVk1MXHJcblx0XHRcdHZhciByZWN0ID0ge1xyXG5cdFx0XHRcdHg6IG9mZnNldHMubCAtIDEsIHk6IG9mZnNldHMudCAtIDEsXHJcblx0XHRcdFx0d2lkdGg6ICB3ICsgMixcclxuXHRcdFx0XHRoZWlnaHQ6IGggKyAyXHJcblx0XHRcdH07XHJcblx0XHRcdGlmKGZpbGwpe1xyXG5cdFx0XHRcdGZpbGwgPSBFbGVtZW50LnByb3RvdHlwZS5fc2hhcGVGaWxsKEVsZW1lbnQucHJvdG90eXBlLl9wbG90RmlsbChmaWxsLCBkaW0sIG9mZnNldHMpLCByZWN0KTtcclxuXHRcdFx0XHR0aGlzLnN1cmZhY2UuY3JlYXRlUmVjdChyZWN0KS5zZXRGaWxsKGZpbGwpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKHN0cm9rZSl7XHJcblx0XHRcdFx0dGhpcy5zdXJmYWNlLmNyZWF0ZVJlY3Qoe1xyXG5cdFx0XHRcdFx0eDogb2Zmc2V0cy5sLCB5OiBvZmZzZXRzLnQsXHJcblx0XHRcdFx0XHR3aWR0aDogIHcgKyAxLFxyXG5cdFx0XHRcdFx0aGVpZ2h0OiBoICsgMVxyXG5cdFx0XHRcdH0pLnNldFN0cm9rZShzdHJva2UpO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0ZGVsYXllZFJlbmRlcjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0RGVsYXllZCByZW5kZXIsIHdoaWNoIGlzIHVzZWQgdG8gY29sbGVjdCBtdWx0aXBsZSB1cGRhdGVzXHJcblx0XHRcdC8vXHRcdHdpdGhpbiBhIGRlbGF5SW5NcyB0aW1lIHdpbmRvdy5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGN1cnJlbnQgY2hhcnQgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblxyXG5cdFx0XHRpZighdGhpcy5fZGVsYXllZFJlbmRlckhhbmRsZSl7XHJcblx0XHRcdFx0dGhpcy5fZGVsYXllZFJlbmRlckhhbmRsZSA9IHNldFRpbWVvdXQoXHJcblx0XHRcdFx0XHRsYW5nLmhpdGNoKHRoaXMsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRcdHRoaXMucmVuZGVyKCk7XHJcblx0XHRcdFx0XHR9KSxcclxuXHRcdFx0XHRcdHRoaXMuZGVsYXlJbk1zXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdH0sXHJcblx0XHRjb25uZWN0VG9QbG90OiBmdW5jdGlvbihuYW1lLCBvYmplY3QsIG1ldGhvZCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEEgY29udmVuaWVuY2UgbWV0aG9kIHRvIGNvbm5lY3QgYSBmdW5jdGlvbiB0byBhIHBsb3QuXHJcblx0XHRcdC8vIG5hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRUaGUgbmFtZSBvZiB0aGUgcGxvdCBhcyBkZWZpbmVkIGJ5IGFkZFBsb3QuXHJcblx0XHRcdC8vIG9iamVjdDogT2JqZWN0XHJcblx0XHRcdC8vXHRcdFRoZSBvYmplY3QgdG8gYmUgY29ubmVjdGVkLlxyXG5cdFx0XHQvLyBtZXRob2Q6IEZ1bmN0aW9uXHJcblx0XHRcdC8vXHRcdFRoZSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZC5cclxuXHRcdFx0Ly8gcmV0dXJuczogQXJyYXlcclxuXHRcdFx0Ly9cdFx0QSBoYW5kbGUgdG8gdGhlIGNvbm5lY3Rpb24sIGFzIGRlZmluZWQgYnkgZG9qby5jb25uZWN0IChzZWUgZG9qby5jb25uZWN0KS5cclxuXHRcdFx0cmV0dXJuIG5hbWUgaW4gdGhpcy5wbG90cyA/IHRoaXMuc3RhY2tbdGhpcy5wbG90c1tuYW1lXV0uY29ubmVjdChvYmplY3QsIG1ldGhvZCkgOiBudWxsO1x0Ly9cdEFycmF5XHJcblx0XHR9LFxyXG5cdFx0ZmlyZUV2ZW50OiBmdW5jdGlvbihzZXJpZXNOYW1lLCBldmVudE5hbWUsIGluZGV4KXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0RmlyZXMgYSBzeW50aGV0aWMgZXZlbnQgZm9yIGEgc2VyaWVzIGl0ZW0uXHJcblx0XHRcdC8vIHNlcmllc05hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRTZXJpZXMgbmFtZS5cclxuXHRcdFx0Ly8gZXZlbnROYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0RXZlbnQgbmFtZSB0byBzaW11bGF0ZTogb25tb3VzZW92ZXIsIG9ubW91c2VvdXQsIG9uY2xpY2suXHJcblx0XHRcdC8vIGluZGV4OiBOdW1iZXJcclxuXHRcdFx0Ly9cdFx0VmFsaWQgZGF0YSB2YWx1ZSBpbmRleCBmb3IgdGhlIGV2ZW50LlxyXG5cdFx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRBIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCBjaGFydCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0aWYoc2VyaWVzTmFtZSBpbiB0aGlzLnJ1bnMpe1xyXG5cdFx0XHRcdHZhciBwbG90TmFtZSA9IHRoaXMuc2VyaWVzW3RoaXMucnVuc1tzZXJpZXNOYW1lXV0ucGxvdDtcclxuXHRcdFx0XHRpZihwbG90TmFtZSBpbiB0aGlzLnBsb3RzKXtcclxuXHRcdFx0XHRcdHZhciBwbG90ID0gdGhpcy5zdGFja1t0aGlzLnBsb3RzW3Bsb3ROYW1lXV07XHJcblx0XHRcdFx0XHRpZihwbG90KXtcclxuXHRcdFx0XHRcdFx0cGxvdC5maXJlRXZlbnQoc2VyaWVzTmFtZSwgZXZlbnROYW1lLCBpbmRleCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHR9LFxyXG5cdFx0X21ha2VDbGVhbjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gcmVzZXQgZGlydHkgZmxhZ3NcclxuXHRcdFx0YXJyLmZvckVhY2godGhpcy5heGVzLCAgIG1ha2VDbGVhbik7XHJcblx0XHRcdGFyci5mb3JFYWNoKHRoaXMuc3RhY2ssICBtYWtlQ2xlYW4pO1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnNlcmllcywgbWFrZUNsZWFuKTtcclxuXHRcdFx0dGhpcy5kaXJ0eSA9IGZhbHNlO1xyXG5cdFx0fSxcclxuXHRcdF9tYWtlRGlydHk6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHJlc2V0IGRpcnR5IGZsYWdzXHJcblx0XHRcdGFyci5mb3JFYWNoKHRoaXMuYXhlcywgICBtYWtlRGlydHkpO1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLnN0YWNrLCAgbWFrZURpcnR5KTtcclxuXHRcdFx0YXJyLmZvckVhY2godGhpcy5zZXJpZXMsIG1ha2VEaXJ0eSk7XHJcblx0XHRcdHRoaXMuZGlydHkgPSB0cnVlO1xyXG5cdFx0fSxcclxuXHRcdF9pbnZhbGlkYXRlRGVwZW5kZW50UGxvdHM6IGZ1bmN0aW9uKHBsb3ROYW1lLCAvKiBCb29sZWFuICovIHZlcnRpY2FsQXhpcyl7XHJcblx0XHRcdGlmKHBsb3ROYW1lIGluIHRoaXMucGxvdHMpe1xyXG5cdFx0XHRcdHZhciBwbG90ID0gdGhpcy5zdGFja1t0aGlzLnBsb3RzW3Bsb3ROYW1lXV0sIGF4aXMsXHJcblx0XHRcdFx0XHRheGlzTmFtZSA9IHZlcnRpY2FsQXhpcyA/IFwidkF4aXNcIiA6IFwiaEF4aXNcIjtcclxuXHRcdFx0XHRpZihwbG90W2F4aXNOYW1lXSl7XHJcblx0XHRcdFx0XHRheGlzID0gdGhpcy5heGVzW3Bsb3RbYXhpc05hbWVdXTtcclxuXHRcdFx0XHRcdGlmKGF4aXMgJiYgYXhpcy5kZXBlbmRPbkRhdGEoKSl7XHJcblx0XHRcdFx0XHRcdGF4aXMuZGlydHkgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHQvLyBmaW5kIGFsbCBwbG90cyBhbmQgbWFyayB0aGVtIGRpcnR5XHJcblx0XHRcdFx0XHRcdGFyci5mb3JFYWNoKHRoaXMuc3RhY2ssIGZ1bmN0aW9uKHApe1xyXG5cdFx0XHRcdFx0XHRcdGlmKHBbYXhpc05hbWVdICYmIHBbYXhpc05hbWVdID09IHBsb3RbYXhpc05hbWVdKXtcclxuXHRcdFx0XHRcdFx0XHRcdHAuZGlydHkgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRwbG90LmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRzZXREaXIgOiBmdW5jdGlvbihkaXIpe1xyXG5cdFx0XHRyZXR1cm4gdGhpczsgXHJcblx0XHR9LFxyXG5cdFx0X3Jlc2V0TGVmdEJvdHRvbTogZnVuY3Rpb24oYXhpcyl7XHJcblx0XHR9LFxyXG5cdFx0Zm9ybWF0VHJ1bmNhdGVkTGFiZWw6IGZ1bmN0aW9uKGVsZW1lbnQsIGxhYmVsLCBsYWJlbFR5cGUpe1x0XHRcdFxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHRmdW5jdGlvbiBoU2VjdGlvbihzdGF0cyl7XHJcblx0XHRyZXR1cm4ge21pbjogc3RhdHMuaG1pbiwgbWF4OiBzdGF0cy5obWF4fTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHZTZWN0aW9uKHN0YXRzKXtcclxuXHRcdHJldHVybiB7bWluOiBzdGF0cy52bWluLCBtYXg6IHN0YXRzLnZtYXh9O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gaFJlcGxhY2Uoc3RhdHMsIGgpe1xyXG5cdFx0c3RhdHMuaG1pbiA9IGgubWluO1xyXG5cdFx0c3RhdHMuaG1heCA9IGgubWF4O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gdlJlcGxhY2Uoc3RhdHMsIHYpe1xyXG5cdFx0c3RhdHMudm1pbiA9IHYubWluO1xyXG5cdFx0c3RhdHMudm1heCA9IHYubWF4O1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gY29tYmluZVN0YXRzKHRhcmdldCwgc291cmNlKXtcclxuXHRcdGlmKHRhcmdldCAmJiBzb3VyY2Upe1xyXG5cdFx0XHR0YXJnZXQubWluID0gTWF0aC5taW4odGFyZ2V0Lm1pbiwgc291cmNlLm1pbik7XHJcblx0XHRcdHRhcmdldC5tYXggPSBNYXRoLm1heCh0YXJnZXQubWF4LCBzb3VyY2UubWF4KTtcclxuXHRcdH1cclxuXHRcdHJldHVybiB0YXJnZXQgfHwgc291cmNlO1xyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gY2FsY3VsYXRlQXhlcyhzdGFjaywgcGxvdEFyZWEpe1xyXG5cdFx0dmFyIHBsb3RzID0ge30sIGF4ZXMgPSB7fTtcclxuXHRcdGFyci5mb3JFYWNoKHN0YWNrLCBmdW5jdGlvbihwbG90KXtcclxuXHRcdFx0dmFyIHN0YXRzID0gcGxvdHNbcGxvdC5uYW1lXSA9IHBsb3QuZ2V0U2VyaWVzU3RhdHMoKTtcclxuXHRcdFx0aWYocGxvdC5oQXhpcyl7XHJcblx0XHRcdFx0YXhlc1twbG90LmhBeGlzXSA9IGNvbWJpbmVTdGF0cyhheGVzW3Bsb3QuaEF4aXNdLCBoU2VjdGlvbihzdGF0cykpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKHBsb3QudkF4aXMpe1xyXG5cdFx0XHRcdGF4ZXNbcGxvdC52QXhpc10gPSBjb21iaW5lU3RhdHMoYXhlc1twbG90LnZBeGlzXSwgdlNlY3Rpb24oc3RhdHMpKTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRhcnIuZm9yRWFjaChzdGFjaywgZnVuY3Rpb24ocGxvdCl7XHJcblx0XHRcdHZhciBzdGF0cyA9IHBsb3RzW3Bsb3QubmFtZV07XHJcblx0XHRcdGlmKHBsb3QuaEF4aXMpe1xyXG5cdFx0XHRcdGhSZXBsYWNlKHN0YXRzLCBheGVzW3Bsb3QuaEF4aXNdKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZihwbG90LnZBeGlzKXtcclxuXHRcdFx0XHR2UmVwbGFjZShzdGF0cywgYXhlc1twbG90LnZBeGlzXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0cGxvdC5pbml0aWFsaXplU2NhbGVycyhwbG90QXJlYSwgc3RhdHMpO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdFxyXG5cdHJldHVybiBoYXMoXCJkb2pvLWJpZGlcIik/IGRlY2xhcmUoXCJkb2pveC5jaGFydGluZy5DaGFydFwiLCBbQ2hhcnQsIEJpZGlDaGFydF0pIDogQ2hhcnQ7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLDhlQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/Chart.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/Chart2D.js":
/*!************************************************!*\
  !*** ./node_modules/dojox/charting/Chart2D.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! .. */ \"./node_modules/dojox/main.js\"), __webpack_require__(/*! ./Chart */ \"./node_modules/dojox/charting/Chart.js\"),\r\n\t__webpack_require__(/*! ./axis2d/Default */ \"./node_modules/dojox/charting/axis2d/Default.js\"), __webpack_require__(/*! ./axis2d/Invisible */ \"./node_modules/dojox/charting/axis2d/Invisible.js\"), __webpack_require__(/*! ./plot2d/Default */ \"./node_modules/dojox/charting/plot2d/Default.js\"), __webpack_require__(/*! ./plot2d/Lines */ \"./node_modules/dojox/charting/plot2d/Lines.js\"), __webpack_require__(/*! ./plot2d/Areas */ \"./node_modules/dojox/charting/plot2d/Areas.js\"),\r\n\t__webpack_require__(/*! ./plot2d/Markers */ \"./node_modules/dojox/charting/plot2d/Markers.js\"), __webpack_require__(/*! ./plot2d/MarkersOnly */ \"./node_modules/dojox/charting/plot2d/MarkersOnly.js\"), __webpack_require__(/*! ./plot2d/Scatter */ \"./node_modules/dojox/charting/plot2d/Scatter.js\"), __webpack_require__(/*! ./plot2d/Stacked */ \"./node_modules/dojox/charting/plot2d/Stacked.js\"), __webpack_require__(/*! ./plot2d/StackedLines */ \"./node_modules/dojox/charting/plot2d/StackedLines.js\"),\r\n\t__webpack_require__(/*! ./plot2d/StackedAreas */ \"./node_modules/dojox/charting/plot2d/StackedAreas.js\"), __webpack_require__(/*! ./plot2d/Columns */ \"./node_modules/dojox/charting/plot2d/Columns.js\"), __webpack_require__(/*! ./plot2d/StackedColumns */ \"./node_modules/dojox/charting/plot2d/StackedColumns.js\"), __webpack_require__(/*! ./plot2d/ClusteredColumns */ \"./node_modules/dojox/charting/plot2d/ClusteredColumns.js\"),\r\n\t__webpack_require__(/*! ./plot2d/Bars */ \"./node_modules/dojox/charting/plot2d/Bars.js\"), __webpack_require__(/*! ./plot2d/StackedBars */ \"./node_modules/dojox/charting/plot2d/StackedBars.js\"), __webpack_require__(/*! ./plot2d/ClusteredBars */ \"./node_modules/dojox/charting/plot2d/ClusteredBars.js\"), __webpack_require__(/*! ./plot2d/Grid */ \"./node_modules/dojox/charting/plot2d/Grid.js\"), __webpack_require__(/*! ./plot2d/Pie */ \"./node_modules/dojox/charting/plot2d/Pie.js\"),\r\n\t__webpack_require__(/*! ./plot2d/Bubble */ \"./node_modules/dojox/charting/plot2d/Bubble.js\"), __webpack_require__(/*! ./plot2d/Candlesticks */ \"./node_modules/dojox/charting/plot2d/Candlesticks.js\"), __webpack_require__(/*! ./plot2d/OHLC */ \"./node_modules/dojox/charting/plot2d/OHLC.js\"), __webpack_require__(/*! ./plot2d/Spider */ \"./node_modules/dojox/charting/plot2d/Spider.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(kernel, lang, dojox, Chart){\r\n\tkernel.deprecated(\"dojox.charting.Chart2D\", \"Use dojox.charting.Chart instead and require all other components explicitly\", \"2.0\");\r\n\t// module:\r\n\t//\t\tdojox/charting/Chart2D\r\n\t// summary:\r\n\t//\t\tThis is a compatibility module which loads all charting modules that used to be automatically\r\n\t//\t\tloaded in versions prior to 1.6.  It is highly recommended for performance reasons that\r\n\t//\t\tthis module no longer be referenced by applications.  Instead, use dojox/charting/Chart.\r\n\treturn lang.setObject(\"dojox.charting.Chart2D\", Chart);\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvQ2hhcnQyRC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9DaGFydDJELmpzPzQ0ZjciXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2Uva2VybmVsXCIsIFwiZG9qby9fYmFzZS9sYW5nXCIsIFwiLi5cIiwgXCIuL0NoYXJ0XCIsXHJcblx0XCIuL2F4aXMyZC9EZWZhdWx0XCIsIFwiLi9heGlzMmQvSW52aXNpYmxlXCIsIFwiLi9wbG90MmQvRGVmYXVsdFwiLCBcIi4vcGxvdDJkL0xpbmVzXCIsIFwiLi9wbG90MmQvQXJlYXNcIixcclxuXHRcIi4vcGxvdDJkL01hcmtlcnNcIiwgXCIuL3Bsb3QyZC9NYXJrZXJzT25seVwiLCBcIi4vcGxvdDJkL1NjYXR0ZXJcIiwgXCIuL3Bsb3QyZC9TdGFja2VkXCIsIFwiLi9wbG90MmQvU3RhY2tlZExpbmVzXCIsXHJcblx0XCIuL3Bsb3QyZC9TdGFja2VkQXJlYXNcIiwgXCIuL3Bsb3QyZC9Db2x1bW5zXCIsIFwiLi9wbG90MmQvU3RhY2tlZENvbHVtbnNcIiwgXCIuL3Bsb3QyZC9DbHVzdGVyZWRDb2x1bW5zXCIsXHJcblx0XCIuL3Bsb3QyZC9CYXJzXCIsIFwiLi9wbG90MmQvU3RhY2tlZEJhcnNcIiwgXCIuL3Bsb3QyZC9DbHVzdGVyZWRCYXJzXCIsIFwiLi9wbG90MmQvR3JpZFwiLCBcIi4vcGxvdDJkL1BpZVwiLFxyXG5cdFwiLi9wbG90MmQvQnViYmxlXCIsIFwiLi9wbG90MmQvQ2FuZGxlc3RpY2tzXCIsIFwiLi9wbG90MmQvT0hMQ1wiLCBcIi4vcGxvdDJkL1NwaWRlclwiXSwgXHJcblx0ICBmdW5jdGlvbihrZXJuZWwsIGxhbmcsIGRvam94LCBDaGFydCl7XHJcblx0a2VybmVsLmRlcHJlY2F0ZWQoXCJkb2pveC5jaGFydGluZy5DaGFydDJEXCIsIFwiVXNlIGRvam94LmNoYXJ0aW5nLkNoYXJ0IGluc3RlYWQgYW5kIHJlcXVpcmUgYWxsIG90aGVyIGNvbXBvbmVudHMgZXhwbGljaXRseVwiLCBcIjIuMFwiKTtcclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZG9qb3gvY2hhcnRpbmcvQ2hhcnQyRFxyXG5cdC8vIHN1bW1hcnk6XHJcblx0Ly9cdFx0VGhpcyBpcyBhIGNvbXBhdGliaWxpdHkgbW9kdWxlIHdoaWNoIGxvYWRzIGFsbCBjaGFydGluZyBtb2R1bGVzIHRoYXQgdXNlZCB0byBiZSBhdXRvbWF0aWNhbGx5XHJcblx0Ly9cdFx0bG9hZGVkIGluIHZlcnNpb25zIHByaW9yIHRvIDEuNi4gIEl0IGlzIGhpZ2hseSByZWNvbW1lbmRlZCBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucyB0aGF0XHJcblx0Ly9cdFx0dGhpcyBtb2R1bGUgbm8gbG9uZ2VyIGJlIHJlZmVyZW5jZWQgYnkgYXBwbGljYXRpb25zLiAgSW5zdGVhZCwgdXNlIGRvam94L2NoYXJ0aW5nL0NoYXJ0LlxyXG5cdHJldHVybiBsYW5nLnNldE9iamVjdChcImRvam94LmNoYXJ0aW5nLkNoYXJ0MkRcIiwgQ2hhcnQpO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbWFBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/Chart2D.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/Element.js":
/*!************************************************!*\
  !*** ./node_modules/dojox/charting/Element.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"),__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/gfx/shape */ \"./node_modules/dojox/gfx/shape.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(arr, domConstruct, declare, gfx, shape){\r\n\r\n\treturn declare(\"dojox.charting.Element\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tA base class that is used to build other elements of a chart, such as\r\n\t\t//\t\ta series.\r\n\t\t// chart: dojox/charting/Chart\r\n\t\t//\t\tThe parent chart for this element.\r\n\t\t// group: dojox/gfx/shape.Group\r\n\t\t//\t\tThe visual GFX group representing this element.\r\n\t\t// htmlElement: Array\r\n\t\t//\t\tAny DOMNodes used as a part of this element (such as HTML-based labels).\r\n\t\t// dirty: Boolean\r\n\t\t//\t\tA flag indicating whether or not this element needs to be rendered.\r\n\r\n\t\tchart: null,\r\n\t\tgroup: null,\r\n\t\thtmlElements: null,\r\n\t\tdirty: true,\r\n\t\trenderingOptions: null,\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreates a new charting element.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart that this element belongs to.\r\n\t\t\tthis.chart = chart;\r\n\t\t\tthis.group = null;\r\n\t\t\tthis.htmlElements = [];\r\n\t\t\tthis.dirty = true;\r\n\t\t\tthis.trailingSymbol = \"...\";\r\n\t\t\tthis._events = [];\r\n\t\t\tif (kwArgs && kwArgs.renderingOptions) {\r\n\t\t\t\tthis.renderingOptions = kwArgs.renderingOptions;\r\n\t\t\t}\r\n\t\t},\r\n\t\tpurgeGroup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear any elements out of our group, and destroy the group.\r\n\t\t\t// returns: dojox/charting/Element\r\n\t\t\t//\t\tA reference to this object for functional chaining.\r\n\t\t\tthis.destroyHtmlElements();\r\n\t\t\tif(this.group){\r\n\t\t\t\t// since 1.7.x we need dispose shape otherwise there is a memoryleak\r\n\t\t\t\tthis.getGroup().removeShape();\r\n\t\t\t\tvar children = this.getGroup().children;\r\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\r\n\t\t\t\t\t\tshape.dispose(children[i], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.getGroup().rawNode){\r\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getGroup().clear();\r\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\tshape.dispose(this.getGroup(), true);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.getGroup() != this.group){\r\n\t\t\t\t\t// we do have an intermediary clipping group (see CartesianBase)\r\n\t\t\t\t\tif(this.group.rawNode){\r\n\t\t\t\t\t\tdomConstruct.empty(this.group.rawNode);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.group.clear();\r\n\t\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\t\tshape.dispose(this.group, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.group = null;\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\tif(this._events.length){\r\n\t\t\t\tarr.forEach(this._events, function(item){\r\n\t\t\t\t\titem.shape.disconnect(item.handle);\r\n\t\t\t\t});\r\n\t\t\t\tthis._events = [];\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox.charting.Element\r\n\t\t},\r\n\t\tcleanGroup: function(creator){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClean any elements (HTML or GFX-based) out of our group, and create a new one.\r\n\t\t\t// creator: dojox/gfx/shape.Surface?\r\n\t\t\t//\t\tAn optional surface to work with.\r\n\t\t\t// returns: dojox/charting/Element\r\n\t\t\t//\t\tA reference to this object for functional chaining.\r\n\t\t\tthis.destroyHtmlElements();\r\n\t\t\tif(!creator){ creator = this.chart.surface; }\r\n\t\t\tif(this.group){\r\n\t\t\t\tvar bgnode;\r\n\t\t\t\tvar children = this.getGroup().children;\r\n\t\t\t\t// starting with 1.9 the registry is optional and thus dispose is\r\n\t\t\t\tif(shape.dispose){\r\n\t\t\t\t\tfor(var i = 0; i < children.length;++i){\r\n\t\t\t\t\t\tshape.dispose(children[i], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this.getGroup().rawNode){\r\n\t\t\t\t\tbgnode = this.getGroup().bgNode;\r\n\t\t\t\t\tdomConstruct.empty(this.getGroup().rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getGroup().clear();\r\n\t\t\t\tif(bgnode){\r\n\t\t\t\t\tthis.getGroup().rawNode.appendChild(bgnode);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.group = creator.createGroup();\r\n\t\t\t\t// in some cases we have a rawNode but this is not an actual DOM element (CanvasWithEvents) so check\r\n\t\t\t\t// the actual rawNode type.\r\n\t\t\t\tif (this.renderingOptions && this.group.rawNode &&\r\n\t\t\t\t\tthis.group.rawNode.namespaceURI == \"http://www.w3.org/2000/svg\") {\r\n\t\t\t\t\tfor (var key in this.renderingOptions) {\r\n\t\t\t\t\t\tthis.group.rawNode.setAttribute(key, this.renderingOptions[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox.charting.Element\r\n\t\t},\r\n\t\tgetGroup: function(){\r\n\t\t\treturn this.group;\r\n\t\t},\r\n\t\tdestroyHtmlElements: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy any DOMNodes that may have been created as a part of this element.\r\n\t\t\tif(this.htmlElements.length){\r\n\t\t\t\tarr.forEach(this.htmlElements, domConstruct.destroy);\r\n\t\t\t\tthis.htmlElements = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAPI addition to conform to the rest of the Dojo Toolkit's standard.\r\n\t\t\tthis.purgeGroup();\r\n\t\t},\r\n\t\toverrideShape: function(shape, params){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tExtension point for overriding the charting shape\r\n\t\t},\r\n\t\t//text utilities\r\n\t\tgetTextWidth: function(s, font){\r\n\t\t\treturn gfx._base._getTextBox(s, {font: font}).w || 0;\r\n\t\t},\r\n\t\tgetTextWithLimitLength: function(s, font, limitWidth, truncated){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the truncated string based on the limited width in px(dichotomy algorithm)\r\n\t\t\t// s: String?\r\n\t\t\t//\t\tcandidate text.\r\n\t\t\t// font: String?\r\n\t\t\t//\t\ttext's font style.\r\n\t\t\t// limitWidth: Number?\r\n\t\t\t//\t\ttext limited width in px.\r\n\t\t\t// truncated: Boolean?\r\n\t\t\t//\t\twhether the input text(s) has already been truncated.\r\n\t\t\t// returns: Object\r\n\t\t\t// |\t{\r\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\r\n\t\t\t// |\t\ttruncated: whether text has been truncated\r\n\t\t\t// |\t}\r\n\t\t\tif(!s || s.length <= 0){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!limitWidth || limitWidth <= 0){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: s,\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar delta = 2,\r\n\t\t\t\t//golden section for dichotomy algorithm\r\n\t\t\t\ttrucPercentage = 0.618,\r\n\t\t\t\tminStr = s.substring(0,1) + this.trailingSymbol,\r\n\t\t\t\tminWidth = this.getTextWidth(minStr, font);\r\n\t\t\tif(limitWidth <= minWidth){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: minStr,\r\n\t\t\t\t\ttruncated: true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar width = this.getTextWidth(s, font);\r\n\t\t\tif(width <= limitWidth){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: s,\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}else{\r\n\t\t\t\tvar begin = 0,\r\n\t\t\t\t\tend = s.length;\r\n\t\t\t\twhile(begin < end){\r\n\t\t\t\t\tif(end - begin <= delta ){\r\n\t\t\t\t\t\twhile (this.getTextWidth(s.substring(0, begin) + this.trailingSymbol, font) > limitWidth) {\r\n\t\t\t\t\t\t\tbegin -= 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttext: (s.substring(0,begin) + this.trailingSymbol),\r\n\t\t\t\t\t\t\ttruncated: true\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar index = begin + Math.round((end - begin) * trucPercentage),\r\n\t\t\t\t\t\twidthIntercepted = this.getTextWidth(s.substring(0, index), font);\r\n\t\t\t\t\tif(widthIntercepted < limitWidth){\r\n\t\t\t\t\t\tbegin = index;\r\n\t\t\t\t\t\tend = end;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tbegin = begin;\r\n\t\t\t\t\t\tend = index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetTextWithLimitCharCount: function(s, font, wcLimit, truncated){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the truncated string based on the limited character count(dichotomy algorithm)\r\n\t\t\t// s: String?\r\n\t\t\t//\t\tcandidate text.\r\n\t\t\t// font: String?\r\n\t\t\t//\t\ttext's font style.\r\n\t\t\t// wcLimit: Number?\r\n\t\t\t//\t\ttext limited character count.\r\n\t\t\t// truncated: Boolean?\r\n\t\t\t//\t\twhether the input text(s) has already been truncated.\r\n\t\t\t// returns: Object\r\n\t\t\t// |\t{\r\n\t\t\t// |\t\ttext: processed text, maybe truncated or not,\r\n\t\t\t// |\t\ttruncated: whether text has been truncated\r\n\t\t\t// |\t}\r\n\t\t\tif (!s || s.length <= 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!wcLimit || wcLimit <= 0 || s.length <= wcLimit){\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: s,\r\n\t\t\t\t\ttruncated: truncated || false\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\ttext: s.substring(0, wcLimit) + this.trailingSymbol,\r\n\t\t\t\ttruncated: true\r\n\t\t\t};\r\n\t\t},\r\n\t\t// fill utilities\r\n\t\t_plotFill: function(fill, dim, offsets){\r\n\t\t\t// process a plot-wide fill\r\n\t\t\tif(!fill || !fill.type || !fill.space){\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\tvar space = fill.space, span;\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\r\n\t\t\t\t\t\t\tfill.y1 = offsets.t + span * fill.y1 / 100;\r\n\t\t\t\t\t\t\tfill.y2 = offsets.t + span * fill.y2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\r\n\t\t\t\t\t\t\tfill.x1 = offsets.l + span * fill.x1 / 100;\r\n\t\t\t\t\t\t\tfill.x2 = offsets.l + span * fill.x2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tif(space === \"plot\"){\r\n\t\t\t\t\t\t// this one is used exclusively for scatter charts\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process both dimensions\r\n\t\t\t\t\t\tvar spanX = dim.width  - offsets.l - offsets.r,\r\n\t\t\t\t\t\t\tspanY = dim.height - offsets.t - offsets.b;\r\n\t\t\t\t\t\tfill.cx = offsets.l + spanX * fill.cx / 100;\r\n\t\t\t\t\t\tfill.cy = offsets.t + spanY * fill.cy / 100;\r\n\t\t\t\t\t\tfill.r  = fill.r * Math.sqrt(spanX * spanX + spanY * spanY) / 200;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = dim.height - offsets.t - offsets.b;\r\n\t\t\t\t\t\t\tfill.y = offsets.t + span * fill.y / 100;\r\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"plot\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = dim.width - offsets.l - offsets.r;\r\n\t\t\t\t\t\t\tfill.x = offsets.l + span * fill.x / 100;\r\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn fill;\r\n\t\t},\r\n\t\t_shapeFill: function(fill, bbox){\r\n\t\t\t// process shape-specific fill\r\n\t\t\tif(!fill || !fill.space){\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\tvar space = fill.space, span;\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = bbox.width;\r\n\t\t\t\t\t\t\tfill.x1 = bbox.x + span * fill.x1 / 100;\r\n\t\t\t\t\t\t\tfill.x2 = bbox.x + span * fill.x2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = bbox.height;\r\n\t\t\t\t\t\t\tfill.y1 = bbox.y + span * fill.y1 / 100;\r\n\t\t\t\t\t\t\tfill.y2 = bbox.y + span * fill.y2 / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tif(space === \"shape\"){\r\n\t\t\t\t\t\t// this one is used exclusively for bubble charts and pie charts\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process both dimensions\r\n\t\t\t\t\t\tfill.cx = bbox.x + bbox.width  / 2;\r\n\t\t\t\t\t\tfill.cy = bbox.y + bbox.height / 2;\r\n\t\t\t\t\t\tfill.r  = fill.r * bbox.width  / 200;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t// clone a fill so we can modify properly directly\r\n\t\t\t\t\t\tfill = gfx.makeParameters(gfx.defaultPattern, fill);\r\n\t\t\t\t\t\tfill.space = space;\r\n\t\t\t\t\t\t// process dimensions\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeX\"){\r\n\t\t\t\t\t\t\t// process X\r\n\t\t\t\t\t\t\tspan = bbox.width;\r\n\t\t\t\t\t\t\tfill.x = bbox.x + span * fill.x / 100;\r\n\t\t\t\t\t\t\tfill.width = span * fill.width / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(space === \"shape\" || space === \"shapeY\"){\r\n\t\t\t\t\t\t\t// process Y\r\n\t\t\t\t\t\t\tspan = bbox.height;\r\n\t\t\t\t\t\t\tfill.y = bbox.y + span * fill.y / 100;\r\n\t\t\t\t\t\t\tfill.height = span * fill.height / 100;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn fill;\r\n\t\t},\r\n\t\t_pseudoRadialFill: function(fill, center, radius, start, end){\r\n\t\t\t// process pseudo-radial fills\r\n\t\t\tif(!fill || fill.type !== \"radial\" || fill.space !== \"shape\"){\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\t// clone and normalize fill\r\n\t\t\tvar space = fill.space;\r\n\t\t\tfill = gfx.makeParameters(gfx.defaultRadialGradient, fill);\r\n\t\t\tfill.space = space;\r\n\t\t\tif(arguments.length < 4){\r\n\t\t\t\t// process both dimensions\r\n\t\t\t\tfill.cx = center.x;\r\n\t\t\t\tfill.cy = center.y;\r\n\t\t\t\tfill.r  = fill.r * radius / 100;\r\n\t\t\t\treturn fill;\r\n\t\t\t}\r\n\t\t\t// convert to a linear gradient\r\n\t\t\tvar angle = arguments.length < 5 ? start : (end + start) / 2;\r\n\t\t\treturn {\r\n\t\t\t\ttype: \"linear\",\r\n\t\t\t\tx1: center.x,\r\n\t\t\t\ty1: center.y,\r\n\t\t\t\tx2: center.x + fill.r * radius * Math.cos(angle) / 100,\r\n\t\t\t\ty2: center.y + fill.r * radius * Math.sin(angle) / 100,\r\n\t\t\t\tcolors: fill.colors\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/Element.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/Series.js":
/*!***********************************************!*\
  !*** ./node_modules/dojox/charting/Series.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Element */ \"./node_modules/dojox/charting/Element.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, Element){ \r\n\t/*=====\r\n\tvar __SeriesCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tAn optional arguments object that can be used in the Series constructor.\r\n\t\t// plot: String?\r\n\t\t//\t\tThe plot (by name) that this series belongs to.\r\n\t};\r\n\t=====*/\r\n\treturn declare(\"dojox.charting.Series\", Element, {\r\n\t\t// summary:\r\n\t\t//\t\tAn object representing a series of data for plotting on a chart.\r\n\t\tconstructor: function(chart, data, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a new data series object for use within charting.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart that this series belongs to.\r\n\t\t\t// data: Array|Object\r\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\r\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\r\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\r\n\t\t\t//\t\tdestroy(), and setSeriesObject().\r\n\t\t\t// kwArgs: __SeriesCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to set details for this series.\r\n\t\t\tlang.mixin(this, kwArgs);\r\n\t\t\tif(typeof this.plot != \"string\"){ this.plot = \"default\"; }\r\n\t\t\tthis.update(data);\r\n\t\t},\r\n\t\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear the calculated additional parameters set on this series.\r\n\t\t\tthis.dyn = {};\r\n\t\t},\r\n\t\t\r\n\t\tupdate: function(data){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet data and make this object dirty, so it can be redrawn.\r\n\t\t\t// data: Array|Object\r\n\t\t\t//\t\tThe array of data points (either numbers or objects) that\r\n\t\t\t//\t\trepresents the data to be drawn. Or it can be an object. In\r\n\t\t\t//\t\tthe latter case, it should have a property \"data\" (an array),\r\n\t\t\t//\t\tdestroy(), and setSeriesObject().\r\n\t\t\tif(lang.isArray(data)){\r\n\t\t\t\tthis.data = data;\r\n\t\t\t}else{\r\n\t\t\t\tthis.source = data;\r\n\t\t\t\tthis.data = this.source.data;\r\n\t\t\t\tif(this.source.setSeriesObject){\r\n\t\t\t\t\tthis.source.setSeriesObject(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.dirty = true;\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvU2VyaWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL1Nlcmllcy5qcz85NzNhIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2xhbmdcIiwgXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCIuL0VsZW1lbnRcIl0sIFxyXG5cdGZ1bmN0aW9uKGxhbmcsIGRlY2xhcmUsIEVsZW1lbnQpeyBcclxuXHQvKj09PT09XHJcblx0dmFyIF9fU2VyaWVzQ3RvckFyZ3MgPSB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QW4gb3B0aW9uYWwgYXJndW1lbnRzIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIGluIHRoZSBTZXJpZXMgY29uc3RydWN0b3IuXHJcblx0XHQvLyBwbG90OiBTdHJpbmc/XHJcblx0XHQvL1x0XHRUaGUgcGxvdCAoYnkgbmFtZSkgdGhhdCB0aGlzIHNlcmllcyBiZWxvbmdzIHRvLlxyXG5cdH07XHJcblx0PT09PT0qL1xyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcuU2VyaWVzXCIsIEVsZW1lbnQsIHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRBbiBvYmplY3QgcmVwcmVzZW50aW5nIGEgc2VyaWVzIG9mIGRhdGEgZm9yIHBsb3R0aW5nIG9uIGEgY2hhcnQuXHJcblx0XHRjb25zdHJ1Y3RvcjogZnVuY3Rpb24oY2hhcnQsIGRhdGEsIGt3QXJncyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENyZWF0ZSBhIG5ldyBkYXRhIHNlcmllcyBvYmplY3QgZm9yIHVzZSB3aXRoaW4gY2hhcnRpbmcuXHJcblx0XHRcdC8vIGNoYXJ0OiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRUaGUgY2hhcnQgdGhhdCB0aGlzIHNlcmllcyBiZWxvbmdzIHRvLlxyXG5cdFx0XHQvLyBkYXRhOiBBcnJheXxPYmplY3RcclxuXHRcdFx0Ly9cdFx0VGhlIGFycmF5IG9mIGRhdGEgcG9pbnRzIChlaXRoZXIgbnVtYmVycyBvciBvYmplY3RzKSB0aGF0XHJcblx0XHRcdC8vXHRcdHJlcHJlc2VudHMgdGhlIGRhdGEgdG8gYmUgZHJhd24uIE9yIGl0IGNhbiBiZSBhbiBvYmplY3QuIEluXHJcblx0XHRcdC8vXHRcdHRoZSBsYXR0ZXIgY2FzZSwgaXQgc2hvdWxkIGhhdmUgYSBwcm9wZXJ0eSBcImRhdGFcIiAoYW4gYXJyYXkpLFxyXG5cdFx0XHQvL1x0XHRkZXN0cm95KCksIGFuZCBzZXRTZXJpZXNPYmplY3QoKS5cclxuXHRcdFx0Ly8ga3dBcmdzOiBfX1Nlcmllc0N0b3JBcmdzP1xyXG5cdFx0XHQvL1x0XHRBbiBvcHRpb25hbCBrZXl3b3JkIGFyZ3VtZW50cyBvYmplY3QgdG8gc2V0IGRldGFpbHMgZm9yIHRoaXMgc2VyaWVzLlxyXG5cdFx0XHRsYW5nLm1peGluKHRoaXMsIGt3QXJncyk7XHJcblx0XHRcdGlmKHR5cGVvZiB0aGlzLnBsb3QgIT0gXCJzdHJpbmdcIil7IHRoaXMucGxvdCA9IFwiZGVmYXVsdFwiOyB9XHJcblx0XHRcdHRoaXMudXBkYXRlKGRhdGEpO1xyXG5cdFx0fSxcclxuXHRcclxuXHRcdGNsZWFyOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRDbGVhciB0aGUgY2FsY3VsYXRlZCBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgc2V0IG9uIHRoaXMgc2VyaWVzLlxyXG5cdFx0XHR0aGlzLmR5biA9IHt9O1xyXG5cdFx0fSxcclxuXHRcdFxyXG5cdFx0dXBkYXRlOiBmdW5jdGlvbihkYXRhKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0U2V0IGRhdGEgYW5kIG1ha2UgdGhpcyBvYmplY3QgZGlydHksIHNvIGl0IGNhbiBiZSByZWRyYXduLlxyXG5cdFx0XHQvLyBkYXRhOiBBcnJheXxPYmplY3RcclxuXHRcdFx0Ly9cdFx0VGhlIGFycmF5IG9mIGRhdGEgcG9pbnRzIChlaXRoZXIgbnVtYmVycyBvciBvYmplY3RzKSB0aGF0XHJcblx0XHRcdC8vXHRcdHJlcHJlc2VudHMgdGhlIGRhdGEgdG8gYmUgZHJhd24uIE9yIGl0IGNhbiBiZSBhbiBvYmplY3QuIEluXHJcblx0XHRcdC8vXHRcdHRoZSBsYXR0ZXIgY2FzZSwgaXQgc2hvdWxkIGhhdmUgYSBwcm9wZXJ0eSBcImRhdGFcIiAoYW4gYXJyYXkpLFxyXG5cdFx0XHQvL1x0XHRkZXN0cm95KCksIGFuZCBzZXRTZXJpZXNPYmplY3QoKS5cclxuXHRcdFx0aWYobGFuZy5pc0FycmF5KGRhdGEpKXtcclxuXHRcdFx0XHR0aGlzLmRhdGEgPSBkYXRhO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHR0aGlzLnNvdXJjZSA9IGRhdGE7XHJcblx0XHRcdFx0dGhpcy5kYXRhID0gdGhpcy5zb3VyY2UuZGF0YTtcclxuXHRcdFx0XHRpZih0aGlzLnNvdXJjZS5zZXRTZXJpZXNPYmplY3Qpe1xyXG5cdFx0XHRcdFx0dGhpcy5zb3VyY2Uuc2V0U2VyaWVzT2JqZWN0KHRoaXMpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0dGhpcy5jbGVhcigpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSw4WEFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/Series.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/SimpleTheme.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/charting/SimpleTheme.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"),__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"),__webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/gradutils */ \"./node_modules/dojox/gfx/gradutils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, Color, dlu, dgg){\r\n\t\r\n\tvar SimpleTheme = declare(\"dojox.charting.SimpleTheme\", null, {\r\n\t// summary:\r\n\t//\t\tA SimpleTheme or Theme is a pre-defined object, primarily JSON-based, that makes up the definitions to\r\n\t//\t\tstyle a chart.\r\n\t//\r\n\t// description:\r\n\t//\t\tWhile you can set up style definitions on a chart directly (usually through the various add methods\r\n\t//\t\ton a dojox.charting.Chart object), a Theme simplifies this manual setup by allowing you to\r\n\t//\t\tpre-define all of the various visual parameters of each element in a chart.\r\n\t//\r\n\t//\t\tMost of the properties of a Theme are straight-forward; if something is line-based (such as\r\n\t//\t\tan axis or the ticks on an axis), they will be defined using basic stroke parameters.  Likewise,\r\n\t//\t\tif an element is primarily block-based (such as the background of a chart), it will be primarily\r\n\t//\t\tfill-based.\r\n\t//\r\n\t//\t\tIn addition (for convenience), a Theme definition does not have to contain the entire JSON-based\r\n\t//\t\tstructure.  Each theme is built on top of a default theme (which serves as the basis for the theme\r\n\t//\t\t\"GreySkies\"), and is mixed into the default theme object.  This allows you to create a theme based,\r\n\t//\t\tsay, solely on colors for data series.\r\n\t//\r\n\t//\t\tDefining a new theme is relatively easy; see any of the themes in dojox.charting.themes for examples\r\n\t//\t\ton how to define your own.\r\n\t//\r\n\t//\t\tWhen you set a theme on a chart, the theme itself is deep-cloned.  This means that you cannot alter\r\n\t//\t\tthe theme itself after setting the theme value on a chart, and expect it to change your chart.  If you\r\n\t//\t\tare looking to make alterations to a theme for a chart, the suggestion would be to create your own\r\n\t//\t\ttheme, based on the one you want to use, that makes those alterations before it is applied to a chart.\r\n\t//\r\n\t//\t\tFinally, a Theme contains a number of functions to facilitate rendering operations on a chart--the main\r\n\t//\t\thelper of which is the ~next~ method, in which a chart asks for the information for the next data series\r\n\t//\t\tto be rendered.\r\n\t//\r\n\t//\t\tA note on colors:\r\n\t//\t\tA theme palette is usually comprised of 5 different color definitions, and\r\n\t//\t\tno more.  If you have a need to render a chart with more than 5 data elements, you can simply \"push\"\r\n\t//\t\tnew color definitions into the theme's .color array.  Make sure that you do that with the actual\r\n\t//\t\ttheme object from a Chart, and not in the theme itself (i.e. either do that before using .setTheme\r\n\t//\t\ton a chart).\r\n\t//\r\n\t// example:\r\n\t//\t\tThe default theme (and structure) looks like so:\r\n\t//\t|\t// all objects are structs used directly in dojox.gfx\r\n\t//\t|\tchart:{\r\n\t//\t|\t\tmargins: {l: 10, t: 10, r: 10, b: 10},\r\n\t//\t|\t\tstroke: null,\r\n\t//\t|\t\tfill: \"white\",\r\n\t//\t|\t\tpageStyle: null // suggested page style as an object suitable for dojo.style()\r\n\t//\t|\t},\r\n\t//\t|\tplotarea:{\r\n\t//\t|\t\tstroke: null,\r\n\t//\t|\t\tfill: \"white\"\r\n\t//\t|\t},\r\n\t//\t|\taxis:{\r\n\t//\t|\t\tstroke:\t{ // the axis itself\r\n\t//\t|\t\t\tcolor: \"#333\",\r\n\t//\t|\t\t\twidth: 1\r\n\t//\t|\t\t},\r\n\t//\t|\t\ttick: {\t// used as a foundation for all ticks\r\n\t//\t|\t\t\tcolor:     \"#666\",\r\n\t//\t|\t\t\tposition:  \"center\",\r\n\t//\t|\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\r\n\t//\t|\t\t\tfontColor: \"#333\"\t\t\t\t\t\t\t\t// color of labels\r\n\t//\t|\t\t},\r\n\t//\t|\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\r\n\t//\t|\t\t\twidth:  1,\r\n\t//\t|\t\t\tlength: 6\r\n\t//\t|\t\t},\r\n\t//\t|\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t//\t|\t\t\twidth:  0.8,\r\n\t//\t|\t\t\tlength: 3\r\n\t//\t|\t\t},\r\n\t//\t|\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t//\t|\t\t\twidth:  0.5,\r\n\t//\t|\t\t\tlength: 1\r\n\t//\t|\t\t},\r\n\t//\t|\t\ttitle: {\r\n\t//\t|\t\t\tgap:  15,\r\n\t//\t|\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\r\n\t//\t|\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\r\n\t//\t|\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\r\n\t//\t|\t\t}\r\n\t//\t|\t},\r\n\t//\t|\tseries: {\r\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\r\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t//\t|\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\r\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t//\t|\t\t//filter:  dojox/gfx/filters.createFilter(),\r\n\t//\t|\t\tfilter: null,\t\t\t\t\t\t\t\t// no filter, to use a filter you must use gfx SVG render and require dojox/gfx/svgext\r\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\r\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\r\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t// color of labels\r\n\t//\t|\t\tlabelWiring: {width: 1, color: \"#ccc\"},\t\t// connect marker and target data item(slice, column, bar...)\r\n\t//\t|\t},\r\n\t//\t|\tmarker: {\t// any markers on a series\r\n\t//\t|\t\tsymbol:  \"m-3,3 l3,-6 3,6 z\",\t\t\t\t// symbol\r\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\r\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t//\t|\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\r\n\t//\t|\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\r\n\t//\t|\t\tfontColor: \"#000\"\r\n\t//\t|\t},\r\n\t//\t|\tgrid: {\t// grid, when not present axis tick strokes are used instead\r\n\t//\t|\t\tmajorLine: {\t// major grid line\r\n\t//\t|\t\t\tcolor:     \"#666\",\r\n\t//\t|\t\t\twidth:  1,\r\n\t//\t|\t\t\tlength: 6\r\n\t//\t|\t\t},\r\n\t//\t|\t\tminorLine: {\t// minor grid line\r\n\t//\t|\t\t\tcolor:     \"#666\",\r\n\t//\t|\t\t\twidth:  0.8,\r\n\t//\t|\t\t\tlength: 3\r\n\t//\t|\t\t},\r\n\t//\t|\t\tfill: \"grey\",  // every other stripe\r\n\t//\t|\t\talternateFill: \"grey\" // alternate stripe\r\n\t//\t|\t},\r\n\t//\t|\tindicator: {\r\n\t//\t|\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t// line\r\n\t//\t|\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t// line outline\r\n\t//\t|\t\tlineShadow: null,\t\t\t\t\t\t\t\t// no line shadow\r\n\t//\t|\t\tlineFill: null,\t\t\t\t\t\t\t\t\t// fill between lines for dual indicators\r\n\t//\t|\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\t// label background stroke\r\n\t//\t|\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\t// label background outline\r\n\t//\t|\t\tshadow: null,\t\t\t\t\t\t\t\t\t// no label background shadow\r\n\t//\t|\t\tfill:  \"#ccc\",\t\t\t\t\t\t\t\t\t// label background fill\r\n\t//\t|\t\tradius: 3,\t\t\t\t\t\t\t\t\t\t// radius of the label background\r\n\t//\t|\t\tfont:    \"normal normal normal 10pt Tahoma\",\t// label font\r\n\t//\t|\t\tfontColor: \"#000\"\t\t\t\t\t\t\t\t// label color\r\n\t//\t|\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t// marker fill\r\n\t//\t|\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t// marker symbol\r\n\t//\t|\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t// marker stroke\r\n\t//\t|\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t// marker outline\r\n\t//\t|\t\tmarkerShadow: null\t\t\t\t\t\t\t\t// no marker shadow\r\n\t//\t|\t},\r\n\t//\t|\tpieInnerRadius: 33\r\n\t//\r\n\t// example:\r\n\t//\t\tDefining a new theme is pretty simple:\r\n\t//\t|\tvar Grasslands = new SimpleTheme({\r\n\t//\t|\t\tcolors: [ \"#70803a\", \"#dde574\", \"#788062\", \"#b1cc5d\", \"#eff2c2\" ],\r\n\t//\t|\t\tpieInnerRadius: 15\r\n\t//\t|\t});\r\n\t//\t|\r\n\t//\t|\tmyChart.setTheme(Grasslands);\r\n\r\n\tshapeSpaces: {shape: 1, shapeX: 1, shapeY: 1},\r\n\r\n\tconstructor: function(kwArgs){\r\n\t\t// summary:\r\n\t\t//\t\tInitialize a theme using the keyword arguments.  Note that the arguments\r\n\t\t//\t\tlook like the example (above), and may include a few more parameters.\r\n\t\tkwArgs = kwArgs || {};\r\n\r\n\t\t// populate theme with defaults updating them if needed\r\n\t\tvar def = SimpleTheme.defaultTheme;\r\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\r\n\t\t\tthis[name] = lang.delegate(def[name], kwArgs[name]);\r\n\t\t}, this);\r\n\r\n\t\t// personalize theme\r\n\t\tif(kwArgs.seriesThemes && kwArgs.seriesThemes.length){\r\n\t\t\tthis.colors  = null;\r\n\t\t\tthis.seriesThemes = kwArgs.seriesThemes.slice(0);\r\n\t\t}else{\r\n\t\t\tthis.seriesThemes = null;\r\n\t\t\tthis.colors = (kwArgs.colors || SimpleTheme.defaultColors).slice(0);\r\n\t\t}\r\n\t\tthis.markerThemes = null;\r\n\t\tif(kwArgs.markerThemes && kwArgs.markerThemes.length){\r\n\t\t\tthis.markerThemes = kwArgs.markerThemes.slice(0);\r\n\t\t}\r\n\t\tthis.markers = kwArgs.markers ? lang.clone(kwArgs.markers) : lang.delegate(SimpleTheme.defaultMarkers);\r\n\r\n\t\t// set flags\r\n\t\tthis.noGradConv = kwArgs.noGradConv;\r\n\t\tthis.noRadialConv = kwArgs.noRadialConv;\r\n\t\tif(kwArgs.reverseFills){\r\n\t\t\tthis.reverseFills();\r\n\t\t}\r\n\r\n\t\t//\tprivate housekeeping\r\n\t\tthis._current = 0;\r\n\t\tthis._buildMarkerArray();\r\n\t},\r\n\r\n\tclone: function(){\r\n\t\t// summary:\r\n\t\t//\t\tClone the current theme.\r\n\t\t// returns: dojox.charting.SimpleTheme\r\n\t\t//\t\tThe cloned theme; any alterations made will not affect the original.\r\n\t\tvar theme = new this.constructor({\r\n\t\t\t// theme components\r\n\t\t\tchart: this.chart,\r\n\t\t\tplotarea: this.plotarea,\r\n\t\t\taxis: this.axis,\r\n\t\t\tgrid: this.grid,\r\n\t\t\tseries: this.series,\r\n\t\t\tmarker: this.marker,\r\n\t\t\t// individual arrays\r\n\t\t\tcolors: this.colors,\r\n\t\t\tmarkers: this.markers,\r\n\t\t\tindicator: this.indicator,\r\n\t\t\tseriesThemes: this.seriesThemes,\r\n\t\t\tmarkerThemes: this.markerThemes,\r\n\t\t\t// flags\r\n\t\t\tnoGradConv: this.noGradConv,\r\n\t\t\tnoRadialConv: this.noRadialConv,\r\n\t\t\tpieInnerRadius: this.pieInnerRadius\r\n\t\t});\r\n\t\t// copy custom methods\r\n\t\tarr.forEach(\r\n\t\t\t[\"clone\", \"clear\", \"next\", \"skip\", \"addMixin\", \"post\", \"getTick\"],\r\n\t\t\tfunction(name){\r\n\t\t\t\tif(this.hasOwnProperty(name)){\r\n\t\t\t\t\ttheme[name] = this[name];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tthis\r\n\t\t);\r\n\t\treturn theme;\t//\tdojox.charting.SimpleTheme\r\n\t},\r\n\r\n\tclear: function(){\r\n\t\t// summary:\r\n\t\t//\t\tClear and reset the internal pointer to start fresh.\r\n\t\tthis._current = 0;\r\n\t},\r\n\r\n\tnext: function(elementType, mixin, doPost){\r\n\t\t// summary:\r\n\t\t//\t\tGet the next color or series theme.\r\n\t\t// elementType: String?\r\n\t\t//\t\tAn optional element type (for use with series themes)\r\n\t\t// mixin: Object?\r\n\t\t//\t\tAn optional object to mix into the theme.\r\n\t\t// doPost: Boolean?\r\n\t\t//\t\tA flag to post-process the results.\r\n\t\t// returns: Object\r\n\t\t//\t\tAn object of the structure { series, marker, symbol }\r\n\t\tvar merge = dlu.merge, series, marker;\r\n\t\tif(this.colors){\r\n\t\t\tseries = lang.delegate(this.series);\r\n\t\t\tmarker = lang.delegate(this.marker);\r\n\t\t\tvar color = new Color(this.colors[this._current % this.colors.length]), old;\r\n\t\t\t// modify the stroke\r\n\t\t\tif(series.stroke && series.stroke.color){\r\n\t\t\t\tseries.stroke = lang.delegate(series.stroke);\r\n\t\t\t\told = new Color(series.stroke.color);\r\n\t\t\t\tseries.stroke.color = new Color(color);\r\n\t\t\t\tseries.stroke.color.a = old.a;\r\n\t\t\t}else{\r\n\t\t\t\tseries.stroke = {color: color};\r\n\t\t\t}\r\n\t\t\tif(marker.stroke && marker.stroke.color){\r\n\t\t\t\tmarker.stroke = lang.delegate(marker.stroke);\r\n\t\t\t\told = new Color(marker.stroke.color);\r\n\t\t\t\tmarker.stroke.color = new Color(color);\r\n\t\t\t\tmarker.stroke.color.a = old.a;\r\n\t\t\t}else{\r\n\t\t\t\tmarker.stroke = {color: color};\r\n\t\t\t}\r\n\t\t\t// modify the fill\r\n\t\t\tif(!series.fill || series.fill.type){\r\n\t\t\t\tseries.fill = color;\r\n\t\t\t}else{\r\n\t\t\t\told = new Color(series.fill);\r\n\t\t\t\tseries.fill = new Color(color);\r\n\t\t\t\tseries.fill.a = old.a;\r\n\t\t\t}\r\n\t\t\tif(!marker.fill || marker.fill.type){\r\n\t\t\t\tmarker.fill = color;\r\n\t\t\t}else{\r\n\t\t\t\told = new Color(marker.fill);\r\n\t\t\t\tmarker.fill = new Color(color);\r\n\t\t\t\tmarker.fill.a = old.a;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tseries = this.seriesThemes ?\r\n\t\t\t\tmerge(this.series, this.seriesThemes[this._current % this.seriesThemes.length]) :\r\n\t\t\t\tthis.series;\r\n\t\t\tmarker = this.markerThemes ?\r\n\t\t\t\tmerge(this.marker, this.markerThemes[this._current % this.markerThemes.length]) :\r\n\t\t\t\tseries;\r\n\t\t}\r\n\r\n\t\tvar symbol = marker && marker.symbol || this._markers[this._current % this._markers.length];\r\n\r\n\t\tvar theme = {series: series, marker: marker, symbol: symbol};\r\n\t\t\r\n\t\t// advance the counter\r\n\t\t++this._current;\r\n\r\n\t\tif(mixin){\r\n\t\t\ttheme = this.addMixin(theme, elementType, mixin);\r\n\t\t}\r\n\t\tif(doPost){\r\n\t\t\ttheme = this.post(theme, elementType);\r\n\t\t}\r\n\r\n\t\treturn theme;\t//\tObject\r\n\t},\r\n\r\n\tskip: function(){\r\n\t\t// summary:\r\n\t\t//\t\tSkip the next internal color.\r\n\t\t++this._current;\r\n\t},\r\n\r\n\taddMixin: function(theme, elementType, mixin, doPost){\r\n\t\t// summary:\r\n\t\t//\t\tAdd a mixin object to the passed theme and process.\r\n\t\t// theme: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe theme to mixin to.\r\n\t\t// elementType: String\r\n\t\t//\t\tThe type of element in question. Can be \"line\", \"bar\" or \"circle\"\r\n\t\t// mixin: Object|Array\r\n\t\t//\t\tThe object or objects to mix into the theme.\r\n\t\t// doPost: Boolean\r\n\t\t//\t\tIf true, run the new theme through the post-processor.\r\n\t\t// returns: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe new theme.\r\n\t\tif(lang.isArray(mixin)){\r\n\t\t\tarr.forEach(mixin, function(m){\r\n\t\t\t\ttheme = this.addMixin(theme, elementType, m);\r\n\t\t\t}, this);\r\n\t\t}else{\r\n\t\t\tvar t = {};\r\n\t\t\tif(\"color\" in mixin){\r\n\t\t\t\tif(elementType == \"line\" || elementType == \"area\"){\r\n\t\t\t\t\tlang.setObject(\"series.stroke.color\", mixin.color, t);\r\n\t\t\t\t\tlang.setObject(\"marker.stroke.color\", mixin.color, t);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlang.setObject(\"series.fill\", mixin.color, t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tarr.forEach([\"stroke\", \"outline\", \"shadow\", \"fill\", \"filter\", \"font\", \"fontColor\", \"labelWiring\"], function(name){\r\n\t\t\t\tvar markerName = \"marker\" + name.charAt(0).toUpperCase() + name.substr(1),\r\n\t\t\t\t\tb = markerName in mixin;\r\n\t\t\t\tif(name in mixin){\r\n\t\t\t\t\tlang.setObject(\"series.\" + name, mixin[name], t);\r\n\t\t\t\t\tif(!b){\r\n\t\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[name], t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(b){\r\n\t\t\t\t\tlang.setObject(\"marker.\" + name, mixin[markerName], t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(\"marker\" in mixin){\r\n\t\t\t\tt.symbol = mixin.marker;\r\n\t\t\t\tt.symbol = mixin.marker;\r\n\t\t\t}\r\n\t\t\ttheme = dlu.merge(theme, t);\r\n\t\t}\r\n\t\tif(doPost){\r\n\t\t\ttheme = this.post(theme, elementType);\r\n\t\t}\r\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\r\n\t},\r\n\r\n\tpost: function(theme, elementType){\r\n\t\t// summary:\r\n\t\t//\t\tProcess any post-shape fills.\r\n\t\t// theme: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe theme to post process with.\r\n\t\t// elementType: String\r\n\t\t//\t\tThe type of element being filled.  Can be \"bar\" or \"circle\".\r\n\t\t// returns: dojox/charting/SimpleTheme\r\n\t\t//\t\tThe post-processed theme.\r\n\t\tvar fill = theme.series.fill, t;\r\n\t\tif(!this.noGradConv && this.shapeSpaces[fill.space] && fill.type == \"linear\"){\r\n\t\t\tif(elementType == \"bar\"){\r\n\t\t\t\t// transpose start and end points\r\n\t\t\t\tt = {\r\n\t\t\t\t\tx1: fill.y1,\r\n\t\t\t\t\ty1: fill.x1,\r\n\t\t\t\t\tx2: fill.y2,\r\n\t\t\t\t\ty2: fill.x2\r\n\t\t\t\t};\r\n\t\t\t}else if(!this.noRadialConv && fill.space == \"shape\" && (elementType == \"slice\" || elementType == \"circle\")){\r\n\t\t\t\t// switch to radial\r\n\t\t\t\tt = {\r\n\t\t\t\t\ttype: \"radial\",\r\n\t\t\t\t\tcx: 0,\r\n\t\t\t\t\tcy: 0,\r\n\t\t\t\t\tr:  100\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(t){\r\n\t\t\t\treturn dlu.merge(theme, {series: {fill: t}});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn theme;\t//\tdojox/charting/SimpleTheme\r\n\t},\r\n\r\n\tgetTick: function(name, mixin){\r\n\t\t// summary:\r\n\t\t//\t\tCalculates and merges tick parameters.\r\n\t\t// name: String\r\n\t\t//\t\tTick name, can be \"major\", \"minor\", or \"micro\".\r\n\t\t// mixin: Object?\r\n\t\t//\t\tOptional object to mix in to the tick.\r\n\t\tvar tick = this.axis.tick, tickName = name + \"Tick\",\r\n\t\t\tmerge = dlu.merge;\r\n\t\tif(tick){\r\n\t\t\tif(this.axis[tickName]){\r\n\t\t\t\ttick = merge(tick, this.axis[tickName]);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttick = this.axis[tickName];\r\n\t\t}\r\n\t\tif(mixin){\r\n\t\t\tif(tick){\r\n\t\t\t\tif(mixin[tickName]){\r\n\t\t\t\t\ttick = merge(tick, mixin[tickName]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\ttick = mixin[tickName];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tick;\t//\tObject\r\n\t},\r\n\r\n\tinspectObjects: function(f){\r\n\t\tarr.forEach([\"chart\", \"plotarea\", \"axis\", \"grid\", \"series\", \"marker\", \"indicator\"], function(name){\r\n\t\t\tf(this[name]);\r\n\t\t}, this);\r\n\t\tif(this.seriesThemes){\r\n\t\t\tarr.forEach(this.seriesThemes, f);\r\n\t\t}\r\n\t\tif(this.markerThemes){\r\n\t\t\tarr.forEach(this.markerThemes, f);\r\n\t\t}\r\n\t},\r\n\r\n\treverseFills: function(){\r\n\t\tthis.inspectObjects(function(o){\r\n\t\t\tif(o && o.fill){\r\n\t\t\t\to.fill = dgg.reverse(o.fill);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\taddMarker:function(/*String*/ name, /*String*/ segment){\r\n\t\t// summary:\r\n\t\t//\t\tAdd a custom marker to this theme.\r\n\t\t// example:\r\n\t\t//\t|\tmyTheme.addMarker(\"Ellipse\", foo);\r\n\t\tthis.markers[name] = segment;\r\n\t\tthis._buildMarkerArray();\r\n\t},\r\n\r\n\tsetMarkers:function(/*Object*/ obj){\r\n\t\t// summary:\r\n\t\t//\t\tSet all the markers of this theme at once.  obj should be a\r\n\t\t//\t\tdictionary of keys and path segments.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t|\tmyTheme.setMarkers({ \"CIRCLE\": foo });\r\n\t\tthis.markers = obj;\r\n\t\tthis._buildMarkerArray();\r\n\t},\r\n\r\n\t_buildMarkerArray: function(){\r\n\t\tthis._markers = [];\r\n\t\tfor(var p in this.markers){\r\n\t\t\tthis._markers.push(this.markers[p]);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nlang.mixin(SimpleTheme, {\r\n\tdefaultMarkers: {\r\n\t\tCIRCLE:   \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\r\n\t\tSQUARE:   \"m-3,-3 l0,6 6,0 0,-6 z\",\r\n\t\tDIAMOND:  \"m0,-3 l3,3 -3,3 -3,-3 z\",\r\n\t\tCROSS:    \"m0,-3 l0,6 m-3,-3 l6,0\",\r\n\t\tX:        \"m-3,-3 l6,6 m0,-6 l-6,6\",\r\n\t\tTRIANGLE: \"m-3,3 l3,-6 3,6 z\",\r\n\t\tTRIANGLE_INVERTED: \"m-3,-3 l3,6 3,-6 z\"\r\n\t},\r\n\r\n\tdefaultColors:[\r\n\t\t// gray skies\r\n\t\t\"#54544c\", \"#858e94\", \"#6e767a\", \"#948585\", \"#474747\"\r\n\t],\r\n\r\n\tdefaultTheme: {\r\n\t\t// all objects are structs used directly in dojox.gfx\r\n\t\tchart:{\r\n\t\t\tstroke: null,\r\n\t\t\tfill: \"white\",\r\n\t\t\tpageStyle: null,\r\n\t\t\ttitleGap:\t\t20,\r\n\t\t\ttitlePos:\t\t\"top\",\r\n\t\t\ttitleFont:      \"normal normal bold 14pt Tahoma\",\t// chart title\r\n\t\t\ttitleFontColor: \"#333\",\r\n\t\t\ttitleAlign: \"middle\"\r\n\t\t},\r\n\t\tplotarea:{\r\n\t\t\tstroke: null,\r\n\t\t\tfill: \"white\"\r\n\t\t},\r\n\t\t// TODO: label rotation on axis\r\n\t\taxis:{\r\n\t\t\tstroke:\t{ // the axis itself\r\n\t\t\t\tcolor: \"#333\",\r\n\t\t\t\twidth: 1\r\n\t\t\t},\r\n\t\t\ttick: {\t// used as a foundation for all ticks\r\n\t\t\t\tcolor:     \"#666\",\r\n\t\t\t\tposition:  \"center\",\r\n\t\t\t\tfont:      \"normal normal normal 7pt Tahoma\",\t// labels on axis\r\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t\t// color of labels\r\n\t\t\t\tlabelGap:  4                                    // gap between a tick and its label in pixels\r\n\t\t\t},\r\n\t\t\tmajorTick:\t{ // major ticks on axis, and used for major gridlines\r\n\t\t\t\twidth:  1,\r\n\t\t\t\tlength: 6\r\n\t\t\t},\r\n\t\t\tminorTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t\t\t\twidth:  0.8,\r\n\t\t\t\tlength: 3\r\n\t\t\t},\r\n\t\t\tmicroTick:\t{ // minor ticks on axis, and used for minor gridlines\r\n\t\t\t\twidth:  0.5,\r\n\t\t\t\tlength: 1\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\tgap:  15,\r\n\t\t\t\tfont: \"normal normal normal 11pt Tahoma\",\t// title font\r\n\t\t\t\tfontColor: \"#333\",\t\t\t\t\t\t\t// title font color\r\n\t\t\t\torientation: \"axis\"\t\t\t\t\t\t// \"axis\": facing the axis, \"away\": facing away\r\n\t\t\t}\r\n\t\t},\r\n\t\tseries: {\r\n\t\t\t// used as a \"main\" theme for series, sThemes augment it\r\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// line\r\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\r\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill, if appropriate\r\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// if there's a label\r\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t// color of labels\r\n\t\t\tlabelWiring: {width: 1, color: \"#ccc\"}\t\t// connect marker and target data item(slice, column, bar...)\r\n\t\t},\r\n\t\tmarker: {\t// any markers on a series\r\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t// stroke\r\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t// outline\r\n\t\t\t//shadow:  {dx: 1, dy: 1, width: 2, color: [0, 0, 0, 0.3]},\r\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t// no shadow\r\n\t\t\tfill:    \"#ccc\",\t\t\t\t\t\t\t// fill if needed\r\n\t\t\tfont:    \"normal normal normal 8pt Tahoma\",\t// label\r\n\t\t\tfontColor: \"#000\"\r\n\t\t},\r\n\t\tindicator: {\r\n\t\t\tlineStroke:  {width: 1.5, color: \"#333\"},\t\t\r\n\t\t\tlineOutline: {width: 0.1, color: \"#ccc\"},\t\t\r\n\t\t\tlineShadow: null,\r\n\t\t\tlineFill: null,\r\n\t\t\tstroke:  {width: 1.5, color: \"#333\"},\t\t\r\n\t\t\toutline: {width: 0.1, color: \"#ccc\"},\t\t\r\n\t\t\tshadow: null,\t\t\t\t\t\t\t\t\r\n\t\t\tfill : \"#ccc\",\r\n\t\t\tradius: 3,\r\n\t\t\tfont:    \"normal normal normal 10pt Tahoma\",\t\r\n\t\t\tfontColor: \"#000\",\t\t\t\t\t\t\t\r\n\t\t\tmarkerFill:    \"#ccc\",\t\t\t\t\t\t\t\r\n\t\t\tmarkerSymbol:  \"m-3,0 c0,-4 6,-4 6,0 m-6,0 c0,4 6,4 6,0\",\t\t\t\r\n\t\t\tmarkerStroke:  {width: 1.5, color: \"#333\"},\t\t\r\n\t\t\tmarkerOutline: {width: 0.1, color: \"#ccc\"},\t\t\r\n\t\t\tmarkerShadow: null\t\t\t\t\t\t\t\t\r\n\t\t}\r\n\t}\r\n});\r\n\r\nreturn SimpleTheme;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvU2ltcGxlVGhlbWUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvU2ltcGxlVGhlbWUuanM/NTA2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9sYW5nXCIsIFwiZG9qby9fYmFzZS9hcnJheVwiLFwiZG9qby9fYmFzZS9kZWNsYXJlXCIsXCJkb2pvL19iYXNlL0NvbG9yXCIsIFwiZG9qb3gvbGFuZy91dGlsc1wiLCBcImRvam94L2dmeC9ncmFkdXRpbHNcIl0sXHJcblx0ZnVuY3Rpb24obGFuZywgYXJyLCBkZWNsYXJlLCBDb2xvciwgZGx1LCBkZ2cpe1xyXG5cdFxyXG5cdHZhciBTaW1wbGVUaGVtZSA9IGRlY2xhcmUoXCJkb2pveC5jaGFydGluZy5TaW1wbGVUaGVtZVwiLCBudWxsLCB7XHJcblx0Ly8gc3VtbWFyeTpcclxuXHQvL1x0XHRBIFNpbXBsZVRoZW1lIG9yIFRoZW1lIGlzIGEgcHJlLWRlZmluZWQgb2JqZWN0LCBwcmltYXJpbHkgSlNPTi1iYXNlZCwgdGhhdCBtYWtlcyB1cCB0aGUgZGVmaW5pdGlvbnMgdG9cclxuXHQvL1x0XHRzdHlsZSBhIGNoYXJ0LlxyXG5cdC8vXHJcblx0Ly8gZGVzY3JpcHRpb246XHJcblx0Ly9cdFx0V2hpbGUgeW91IGNhbiBzZXQgdXAgc3R5bGUgZGVmaW5pdGlvbnMgb24gYSBjaGFydCBkaXJlY3RseSAodXN1YWxseSB0aHJvdWdoIHRoZSB2YXJpb3VzIGFkZCBtZXRob2RzXHJcblx0Ly9cdFx0b24gYSBkb2pveC5jaGFydGluZy5DaGFydCBvYmplY3QpLCBhIFRoZW1lIHNpbXBsaWZpZXMgdGhpcyBtYW51YWwgc2V0dXAgYnkgYWxsb3dpbmcgeW91IHRvXHJcblx0Ly9cdFx0cHJlLWRlZmluZSBhbGwgb2YgdGhlIHZhcmlvdXMgdmlzdWFsIHBhcmFtZXRlcnMgb2YgZWFjaCBlbGVtZW50IGluIGEgY2hhcnQuXHJcblx0Ly9cclxuXHQvL1x0XHRNb3N0IG9mIHRoZSBwcm9wZXJ0aWVzIG9mIGEgVGhlbWUgYXJlIHN0cmFpZ2h0LWZvcndhcmQ7IGlmIHNvbWV0aGluZyBpcyBsaW5lLWJhc2VkIChzdWNoIGFzXHJcblx0Ly9cdFx0YW4gYXhpcyBvciB0aGUgdGlja3Mgb24gYW4gYXhpcyksIHRoZXkgd2lsbCBiZSBkZWZpbmVkIHVzaW5nIGJhc2ljIHN0cm9rZSBwYXJhbWV0ZXJzLiAgTGlrZXdpc2UsXHJcblx0Ly9cdFx0aWYgYW4gZWxlbWVudCBpcyBwcmltYXJpbHkgYmxvY2stYmFzZWQgKHN1Y2ggYXMgdGhlIGJhY2tncm91bmQgb2YgYSBjaGFydCksIGl0IHdpbGwgYmUgcHJpbWFyaWx5XHJcblx0Ly9cdFx0ZmlsbC1iYXNlZC5cclxuXHQvL1xyXG5cdC8vXHRcdEluIGFkZGl0aW9uIChmb3IgY29udmVuaWVuY2UpLCBhIFRoZW1lIGRlZmluaXRpb24gZG9lcyBub3QgaGF2ZSB0byBjb250YWluIHRoZSBlbnRpcmUgSlNPTi1iYXNlZFxyXG5cdC8vXHRcdHN0cnVjdHVyZS4gIEVhY2ggdGhlbWUgaXMgYnVpbHQgb24gdG9wIG9mIGEgZGVmYXVsdCB0aGVtZSAod2hpY2ggc2VydmVzIGFzIHRoZSBiYXNpcyBmb3IgdGhlIHRoZW1lXHJcblx0Ly9cdFx0XCJHcmV5U2tpZXNcIiksIGFuZCBpcyBtaXhlZCBpbnRvIHRoZSBkZWZhdWx0IHRoZW1lIG9iamVjdC4gIFRoaXMgYWxsb3dzIHlvdSB0byBjcmVhdGUgYSB0aGVtZSBiYXNlZCxcclxuXHQvL1x0XHRzYXksIHNvbGVseSBvbiBjb2xvcnMgZm9yIGRhdGEgc2VyaWVzLlxyXG5cdC8vXHJcblx0Ly9cdFx0RGVmaW5pbmcgYSBuZXcgdGhlbWUgaXMgcmVsYXRpdmVseSBlYXN5OyBzZWUgYW55IG9mIHRoZSB0aGVtZXMgaW4gZG9qb3guY2hhcnRpbmcudGhlbWVzIGZvciBleGFtcGxlc1xyXG5cdC8vXHRcdG9uIGhvdyB0byBkZWZpbmUgeW91ciBvd24uXHJcblx0Ly9cclxuXHQvL1x0XHRXaGVuIHlvdSBzZXQgYSB0aGVtZSBvbiBhIGNoYXJ0LCB0aGUgdGhlbWUgaXRzZWxmIGlzIGRlZXAtY2xvbmVkLiAgVGhpcyBtZWFucyB0aGF0IHlvdSBjYW5ub3QgYWx0ZXJcclxuXHQvL1x0XHR0aGUgdGhlbWUgaXRzZWxmIGFmdGVyIHNldHRpbmcgdGhlIHRoZW1lIHZhbHVlIG9uIGEgY2hhcnQsIGFuZCBleHBlY3QgaXQgdG8gY2hhbmdlIHlvdXIgY2hhcnQuICBJZiB5b3VcclxuXHQvL1x0XHRhcmUgbG9va2luZyB0byBtYWtlIGFsdGVyYXRpb25zIHRvIGEgdGhlbWUgZm9yIGEgY2hhcnQsIHRoZSBzdWdnZXN0aW9uIHdvdWxkIGJlIHRvIGNyZWF0ZSB5b3VyIG93blxyXG5cdC8vXHRcdHRoZW1lLCBiYXNlZCBvbiB0aGUgb25lIHlvdSB3YW50IHRvIHVzZSwgdGhhdCBtYWtlcyB0aG9zZSBhbHRlcmF0aW9ucyBiZWZvcmUgaXQgaXMgYXBwbGllZCB0byBhIGNoYXJ0LlxyXG5cdC8vXHJcblx0Ly9cdFx0RmluYWxseSwgYSBUaGVtZSBjb250YWlucyBhIG51bWJlciBvZiBmdW5jdGlvbnMgdG8gZmFjaWxpdGF0ZSByZW5kZXJpbmcgb3BlcmF0aW9ucyBvbiBhIGNoYXJ0LS10aGUgbWFpblxyXG5cdC8vXHRcdGhlbHBlciBvZiB3aGljaCBpcyB0aGUgfm5leHR+IG1ldGhvZCwgaW4gd2hpY2ggYSBjaGFydCBhc2tzIGZvciB0aGUgaW5mb3JtYXRpb24gZm9yIHRoZSBuZXh0IGRhdGEgc2VyaWVzXHJcblx0Ly9cdFx0dG8gYmUgcmVuZGVyZWQuXHJcblx0Ly9cclxuXHQvL1x0XHRBIG5vdGUgb24gY29sb3JzOlxyXG5cdC8vXHRcdEEgdGhlbWUgcGFsZXR0ZSBpcyB1c3VhbGx5IGNvbXByaXNlZCBvZiA1IGRpZmZlcmVudCBjb2xvciBkZWZpbml0aW9ucywgYW5kXHJcblx0Ly9cdFx0bm8gbW9yZS4gIElmIHlvdSBoYXZlIGEgbmVlZCB0byByZW5kZXIgYSBjaGFydCB3aXRoIG1vcmUgdGhhbiA1IGRhdGEgZWxlbWVudHMsIHlvdSBjYW4gc2ltcGx5IFwicHVzaFwiXHJcblx0Ly9cdFx0bmV3IGNvbG9yIGRlZmluaXRpb25zIGludG8gdGhlIHRoZW1lJ3MgLmNvbG9yIGFycmF5LiAgTWFrZSBzdXJlIHRoYXQgeW91IGRvIHRoYXQgd2l0aCB0aGUgYWN0dWFsXHJcblx0Ly9cdFx0dGhlbWUgb2JqZWN0IGZyb20gYSBDaGFydCwgYW5kIG5vdCBpbiB0aGUgdGhlbWUgaXRzZWxmIChpLmUuIGVpdGhlciBkbyB0aGF0IGJlZm9yZSB1c2luZyAuc2V0VGhlbWVcclxuXHQvL1x0XHRvbiBhIGNoYXJ0KS5cclxuXHQvL1xyXG5cdC8vIGV4YW1wbGU6XHJcblx0Ly9cdFx0VGhlIGRlZmF1bHQgdGhlbWUgKGFuZCBzdHJ1Y3R1cmUpIGxvb2tzIGxpa2Ugc286XHJcblx0Ly9cdHxcdC8vIGFsbCBvYmplY3RzIGFyZSBzdHJ1Y3RzIHVzZWQgZGlyZWN0bHkgaW4gZG9qb3guZ2Z4XHJcblx0Ly9cdHxcdGNoYXJ0OntcclxuXHQvL1x0fFx0XHRtYXJnaW5zOiB7bDogMTAsIHQ6IDEwLCByOiAxMCwgYjogMTB9LFxyXG5cdC8vXHR8XHRcdHN0cm9rZTogbnVsbCxcclxuXHQvL1x0fFx0XHRmaWxsOiBcIndoaXRlXCIsXHJcblx0Ly9cdHxcdFx0cGFnZVN0eWxlOiBudWxsIC8vIHN1Z2dlc3RlZCBwYWdlIHN0eWxlIGFzIGFuIG9iamVjdCBzdWl0YWJsZSBmb3IgZG9qby5zdHlsZSgpXHJcblx0Ly9cdHxcdH0sXHJcblx0Ly9cdHxcdHBsb3RhcmVhOntcclxuXHQvL1x0fFx0XHRzdHJva2U6IG51bGwsXHJcblx0Ly9cdHxcdFx0ZmlsbDogXCJ3aGl0ZVwiXHJcblx0Ly9cdHxcdH0sXHJcblx0Ly9cdHxcdGF4aXM6e1xyXG5cdC8vXHR8XHRcdHN0cm9rZTpcdHsgLy8gdGhlIGF4aXMgaXRzZWxmXHJcblx0Ly9cdHxcdFx0XHRjb2xvcjogXCIjMzMzXCIsXHJcblx0Ly9cdHxcdFx0XHR3aWR0aDogMVxyXG5cdC8vXHR8XHRcdH0sXHJcblx0Ly9cdHxcdFx0dGljazoge1x0Ly8gdXNlZCBhcyBhIGZvdW5kYXRpb24gZm9yIGFsbCB0aWNrc1xyXG5cdC8vXHR8XHRcdFx0Y29sb3I6ICAgICBcIiM2NjZcIixcclxuXHQvL1x0fFx0XHRcdHBvc2l0aW9uOiAgXCJjZW50ZXJcIixcclxuXHQvL1x0fFx0XHRcdGZvbnQ6ICAgICAgXCJub3JtYWwgbm9ybWFsIG5vcm1hbCA3cHQgVGFob21hXCIsXHQvLyBsYWJlbHMgb24gYXhpc1xyXG5cdC8vXHR8XHRcdFx0Zm9udENvbG9yOiBcIiMzMzNcIlx0XHRcdFx0XHRcdFx0XHQvLyBjb2xvciBvZiBsYWJlbHNcclxuXHQvL1x0fFx0XHR9LFxyXG5cdC8vXHR8XHRcdG1ham9yVGljazpcdHsgLy8gbWFqb3IgdGlja3Mgb24gYXhpcywgYW5kIHVzZWQgZm9yIG1ham9yIGdyaWRsaW5lc1xyXG5cdC8vXHR8XHRcdFx0d2lkdGg6ICAxLFxyXG5cdC8vXHR8XHRcdFx0bGVuZ3RoOiA2XHJcblx0Ly9cdHxcdFx0fSxcclxuXHQvL1x0fFx0XHRtaW5vclRpY2s6XHR7IC8vIG1pbm9yIHRpY2tzIG9uIGF4aXMsIGFuZCB1c2VkIGZvciBtaW5vciBncmlkbGluZXNcclxuXHQvL1x0fFx0XHRcdHdpZHRoOiAgMC44LFxyXG5cdC8vXHR8XHRcdFx0bGVuZ3RoOiAzXHJcblx0Ly9cdHxcdFx0fSxcclxuXHQvL1x0fFx0XHRtaWNyb1RpY2s6XHR7IC8vIG1pbm9yIHRpY2tzIG9uIGF4aXMsIGFuZCB1c2VkIGZvciBtaW5vciBncmlkbGluZXNcclxuXHQvL1x0fFx0XHRcdHdpZHRoOiAgMC41LFxyXG5cdC8vXHR8XHRcdFx0bGVuZ3RoOiAxXHJcblx0Ly9cdHxcdFx0fSxcclxuXHQvL1x0fFx0XHR0aXRsZToge1xyXG5cdC8vXHR8XHRcdFx0Z2FwOiAgMTUsXHJcblx0Ly9cdHxcdFx0XHRmb250OiBcIm5vcm1hbCBub3JtYWwgbm9ybWFsIDExcHQgVGFob21hXCIsXHQvLyB0aXRsZSBmb250XHJcblx0Ly9cdHxcdFx0XHRmb250Q29sb3I6IFwiIzMzM1wiLFx0XHRcdFx0XHRcdFx0Ly8gdGl0bGUgZm9udCBjb2xvclxyXG5cdC8vXHR8XHRcdFx0b3JpZW50YXRpb246IFwiYXhpc1wiXHRcdFx0XHRcdFx0Ly8gXCJheGlzXCI6IGZhY2luZyB0aGUgYXhpcywgXCJhd2F5XCI6IGZhY2luZyBhd2F5XHJcblx0Ly9cdHxcdFx0fVxyXG5cdC8vXHR8XHR9LFxyXG5cdC8vXHR8XHRzZXJpZXM6IHtcclxuXHQvL1x0fFx0XHRzdHJva2U6ICB7d2lkdGg6IDEuNSwgY29sb3I6IFwiIzMzM1wifSxcdFx0Ly8gbGluZVxyXG5cdC8vXHR8XHRcdG91dGxpbmU6IHt3aWR0aDogMC4xLCBjb2xvcjogXCIjY2NjXCJ9LFx0XHQvLyBvdXRsaW5lXHJcblx0Ly9cdHxcdFx0Ly9zaGFkb3c6ICB7ZHg6IDEsIGR5OiAxLCB3aWR0aDogMiwgY29sb3I6IFswLCAwLCAwLCAwLjNdfSxcclxuXHQvL1x0fFx0XHRzaGFkb3c6IG51bGwsXHRcdFx0XHRcdFx0XHRcdC8vIG5vIHNoYWRvd1xyXG5cdC8vXHR8XHRcdC8vZmlsdGVyOiAgZG9qb3gvZ2Z4L2ZpbHRlcnMuY3JlYXRlRmlsdGVyKCksXHJcblx0Ly9cdHxcdFx0ZmlsdGVyOiBudWxsLFx0XHRcdFx0XHRcdFx0XHQvLyBubyBmaWx0ZXIsIHRvIHVzZSBhIGZpbHRlciB5b3UgbXVzdCB1c2UgZ2Z4IFNWRyByZW5kZXIgYW5kIHJlcXVpcmUgZG9qb3gvZ2Z4L3N2Z2V4dFxyXG5cdC8vXHR8XHRcdGZpbGw6ICAgIFwiI2NjY1wiLFx0XHRcdFx0XHRcdFx0Ly8gZmlsbCwgaWYgYXBwcm9wcmlhdGVcclxuXHQvL1x0fFx0XHRmb250OiAgICBcIm5vcm1hbCBub3JtYWwgbm9ybWFsIDhwdCBUYWhvbWFcIixcdC8vIGlmIHRoZXJlJ3MgYSBsYWJlbFxyXG5cdC8vXHR8XHRcdGZvbnRDb2xvcjogXCIjMDAwXCJcdFx0XHRcdFx0XHRcdC8vIGNvbG9yIG9mIGxhYmVsc1xyXG5cdC8vXHR8XHRcdGxhYmVsV2lyaW5nOiB7d2lkdGg6IDEsIGNvbG9yOiBcIiNjY2NcIn0sXHRcdC8vIGNvbm5lY3QgbWFya2VyIGFuZCB0YXJnZXQgZGF0YSBpdGVtKHNsaWNlLCBjb2x1bW4sIGJhci4uLilcclxuXHQvL1x0fFx0fSxcclxuXHQvL1x0fFx0bWFya2VyOiB7XHQvLyBhbnkgbWFya2VycyBvbiBhIHNlcmllc1xyXG5cdC8vXHR8XHRcdHN5bWJvbDogIFwibS0zLDMgbDMsLTYgMyw2IHpcIixcdFx0XHRcdC8vIHN5bWJvbFxyXG5cdC8vXHR8XHRcdHN0cm9rZTogIHt3aWR0aDogMS41LCBjb2xvcjogXCIjMzMzXCJ9LFx0XHQvLyBzdHJva2VcclxuXHQvL1x0fFx0XHRvdXRsaW5lOiB7d2lkdGg6IDAuMSwgY29sb3I6IFwiI2NjY1wifSxcdFx0Ly8gb3V0bGluZVxyXG5cdC8vXHR8XHRcdHNoYWRvdzogbnVsbCxcdFx0XHRcdFx0XHRcdFx0Ly8gbm8gc2hhZG93XHJcblx0Ly9cdHxcdFx0ZmlsbDogICAgXCIjY2NjXCIsXHRcdFx0XHRcdFx0XHQvLyBmaWxsIGlmIG5lZWRlZFxyXG5cdC8vXHR8XHRcdGZvbnQ6ICAgIFwibm9ybWFsIG5vcm1hbCBub3JtYWwgOHB0IFRhaG9tYVwiLFx0Ly8gbGFiZWxcclxuXHQvL1x0fFx0XHRmb250Q29sb3I6IFwiIzAwMFwiXHJcblx0Ly9cdHxcdH0sXHJcblx0Ly9cdHxcdGdyaWQ6IHtcdC8vIGdyaWQsIHdoZW4gbm90IHByZXNlbnQgYXhpcyB0aWNrIHN0cm9rZXMgYXJlIHVzZWQgaW5zdGVhZFxyXG5cdC8vXHR8XHRcdG1ham9yTGluZToge1x0Ly8gbWFqb3IgZ3JpZCBsaW5lXHJcblx0Ly9cdHxcdFx0XHRjb2xvcjogICAgIFwiIzY2NlwiLFxyXG5cdC8vXHR8XHRcdFx0d2lkdGg6ICAxLFxyXG5cdC8vXHR8XHRcdFx0bGVuZ3RoOiA2XHJcblx0Ly9cdHxcdFx0fSxcclxuXHQvL1x0fFx0XHRtaW5vckxpbmU6IHtcdC8vIG1pbm9yIGdyaWQgbGluZVxyXG5cdC8vXHR8XHRcdFx0Y29sb3I6ICAgICBcIiM2NjZcIixcclxuXHQvL1x0fFx0XHRcdHdpZHRoOiAgMC44LFxyXG5cdC8vXHR8XHRcdFx0bGVuZ3RoOiAzXHJcblx0Ly9cdHxcdFx0fSxcclxuXHQvL1x0fFx0XHRmaWxsOiBcImdyZXlcIiwgIC8vIGV2ZXJ5IG90aGVyIHN0cmlwZVxyXG5cdC8vXHR8XHRcdGFsdGVybmF0ZUZpbGw6IFwiZ3JleVwiIC8vIGFsdGVybmF0ZSBzdHJpcGVcclxuXHQvL1x0fFx0fSxcclxuXHQvL1x0fFx0aW5kaWNhdG9yOiB7XHJcblx0Ly9cdHxcdFx0bGluZVN0cm9rZTogIHt3aWR0aDogMS41LCBjb2xvcjogXCIjMzMzXCJ9LFx0XHQvLyBsaW5lXHJcblx0Ly9cdHxcdFx0bGluZU91dGxpbmU6IHt3aWR0aDogMC4xLCBjb2xvcjogXCIjY2NjXCJ9LFx0XHQvLyBsaW5lIG91dGxpbmVcclxuXHQvL1x0fFx0XHRsaW5lU2hhZG93OiBudWxsLFx0XHRcdFx0XHRcdFx0XHQvLyBubyBsaW5lIHNoYWRvd1xyXG5cdC8vXHR8XHRcdGxpbmVGaWxsOiBudWxsLFx0XHRcdFx0XHRcdFx0XHRcdC8vIGZpbGwgYmV0d2VlbiBsaW5lcyBmb3IgZHVhbCBpbmRpY2F0b3JzXHJcblx0Ly9cdHxcdFx0c3Ryb2tlOiAge3dpZHRoOiAxLjUsIGNvbG9yOiBcIiMzMzNcIn0sXHRcdFx0Ly8gbGFiZWwgYmFja2dyb3VuZCBzdHJva2VcclxuXHQvL1x0fFx0XHRvdXRsaW5lOiB7d2lkdGg6IDAuMSwgY29sb3I6IFwiI2NjY1wifSxcdFx0XHQvLyBsYWJlbCBiYWNrZ3JvdW5kIG91dGxpbmVcclxuXHQvL1x0fFx0XHRzaGFkb3c6IG51bGwsXHRcdFx0XHRcdFx0XHRcdFx0Ly8gbm8gbGFiZWwgYmFja2dyb3VuZCBzaGFkb3dcclxuXHQvL1x0fFx0XHRmaWxsOiAgXCIjY2NjXCIsXHRcdFx0XHRcdFx0XHRcdFx0Ly8gbGFiZWwgYmFja2dyb3VuZCBmaWxsXHJcblx0Ly9cdHxcdFx0cmFkaXVzOiAzLFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gcmFkaXVzIG9mIHRoZSBsYWJlbCBiYWNrZ3JvdW5kXHJcblx0Ly9cdHxcdFx0Zm9udDogICAgXCJub3JtYWwgbm9ybWFsIG5vcm1hbCAxMHB0IFRhaG9tYVwiLFx0Ly8gbGFiZWwgZm9udFxyXG5cdC8vXHR8XHRcdGZvbnRDb2xvcjogXCIjMDAwXCJcdFx0XHRcdFx0XHRcdFx0Ly8gbGFiZWwgY29sb3JcclxuXHQvL1x0fFx0XHRtYXJrZXJGaWxsOiAgICBcIiNjY2NcIixcdFx0XHRcdFx0XHRcdC8vIG1hcmtlciBmaWxsXHJcblx0Ly9cdHxcdFx0bWFya2VyU3ltYm9sOiAgXCJtLTMsMCBjMCwtNCA2LC00IDYsMCBtLTYsMCBjMCw0IDYsNCA2LDBcIixcdC8vIG1hcmtlciBzeW1ib2xcclxuXHQvL1x0fFx0XHRtYXJrZXJTdHJva2U6ICB7d2lkdGg6IDEuNSwgY29sb3I6IFwiIzMzM1wifSxcdFx0Ly8gbWFya2VyIHN0cm9rZVxyXG5cdC8vXHR8XHRcdG1hcmtlck91dGxpbmU6IHt3aWR0aDogMC4xLCBjb2xvcjogXCIjY2NjXCJ9LFx0XHQvLyBtYXJrZXIgb3V0bGluZVxyXG5cdC8vXHR8XHRcdG1hcmtlclNoYWRvdzogbnVsbFx0XHRcdFx0XHRcdFx0XHQvLyBubyBtYXJrZXIgc2hhZG93XHJcblx0Ly9cdHxcdH0sXHJcblx0Ly9cdHxcdHBpZUlubmVyUmFkaXVzOiAzM1xyXG5cdC8vXHJcblx0Ly8gZXhhbXBsZTpcclxuXHQvL1x0XHREZWZpbmluZyBhIG5ldyB0aGVtZSBpcyBwcmV0dHkgc2ltcGxlOlxyXG5cdC8vXHR8XHR2YXIgR3Jhc3NsYW5kcyA9IG5ldyBTaW1wbGVUaGVtZSh7XHJcblx0Ly9cdHxcdFx0Y29sb3JzOiBbIFwiIzcwODAzYVwiLCBcIiNkZGU1NzRcIiwgXCIjNzg4MDYyXCIsIFwiI2IxY2M1ZFwiLCBcIiNlZmYyYzJcIiBdLFxyXG5cdC8vXHR8XHRcdHBpZUlubmVyUmFkaXVzOiAxNVxyXG5cdC8vXHR8XHR9KTtcclxuXHQvL1x0fFxyXG5cdC8vXHR8XHRteUNoYXJ0LnNldFRoZW1lKEdyYXNzbGFuZHMpO1xyXG5cclxuXHRzaGFwZVNwYWNlczoge3NoYXBlOiAxLCBzaGFwZVg6IDEsIHNoYXBlWTogMX0sXHJcblxyXG5cdGNvbnN0cnVjdG9yOiBmdW5jdGlvbihrd0FyZ3Mpe1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdEluaXRpYWxpemUgYSB0aGVtZSB1c2luZyB0aGUga2V5d29yZCBhcmd1bWVudHMuICBOb3RlIHRoYXQgdGhlIGFyZ3VtZW50c1xyXG5cdFx0Ly9cdFx0bG9vayBsaWtlIHRoZSBleGFtcGxlIChhYm92ZSksIGFuZCBtYXkgaW5jbHVkZSBhIGZldyBtb3JlIHBhcmFtZXRlcnMuXHJcblx0XHRrd0FyZ3MgPSBrd0FyZ3MgfHwge307XHJcblxyXG5cdFx0Ly8gcG9wdWxhdGUgdGhlbWUgd2l0aCBkZWZhdWx0cyB1cGRhdGluZyB0aGVtIGlmIG5lZWRlZFxyXG5cdFx0dmFyIGRlZiA9IFNpbXBsZVRoZW1lLmRlZmF1bHRUaGVtZTtcclxuXHRcdGFyci5mb3JFYWNoKFtcImNoYXJ0XCIsIFwicGxvdGFyZWFcIiwgXCJheGlzXCIsIFwiZ3JpZFwiLCBcInNlcmllc1wiLCBcIm1hcmtlclwiLCBcImluZGljYXRvclwiXSwgZnVuY3Rpb24obmFtZSl7XHJcblx0XHRcdHRoaXNbbmFtZV0gPSBsYW5nLmRlbGVnYXRlKGRlZltuYW1lXSwga3dBcmdzW25hbWVdKTtcclxuXHRcdH0sIHRoaXMpO1xyXG5cclxuXHRcdC8vIHBlcnNvbmFsaXplIHRoZW1lXHJcblx0XHRpZihrd0FyZ3Muc2VyaWVzVGhlbWVzICYmIGt3QXJncy5zZXJpZXNUaGVtZXMubGVuZ3RoKXtcclxuXHRcdFx0dGhpcy5jb2xvcnMgID0gbnVsbDtcclxuXHRcdFx0dGhpcy5zZXJpZXNUaGVtZXMgPSBrd0FyZ3Muc2VyaWVzVGhlbWVzLnNsaWNlKDApO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdHRoaXMuc2VyaWVzVGhlbWVzID0gbnVsbDtcclxuXHRcdFx0dGhpcy5jb2xvcnMgPSAoa3dBcmdzLmNvbG9ycyB8fCBTaW1wbGVUaGVtZS5kZWZhdWx0Q29sb3JzKS5zbGljZSgwKTtcclxuXHRcdH1cclxuXHRcdHRoaXMubWFya2VyVGhlbWVzID0gbnVsbDtcclxuXHRcdGlmKGt3QXJncy5tYXJrZXJUaGVtZXMgJiYga3dBcmdzLm1hcmtlclRoZW1lcy5sZW5ndGgpe1xyXG5cdFx0XHR0aGlzLm1hcmtlclRoZW1lcyA9IGt3QXJncy5tYXJrZXJUaGVtZXMuc2xpY2UoMCk7XHJcblx0XHR9XHJcblx0XHR0aGlzLm1hcmtlcnMgPSBrd0FyZ3MubWFya2VycyA/IGxhbmcuY2xvbmUoa3dBcmdzLm1hcmtlcnMpIDogbGFuZy5kZWxlZ2F0ZShTaW1wbGVUaGVtZS5kZWZhdWx0TWFya2Vycyk7XHJcblxyXG5cdFx0Ly8gc2V0IGZsYWdzXHJcblx0XHR0aGlzLm5vR3JhZENvbnYgPSBrd0FyZ3Mubm9HcmFkQ29udjtcclxuXHRcdHRoaXMubm9SYWRpYWxDb252ID0ga3dBcmdzLm5vUmFkaWFsQ29udjtcclxuXHRcdGlmKGt3QXJncy5yZXZlcnNlRmlsbHMpe1xyXG5cdFx0XHR0aGlzLnJldmVyc2VGaWxscygpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vXHRwcml2YXRlIGhvdXNla2VlcGluZ1xyXG5cdFx0dGhpcy5fY3VycmVudCA9IDA7XHJcblx0XHR0aGlzLl9idWlsZE1hcmtlckFycmF5KCk7XHJcblx0fSxcclxuXHJcblx0Y2xvbmU6IGZ1bmN0aW9uKCl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0Q2xvbmUgdGhlIGN1cnJlbnQgdGhlbWUuXHJcblx0XHQvLyByZXR1cm5zOiBkb2pveC5jaGFydGluZy5TaW1wbGVUaGVtZVxyXG5cdFx0Ly9cdFx0VGhlIGNsb25lZCB0aGVtZTsgYW55IGFsdGVyYXRpb25zIG1hZGUgd2lsbCBub3QgYWZmZWN0IHRoZSBvcmlnaW5hbC5cclxuXHRcdHZhciB0aGVtZSA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKHtcclxuXHRcdFx0Ly8gdGhlbWUgY29tcG9uZW50c1xyXG5cdFx0XHRjaGFydDogdGhpcy5jaGFydCxcclxuXHRcdFx0cGxvdGFyZWE6IHRoaXMucGxvdGFyZWEsXHJcblx0XHRcdGF4aXM6IHRoaXMuYXhpcyxcclxuXHRcdFx0Z3JpZDogdGhpcy5ncmlkLFxyXG5cdFx0XHRzZXJpZXM6IHRoaXMuc2VyaWVzLFxyXG5cdFx0XHRtYXJrZXI6IHRoaXMubWFya2VyLFxyXG5cdFx0XHQvLyBpbmRpdmlkdWFsIGFycmF5c1xyXG5cdFx0XHRjb2xvcnM6IHRoaXMuY29sb3JzLFxyXG5cdFx0XHRtYXJrZXJzOiB0aGlzLm1hcmtlcnMsXHJcblx0XHRcdGluZGljYXRvcjogdGhpcy5pbmRpY2F0b3IsXHJcblx0XHRcdHNlcmllc1RoZW1lczogdGhpcy5zZXJpZXNUaGVtZXMsXHJcblx0XHRcdG1hcmtlclRoZW1lczogdGhpcy5tYXJrZXJUaGVtZXMsXHJcblx0XHRcdC8vIGZsYWdzXHJcblx0XHRcdG5vR3JhZENvbnY6IHRoaXMubm9HcmFkQ29udixcclxuXHRcdFx0bm9SYWRpYWxDb252OiB0aGlzLm5vUmFkaWFsQ29udixcclxuXHRcdFx0cGllSW5uZXJSYWRpdXM6IHRoaXMucGllSW5uZXJSYWRpdXNcclxuXHRcdH0pO1xyXG5cdFx0Ly8gY29weSBjdXN0b20gbWV0aG9kc1xyXG5cdFx0YXJyLmZvckVhY2goXHJcblx0XHRcdFtcImNsb25lXCIsIFwiY2xlYXJcIiwgXCJuZXh0XCIsIFwic2tpcFwiLCBcImFkZE1peGluXCIsIFwicG9zdFwiLCBcImdldFRpY2tcIl0sXHJcblx0XHRcdGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0XHRcdGlmKHRoaXMuaGFzT3duUHJvcGVydHkobmFtZSkpe1xyXG5cdFx0XHRcdFx0dGhlbWVbbmFtZV0gPSB0aGlzW25hbWVdO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0dGhpc1xyXG5cdFx0KTtcclxuXHRcdHJldHVybiB0aGVtZTtcdC8vXHRkb2pveC5jaGFydGluZy5TaW1wbGVUaGVtZVxyXG5cdH0sXHJcblxyXG5cdGNsZWFyOiBmdW5jdGlvbigpe1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdENsZWFyIGFuZCByZXNldCB0aGUgaW50ZXJuYWwgcG9pbnRlciB0byBzdGFydCBmcmVzaC5cclxuXHRcdHRoaXMuX2N1cnJlbnQgPSAwO1xyXG5cdH0sXHJcblxyXG5cdG5leHQ6IGZ1bmN0aW9uKGVsZW1lbnRUeXBlLCBtaXhpbiwgZG9Qb3N0KXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRHZXQgdGhlIG5leHQgY29sb3Igb3Igc2VyaWVzIHRoZW1lLlxyXG5cdFx0Ly8gZWxlbWVudFR5cGU6IFN0cmluZz9cclxuXHRcdC8vXHRcdEFuIG9wdGlvbmFsIGVsZW1lbnQgdHlwZSAoZm9yIHVzZSB3aXRoIHNlcmllcyB0aGVtZXMpXHJcblx0XHQvLyBtaXhpbjogT2JqZWN0P1xyXG5cdFx0Ly9cdFx0QW4gb3B0aW9uYWwgb2JqZWN0IHRvIG1peCBpbnRvIHRoZSB0aGVtZS5cclxuXHRcdC8vIGRvUG9zdDogQm9vbGVhbj9cclxuXHRcdC8vXHRcdEEgZmxhZyB0byBwb3N0LXByb2Nlc3MgdGhlIHJlc3VsdHMuXHJcblx0XHQvLyByZXR1cm5zOiBPYmplY3RcclxuXHRcdC8vXHRcdEFuIG9iamVjdCBvZiB0aGUgc3RydWN0dXJlIHsgc2VyaWVzLCBtYXJrZXIsIHN5bWJvbCB9XHJcblx0XHR2YXIgbWVyZ2UgPSBkbHUubWVyZ2UsIHNlcmllcywgbWFya2VyO1xyXG5cdFx0aWYodGhpcy5jb2xvcnMpe1xyXG5cdFx0XHRzZXJpZXMgPSBsYW5nLmRlbGVnYXRlKHRoaXMuc2VyaWVzKTtcclxuXHRcdFx0bWFya2VyID0gbGFuZy5kZWxlZ2F0ZSh0aGlzLm1hcmtlcik7XHJcblx0XHRcdHZhciBjb2xvciA9IG5ldyBDb2xvcih0aGlzLmNvbG9yc1t0aGlzLl9jdXJyZW50ICUgdGhpcy5jb2xvcnMubGVuZ3RoXSksIG9sZDtcclxuXHRcdFx0Ly8gbW9kaWZ5IHRoZSBzdHJva2VcclxuXHRcdFx0aWYoc2VyaWVzLnN0cm9rZSAmJiBzZXJpZXMuc3Ryb2tlLmNvbG9yKXtcclxuXHRcdFx0XHRzZXJpZXMuc3Ryb2tlID0gbGFuZy5kZWxlZ2F0ZShzZXJpZXMuc3Ryb2tlKTtcclxuXHRcdFx0XHRvbGQgPSBuZXcgQ29sb3Ioc2VyaWVzLnN0cm9rZS5jb2xvcik7XHJcblx0XHRcdFx0c2VyaWVzLnN0cm9rZS5jb2xvciA9IG5ldyBDb2xvcihjb2xvcik7XHJcblx0XHRcdFx0c2VyaWVzLnN0cm9rZS5jb2xvci5hID0gb2xkLmE7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdHNlcmllcy5zdHJva2UgPSB7Y29sb3I6IGNvbG9yfTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZihtYXJrZXIuc3Ryb2tlICYmIG1hcmtlci5zdHJva2UuY29sb3Ipe1xyXG5cdFx0XHRcdG1hcmtlci5zdHJva2UgPSBsYW5nLmRlbGVnYXRlKG1hcmtlci5zdHJva2UpO1xyXG5cdFx0XHRcdG9sZCA9IG5ldyBDb2xvcihtYXJrZXIuc3Ryb2tlLmNvbG9yKTtcclxuXHRcdFx0XHRtYXJrZXIuc3Ryb2tlLmNvbG9yID0gbmV3IENvbG9yKGNvbG9yKTtcclxuXHRcdFx0XHRtYXJrZXIuc3Ryb2tlLmNvbG9yLmEgPSBvbGQuYTtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0bWFya2VyLnN0cm9rZSA9IHtjb2xvcjogY29sb3J9O1xyXG5cdFx0XHR9XHJcblx0XHRcdC8vIG1vZGlmeSB0aGUgZmlsbFxyXG5cdFx0XHRpZighc2VyaWVzLmZpbGwgfHwgc2VyaWVzLmZpbGwudHlwZSl7XHJcblx0XHRcdFx0c2VyaWVzLmZpbGwgPSBjb2xvcjtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0b2xkID0gbmV3IENvbG9yKHNlcmllcy5maWxsKTtcclxuXHRcdFx0XHRzZXJpZXMuZmlsbCA9IG5ldyBDb2xvcihjb2xvcik7XHJcblx0XHRcdFx0c2VyaWVzLmZpbGwuYSA9IG9sZC5hO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKCFtYXJrZXIuZmlsbCB8fCBtYXJrZXIuZmlsbC50eXBlKXtcclxuXHRcdFx0XHRtYXJrZXIuZmlsbCA9IGNvbG9yO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRvbGQgPSBuZXcgQ29sb3IobWFya2VyLmZpbGwpO1xyXG5cdFx0XHRcdG1hcmtlci5maWxsID0gbmV3IENvbG9yKGNvbG9yKTtcclxuXHRcdFx0XHRtYXJrZXIuZmlsbC5hID0gb2xkLmE7XHJcblx0XHRcdH1cclxuXHRcdH1lbHNle1xyXG5cdFx0XHRzZXJpZXMgPSB0aGlzLnNlcmllc1RoZW1lcyA/XHJcblx0XHRcdFx0bWVyZ2UodGhpcy5zZXJpZXMsIHRoaXMuc2VyaWVzVGhlbWVzW3RoaXMuX2N1cnJlbnQgJSB0aGlzLnNlcmllc1RoZW1lcy5sZW5ndGhdKSA6XHJcblx0XHRcdFx0dGhpcy5zZXJpZXM7XHJcblx0XHRcdG1hcmtlciA9IHRoaXMubWFya2VyVGhlbWVzID9cclxuXHRcdFx0XHRtZXJnZSh0aGlzLm1hcmtlciwgdGhpcy5tYXJrZXJUaGVtZXNbdGhpcy5fY3VycmVudCAlIHRoaXMubWFya2VyVGhlbWVzLmxlbmd0aF0pIDpcclxuXHRcdFx0XHRzZXJpZXM7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIHN5bWJvbCA9IG1hcmtlciAmJiBtYXJrZXIuc3ltYm9sIHx8IHRoaXMuX21hcmtlcnNbdGhpcy5fY3VycmVudCAlIHRoaXMuX21hcmtlcnMubGVuZ3RoXTtcclxuXHJcblx0XHR2YXIgdGhlbWUgPSB7c2VyaWVzOiBzZXJpZXMsIG1hcmtlcjogbWFya2VyLCBzeW1ib2w6IHN5bWJvbH07XHJcblx0XHRcclxuXHRcdC8vIGFkdmFuY2UgdGhlIGNvdW50ZXJcclxuXHRcdCsrdGhpcy5fY3VycmVudDtcclxuXHJcblx0XHRpZihtaXhpbil7XHJcblx0XHRcdHRoZW1lID0gdGhpcy5hZGRNaXhpbih0aGVtZSwgZWxlbWVudFR5cGUsIG1peGluKTtcclxuXHRcdH1cclxuXHRcdGlmKGRvUG9zdCl7XHJcblx0XHRcdHRoZW1lID0gdGhpcy5wb3N0KHRoZW1lLCBlbGVtZW50VHlwZSk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHRoZW1lO1x0Ly9cdE9iamVjdFxyXG5cdH0sXHJcblxyXG5cdHNraXA6IGZ1bmN0aW9uKCl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0U2tpcCB0aGUgbmV4dCBpbnRlcm5hbCBjb2xvci5cclxuXHRcdCsrdGhpcy5fY3VycmVudDtcclxuXHR9LFxyXG5cclxuXHRhZGRNaXhpbjogZnVuY3Rpb24odGhlbWUsIGVsZW1lbnRUeXBlLCBtaXhpbiwgZG9Qb3N0KXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRBZGQgYSBtaXhpbiBvYmplY3QgdG8gdGhlIHBhc3NlZCB0aGVtZSBhbmQgcHJvY2Vzcy5cclxuXHRcdC8vIHRoZW1lOiBkb2pveC9jaGFydGluZy9TaW1wbGVUaGVtZVxyXG5cdFx0Ly9cdFx0VGhlIHRoZW1lIHRvIG1peGluIHRvLlxyXG5cdFx0Ly8gZWxlbWVudFR5cGU6IFN0cmluZ1xyXG5cdFx0Ly9cdFx0VGhlIHR5cGUgb2YgZWxlbWVudCBpbiBxdWVzdGlvbi4gQ2FuIGJlIFwibGluZVwiLCBcImJhclwiIG9yIFwiY2lyY2xlXCJcclxuXHRcdC8vIG1peGluOiBPYmplY3R8QXJyYXlcclxuXHRcdC8vXHRcdFRoZSBvYmplY3Qgb3Igb2JqZWN0cyB0byBtaXggaW50byB0aGUgdGhlbWUuXHJcblx0XHQvLyBkb1Bvc3Q6IEJvb2xlYW5cclxuXHRcdC8vXHRcdElmIHRydWUsIHJ1biB0aGUgbmV3IHRoZW1lIHRocm91Z2ggdGhlIHBvc3QtcHJvY2Vzc29yLlxyXG5cdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvU2ltcGxlVGhlbWVcclxuXHRcdC8vXHRcdFRoZSBuZXcgdGhlbWUuXHJcblx0XHRpZihsYW5nLmlzQXJyYXkobWl4aW4pKXtcclxuXHRcdFx0YXJyLmZvckVhY2gobWl4aW4sIGZ1bmN0aW9uKG0pe1xyXG5cdFx0XHRcdHRoZW1lID0gdGhpcy5hZGRNaXhpbih0aGVtZSwgZWxlbWVudFR5cGUsIG0pO1xyXG5cdFx0XHR9LCB0aGlzKTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHR2YXIgdCA9IHt9O1xyXG5cdFx0XHRpZihcImNvbG9yXCIgaW4gbWl4aW4pe1xyXG5cdFx0XHRcdGlmKGVsZW1lbnRUeXBlID09IFwibGluZVwiIHx8IGVsZW1lbnRUeXBlID09IFwiYXJlYVwiKXtcclxuXHRcdFx0XHRcdGxhbmcuc2V0T2JqZWN0KFwic2VyaWVzLnN0cm9rZS5jb2xvclwiLCBtaXhpbi5jb2xvciwgdCk7XHJcblx0XHRcdFx0XHRsYW5nLnNldE9iamVjdChcIm1hcmtlci5zdHJva2UuY29sb3JcIiwgbWl4aW4uY29sb3IsIHQpO1xyXG5cdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0bGFuZy5zZXRPYmplY3QoXCJzZXJpZXMuZmlsbFwiLCBtaXhpbi5jb2xvciwgdCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdGFyci5mb3JFYWNoKFtcInN0cm9rZVwiLCBcIm91dGxpbmVcIiwgXCJzaGFkb3dcIiwgXCJmaWxsXCIsIFwiZmlsdGVyXCIsIFwiZm9udFwiLCBcImZvbnRDb2xvclwiLCBcImxhYmVsV2lyaW5nXCJdLCBmdW5jdGlvbihuYW1lKXtcclxuXHRcdFx0XHR2YXIgbWFya2VyTmFtZSA9IFwibWFya2VyXCIgKyBuYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zdWJzdHIoMSksXHJcblx0XHRcdFx0XHRiID0gbWFya2VyTmFtZSBpbiBtaXhpbjtcclxuXHRcdFx0XHRpZihuYW1lIGluIG1peGluKXtcclxuXHRcdFx0XHRcdGxhbmcuc2V0T2JqZWN0KFwic2VyaWVzLlwiICsgbmFtZSwgbWl4aW5bbmFtZV0sIHQpO1xyXG5cdFx0XHRcdFx0aWYoIWIpe1xyXG5cdFx0XHRcdFx0XHRsYW5nLnNldE9iamVjdChcIm1hcmtlci5cIiArIG5hbWUsIG1peGluW25hbWVdLCB0KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYoYil7XHJcblx0XHRcdFx0XHRsYW5nLnNldE9iamVjdChcIm1hcmtlci5cIiArIG5hbWUsIG1peGluW21hcmtlck5hbWVdLCB0KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpZihcIm1hcmtlclwiIGluIG1peGluKXtcclxuXHRcdFx0XHR0LnN5bWJvbCA9IG1peGluLm1hcmtlcjtcclxuXHRcdFx0XHR0LnN5bWJvbCA9IG1peGluLm1hcmtlcjtcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGVtZSA9IGRsdS5tZXJnZSh0aGVtZSwgdCk7XHJcblx0XHR9XHJcblx0XHRpZihkb1Bvc3Qpe1xyXG5cdFx0XHR0aGVtZSA9IHRoaXMucG9zdCh0aGVtZSwgZWxlbWVudFR5cGUpO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoZW1lO1x0Ly9cdGRvam94L2NoYXJ0aW5nL1NpbXBsZVRoZW1lXHJcblx0fSxcclxuXHJcblx0cG9zdDogZnVuY3Rpb24odGhlbWUsIGVsZW1lbnRUeXBlKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRQcm9jZXNzIGFueSBwb3N0LXNoYXBlIGZpbGxzLlxyXG5cdFx0Ly8gdGhlbWU6IGRvam94L2NoYXJ0aW5nL1NpbXBsZVRoZW1lXHJcblx0XHQvL1x0XHRUaGUgdGhlbWUgdG8gcG9zdCBwcm9jZXNzIHdpdGguXHJcblx0XHQvLyBlbGVtZW50VHlwZTogU3RyaW5nXHJcblx0XHQvL1x0XHRUaGUgdHlwZSBvZiBlbGVtZW50IGJlaW5nIGZpbGxlZC4gIENhbiBiZSBcImJhclwiIG9yIFwiY2lyY2xlXCIuXHJcblx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9TaW1wbGVUaGVtZVxyXG5cdFx0Ly9cdFx0VGhlIHBvc3QtcHJvY2Vzc2VkIHRoZW1lLlxyXG5cdFx0dmFyIGZpbGwgPSB0aGVtZS5zZXJpZXMuZmlsbCwgdDtcclxuXHRcdGlmKCF0aGlzLm5vR3JhZENvbnYgJiYgdGhpcy5zaGFwZVNwYWNlc1tmaWxsLnNwYWNlXSAmJiBmaWxsLnR5cGUgPT0gXCJsaW5lYXJcIil7XHJcblx0XHRcdGlmKGVsZW1lbnRUeXBlID09IFwiYmFyXCIpe1xyXG5cdFx0XHRcdC8vIHRyYW5zcG9zZSBzdGFydCBhbmQgZW5kIHBvaW50c1xyXG5cdFx0XHRcdHQgPSB7XHJcblx0XHRcdFx0XHR4MTogZmlsbC55MSxcclxuXHRcdFx0XHRcdHkxOiBmaWxsLngxLFxyXG5cdFx0XHRcdFx0eDI6IGZpbGwueTIsXHJcblx0XHRcdFx0XHR5MjogZmlsbC54MlxyXG5cdFx0XHRcdH07XHJcblx0XHRcdH1lbHNlIGlmKCF0aGlzLm5vUmFkaWFsQ29udiAmJiBmaWxsLnNwYWNlID09IFwic2hhcGVcIiAmJiAoZWxlbWVudFR5cGUgPT0gXCJzbGljZVwiIHx8IGVsZW1lbnRUeXBlID09IFwiY2lyY2xlXCIpKXtcclxuXHRcdFx0XHQvLyBzd2l0Y2ggdG8gcmFkaWFsXHJcblx0XHRcdFx0dCA9IHtcclxuXHRcdFx0XHRcdHR5cGU6IFwicmFkaWFsXCIsXHJcblx0XHRcdFx0XHRjeDogMCxcclxuXHRcdFx0XHRcdGN5OiAwLFxyXG5cdFx0XHRcdFx0cjogIDEwMFxyXG5cdFx0XHRcdH07XHJcblx0XHRcdH1cclxuXHRcdFx0aWYodCl7XHJcblx0XHRcdFx0cmV0dXJuIGRsdS5tZXJnZSh0aGVtZSwge3Nlcmllczoge2ZpbGw6IHR9fSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiB0aGVtZTtcdC8vXHRkb2pveC9jaGFydGluZy9TaW1wbGVUaGVtZVxyXG5cdH0sXHJcblxyXG5cdGdldFRpY2s6IGZ1bmN0aW9uKG5hbWUsIG1peGluKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRDYWxjdWxhdGVzIGFuZCBtZXJnZXMgdGljayBwYXJhbWV0ZXJzLlxyXG5cdFx0Ly8gbmFtZTogU3RyaW5nXHJcblx0XHQvL1x0XHRUaWNrIG5hbWUsIGNhbiBiZSBcIm1ham9yXCIsIFwibWlub3JcIiwgb3IgXCJtaWNyb1wiLlxyXG5cdFx0Ly8gbWl4aW46IE9iamVjdD9cclxuXHRcdC8vXHRcdE9wdGlvbmFsIG9iamVjdCB0byBtaXggaW4gdG8gdGhlIHRpY2suXHJcblx0XHR2YXIgdGljayA9IHRoaXMuYXhpcy50aWNrLCB0aWNrTmFtZSA9IG5hbWUgKyBcIlRpY2tcIixcclxuXHRcdFx0bWVyZ2UgPSBkbHUubWVyZ2U7XHJcblx0XHRpZih0aWNrKXtcclxuXHRcdFx0aWYodGhpcy5heGlzW3RpY2tOYW1lXSl7XHJcblx0XHRcdFx0dGljayA9IG1lcmdlKHRpY2ssIHRoaXMuYXhpc1t0aWNrTmFtZV0pO1xyXG5cdFx0XHR9XHJcblx0XHR9ZWxzZXtcclxuXHRcdFx0dGljayA9IHRoaXMuYXhpc1t0aWNrTmFtZV07XHJcblx0XHR9XHJcblx0XHRpZihtaXhpbil7XHJcblx0XHRcdGlmKHRpY2spe1xyXG5cdFx0XHRcdGlmKG1peGluW3RpY2tOYW1lXSl7XHJcblx0XHRcdFx0XHR0aWNrID0gbWVyZ2UodGljaywgbWl4aW5bdGlja05hbWVdKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdHRpY2sgPSBtaXhpblt0aWNrTmFtZV07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiB0aWNrO1x0Ly9cdE9iamVjdFxyXG5cdH0sXHJcblxyXG5cdGluc3BlY3RPYmplY3RzOiBmdW5jdGlvbihmKXtcclxuXHRcdGFyci5mb3JFYWNoKFtcImNoYXJ0XCIsIFwicGxvdGFyZWFcIiwgXCJheGlzXCIsIFwiZ3JpZFwiLCBcInNlcmllc1wiLCBcIm1hcmtlclwiLCBcImluZGljYXRvclwiXSwgZnVuY3Rpb24obmFtZSl7XHJcblx0XHRcdGYodGhpc1tuYW1lXSk7XHJcblx0XHR9LCB0aGlzKTtcclxuXHRcdGlmKHRoaXMuc2VyaWVzVGhlbWVzKXtcclxuXHRcdFx0YXJyLmZvckVhY2godGhpcy5zZXJpZXNUaGVtZXMsIGYpO1xyXG5cdFx0fVxyXG5cdFx0aWYodGhpcy5tYXJrZXJUaGVtZXMpe1xyXG5cdFx0XHRhcnIuZm9yRWFjaCh0aGlzLm1hcmtlclRoZW1lcywgZik7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cmV2ZXJzZUZpbGxzOiBmdW5jdGlvbigpe1xyXG5cdFx0dGhpcy5pbnNwZWN0T2JqZWN0cyhmdW5jdGlvbihvKXtcclxuXHRcdFx0aWYobyAmJiBvLmZpbGwpe1xyXG5cdFx0XHRcdG8uZmlsbCA9IGRnZy5yZXZlcnNlKG8uZmlsbCk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH0sXHJcblxyXG5cdGFkZE1hcmtlcjpmdW5jdGlvbigvKlN0cmluZyovIG5hbWUsIC8qU3RyaW5nKi8gc2VnbWVudCl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QWRkIGEgY3VzdG9tIG1hcmtlciB0byB0aGlzIHRoZW1lLlxyXG5cdFx0Ly8gZXhhbXBsZTpcclxuXHRcdC8vXHR8XHRteVRoZW1lLmFkZE1hcmtlcihcIkVsbGlwc2VcIiwgZm9vKTtcclxuXHRcdHRoaXMubWFya2Vyc1tuYW1lXSA9IHNlZ21lbnQ7XHJcblx0XHR0aGlzLl9idWlsZE1hcmtlckFycmF5KCk7XHJcblx0fSxcclxuXHJcblx0c2V0TWFya2VyczpmdW5jdGlvbigvKk9iamVjdCovIG9iail7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0U2V0IGFsbCB0aGUgbWFya2VycyBvZiB0aGlzIHRoZW1lIGF0IG9uY2UuICBvYmogc2hvdWxkIGJlIGFcclxuXHRcdC8vXHRcdGRpY3Rpb25hcnkgb2Yga2V5cyBhbmQgcGF0aCBzZWdtZW50cy5cclxuXHRcdC8vXHJcblx0XHQvLyBleGFtcGxlOlxyXG5cdFx0Ly9cdHxcdG15VGhlbWUuc2V0TWFya2Vycyh7IFwiQ0lSQ0xFXCI6IGZvbyB9KTtcclxuXHRcdHRoaXMubWFya2VycyA9IG9iajtcclxuXHRcdHRoaXMuX2J1aWxkTWFya2VyQXJyYXkoKTtcclxuXHR9LFxyXG5cclxuXHRfYnVpbGRNYXJrZXJBcnJheTogZnVuY3Rpb24oKXtcclxuXHRcdHRoaXMuX21hcmtlcnMgPSBbXTtcclxuXHRcdGZvcih2YXIgcCBpbiB0aGlzLm1hcmtlcnMpe1xyXG5cdFx0XHR0aGlzLl9tYXJrZXJzLnB1c2godGhpcy5tYXJrZXJzW3BdKTtcclxuXHRcdH1cclxuXHR9XHJcbn0pO1xyXG5cclxubGFuZy5taXhpbihTaW1wbGVUaGVtZSwge1xyXG5cdGRlZmF1bHRNYXJrZXJzOiB7XHJcblx0XHRDSVJDTEU6ICAgXCJtLTMsMCBjMCwtNCA2LC00IDYsMCBtLTYsMCBjMCw0IDYsNCA2LDBcIixcclxuXHRcdFNRVUFSRTogICBcIm0tMywtMyBsMCw2IDYsMCAwLC02IHpcIixcclxuXHRcdERJQU1PTkQ6ICBcIm0wLC0zIGwzLDMgLTMsMyAtMywtMyB6XCIsXHJcblx0XHRDUk9TUzogICAgXCJtMCwtMyBsMCw2IG0tMywtMyBsNiwwXCIsXHJcblx0XHRYOiAgICAgICAgXCJtLTMsLTMgbDYsNiBtMCwtNiBsLTYsNlwiLFxyXG5cdFx0VFJJQU5HTEU6IFwibS0zLDMgbDMsLTYgMyw2IHpcIixcclxuXHRcdFRSSUFOR0xFX0lOVkVSVEVEOiBcIm0tMywtMyBsMyw2IDMsLTYgelwiXHJcblx0fSxcclxuXHJcblx0ZGVmYXVsdENvbG9yczpbXHJcblx0XHQvLyBncmF5IHNraWVzXHJcblx0XHRcIiM1NDU0NGNcIiwgXCIjODU4ZTk0XCIsIFwiIzZlNzY3YVwiLCBcIiM5NDg1ODVcIiwgXCIjNDc0NzQ3XCJcclxuXHRdLFxyXG5cclxuXHRkZWZhdWx0VGhlbWU6IHtcclxuXHRcdC8vIGFsbCBvYmplY3RzIGFyZSBzdHJ1Y3RzIHVzZWQgZGlyZWN0bHkgaW4gZG9qb3guZ2Z4XHJcblx0XHRjaGFydDp7XHJcblx0XHRcdHN0cm9rZTogbnVsbCxcclxuXHRcdFx0ZmlsbDogXCJ3aGl0ZVwiLFxyXG5cdFx0XHRwYWdlU3R5bGU6IG51bGwsXHJcblx0XHRcdHRpdGxlR2FwOlx0XHQyMCxcclxuXHRcdFx0dGl0bGVQb3M6XHRcdFwidG9wXCIsXHJcblx0XHRcdHRpdGxlRm9udDogICAgICBcIm5vcm1hbCBub3JtYWwgYm9sZCAxNHB0IFRhaG9tYVwiLFx0Ly8gY2hhcnQgdGl0bGVcclxuXHRcdFx0dGl0bGVGb250Q29sb3I6IFwiIzMzM1wiLFxyXG5cdFx0XHR0aXRsZUFsaWduOiBcIm1pZGRsZVwiXHJcblx0XHR9LFxyXG5cdFx0cGxvdGFyZWE6e1xyXG5cdFx0XHRzdHJva2U6IG51bGwsXHJcblx0XHRcdGZpbGw6IFwid2hpdGVcIlxyXG5cdFx0fSxcclxuXHRcdC8vIFRPRE86IGxhYmVsIHJvdGF0aW9uIG9uIGF4aXNcclxuXHRcdGF4aXM6e1xyXG5cdFx0XHRzdHJva2U6XHR7IC8vIHRoZSBheGlzIGl0c2VsZlxyXG5cdFx0XHRcdGNvbG9yOiBcIiMzMzNcIixcclxuXHRcdFx0XHR3aWR0aDogMVxyXG5cdFx0XHR9LFxyXG5cdFx0XHR0aWNrOiB7XHQvLyB1c2VkIGFzIGEgZm91bmRhdGlvbiBmb3IgYWxsIHRpY2tzXHJcblx0XHRcdFx0Y29sb3I6ICAgICBcIiM2NjZcIixcclxuXHRcdFx0XHRwb3NpdGlvbjogIFwiY2VudGVyXCIsXHJcblx0XHRcdFx0Zm9udDogICAgICBcIm5vcm1hbCBub3JtYWwgbm9ybWFsIDdwdCBUYWhvbWFcIixcdC8vIGxhYmVscyBvbiBheGlzXHJcblx0XHRcdFx0Zm9udENvbG9yOiBcIiMzMzNcIixcdFx0XHRcdFx0XHRcdFx0Ly8gY29sb3Igb2YgbGFiZWxzXHJcblx0XHRcdFx0bGFiZWxHYXA6ICA0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZ2FwIGJldHdlZW4gYSB0aWNrIGFuZCBpdHMgbGFiZWwgaW4gcGl4ZWxzXHJcblx0XHRcdH0sXHJcblx0XHRcdG1ham9yVGljazpcdHsgLy8gbWFqb3IgdGlja3Mgb24gYXhpcywgYW5kIHVzZWQgZm9yIG1ham9yIGdyaWRsaW5lc1xyXG5cdFx0XHRcdHdpZHRoOiAgMSxcclxuXHRcdFx0XHRsZW5ndGg6IDZcclxuXHRcdFx0fSxcclxuXHRcdFx0bWlub3JUaWNrOlx0eyAvLyBtaW5vciB0aWNrcyBvbiBheGlzLCBhbmQgdXNlZCBmb3IgbWlub3IgZ3JpZGxpbmVzXHJcblx0XHRcdFx0d2lkdGg6ICAwLjgsXHJcblx0XHRcdFx0bGVuZ3RoOiAzXHJcblx0XHRcdH0sXHJcblx0XHRcdG1pY3JvVGljazpcdHsgLy8gbWlub3IgdGlja3Mgb24gYXhpcywgYW5kIHVzZWQgZm9yIG1pbm9yIGdyaWRsaW5lc1xyXG5cdFx0XHRcdHdpZHRoOiAgMC41LFxyXG5cdFx0XHRcdGxlbmd0aDogMVxyXG5cdFx0XHR9LFxyXG5cdFx0XHR0aXRsZToge1xyXG5cdFx0XHRcdGdhcDogIDE1LFxyXG5cdFx0XHRcdGZvbnQ6IFwibm9ybWFsIG5vcm1hbCBub3JtYWwgMTFwdCBUYWhvbWFcIixcdC8vIHRpdGxlIGZvbnRcclxuXHRcdFx0XHRmb250Q29sb3I6IFwiIzMzM1wiLFx0XHRcdFx0XHRcdFx0Ly8gdGl0bGUgZm9udCBjb2xvclxyXG5cdFx0XHRcdG9yaWVudGF0aW9uOiBcImF4aXNcIlx0XHRcdFx0XHRcdC8vIFwiYXhpc1wiOiBmYWNpbmcgdGhlIGF4aXMsIFwiYXdheVwiOiBmYWNpbmcgYXdheVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0c2VyaWVzOiB7XHJcblx0XHRcdC8vIHVzZWQgYXMgYSBcIm1haW5cIiB0aGVtZSBmb3Igc2VyaWVzLCBzVGhlbWVzIGF1Z21lbnQgaXRcclxuXHRcdFx0c3Ryb2tlOiAge3dpZHRoOiAxLjUsIGNvbG9yOiBcIiMzMzNcIn0sXHRcdC8vIGxpbmVcclxuXHRcdFx0b3V0bGluZToge3dpZHRoOiAwLjEsIGNvbG9yOiBcIiNjY2NcIn0sXHRcdC8vIG91dGxpbmVcclxuXHRcdFx0Ly9zaGFkb3c6ICB7ZHg6IDEsIGR5OiAxLCB3aWR0aDogMiwgY29sb3I6IFswLCAwLCAwLCAwLjNdfSxcclxuXHRcdFx0c2hhZG93OiBudWxsLFx0XHRcdFx0XHRcdFx0XHQvLyBubyBzaGFkb3dcclxuXHRcdFx0ZmlsbDogICAgXCIjY2NjXCIsXHRcdFx0XHRcdFx0XHQvLyBmaWxsLCBpZiBhcHByb3ByaWF0ZVxyXG5cdFx0XHRmb250OiAgICBcIm5vcm1hbCBub3JtYWwgbm9ybWFsIDhwdCBUYWhvbWFcIixcdC8vIGlmIHRoZXJlJ3MgYSBsYWJlbFxyXG5cdFx0XHRmb250Q29sb3I6IFwiIzAwMFwiLFx0XHRcdFx0XHRcdFx0Ly8gY29sb3Igb2YgbGFiZWxzXHJcblx0XHRcdGxhYmVsV2lyaW5nOiB7d2lkdGg6IDEsIGNvbG9yOiBcIiNjY2NcIn1cdFx0Ly8gY29ubmVjdCBtYXJrZXIgYW5kIHRhcmdldCBkYXRhIGl0ZW0oc2xpY2UsIGNvbHVtbiwgYmFyLi4uKVxyXG5cdFx0fSxcclxuXHRcdG1hcmtlcjoge1x0Ly8gYW55IG1hcmtlcnMgb24gYSBzZXJpZXNcclxuXHRcdFx0c3Ryb2tlOiAge3dpZHRoOiAxLjUsIGNvbG9yOiBcIiMzMzNcIn0sXHRcdC8vIHN0cm9rZVxyXG5cdFx0XHRvdXRsaW5lOiB7d2lkdGg6IDAuMSwgY29sb3I6IFwiI2NjY1wifSxcdFx0Ly8gb3V0bGluZVxyXG5cdFx0XHQvL3NoYWRvdzogIHtkeDogMSwgZHk6IDEsIHdpZHRoOiAyLCBjb2xvcjogWzAsIDAsIDAsIDAuM119LFxyXG5cdFx0XHRzaGFkb3c6IG51bGwsXHRcdFx0XHRcdFx0XHRcdC8vIG5vIHNoYWRvd1xyXG5cdFx0XHRmaWxsOiAgICBcIiNjY2NcIixcdFx0XHRcdFx0XHRcdC8vIGZpbGwgaWYgbmVlZGVkXHJcblx0XHRcdGZvbnQ6ICAgIFwibm9ybWFsIG5vcm1hbCBub3JtYWwgOHB0IFRhaG9tYVwiLFx0Ly8gbGFiZWxcclxuXHRcdFx0Zm9udENvbG9yOiBcIiMwMDBcIlxyXG5cdFx0fSxcclxuXHRcdGluZGljYXRvcjoge1xyXG5cdFx0XHRsaW5lU3Ryb2tlOiAge3dpZHRoOiAxLjUsIGNvbG9yOiBcIiMzMzNcIn0sXHRcdFxyXG5cdFx0XHRsaW5lT3V0bGluZToge3dpZHRoOiAwLjEsIGNvbG9yOiBcIiNjY2NcIn0sXHRcdFxyXG5cdFx0XHRsaW5lU2hhZG93OiBudWxsLFxyXG5cdFx0XHRsaW5lRmlsbDogbnVsbCxcclxuXHRcdFx0c3Ryb2tlOiAge3dpZHRoOiAxLjUsIGNvbG9yOiBcIiMzMzNcIn0sXHRcdFxyXG5cdFx0XHRvdXRsaW5lOiB7d2lkdGg6IDAuMSwgY29sb3I6IFwiI2NjY1wifSxcdFx0XHJcblx0XHRcdHNoYWRvdzogbnVsbCxcdFx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdGZpbGwgOiBcIiNjY2NcIixcclxuXHRcdFx0cmFkaXVzOiAzLFxyXG5cdFx0XHRmb250OiAgICBcIm5vcm1hbCBub3JtYWwgbm9ybWFsIDEwcHQgVGFob21hXCIsXHRcclxuXHRcdFx0Zm9udENvbG9yOiBcIiMwMDBcIixcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRtYXJrZXJGaWxsOiAgICBcIiNjY2NcIixcdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRtYXJrZXJTeW1ib2w6ICBcIm0tMywwIGMwLC00IDYsLTQgNiwwIG0tNiwwIGMwLDQgNiw0IDYsMFwiLFx0XHRcdFxyXG5cdFx0XHRtYXJrZXJTdHJva2U6ICB7d2lkdGg6IDEuNSwgY29sb3I6IFwiIzMzM1wifSxcdFx0XHJcblx0XHRcdG1hcmtlck91dGxpbmU6IHt3aWR0aDogMC4xLCBjb2xvcjogXCIjY2NjXCJ9LFx0XHRcclxuXHRcdFx0bWFya2VyU2hhZG93OiBudWxsXHRcdFx0XHRcdFx0XHRcdFxyXG5cdFx0fVxyXG5cdH1cclxufSk7XHJcblxyXG5yZXR1cm4gU2ltcGxlVGhlbWU7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLDRuQkFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/SimpleTheme.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/action2d/Base.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/action2d/Base.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/Evented */ \"./node_modules/dojo/Evented.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, Evented){\r\n\r\n\treturn declare(\"dojox.charting.action2d.Base\", Evented, {\r\n\t\t// summary:\r\n\t\t//\t\tBase action class for plot and chart actions.\r\n\t\r\n\t\tconstructor: function(chart, plot){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a new base action.  This can either be a plot or a chart action.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action applies to.\r\n\t\t\t// plot: String|dojox/charting/plot2d/Base?\r\n\t\t\t//\t\tOptional target plot for this action.  Default is \"default\".\r\n\t\t\tthis.chart = chart;\r\n\t\t\tthis.plot = plot ? (lang.isString(plot) ? this.chart.getPlot(plot) : plot) : this.chart.getPlot(\"default\");\r\n\t\t},\r\n\t\r\n\t\tconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect this action to the plot or the chart.\r\n\t\t},\r\n\t\r\n\t\tdisconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisconnect this action from the plot or the chart.\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDo any cleanup needed when destroying parent elements.\r\n\t\t\tthis.disconnect();\r\n\t\t}\r\n\t});\r\n\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYWN0aW9uMmQvQmFzZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9hY3Rpb24yZC9CYXNlLmpzP2ZhMGIiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvbGFuZ1wiLCBcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcImRvam8vRXZlbnRlZFwiXSxcclxuXHRmdW5jdGlvbihsYW5nLCBkZWNsYXJlLCBFdmVudGVkKXtcclxuXHJcblx0cmV0dXJuIGRlY2xhcmUoXCJkb2pveC5jaGFydGluZy5hY3Rpb24yZC5CYXNlXCIsIEV2ZW50ZWQsIHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRCYXNlIGFjdGlvbiBjbGFzcyBmb3IgcGxvdCBhbmQgY2hhcnQgYWN0aW9ucy5cclxuXHRcclxuXHRcdGNvbnN0cnVjdG9yOiBmdW5jdGlvbihjaGFydCwgcGxvdCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENyZWF0ZSBhIG5ldyBiYXNlIGFjdGlvbi4gIFRoaXMgY2FuIGVpdGhlciBiZSBhIHBsb3Qgb3IgYSBjaGFydCBhY3Rpb24uXHJcblx0XHRcdC8vIGNoYXJ0OiBkb2pveC9jaGFydGluZy9DaGFydFxyXG5cdFx0XHQvL1x0XHRUaGUgY2hhcnQgdGhpcyBhY3Rpb24gYXBwbGllcyB0by5cclxuXHRcdFx0Ly8gcGxvdDogU3RyaW5nfGRvam94L2NoYXJ0aW5nL3Bsb3QyZC9CYXNlP1xyXG5cdFx0XHQvL1x0XHRPcHRpb25hbCB0YXJnZXQgcGxvdCBmb3IgdGhpcyBhY3Rpb24uICBEZWZhdWx0IGlzIFwiZGVmYXVsdFwiLlxyXG5cdFx0XHR0aGlzLmNoYXJ0ID0gY2hhcnQ7XHJcblx0XHRcdHRoaXMucGxvdCA9IHBsb3QgPyAobGFuZy5pc1N0cmluZyhwbG90KSA/IHRoaXMuY2hhcnQuZ2V0UGxvdChwbG90KSA6IHBsb3QpIDogdGhpcy5jaGFydC5nZXRQbG90KFwiZGVmYXVsdFwiKTtcclxuXHRcdH0sXHJcblx0XHJcblx0XHRjb25uZWN0OiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRDb25uZWN0IHRoaXMgYWN0aW9uIHRvIHRoZSBwbG90IG9yIHRoZSBjaGFydC5cclxuXHRcdH0sXHJcblx0XHJcblx0XHRkaXNjb25uZWN0OiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHREaXNjb25uZWN0IHRoaXMgYWN0aW9uIGZyb20gdGhlIHBsb3Qgb3IgdGhlIGNoYXJ0LlxyXG5cdFx0fSxcclxuXHRcdFxyXG5cdFx0ZGVzdHJveTogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0RG8gYW55IGNsZWFudXAgbmVlZGVkIHdoZW4gZGVzdHJveWluZyBwYXJlbnQgZWxlbWVudHMuXHJcblx0XHRcdHRoaXMuZGlzY29ubmVjdCgpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsdVhBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/action2d/Base.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/action2d/PlotAction.js":
/*!************************************************************!*\
  !*** ./node_modules/dojox/charting/action2d/PlotAction.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Base */ \"./node_modules/dojox/charting/action2d/Base.js\"), __webpack_require__(/*! dojo/fx/easing */ \"./node_modules/dojo/fx/easing.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(hub, declare, Base, dfe, df){\r\n\t\r\n\t/*=====\r\n\tvar __PlotActionCtorArgs = {\r\n\t \t// summary:\r\n\t\t//\t\tThe base keyword arguments object for creating an action2d.\r\n\t\t// duration: Number?\r\n\t\t//\t\tThe amount of time in milliseconds for an animation to last.  Default is 400.\r\n\t\t// easing: dojo/fx/easing/*?\r\n\t\t//\t\tAn easing object (see dojo.fx.easing) for use in an animation.  The\r\n\t\t//\t\tdefault is dojo.fx.easing.backOut.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar DEFAULT_DURATION = 400,\t// ms\r\n\t\tDEFAULT_EASING   = dfe.backOut;\r\n\r\n\treturn declare(\"dojox.charting.action2d.PlotAction\", Base, {\r\n\t\t// summary:\r\n\t\t//\t\tBase action class for plot actions.\r\n\r\n\t\toverOutEvents: {onmouseover: 1, onmouseout: 1},\r\n\r\n\t\tconstructor: function(chart, plot, kwargs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a new base PlotAction.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action applies to.\r\n\t\t\t// plot: String?\r\n\t\t\t//\t\tThe name of the plot this action belongs to.  If none is passed \"default\" is assumed.\r\n\t\t\t// kwargs: __PlotActionCtorArgs?\r\n\t\t\t//\t\tOptional arguments for the action.\r\n\t\t\tthis.anim = {};\r\n\r\n\t\t\t// process common optional named parameters\r\n\t\t\tif(!kwargs){ kwargs = {}; }\r\n\t\t\tthis.duration = kwargs.duration ? kwargs.duration : DEFAULT_DURATION;\r\n\t\t\tthis.easing   = kwargs.easing   ? kwargs.easing   : DEFAULT_EASING;\r\n\t\t},\r\n\r\n\t\tconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect this action to the given plot.\r\n\t\t\tthis.handle = this.chart.connectToPlot(this.plot.name, this, \"process\");\r\n\t\t},\r\n\r\n\t\tdisconnect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisconnect this action from the given plot, if connected.\r\n\t\t\tif(this.handle){\r\n\t\t\t\thub.disconnect(this.handle);\r\n\t\t\t\tthis.handle = null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\treset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset the action.\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDo any cleanup needed when destroying parent elements.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdf.forIn(this.anim, function(o){\r\n\t\t\t\tdf.forIn(o, function(anim){\r\n\t\t\t\t\tanim.action.stop(true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.anim = {};\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYWN0aW9uMmQvUGxvdEFjdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9hY3Rpb24yZC9QbG90QWN0aW9uLmpzPzE0NmQiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvY29ubmVjdFwiLCBcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcIi4vQmFzZVwiLCBcImRvam8vZngvZWFzaW5nXCIsIFwiZG9qb3gvbGFuZy9mdW5jdGlvbmFsXCJdLFxyXG5cdGZ1bmN0aW9uKGh1YiwgZGVjbGFyZSwgQmFzZSwgZGZlLCBkZil7XHJcblx0XHJcblx0Lyo9PT09PVxyXG5cdHZhciBfX1Bsb3RBY3Rpb25DdG9yQXJncyA9IHtcclxuXHQgXHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0VGhlIGJhc2Uga2V5d29yZCBhcmd1bWVudHMgb2JqZWN0IGZvciBjcmVhdGluZyBhbiBhY3Rpb24yZC5cclxuXHRcdC8vIGR1cmF0aW9uOiBOdW1iZXI/XHJcblx0XHQvL1x0XHRUaGUgYW1vdW50IG9mIHRpbWUgaW4gbWlsbGlzZWNvbmRzIGZvciBhbiBhbmltYXRpb24gdG8gbGFzdC4gIERlZmF1bHQgaXMgNDAwLlxyXG5cdFx0Ly8gZWFzaW5nOiBkb2pvL2Z4L2Vhc2luZy8qP1xyXG5cdFx0Ly9cdFx0QW4gZWFzaW5nIG9iamVjdCAoc2VlIGRvam8uZnguZWFzaW5nKSBmb3IgdXNlIGluIGFuIGFuaW1hdGlvbi4gIFRoZVxyXG5cdFx0Ly9cdFx0ZGVmYXVsdCBpcyBkb2pvLmZ4LmVhc2luZy5iYWNrT3V0LlxyXG5cdH07XHJcblx0PT09PT0qL1xyXG5cclxuXHR2YXIgREVGQVVMVF9EVVJBVElPTiA9IDQwMCxcdC8vIG1zXHJcblx0XHRERUZBVUxUX0VBU0lORyAgID0gZGZlLmJhY2tPdXQ7XHJcblxyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcuYWN0aW9uMmQuUGxvdEFjdGlvblwiLCBCYXNlLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QmFzZSBhY3Rpb24gY2xhc3MgZm9yIHBsb3QgYWN0aW9ucy5cclxuXHJcblx0XHRvdmVyT3V0RXZlbnRzOiB7b25tb3VzZW92ZXI6IDEsIG9ubW91c2VvdXQ6IDF9LFxyXG5cclxuXHRcdGNvbnN0cnVjdG9yOiBmdW5jdGlvbihjaGFydCwgcGxvdCwga3dhcmdzKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Q3JlYXRlIGEgbmV3IGJhc2UgUGxvdEFjdGlvbi5cclxuXHRcdFx0Ly8gY2hhcnQ6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdFRoZSBjaGFydCB0aGlzIGFjdGlvbiBhcHBsaWVzIHRvLlxyXG5cdFx0XHQvLyBwbG90OiBTdHJpbmc/XHJcblx0XHRcdC8vXHRcdFRoZSBuYW1lIG9mIHRoZSBwbG90IHRoaXMgYWN0aW9uIGJlbG9uZ3MgdG8uICBJZiBub25lIGlzIHBhc3NlZCBcImRlZmF1bHRcIiBpcyBhc3N1bWVkLlxyXG5cdFx0XHQvLyBrd2FyZ3M6IF9fUGxvdEFjdGlvbkN0b3JBcmdzP1xyXG5cdFx0XHQvL1x0XHRPcHRpb25hbCBhcmd1bWVudHMgZm9yIHRoZSBhY3Rpb24uXHJcblx0XHRcdHRoaXMuYW5pbSA9IHt9O1xyXG5cclxuXHRcdFx0Ly8gcHJvY2VzcyBjb21tb24gb3B0aW9uYWwgbmFtZWQgcGFyYW1ldGVyc1xyXG5cdFx0XHRpZigha3dhcmdzKXsga3dhcmdzID0ge307IH1cclxuXHRcdFx0dGhpcy5kdXJhdGlvbiA9IGt3YXJncy5kdXJhdGlvbiA/IGt3YXJncy5kdXJhdGlvbiA6IERFRkFVTFRfRFVSQVRJT047XHJcblx0XHRcdHRoaXMuZWFzaW5nICAgPSBrd2FyZ3MuZWFzaW5nICAgPyBrd2FyZ3MuZWFzaW5nICAgOiBERUZBVUxUX0VBU0lORztcclxuXHRcdH0sXHJcblxyXG5cdFx0Y29ubmVjdDogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Q29ubmVjdCB0aGlzIGFjdGlvbiB0byB0aGUgZ2l2ZW4gcGxvdC5cclxuXHRcdFx0dGhpcy5oYW5kbGUgPSB0aGlzLmNoYXJ0LmNvbm5lY3RUb1Bsb3QodGhpcy5wbG90Lm5hbWUsIHRoaXMsIFwicHJvY2Vzc1wiKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0ZGlzY29ubmVjdDogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0RGlzY29ubmVjdCB0aGlzIGFjdGlvbiBmcm9tIHRoZSBnaXZlbiBwbG90LCBpZiBjb25uZWN0ZWQuXHJcblx0XHRcdGlmKHRoaXMuaGFuZGxlKXtcclxuXHRcdFx0XHRodWIuZGlzY29ubmVjdCh0aGlzLmhhbmRsZSk7XHJcblx0XHRcdFx0dGhpcy5oYW5kbGUgPSBudWxsO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cclxuXHRcdHJlc2V0OiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXNldCB0aGUgYWN0aW9uLlxyXG5cdFx0fSxcclxuXHJcblx0XHRkZXN0cm95OiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHREbyBhbnkgY2xlYW51cCBuZWVkZWQgd2hlbiBkZXN0cm95aW5nIHBhcmVudCBlbGVtZW50cy5cclxuXHRcdFx0dGhpcy5pbmhlcml0ZWQoYXJndW1lbnRzKTtcclxuXHRcdFx0ZGYuZm9ySW4odGhpcy5hbmltLCBmdW5jdGlvbihvKXtcclxuXHRcdFx0XHRkZi5mb3JJbihvLCBmdW5jdGlvbihhbmltKXtcclxuXHRcdFx0XHRcdGFuaW0uYWN0aW9uLnN0b3AodHJ1ZSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHR0aGlzLmFuaW0gPSB7fTtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsbWpCQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/action2d/PlotAction.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/action2d/Tooltip.js":
/*!*********************************************************!*\
  !*** ./node_modules/dojox/charting/action2d/Tooltip.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dijit/Tooltip */ \"./node_modules/dijit/Tooltip.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), __webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), __webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"),\r\n\t__webpack_require__(/*! ./PlotAction */ \"./node_modules/dojox/charting/action2d/PlotAction.js\"), __webpack_require__(/*! dojox/gfx/matrix */ \"./node_modules/dojox/gfx/matrix.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), __webpack_require__.dj.h(\"dojo-bidi?./node_modules/dojox/charting/bidi/action2d/Tooltip.js\"), \r\n\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/scan */ \"./node_modules/dojox/lang/functional/scan.js\"), __webpack_require__(/*! dojox/lang/functional/fold */ \"./node_modules/dojox/lang/functional/fold.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(DijitTooltip, lang, declare, win, hub, domStyle, PlotAction, m, has, BidiTooltip, df){\r\n\t\r\n\t/*=====\r\n\tvar __TooltipCtorArgs = {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdditional arguments for tooltip actions.\r\n\t\t\t// duration: Number?\r\n\t\t\t//\t\tThe amount of time in milliseconds for an animation to last.  Default is 400.\r\n\t\t\t// easing: dojo/fx/easing/*?\r\n\t\t\t//\t\tAn easing object (see dojo.fx.easing) for use in an animation.  The\r\n\t\t\t//\t\tdefault is dojo.fx.easing.backOut.\r\n\t\t\t// text: Function?\r\n\t\t\t//\t\tThe function that produces the text to be shown within a tooltip.  By default this will be\r\n\t\t\t//\t\tset by the plot in question, by returning the value of the element.\r\n\t\t\t// mouseOver: Boolean?\r\n            //\t\tWhether the tooltip is enabled on mouse over or on mouse click / touch down. Default is true.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar DEFAULT_TEXT = function(o, plot){\r\n\t\tvar t = o.run && o.run.data && o.run.data[o.index];\r\n\t\tif(t && typeof t != \"number\" && (t.tooltip || t.text)){\r\n\t\t\treturn t.tooltip || t.text;\r\n\t\t}\r\n\t\tif(plot.tooltipFunc){\r\n\t\t\treturn plot.tooltipFunc(o);\r\n\t\t}else{\r\n\t\t\treturn o.y;\r\n\t\t}\r\n\t};\r\n\r\n\tvar pi4 = Math.PI / 4, pi2 = Math.PI / 2;\r\n\t\r\n\tvar Tooltip = declare(has(\"dojo-bidi\")? \"dojox.charting.action2d.NonBidiTooltip\" : \"dojox.charting.action2d.Tooltip\", PlotAction, {\r\n\t\t// summary:\r\n\t\t//\t\tCreate an action on a plot where a tooltip is shown when hovering over an element.\r\n\r\n\t\t// the data description block for the widget parser\r\n\t\tdefaultParams: {\r\n\t\t\ttext: DEFAULT_TEXT,\t// the function to produce a tooltip from the object\r\n            mouseOver: true,\r\n\t\t\tdefaultPosition: [\"after-centered\", \"before-centered\"]\r\n\t\t},\r\n\t\toptionalParams: {},\t// no optional parameters\r\n\r\n\t\tconstructor: function(chart, plot, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the tooltip action and connect it to the plot.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this action belongs to.\r\n\t\t\t// plot: String?\r\n\t\t\t//\t\tThe plot this action is attached to.  If not passed, \"default\" is assumed.\r\n\t\t\t// kwArgs: __TooltipCtorArgs?\r\n\t\t\t//\t\tOptional keyword arguments object for setting parameters.\r\n\t\t\tthis.text = kwArgs && kwArgs.text ? kwArgs.text : DEFAULT_TEXT;\r\n\t\t\tthis.mouseOver = kwArgs && kwArgs.mouseOver != undefined ? kwArgs.mouseOver : true;\r\n\t\t\tthis.defaultPosition = kwArgs && kwArgs.defaultPosition != undefined ? kwArgs.defaultPosition : [\"after-centered\", \"before-centered\"];\r\n\t\t\tthis.connect();\r\n\t\t},\r\n\t\t\r\n\t\tprocess: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcess the action on the given object.\r\n\t\t\t// o: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe object on which to process the highlighting action.\r\n\t\t\tif(o.type === \"onplotreset\" || o.type === \"onmouseout\"){\r\n                DijitTooltip.hide(this.aroundRect);\r\n\t\t\t\tthis.aroundRect = null;\r\n\t\t\t\tif(o.type === \"onplotreset\"){\r\n\t\t\t\t\tdelete this.angles;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!o.shape || (this.mouseOver && o.type !== \"onmouseover\") || (!this.mouseOver && o.type !== \"onclick\")){ return; }\r\n\t\t\t\r\n\t\t\t// calculate relative coordinates and the position\r\n\t\t\tvar aroundRect = {type: \"rect\"}, position = this.defaultPosition;\r\n\t\t\tswitch(o.element){\r\n\t\t\t\tcase \"marker\":\r\n\t\t\t\t\taroundRect.x = o.cx;\r\n\t\t\t\t\taroundRect.y = o.cy;\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"circle\":\r\n\t\t\t\t\taroundRect.x = o.cx - o.cr;\r\n\t\t\t\t\taroundRect.y = o.cy - o.cr;\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 2 * o.cr;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"spider_circle\":\r\n\t\t\t\t\taroundRect.x = o.cx;\r\n\t\t\t\t\taroundRect.y = o.cy ;\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"spider_plot\":\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase \"column\":\r\n\t\t\t\t\tposition = [\"above-centered\", \"below-centered\"];\r\n\t\t\t\t\t// intentional fall down\r\n\t\t\t\tcase \"bar\":\r\n\t\t\t\t\taroundRect = lang.clone(o.shape.getShape());\r\n\t\t\t\t\taroundRect.w = aroundRect.width;\r\n\t\t\t\t\taroundRect.h = aroundRect.height;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"candlestick\":\r\n\t\t\t\t\taroundRect.x = o.x;\r\n\t\t\t\t\taroundRect.y = o.y;\r\n\t\t\t\t\taroundRect.w = o.width;\r\n\t\t\t\t\taroundRect.h = o.height;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t//case \"slice\":\r\n\t\t\t\t\tif(!this.angles){\r\n\t\t\t\t\t\t// calculate the running total of slice angles\r\n\t\t\t\t\t\tvar filteredRun = typeof o.run.data[0] == \"number\" ?\r\n\t\t\t\t\t\t\t\tdf.map(o.run.data, \"x ? Math.max(x, 0) : 0\") : df.map(o.run.data, \"x ? Math.max(x.y, 0) : 0\");\r\n\t\t\t\t\t\tthis.angles = df.map(df.scanl(filteredRun, \"+\", 0),\r\n\t\t\t\t\t\t\t\"* 2 * Math.PI / this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar startAngle = m._degToRad(o.plot.opt.startAngle),\r\n\t\t\t\t\t\tangle = (this.angles[o.index] + this.angles[o.index + 1]) / 2 + startAngle;\r\n\t\t\t\t\taroundRect.x = o.cx + o.cr * Math.cos(angle);\r\n\t\t\t\t\taroundRect.y = o.cy + o.cr * Math.sin(angle);\r\n\t\t\t\t\taroundRect.w = aroundRect.h = 1;\r\n                    // depending on startAngle we might go out of the 0-2*PI range, normalize that\r\n                    if(startAngle && (angle < 0 || angle > 2 * Math.PI)){\r\n\t\t\t\t\t\tangle = Math.abs(2 * Math.PI  - Math.abs(angle));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// calculate the position\r\n\t\t\t\t\tif(angle < pi4){\r\n\t\t\t\t\t\t// do nothing: the position is right\r\n\t\t\t\t\t}else if(angle < pi2 + pi4){\r\n\t\t\t\t\t\tposition = [\"below-centered\", \"above-centered\"];\r\n\t\t\t\t\t}else if(angle < Math.PI + pi4){\r\n\t\t\t\t\t\tposition = [\"before-centered\", \"after-centered\"];\r\n\t\t\t\t\t}else if(angle < 2 * Math.PI - pi4){\r\n\t\t\t\t\t\tposition = [\"above-centered\", \"below-centered\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t// do nothing: the position is right\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._recheckPosition(o,aroundRect,position);\r\n\t\t\t}\r\n\t\t\t// adjust relative coordinates to absolute, and remove fractions\r\n\t\t\tvar lt = this.chart.getCoords();\r\n\t\t\taroundRect.x += lt.x;\r\n\t\t\taroundRect.y += lt.y;\r\n\t\t\taroundRect.x = Math.round(aroundRect.x);\r\n\t\t\taroundRect.y = Math.round(aroundRect.y);\r\n\t\t\taroundRect.w = Math.ceil(aroundRect.w);\r\n\t\t\taroundRect.h = Math.ceil(aroundRect.h);\r\n\t\t\tthis.aroundRect = aroundRect;\r\n\r\n\t\t\tvar tooltipText = this.text(o, this.plot);\r\n\t\t\tif(tooltipText){\r\n\t\t\t\tDijitTooltip.show(this._format(tooltipText), this.aroundRect, position);\r\n\t\t\t}\r\n\t\t\tif(!this.mouseOver){\r\n\t\t\t\tthis._handle = hub.connect(win.doc, \"onclick\", this, \"onClick\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tonClick: function(){\r\n\t\t\tthis.process({ type: \"onmouseout\"});\r\n\t\t},\r\n\t\t_recheckPosition: function(obj,rect,position){\t\t\t\r\n\t\t},\r\n\t\t_format: function(tooltipText){\r\n\t\t\treturn tooltipText;\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.action2d.Tooltip\", [Tooltip, BidiTooltip]) : Tooltip;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/action2d/Tooltip.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/axis2d/Base.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/charting/axis2d/Base.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ../Element */ \"./node_modules/dojox/charting/Element.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Element){\r\n\t/*=====\r\n\tvar __BaseAxisCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\r\n\t\t// vertical: Boolean?\r\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\r\n\t\t// min: Number?\r\n\t\t//\t\tThe smallest value on an axis. Default is 0.\r\n\t\t// max: Number?\r\n\t\t//\t\tThe largest value on an axis. Default is 1.\r\n\t};\r\n\t=====*/\r\n\treturn declare(\"dojox.charting.axis2d.Base\", Element, {\r\n\t\t// summary:\r\n\t\t//\t\tThe base class for any axis.  This is more of an interface/API\r\n\t\t//\t\tdefinition than anything else; see dojox.charting.axis2d.Default\r\n\t\t//\t\tfor more details.\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn a new base axis.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this axis belongs to.\r\n\t\t\t// kwArgs: __BaseAxisCtorArgs?\r\n\t\t\t//\t\tAn optional arguments object to define the axis parameters.\r\n\t\t\tthis.vertical = kwArgs && kwArgs.vertical;\r\n\t\t\tthis.opt = {};\r\n\t\t\tthis.opt.min = kwArgs && kwArgs.min;\r\n\t\t\tthis.opt.max = kwArgs && kwArgs.max;\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function for clearing the axis.\r\n\t\t\t// returns: dojox/charting/axis2d/Base\r\n\t\t\t//\t\tA reference to the axis for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\r\n\t\t},\r\n\t\tinitialized: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn a flag as to whether or not this axis has been initialized.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tIf the axis is initialized or not.\r\n\t\t\treturn false;\t//\tBoolean\r\n\t\t},\r\n\t\tcalculate: function(min, max, span){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function to run the calculations needed for drawing this axis.\r\n\t\t\t// returns: dojox/charting/axis2d/Base\r\n\t\t\t//\t\tA reference to the axis for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\r\n\t\t},\r\n\t\tgetScaler: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA stub function to return the scaler object created during calculate.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe scaler object (see dojox.charting.scaler.linear for more information)\r\n\t\t\treturn null;\t//\tObject\r\n\t\t},\r\n\t\tgetTicks: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA stub function to return the object that helps define how ticks are rendered.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe ticks object.\r\n\t\t\treturn null;\t//\tObject\r\n\t\t},\r\n\t\tgetOffsets: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA stub function to return any offsets needed for axis and series rendering.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\treturn {l: 0, r: 0, t: 0, b: 0};\t//\tObject\r\n\t\t},\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function to render this axis.\r\n\t\t\t// returns: dojox/charting/axis2d/Base\r\n\t\t\t//\t\tA reference to the axis for functional chaining.\r\n\t\t\tthis.dirty = false;\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Base\r\n\t\t},\r\n\t\tisNullValue: function(value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tA stub function to determine a data value\r\n\t\t\t//\t\tthat should be ignored.\r\n\t\t\t// value: Number|Null|Object\r\n\t\t\t//\t\tA data value to be inspected.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tIf the value makes sense for this axis or not.\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tnaturalBaseline: 0\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYXhpczJkL0Jhc2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYXhpczJkL0Jhc2UuanM/OTk2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9kZWNsYXJlXCIsIFwiLi4vRWxlbWVudFwiXSxcclxuXHRmdW5jdGlvbihkZWNsYXJlLCBFbGVtZW50KXtcclxuXHQvKj09PT09XHJcblx0dmFyIF9fQmFzZUF4aXNDdG9yQXJncyA9IHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRPcHRpb25hbCBhcmd1bWVudHMgdXNlZCBpbiB0aGUgZGVmaW5pdGlvbiBvZiBhbiBpbnZpc2libGUgYXhpcy5cclxuXHRcdC8vIHZlcnRpY2FsOiBCb29sZWFuP1xyXG5cdFx0Ly9cdFx0QSBmbGFnIHRoYXQgc2F5cyB3aGV0aGVyIGFuIGF4aXMgaXMgdmVydGljYWwgKGkuZS4geSBheGlzKSBvciBob3Jpem9udGFsLiBEZWZhdWx0IGlzIGZhbHNlIChob3Jpem9udGFsKS5cclxuXHRcdC8vIG1pbjogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0VGhlIHNtYWxsZXN0IHZhbHVlIG9uIGFuIGF4aXMuIERlZmF1bHQgaXMgMC5cclxuXHRcdC8vIG1heDogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0VGhlIGxhcmdlc3QgdmFsdWUgb24gYW4gYXhpcy4gRGVmYXVsdCBpcyAxLlxyXG5cdH07XHJcblx0PT09PT0qL1xyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcuYXhpczJkLkJhc2VcIiwgRWxlbWVudCwge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFRoZSBiYXNlIGNsYXNzIGZvciBhbnkgYXhpcy4gIFRoaXMgaXMgbW9yZSBvZiBhbiBpbnRlcmZhY2UvQVBJXHJcblx0XHQvL1x0XHRkZWZpbml0aW9uIHRoYW4gYW55dGhpbmcgZWxzZTsgc2VlIGRvam94LmNoYXJ0aW5nLmF4aXMyZC5EZWZhdWx0XHJcblx0XHQvL1x0XHRmb3IgbW9yZSBkZXRhaWxzLlxyXG5cdFx0Y29uc3RydWN0b3I6IGZ1bmN0aW9uKGNoYXJ0LCBrd0FyZ3Mpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXR1cm4gYSBuZXcgYmFzZSBheGlzLlxyXG5cdFx0XHQvLyBjaGFydDogZG9qb3gvY2hhcnRpbmcvQ2hhcnRcclxuXHRcdFx0Ly9cdFx0VGhlIGNoYXJ0IHRoaXMgYXhpcyBiZWxvbmdzIHRvLlxyXG5cdFx0XHQvLyBrd0FyZ3M6IF9fQmFzZUF4aXNDdG9yQXJncz9cclxuXHRcdFx0Ly9cdFx0QW4gb3B0aW9uYWwgYXJndW1lbnRzIG9iamVjdCB0byBkZWZpbmUgdGhlIGF4aXMgcGFyYW1ldGVycy5cclxuXHRcdFx0dGhpcy52ZXJ0aWNhbCA9IGt3QXJncyAmJiBrd0FyZ3MudmVydGljYWw7XHJcblx0XHRcdHRoaXMub3B0ID0ge307XHJcblx0XHRcdHRoaXMub3B0Lm1pbiA9IGt3QXJncyAmJiBrd0FyZ3MubWluO1xyXG5cdFx0XHR0aGlzLm9wdC5tYXggPSBrd0FyZ3MgJiYga3dBcmdzLm1heDtcclxuXHRcdH0sXHJcblx0XHRjbGVhcjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0U3R1YiBmdW5jdGlvbiBmb3IgY2xlYXJpbmcgdGhlIGF4aXMuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL2F4aXMyZC9CYXNlXHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBheGlzIGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRyZXR1cm4gdGhpcztcdC8vXHRkb2pveC9jaGFydGluZy9heGlzMmQvQmFzZVxyXG5cdFx0fSxcclxuXHRcdGluaXRpYWxpemVkOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXR1cm4gYSBmbGFnIGFzIHRvIHdoZXRoZXIgb3Igbm90IHRoaXMgYXhpcyBoYXMgYmVlbiBpbml0aWFsaXplZC5cclxuXHRcdFx0Ly8gcmV0dXJuczogQm9vbGVhblxyXG5cdFx0XHQvL1x0XHRJZiB0aGUgYXhpcyBpcyBpbml0aWFsaXplZCBvciBub3QuXHJcblx0XHRcdHJldHVybiBmYWxzZTtcdC8vXHRCb29sZWFuXHJcblx0XHR9LFxyXG5cdFx0Y2FsY3VsYXRlOiBmdW5jdGlvbihtaW4sIG1heCwgc3Bhbil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFN0dWIgZnVuY3Rpb24gdG8gcnVuIHRoZSBjYWxjdWxhdGlvbnMgbmVlZGVkIGZvciBkcmF3aW5nIHRoaXMgYXhpcy5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvYXhpczJkL0Jhc2VcclxuXHRcdFx0Ly9cdFx0QSByZWZlcmVuY2UgdG8gdGhlIGF4aXMgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL2F4aXMyZC9CYXNlXHJcblx0XHR9LFxyXG5cdFx0Z2V0U2NhbGVyOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRBIHN0dWIgZnVuY3Rpb24gdG8gcmV0dXJuIHRoZSBzY2FsZXIgb2JqZWN0IGNyZWF0ZWQgZHVyaW5nIGNhbGN1bGF0ZS5cclxuXHRcdFx0Ly8gcmV0dXJuczogT2JqZWN0XHJcblx0XHRcdC8vXHRcdFRoZSBzY2FsZXIgb2JqZWN0IChzZWUgZG9qb3guY2hhcnRpbmcuc2NhbGVyLmxpbmVhciBmb3IgbW9yZSBpbmZvcm1hdGlvbilcclxuXHRcdFx0cmV0dXJuIG51bGw7XHQvL1x0T2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0Z2V0VGlja3M6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEEgc3R1YiBmdW5jdGlvbiB0byByZXR1cm4gdGhlIG9iamVjdCB0aGF0IGhlbHBzIGRlZmluZSBob3cgdGlja3MgYXJlIHJlbmRlcmVkLlxyXG5cdFx0XHQvLyByZXR1cm5zOiBPYmplY3RcclxuXHRcdFx0Ly9cdFx0VGhlIHRpY2tzIG9iamVjdC5cclxuXHRcdFx0cmV0dXJuIG51bGw7XHQvL1x0T2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0Z2V0T2Zmc2V0czogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0QSBzdHViIGZ1bmN0aW9uIHRvIHJldHVybiBhbnkgb2Zmc2V0cyBuZWVkZWQgZm9yIGF4aXMgYW5kIHNlcmllcyByZW5kZXJpbmcuXHJcblx0XHRcdC8vIHJldHVybnM6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRBbiBvYmplY3Qgb2YgdGhlIGZvcm0geyBsLCByLCB0LCBiIH0uXHJcblx0XHRcdHJldHVybiB7bDogMCwgcjogMCwgdDogMCwgYjogMH07XHQvL1x0T2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0cmVuZGVyOiBmdW5jdGlvbihkaW0sIG9mZnNldHMpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRTdHViIGZ1bmN0aW9uIHRvIHJlbmRlciB0aGlzIGF4aXMuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL2F4aXMyZC9CYXNlXHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoZSBheGlzIGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHR0aGlzLmRpcnR5ID0gZmFsc2U7XHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL2F4aXMyZC9CYXNlXHJcblx0XHR9LFxyXG5cdFx0aXNOdWxsVmFsdWU6IGZ1bmN0aW9uKHZhbHVlKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0QSBzdHViIGZ1bmN0aW9uIHRvIGRldGVybWluZSBhIGRhdGEgdmFsdWVcclxuXHRcdFx0Ly9cdFx0dGhhdCBzaG91bGQgYmUgaWdub3JlZC5cclxuXHRcdFx0Ly8gdmFsdWU6IE51bWJlcnxOdWxsfE9iamVjdFxyXG5cdFx0XHQvL1x0XHRBIGRhdGEgdmFsdWUgdG8gYmUgaW5zcGVjdGVkLlxyXG5cdFx0XHQvLyByZXR1cm5zOiBCb29sZWFuXHJcblx0XHRcdC8vXHRcdElmIHRoZSB2YWx1ZSBtYWtlcyBzZW5zZSBmb3IgdGhpcyBheGlzIG9yIG5vdC5cclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fSxcclxuXHRcdG5hdHVyYWxCYXNlbGluZTogMFxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSw4U0FDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/axis2d/Base.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/axis2d/Default.js":
/*!*******************************************************!*\
  !*** ./node_modules/dojox/charting/axis2d/Default.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"),\r\n\t__webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), __webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! ./Invisible */ \"./node_modules/dojox/charting/axis2d/Invisible.js\"),\r\n\t__webpack_require__(/*! ../scaler/linear */ \"./node_modules/dojox/charting/scaler/linear.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/axis2d/common.js\"), __webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"),\r\n\t__webpack_require__.dj.h(\"dojo-bidi?./node_modules/dojox/charting/bidi/axis2d/Default.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, has, declare, connect, domGeom, Invisible,\r\n\t\t\tlin, acommon, g, du, df, BidiDefault){\r\n\r\n\t/*=====\r\n\tvar __AxisCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tOptional arguments used in the definition of an axis.\r\n\t\t// vertical: Boolean?\r\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\r\n\t\t// fixUpper: String?\r\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\r\n\t\t// fixLower: String?\r\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\r\n\t\t// natural: Boolean?\r\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\r\n\t\t// leftBottom: Boolean?\r\n\t\t//\t\tDeprecated: use position instead. The position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\r\n\t\t// includeZero: Boolean?\r\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\r\n\t\t// fixed: Boolean?\r\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\r\n\t\t// majorLabels: Boolean?\r\n\t\t//\t\tFlag to draw labels at major ticks. Default is true.\r\n\t\t// minorTicks: Boolean?\r\n\t\t//\t\tFlag to draw minor ticks on an axis.  Default is true.\r\n\t\t// minorLabels: Boolean?\r\n\t\t//\t\tFlag to labels on minor ticks when there is enough space. Default is true.\r\n\t\t// microTicks: Boolean?\r\n\t\t//\t\tFlag to draw micro ticks on an axis. Default is false.\r\n\t\t// htmlLabels: Boolean?\r\n\t\t//\t\tFlag to use HTML (as opposed to the native vector graphics engine) to draw labels. Default is true.\r\n\t\t// min: Number?\r\n\t\t//\t\tThe smallest value on an axis. Default is 0.\r\n\t\t// max: Number?\r\n\t\t//\t\tThe largest value on an axis. Default is 1.\r\n\t\t// from: Number?\r\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\r\n\t\t// to: Number?\r\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\r\n\t\t// majorTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\r\n\t\t//\t\tthe data range.\r\n\t\t// minorTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\r\n\t\t//\t\tthe data range.\r\n\t\t// microTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\r\n\t\t// labels: Object[]?\r\n\t\t//\t\tAn array of labels for major ticks, with corresponding numeric values, ordered by value.\r\n\t\t// labelFunc: Function?\r\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\r\n\t\t//\t\tthe default text when available. The function must be of the following form:\r\n\t\t//\t|\t\tfunction labelFunc(text, value, precision) {}\r\n\t\t//\t\t`text` is the already pre-formatted text. Pre-formatting is done using `dojo/number` is available, `Date.toFixed` otherwise.\r\n\t\t//\t\t`value`  is the raw axis value.\r\n\t\t//\t\t`precision` is the requested precision to be applied.\r\n\t\t// maxLabelSize: Number?\r\n\t\t//\t\tThe maximum size, in pixels, for a label.  To be used with the optional label function.\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to be used for drawing an axis.\r\n\t\t// majorTick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a major tick.\r\n\t\t// minorTick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a minor tick.\r\n\t\t// microTick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a micro tick.\r\n\t\t// tick: Object?\r\n\t\t//\t\tAn object containing a dojox.gfx.Stroke, and a length (number) for a tick.\r\n\t\t// font: String?\r\n\t\t//\t\tAn optional font definition (as used in the CSS font property) for labels.\r\n\t\t// fontColor: String|dojo.Color?\r\n\t\t//\t\tAn optional color to be used in drawing labels.\r\n\t\t// titleGap: Number?\r\n\t\t//\t\tAn optional grap between axis title and axis label\r\n\t\t// titleFont: String?\r\n\t\t//\t\tAn optional font definition for axis title\r\n\t\t// titleFontColor: String?\r\n\t\t//\t\tAn optional axis title color\r\n\t\t// titleOrientation: String?\r\n\t\t//\t\tAn optional orientation for axis title. \"axis\" means the title facing the axis, \"away\" means facing away.\r\n\t\t//\t\tIf no value is set \"axis\" is used.\r\n\t\t// enableCache: Boolean?\r\n\t\t//\t\tWhether the ticks and labels are cached from one rendering to another. This improves the rendering performance of\r\n\t\t//\t\tsuccessive rendering but penalize the first rendering. For labels it is only working with gfx labels\r\n\t\t//\t\tnot html ones.  Default false.\r\n\t\t// dropLabels: Boolean?\r\n\t\t//\t\tWhether the axis automatically drops labels at regular interval or not to avoid labels overlapping.\r\n\t\t//\t\tThis gives better results but require more computations.  You can disable it to save computation\r\n\t\t//\t\ttime when you know your labels won't overlap. Default is true.\r\n\t\t// labelSizeChange: Boolean?\r\n\t\t//\t\tIndicates to the axis whether the axis labels are changing their size on zoom. If false this allows to\r\n\t\t//\t\toptimize the axis by avoiding recomputing labels maximum size on zoom actions. Default is false.\r\n\t\t// position: String?\r\n\t\t//\t\tThe position of the axis. Values: \"leftOrBottom\", \"center\" or \"rightOrTop\". Default is \"leftOrBottom\".\r\n\t};\r\n\t=====*/\r\n\r\n\tvar centerAnchorLimit = 45;\t// in degrees\r\n\r\n\tvar Default = declare(has(\"dojo-bidi\")? \"dojox.charting.axis2d.NonBidiDefault\" : \"dojox.charting.axis2d.Default\", Invisible, {\r\n\t\t// summary:\r\n\t\t//\t\tThe default axis object used in dojox.charting.  See dojox.charting.Chart.addAxis for details.\r\n\r\n\t\t// defaultParams: Object\r\n\t\t//\t\tThe default parameters used to define any axis.\r\n\t\t// optionalParams: Object\r\n\t\t//\t\tAny optional parameters needed to define an axis.\r\n\r\n\t\t/*=====\r\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\r\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\r\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\r\n\r\n\t\t// opt: Object\r\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\r\n\t\t// scaler: Object\r\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\r\n\t\t// ticks: Object\r\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\r\n\t\t// dirty: Boolean\r\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\r\n\t\t// scale: Number\r\n\t\t//\t\tThe current scale of the axis.\r\n\t\t// offset: Number\r\n\t\t//\t\tThe current offset of the axis.\r\n\r\n\t\topt: null,\r\n\t\tscaler: null,\r\n\t\tticks: null,\r\n\t\tdirty: true,\r\n\t\tscale: 1,\r\n\t\toffset: 0,\r\n\t\t=====*/\r\n\t\tdefaultParams: {\r\n\t\t\tvertical:\tfalse,\t\t// true for vertical axis\r\n\t\t\tfixUpper:\t\"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\r\n\t\t\tfixLower:\t\"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\r\n\t\t\tnatural:\t false,\t\t// all tick marks should be made on natural numbers\r\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\" - deprecated: use position instead\r\n\t\t\tincludeZero: false,\t\t// 0 should be included\r\n\t\t\tfixed:\t   true,\t\t// all labels are fixed numbers\r\n\t\t\tmajorLabels: true,\t\t// draw major labels\r\n\t\t\tminorTicks:  true,\t\t// draw minor ticks\r\n\t\t\tminorLabels: true,\t\t// draw minor labels\r\n\t\t\tmicroTicks:  false,\t\t// draw micro ticks\r\n\t\t\trotation:\t0,\t\t\t// label rotation angle in degrees\r\n\t\t\thtmlLabels:  true,\t\t// use HTML to draw labels\r\n\t\t\tenableCache: false,\t\t// whether we cache or not\r\n\t\t\tdropLabels: true,\t\t// whether we automatically drop overlapping labels or not\r\n\t\t\tlabelSizeChange: false, // whether the labels size change on zoom\r\n\t\t\tposition: \"leftOrBottom\" // position of the axis: \"leftOrBottom\" (default), \"center\" or \"rightOrTop\"\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\r\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\r\n\t\t\tfrom:\t\t\t0,\t// visible from this value\r\n\t\t\tto:\t\t\t\t1,\t// visible to this value\r\n\t\t\tmajorTickStep:\t4,\t// major tick step\r\n\t\t\tminorTickStep:\t2,\t// minor tick step\r\n\t\t\tmicroTickStep:\t1,\t// micro tick step\r\n\t\t\tlabels:\t\t\t[],\t// array of labels for major ticks\r\n\t\t\t// with corresponding numeric values\r\n\t\t\t// ordered by values\r\n\t\t\tlabelFunc:\t\tnull, // function to compute label values\r\n\t\t\tmaxLabelSize:\t0,\t// size in px. For use with labelFunc\r\n\t\t\tmaxLabelCharCount:\t0,\t// size in word count.\r\n\t\t\ttrailingSymbol:\tnull,\r\n\r\n\t\t\t// TODO: add support for minRange!\r\n\t\t\t// minRange:\t\t1,\t// smallest distance from min allowed on the axis\r\n\r\n\t\t\t// theme components\r\n\t\t\tstroke:\t\t\t{},\t// stroke for an axis\r\n\t\t\tmajorTick:\t\t{},\t// stroke + length for a tick\r\n\t\t\tminorTick:\t\t{},\t// stroke + length for a tick\r\n\t\t\tmicroTick:\t\t{},\t// stroke + length for a tick\r\n\t\t\ttick:\t\t   {},\t// stroke + length for a tick\r\n\t\t\tfont:\t\t\t\"\",\t// font for labels\r\n\t\t\tfontColor:\t\t\"\",\t// color for labels as a string\r\n\t\t\ttitle:\t\t\t\t \"\",\t// axis title\r\n\t\t\ttitleGap:\t\t\t 0,\t\t// gap between axis title and axis label\r\n\t\t\ttitleFont:\t\t\t \"\",\t\t// axis title font\r\n\t\t\ttitleFontColor:\t\t \"\",\t\t// axis title font color\r\n\t\t\ttitleOrientation:\t \"\"\t\t// \"axis\" means the title facing the axis, \"away\" means facing away\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for an axis.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart the axis belongs to.\r\n\t\t\t// kwArgs: __AxisCtorArgs?\r\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._textFreePool = [];\r\n\t\t\t\tthis._lineFreePool = [];\r\n\t\t\t\tthis._textUsePool = [];\r\n\t\t\t\tthis._lineUsePool = [];\r\n\t\t\t}\r\n\t\t\tthis._invalidMaxLabelSize = true;\r\n\t\t\t// replace deprecated leftBotton to position\r\n\t\t\tif(!(kwArgs && ('position' in kwArgs))){\r\n\t\t\t    this.opt.position = this.opt.leftBottom ? \"leftOrBottom\" : \"rightOrTop\";\r\n\t\t\t}\t\t\t\r\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\r\n\t\t},\r\n\t\tsetWindow: function(scale, offset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\r\n\t\t\t// scale: Number\r\n\t\t\t//\t\tThe new scale for the axis.\r\n\t\t\t// offset: Number\r\n\t\t\t//\t\tThe new offset for the axis.\r\n\t\t\t// returns: dojox/charting/axis2d/Default\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\tif(scale != this.scale){\r\n\t\t\t\t// if scale changed we need to recompute new max label size\r\n\t\t\t\tthis._invalidMaxLabelSize = true;\r\n\t\t\t}\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t_groupLabelWidth: function(labels, font, wcLimit){\r\n\t\t\tif(!labels.length){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tif(labels.length > 50){\r\n\t\t\t\t// let's avoid degenerated cases\r\n\t\t\t\tlabels.length = 50;\r\n\t\t\t}\r\n\t\t\tif(lang.isObject(labels[0])){\r\n\t\t\t\tlabels = df.map(labels, function(label){ return label.text; });\r\n\t\t\t}\r\n\t\t\tif(wcLimit){\r\n\t\t\t\tlabels = df.map(labels, function(label){\r\n\t\t\t\t\treturn lang.trim(label).length == 0 ? \"\" : label.substring(0, wcLimit) + this.trailingSymbol;\r\n\t\t\t\t}, this);\r\n\t\t\t}\r\n\t\t\tvar s = labels.join(\"<br>\");\r\n\t\t\treturn g._base._getTextBox(s, {font: font}).w || 0;\r\n\t\t},\r\n\r\n\t\t_getMaxLabelSize: function(min, max, span, rotation, font, size){\r\n\t\t\tif(this._maxLabelSize == null && arguments.length == 6){\r\n\t\t\t\tvar o = this.opt;\r\n\t\t\t\t// everything might have changed, reset the minMinorStep value\r\n\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep = 0;\r\n\t\t\t\tvar ob = lang.clone(o);\r\n\t\t\t\tdelete ob.to;\r\n\t\t\t\tdelete ob.from;\r\n\t\t\t\t// build all the ticks from min, to max not from to to _but_ using the step\r\n\t\t\t\t// that would be used if we where just displaying from to to from.\r\n\t\t\t\tvar sb = lin.buildScaler(min, max, span, ob, o.to - o.from);\r\n\t\t\t\tsb.minMinorStep = 0;\r\n\t\t\t\tthis._majorStart = sb.major.start;\r\n\t\t\t\t// we build all the ticks not only the ones we need to draw in order to get\r\n\t\t\t\t// a correct drop rate computation that works for any offset of this scale\r\n\t\t\t\tvar tb = lin.buildTicks(sb, o);\r\n\t\t\t\t// if there is not tick at all tb is null\r\n\t\t\t\tif(size && tb){\r\n\t\t\t\t\tvar majLabelW = 0, minLabelW = 0; // non rotated versions\r\n\t\t\t\t\t// we first collect all labels when needed\r\n\t\t\t\t\tvar tickLabelFunc = function(tick){\r\n\t\t\t\t\t\tif(tick.label){\r\n\t\t\t\t\t\t\tthis.push(tick.label);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar labels = [];\r\n\t\t\t\t\tif(this.opt.majorLabels){\r\n\t\t\t\t\t\tarr.forEach(tb.major, tickLabelFunc, labels);\r\n\t\t\t\t\t\tmajLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\r\n\t\t\t\t\t\tif(ob.maxLabelSize){\r\n\t\t\t\t\t\t\tmajLabelW = Math.min(ob.maxLabelSize, majLabelW);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// do the minor labels computation only if dropLabels is set\r\n\t\t\t\t\tlabels = [];\r\n\t\t\t\t\tif(this.opt.dropLabels && this.opt.minorLabels){\r\n\t\t\t\t\t\tarr.forEach(tb.minor, tickLabelFunc, labels);\r\n\t\t\t\t\t\tminLabelW = this._groupLabelWidth(labels, font, ob.maxLabelCharCount);\r\n\t\t\t\t\t\tif(ob.maxLabelSize){\r\n\t\t\t\t\t\t\tminLabelW = Math.min(ob.maxLabelSize, minLabelW);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._maxLabelSize = {\r\n\t\t\t\t\t\tmajLabelW: majLabelW, minLabelW: minLabelW,\r\n\t\t\t\t\t\tmajLabelH: size, minLabelH: size\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis._maxLabelSize = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._maxLabelSize;\r\n\t\t},\r\n\r\n\t\tcalculate: function(min, max, span){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\t// when the scale has not changed there is no reason for minMinorStep to change\r\n\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep;\r\n\t\t\t// we want to recompute the dropping mechanism only when the scale or the size of the axis is changing\r\n\t\t\t// not when for example when we scroll (otherwise effect would be weird)\r\n\t\t\tif((this._invalidMaxLabelSize || span != this._oldSpan) && (min != Infinity && max != -Infinity)){\r\n\t\t\t\tthis._invalidMaxLabelSize = false;\r\n\t\t\t\tif(this.opt.labelSizeChange){\r\n\t\t\t\t\tthis._maxLabelSize = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis._oldSpan = span;\r\n\t\t\t\tvar o = this.opt;\r\n\t\t\t\tvar ta = this.chart.theme.axis, rotation = o.rotation % 360,\r\n\t\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\r\n\t\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\r\n\t\t\t\t\tfont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\r\n\t\t\t\t\tsize = font ? g.normalizedLength(g.splitFontString(font).size) : 0,\r\n\t\t\t\t\t// even if we don't drop label we need to compute max size for offsets\r\n\t\t\t\t\tlabelW = this._getMaxLabelSize(min, max, span, rotation, font, size);\r\n\t\t\t\tif(typeof labelGap != \"number\"){\r\n\t\t\t\t\tlabelGap = 4; // in pixels\r\n\t\t\t\t}\r\n\t\t\t\tif(labelW && o.dropLabels){\r\n\t\t\t\t\tvar cosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\r\n\t\t\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\r\n\t\t\t\t\tvar majLabelW, minLabelW;\r\n\t\t\t\t\tif(rotation < 0){\r\n\t\t\t\t\t\trotation += 360;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tswitch(rotation){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\t\t// trivial cases: horizontal labels\r\n\t\t\t\t\t\t\tif(this.vertical){\r\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\r\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\t\t// trivial cases: vertical\r\n\t\t\t\t\t\t\tif(this.vertical){\r\n\t\t\t\t\t\t\t\tmajLabelW = labelW.majLabelW;\r\n\t\t\t\t\t\t\t\tminLabelW = labelW.minLabelW;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tmajLabelW = minLabelW = size;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// all major labels are parallel they can't collapse except if the two ticks are\r\n\t\t\t\t\t\t\t// closer than the height of the text * cos(90-rotation)\r\n\t\t\t\t\t\t\tmajLabelW  = this.vertical ? Math.min(labelW.majLabelW, size / cosr) : Math.min(labelW.majLabelW, size / sinr);\r\n\t\t\t\t\t\t\t// for minor labels we need to rotated them\r\n\t\t\t\t\t\t\tvar gap1 = Math.sqrt(labelW.minLabelW * labelW.minLabelW + size * size),\r\n\t\t\t\t\t\t\t\tgap2 = this.vertical ? size * cosr + labelW.minLabelW * sinr : labelW.minLabelW * cosr + size * sinr;\r\n\t\t\t\t\t\t\tminLabelW = Math.min(gap1, gap2);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// we need to check both minor and major labels fit a minor step\r\n\t\t\t\t\tthis.scaler.minMinorStep = this._prevMinMinorStep =  Math.max(majLabelW, minLabelW) + labelGap;\r\n\t\t\t\t\tvar canMinorLabel = this.scaler.minMinorStep <= this.scaler.minor.tick * this.scaler.bounds.scale;\r\n\t\t\t\t\tif(!canMinorLabel){\r\n\t\t\t\t\t\t// we can't place minor labels, let's see if we can place major ones\r\n\t\t\t\t\t\t// in a major step and if not which skip interval we must follow\r\n\t\t\t\t\t\tthis._skipInterval = Math.floor((majLabelW + labelGap) / (this.scaler.major.tick * this.scaler.bounds.scale));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// everything fit well\r\n\t\t\t\t\t\tthis._skipInterval = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// drop label disabled\r\n\t\t\t\t\tthis._skipInterval = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// computes the tick subset we need for that scale/offset\r\n\t\t\tthis.ticks = lin.buildTicks(this.scaler, this.opt);\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tgetOffsets: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the physical offset values for this axis (used in drawing data series). This method is not\r\n\t\t\t//\t\tsupposed to be called by the users but internally.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe calculated offsets in the form of { l, r, t, b } (left, right, top, bottom).\r\n\t\t\tvar s = this.scaler, offsets = { l: 0, r: 0, t: 0, b: 0 };\r\n\t\t\tif(!s){\r\n\t\t\t\treturn offsets;\r\n\t\t\t}\r\n\t\t\tvar o = this.opt,\r\n\t\t\t\tta = this.chart.theme.axis,\r\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\r\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\r\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\r\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap),\r\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\r\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\r\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0,\r\n\t\t\t\trotation = o.rotation % 360, position = o.position, \r\n\t\t\t\tleftBottom = position !== \"rightOrTop\",\r\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\r\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180));\r\n\t\t\tthis.trailingSymbol = (o.trailingSymbol === undefined || o.trailingSymbol === null) ?\r\n\t\t\t\tthis.trailingSymbol : o.trailingSymbol;\r\n\t\t\tif(typeof labelGap != \"number\"){\r\n\t\t\t\tlabelGap = 4; // in pixels\r\n\t\t\t}\r\n\t\t\tif(rotation < 0){\r\n\t\t\t\trotation += 360;\r\n\t\t\t}\r\n\t\t\tvar maxLabelSize = this._getMaxLabelSize(); // don't need parameters, calculate has been called before => we use cached value\r\n\t\t\tif(maxLabelSize){\r\n\t\t\t\tvar side;\r\n\t\t\t\tvar labelWidth = Math.ceil(Math.max(maxLabelSize.majLabelW, maxLabelSize.minLabelW)) + 1,\r\n\t\t\t\t\tsize = Math.ceil(Math.max(maxLabelSize.majLabelH, maxLabelSize.minLabelH)) + 1;\r\n\t\t\t\tif(this.vertical){\r\n\t\t\t\t\tside = leftBottom ? \"l\" : \"r\";\r\n\t\t\t\t\tswitch(rotation){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : labelWidth;\r\n\t\t\t\t\t\t\toffsets.t = offsets.b = size / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\t\toffsets[side] = size;\r\n\t\t\t\t\t\t\toffsets.t = offsets.b = labelWidth / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif(rotation <= centerAnchorLimit || (180 < rotation && rotation <= (180 + centerAnchorLimit))){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2;\r\n\t\t\t\t\t\t\t}else if(rotation > (360 - centerAnchorLimit) || (180 > rotation && rotation > (180 - centerAnchorLimit))){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr / 2;\r\n\t\t\t\t\t\t\t}else if(rotation < 90 || (180 < rotation && rotation < 270)){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"t\" : \"b\"] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\toffsets[side] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"b\" : \"t\"] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(position === \"center\"){\r\n\t\t\t\t\t    offsets[side] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\t\t\t\t\t\r\n\t\t\t\t\t    offsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tside = leftBottom ? \"b\" : \"t\";\r\n\t\t\t\t\tswitch(rotation){\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\t\toffsets[side] = position === \"center\" ? 0 : size;\r\n\t\t\t\t\t\t\toffsets.l = offsets.r = labelWidth / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\t\toffsets[side] = labelWidth;\r\n\t\t\t\t\t\t\toffsets.l = offsets.r = size / 2;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tif((90 - centerAnchorLimit) <= rotation && rotation <= 90 || (270 - centerAnchorLimit) <= rotation && rotation <= 270){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2;\r\n\t\t\t\t\t\t\t}else if(90 <= rotation && rotation <= (90 + centerAnchorLimit) || 270 <= rotation && rotation <= (270 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr / 2 + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr / 2 + labelWidth * cosr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr / 2;\r\n\t\t\t\t\t\t\t}else if(rotation < centerAnchorLimit || (180 < rotation && rotation < (180 + centerAnchorLimit))){\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"r\" : \"l\"] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\toffsets[side] = size * cosr + labelWidth * sinr;\r\n\t\t\t\t\t\t\t\toffsets[leftBottom ? \"l\" : \"r\"] = size * sinr + labelWidth * cosr;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(position === \"center\"){\r\n\t\t\t\t\t    offsets[side] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\t\t\t\t\t\r\n\t\t\t\t\toffsets[side] += labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) + (o.title ? (tsize + taTitleGap) : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn offsets;\t//\tObject\r\n\t\t},\r\n\t\tcleanGroup: function(creator){\r\n\t\t\tif(this.opt.enableCache && this.group){\r\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\r\n\t\t\t\tthis._lineUsePool = [];\r\n\t\t\t\tthis._textFreePool = this._textFreePool.concat(this._textUsePool);\r\n\t\t\t\tthis._textUsePool = [];\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tcreateText: function(labelType, creator, x, y, align, textContent, font, fontColor, labelWidth){\r\n\t\t\tif(!this.opt.enableCache || labelType==\"html\"){\r\n\t\t\t\treturn acommon.createText[labelType](\r\n\t\t\t\t\t\tthis.chart,\r\n\t\t\t\t\t\tcreator,\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\talign,\r\n\t\t\t\t\t\ttextContent,\r\n\t\t\t\t\t\tfont,\r\n\t\t\t\t\t\tfontColor,\r\n\t\t\t\t\t\tlabelWidth\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tvar text;\r\n\t\t\tif(this._textFreePool.length > 0){\r\n\t\t\t\ttext = this._textFreePool.pop();\r\n\t\t\t\ttext.setShape({x: x, y: y, text: textContent, align: align});\r\n\t\t\t\t// For now all items share the same font, no need to re-set it\r\n\t\t\t\t//.setFont(font).setFill(fontColor);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(text);\r\n\t\t\t}else{\r\n\t\t\t\ttext = acommon.createText[labelType](\r\n\t\t\t\t\t\tthis.chart,\r\n\t\t\t\t\t\tcreator,\r\n\t\t\t\t\t\tx,\r\n\t\t\t\t\t\ty,\r\n\t\t\t\t\t\talign,\r\n\t\t\t\t\t\ttextContent,\r\n\t\t\t\t\t\tfont,\r\n\t\t\t\t\t\tfontColor\t\t\t\t\t\t\r\n\t\t\t\t\t);\t\t\t\r\n\t\t\t}\r\n\t\t\tthis._textUsePool.push(text);\r\n\t\t\treturn text;\r\n\t\t},\r\n\t\tcreateLine: function(creator, params){\r\n\t\t\tvar line;\r\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\r\n\t\t\t\tline = this._lineFreePool.pop();\r\n\t\t\t\tline.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(line);\r\n\t\t\t}else{\r\n\t\t\t\tline = creator.createLine(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._lineUsePool.push(line);\r\n\t\t\t}\r\n\t\t\treturn line;\r\n\t\t},\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender/draw the axis.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height}.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/axis2d/Default\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\t\r\n\t\t\tvar isRtl = this._isRtl();\t// chart mirroring\r\n\t\t\tif(!this.dirty || !this.scaler){\r\n\t\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\r\n\t\t\t}\r\n\t\t\t// prepare variable\r\n\t\t\tvar o = this.opt, ta = this.chart.theme.axis, position = o.position, \r\n\t\t\t       leftBottom = position !== \"rightOrTop\", rotation = o.rotation % 360,\r\n\t\t\t\tstart, stop, titlePos, titleRotation=0, titleOffset, axisVector, tickVector, anchorOffset, labelOffset, labelAlign,\r\n\t\t\t\tlabelGap = this.chart.theme.axis.tick.labelGap,\r\n\t\t\t\t// TODO: we use one font --- of major tick, we need to use major and minor fonts\r\n\t\t\t\ttaFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font),\r\n\t\t\t\ttaTitleFont = o.titleFont || (ta.title && ta.title.font),\r\n\t\t\t\t// TODO: we use one font color --- we need to use different colors\r\n\t\t\t\ttaFontColor = o.fontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"black\",\r\n\t\t\t\ttaTitleFontColor = o.titleFontColor || (ta.title && ta.title.fontColor) || \"black\",\r\n\t\t\t\ttaTitleGap = (o.titleGap==0) ? 0 : o.titleGap || (ta.title && ta.title.gap) || 15,\r\n\t\t\t\ttaTitleOrientation = o.titleOrientation || (ta.title && ta.title.orientation) || \"axis\",\r\n\t\t\t\ttaMajorTick = this.chart.theme.getTick(\"major\", o),\r\n\t\t\t\ttaMinorTick = this.chart.theme.getTick(\"minor\", o),\r\n\t\t\t\ttaMicroTick = this.chart.theme.getTick(\"micro\", o),\r\n\r\n\t\t\t\ttaStroke = \"stroke\" in o ? o.stroke : ta.stroke,\r\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\r\n\t\t\t\tcosr = Math.abs(Math.cos(rotation * Math.PI / 180)),\r\n\t\t\t\tsinr = Math.abs(Math.sin(rotation * Math.PI / 180)),\r\n\t\t\t\ttsize = taTitleFont ? g.normalizedLength(g.splitFontString(taTitleFont).size) : 0;\r\n\t\t\tif(typeof labelGap != \"number\"){\r\n\t\t\t\tlabelGap = 4; // in pixels\r\n\t\t\t}\r\n\t\t\tif(rotation < 0){\r\n\t\t\t\trotation += 360;\r\n\t\t\t}\r\n\t\t\tvar cachedLabelW = this._getMaxLabelSize();\r\n\t\t\tcachedLabelW = cachedLabelW && cachedLabelW.majLabelW;\r\n\t\t\tif(this.vertical){\r\n\t\t\t\tstart = {y: dim.height - offsets.b};\r\n\t\t\t\tstop  = {y: offsets.t};\r\n\t\t\t\ttitlePos = {y: (dim.height - offsets.b + offsets.t)/2};\r\n\t\t\t\ttitleOffset = size * sinr + (cachedLabelW || 0) * cosr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\r\n\t\t\t\t\ttsize + taTitleGap;\r\n\t\t\t\taxisVector = {x: 0, y: -1};\r\n\t\t\t\tlabelOffset = {x: 0, y: 0};\r\n\t\t\t\ttickVector = {x: 1, y: 0};\r\n\t\t\t\tanchorOffset = {x: labelGap, y: 0};\r\n\t\t\t\tswitch(rotation){\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tlabelOffset.x = -size;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(rotation < centerAnchorLimit){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < 90){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < (180 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t}else if(rotation < (180 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.y = -size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < 270){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < (360 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.x = leftBottom ? 0 : size * 0.4;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = size * 0.4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(leftBottom){\r\n\t\t\t\t\tstart.x = stop.x = position === \"center\" ? dim.width/2 : offsets.l;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 90 : 270;\r\n\t\t\t\t\ttitlePos.x = offsets.l - titleOffset + (titleRotation == 270 ? tsize : 0);\r\n\t\t\t\t\ttickVector.x = -1;\r\n\t\t\t\t\tanchorOffset.x = -anchorOffset.x;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstart.x = stop.x = dim.width - offsets.r;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 90 : 270;\r\n\t\t\t\t\ttitlePos.x = dim.width - offsets.r + titleOffset - (titleRotation == 270 ? 0 : tsize);\r\n\t\t\t\t\tswitch(labelAlign){\r\n\t\t\t\t\t\tcase \"start\":\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\tlabelOffset.x += size;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tstart = {x: offsets.l};\r\n\t\t\t\tstop  = {x: dim.width - offsets.r};\r\n\t\t\t\ttitlePos = {x: (dim.width - offsets.r + offsets.l)/2};\r\n\t\t\t\ttitleOffset = size * cosr + (cachedLabelW || 0) * sinr + labelGap + Math.max(taMajorTick.length > 0?taMajorTick.length:0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t taMinorTick.length > 0?taMinorTick.length:0) +\r\n\t\t\t\t\ttsize + taTitleGap;\r\n\t\t\t\taxisVector = {x: isRtl ? -1 : 1, y: 0}; \t// chart mirroring\r\n\t\t\t\tlabelOffset = {x: 0, y: 0};\r\n\t\t\t\ttickVector = {x: 0, y: 1};\r\n\t\t\t\tanchorOffset = {x: 0, y: labelGap};\r\n\t\t\t\tswitch(rotation){\r\n\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tlabelOffset.y = size;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 90:\r\n\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 180:\r\n\t\t\t\t\t\tlabelAlign = \"middle\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 270:\r\n\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\tlabelOffset.x = size * 0.4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif(rotation < (90 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\r\n\t\t\t\t\t\t}else if(rotation < (90 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.x = -size * 0.4;\r\n\t\t\t\t\t\t}else if(rotation < 180){\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\r\n\t\t\t\t\t\t}else if(rotation < (270 - centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? 0 : -size;\r\n\t\t\t\t\t\t}else if(rotation < (270 + centerAnchorLimit)){\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size * 0.4 : 0;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tlabelOffset.y = leftBottom ? size : 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(leftBottom){\r\n\t\t\t\t\tstart.y = stop.y = position === \"center\" ? dim.height/2 : dim.height - offsets.b;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"axis\") ? 180 : 0;\r\n\t\t\t\t\ttitlePos.y = dim.height - offsets.b + titleOffset - (titleRotation ? tsize : 0);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstart.y = stop.y = offsets.t;\r\n\t\t\t\t\ttitleRotation = (taTitleOrientation && taTitleOrientation == \"away\") ? 180 : 0;\r\n\t\t\t\t\ttitlePos.y = offsets.t - titleOffset + (titleRotation ? 0 : tsize);\r\n\t\t\t\t\ttickVector.y = -1;\r\n\t\t\t\t\tanchorOffset.y = -anchorOffset.y;\r\n\t\t\t\t\tswitch(labelAlign){\r\n\t\t\t\t\t\tcase \"start\":\r\n\t\t\t\t\t\t\tlabelAlign = \"end\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\t\tlabelAlign = \"start\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\tlabelOffset.y -= size;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// render shapes\r\n\r\n\t\t\tthis.cleanGroup();\r\n\r\n\t\t\tvar s = this.group,\r\n\t\t\t\tc = this.scaler,\r\n\t\t\t\tt = this.ticks,\r\n\t\t\t\tf = lin.getTransformerFromModel(this.scaler),\r\n\t\t\t\t// GFX Canvas now supports labels, so let's _not_ fallback to HTML anymore on canvas, just use\r\n\t\t\t\t// HTML labels if explicitly asked + no rotation + no IE + no Opera\r\n\t\t\t\tlabelType = (!o.title || !titleRotation) && !rotation && this.opt.htmlLabels && !has(\"ie\") && !has(\"opera\") ? \"html\" : \"gfx\",\r\n\t\t\t\tdx = tickVector.x * taMajorTick.length,\r\n\t\t\t\tdy = tickVector.y * taMajorTick.length,\r\n\t\t\t\tskip = this._skipInterval;\r\n\r\n\t\t\ts.createLine({\r\n\t\t\t\tx1: start.x,\r\n\t\t\t\ty1: start.y,\r\n\t\t\t\tx2: stop.x,\r\n\t\t\t\ty2: stop.y\r\n\t\t\t}).setStroke(taStroke);\r\n\r\n\t\t\t//create axis title\r\n\t\t\tif(o.title){\r\n\t\t\t\tvar axisTitle = acommon.createText[labelType](\r\n\t\t\t\t\tthis.chart,\r\n\t\t\t\t\ts,\r\n\t\t\t\t\ttitlePos.x,\r\n\t\t\t\t\ttitlePos.y,\r\n\t\t\t\t\t\"middle\",\r\n\t\t\t\t\to.title,\r\n\t\t\t\t\ttaTitleFont,\r\n\t\t\t\t\ttaTitleFontColor\r\n\t\t\t\t);\r\n\t\t\t\tif(labelType == \"html\"){\r\n\t\t\t\t\tthis.htmlElements.push(axisTitle);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//as soon as rotation is provided, labelType won't be \"html\"\r\n\t\t\t\t\t//rotate gfx labels\r\n\t\t\t\t\taxisTitle.setTransform(g.matrix.rotategAt(titleRotation, titlePos.x, titlePos.y));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// go out nicely instead of try/catch\r\n\t\t\tif(t == null){\r\n\t\t\t\tthis.dirty = false;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tvar rel = (t.major.length > 0)?(t.major[0].value - this._majorStart) / c.major.tick:0;\r\n\t\t\tvar canLabel = this.opt.majorLabels;\r\n\t\t\tarr.forEach(t.major, function(tick, i){\r\n\t\t\t\tvar offset = f(tick.value), elem,\r\n\t\t\t\t\tx = (isRtl ? stop.x : start.x) + axisVector.x * offset, // chart mirroring\r\n\t\t\t\t\ty = start.y + axisVector.y * offset;\r\n\t\t\t\ti += rel;\r\n\t\t\t\tthis.createLine(s, {\r\n\t\t\t\t\tx1: x, y1: y,\r\n\t\t\t\t\tx2: x + dx,\r\n\t\t\t\t\ty2: y + dy\r\n\t\t\t\t}).setStroke(taMajorTick);\r\n\t\t\t\tif(tick.label && (!skip || (i - (1 + skip)) % (1 + skip) == 0)){\r\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\r\n\t\t\t\t\t\ttext: tick.label,\r\n\t\t\t\t\t\ttruncated: false\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\r\n\t\t\t\t\telem = this.createText(labelType,\r\n\t\t\t\t\t\ts,\r\n\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\r\n\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\r\n\t\t\t\t\t\tlabelAlign,\r\n\t\t\t\t\t\tlabel.text,\r\n\t\t\t\t\t\ttaFont,\r\n\t\t\t\t\t\ttaFontColor\r\n\t\t\t\t\t\t//cachedLabelW\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\r\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\r\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\r\n\t\t\t\t\t// truncated label: 11...\r\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\r\n\t\t\t\t\tif(label.truncated){\r\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\r\n\t\t\t\t\tif(labelType == \"html\"){\r\n\t\t\t\t\t\tthis.htmlElements.push(elem);\r\n\t\t\t\t\t}else if(rotation){\r\n\t\t\t\t\t\telem.setTransform([\r\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\r\n\t\t\t\t\t\t\tg.matrix.rotategAt(\r\n\t\t\t\t\t\t\t\trotation,\r\n\t\t\t\t\t\t\t\tx + (taMajorTick.length > 0 ? dx : 0) + anchorOffset.x,\r\n\t\t\t\t\t\t\t\ty + (taMajorTick.length > 0 ? dy : 0) + anchorOffset.y\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tdx = tickVector.x * taMinorTick.length;\r\n\t\t\tdy = tickVector.y * taMinorTick.length;\r\n\t\t\tcanLabel = this.opt.minorLabels && c.minMinorStep <= c.minor.tick * c.bounds.scale;\r\n\t\t\tarr.forEach(t.minor, function(tick){\r\n\t\t\t\tvar offset = f(tick.value), elem,\r\n\t\t\t\t\tx = (isRtl ? stop.x : start.x)  + axisVector.x * offset,\r\n\t\t\t\t\ty = start.y + axisVector.y * offset; // chart mirroring\r\n\t\t\t\tthis.createLine(s, {\r\n\t\t\t\t\tx1: x, y1: y,\r\n\t\t\t\t\tx2: x + dx,\r\n\t\t\t\t\ty2: y + dy\r\n\t\t\t\t}).setStroke(taMinorTick);\r\n\t\t\t\tif(canLabel && tick.label){\r\n\t\t\t\t\tvar label = o.maxLabelCharCount ? this.getTextWithLimitCharCount(tick.label, taFont, o.maxLabelCharCount) : {\r\n\t\t\t\t\t\ttext: tick.label,\r\n\t\t\t\t\t\ttruncated: false\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlabel = o.maxLabelSize ? this.getTextWithLimitLength(label.text, taFont, o.maxLabelSize, label.truncated) : label;\r\n\t\t\t\t\telem = this.createText(labelType,\r\n\t\t\t\t\t\ts,\r\n\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x + (rotation ? 0 : labelOffset.x),\r\n\t\t\t\t\t\ty + (taMinorTick.length  > 0 ? dy : 0) + anchorOffset.y + (rotation ? 0 : labelOffset.y),\r\n\t\t\t\t\t\tlabelAlign,\r\n\t\t\t\t\t\tlabel.text,\r\n\t\t\t\t\t\ttaFont,\r\n\t\t\t\t\t\ttaFontColor\r\n\t\t\t\t\t\t//cachedLabelW\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// if bidi support was required, the textDir is \"auto\" and truncation\r\n\t\t\t\t\t// took place, we need to update the dir of the element for cases as:\r\n\t\t\t\t\t// Fool label: 111111W (W for bidi character)\r\n\t\t\t\t\t// truncated label: 11...\r\n\t\t\t\t\t// in this case for auto textDir the dir will be \"ltr\" which is wrong.\r\n\t\t\t\t\tif(label.truncated){\r\n\t\t\t\t\t\tthis.chart.formatTruncatedLabel(elem, tick.label, labelType);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.truncated && this.labelTooltip(elem, this.chart, tick.label, label.text, taFont, labelType);\r\n\t\t\t\t\tif(labelType == \"html\"){\r\n\t\t\t\t\t\tthis.htmlElements.push(elem);\r\n\t\t\t\t\t}else if(rotation){\r\n\t\t\t\t\t\telem.setTransform([\r\n\t\t\t\t\t\t\t{dx: labelOffset.x, dy: labelOffset.y},\r\n\t\t\t\t\t\t\tg.matrix.rotategAt(\r\n\t\t\t\t\t\t\t\trotation,\r\n\t\t\t\t\t\t\t\tx + (taMinorTick.length > 0 ? dx : 0) + anchorOffset.x,\r\n\t\t\t\t\t\t\t\ty + (taMinorTick.length > 0 ? dy : 0) + anchorOffset.y\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\tdx = tickVector.x * taMicroTick.length;\r\n\t\t\tdy = tickVector.y * taMicroTick.length;\r\n\t\t\tarr.forEach(t.micro, function(tick){\r\n\t\t\t\tvar offset = f(tick.value),\r\n\t\t\t\t\tx = start.x + axisVector.x * offset,\r\n\t\t\t\t\ty = start.y + axisVector.y * offset;\r\n\t\t\t\t\tthis.createLine(s, {\r\n\t\t\t\t\t\tx1: x, y1: y,\r\n\t\t\t\t\t\tx2: x + dx,\r\n\t\t\t\t\t\ty2: y + dy\r\n\t\t\t\t\t}).setStroke(taMicroTick);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.dirty = false;\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Default\r\n\t\t},\r\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\r\n\t\t\tvar modules = [\"dijit/Tooltip\"];\r\n\t\t\tvar aroundRect = {type: \"rect\"}, position = [\"above\", \"below\"],\r\n\t\t\t\tfontWidth = g._base._getTextBox(truncatedLabel, {font: font}).w || 0,\r\n\t\t\t\tfontHeight = font ? g.normalizedLength(g.splitFontString(font).size) : 0;\r\n\t\t\tif(elemType == \"html\"){\r\n\t\t\t\tlang.mixin(aroundRect, domGeom.position(elem.firstChild, true));\r\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\r\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  dojo,\r\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseover\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  dojo,\r\n\t\t\t\t\thandle: connect.connect(elem.firstChild, \"onmouseout\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tvar shp = elem.getShape(),\r\n\t\t\t\t\tlt = chart.getCoords();\r\n\t\t\t\taroundRect = lang.mixin(aroundRect, {\r\n\t\t\t\t\tx: shp.x - fontWidth / 2,\r\n\t\t\t\t\ty: shp.y\r\n\t\t\t\t});\r\n\t\t\t\taroundRect.x += lt.x;\r\n\t\t\t\taroundRect.y += lt.y;\r\n\t\t\t\taroundRect.x = Math.round(aroundRect.x);\r\n\t\t\t\taroundRect.y = Math.round(aroundRect.y);\r\n\t\t\t\taroundRect.width = Math.ceil(fontWidth);\r\n\t\t\t\taroundRect.height = Math.ceil(fontHeight);\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  elem,\r\n\t\t\t\t\thandle: elem.connect(\"onmouseenter\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.show(label, aroundRect, position);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t\tthis._events.push({\r\n\t\t\t\t\tshape:  elem,\r\n\t\t\t\t\thandle: elem.connect(\"onmouseleave\", this, function(e){\r\n\t\t\t\t\t\trequire(modules, function(Tooltip){\r\n\t\t\t\t\t\t\tTooltip.hide(aroundRect);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t_isRtl: function(){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\treturn has(\"dojo-bidi\")? declare(\"dojox.charting.axis2d.Default\", [Default, BidiDefault]) : Default;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/axis2d/Default.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/axis2d/Invisible.js":
/*!*********************************************************!*\
  !*** ./node_modules/dojox/charting/axis2d/Invisible.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Base */ \"./node_modules/dojox/charting/axis2d/Base.js\"), __webpack_require__(/*! ../scaler/linear */ \"./node_modules/dojox/charting/scaler/linear.js\"),\r\n\t__webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, Base, lin, du){\r\n\r\n/*=====\r\n\tvar __InvisibleAxisCtorArgs = {\r\n\t\t// summary:\r\n\t\t//\t\tOptional arguments used in the definition of an invisible axis.\r\n\t\t// vertical: Boolean?\r\n\t\t//\t\tA flag that says whether an axis is vertical (i.e. y axis) or horizontal. Default is false (horizontal).\r\n\t\t// fixUpper: String?\r\n\t\t//\t\tAlign the greatest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\r\n\t\t// fixLower: String?\r\n\t\t//\t\tAlign the smallest value on the axis with the specified tick level. Options are \"major\", \"minor\", \"micro\", or \"none\".  Defaults to \"none\".\r\n\t\t// natural: Boolean?\r\n\t\t//\t\tEnsure tick marks are made on \"natural\" numbers. Defaults to false.\r\n\t\t// leftBottom: Boolean?\r\n\t\t//\t\tThe position of a vertical axis; if true, will be placed against the left-bottom corner of the chart.  Defaults to true.\r\n\t\t// includeZero: Boolean?\r\n\t\t//\t\tInclude 0 on the axis rendering.  Default is false.\r\n\t\t// fixed: Boolean?\r\n\t\t//\t\tForce all axis labels to be fixed numbers.  Default is true.\r\n\t\t// min: Number?\r\n\t\t//\t\tThe smallest value on an axis. Default is 0.\r\n\t\t// max: Number?\r\n\t\t//\t\tThe largest value on an axis. Default is 1.\r\n\t\t// from: Number?\r\n\t\t//\t\tForce the chart to render data visible from this value. Default is 0.\r\n\t\t// to: Number?\r\n\t\t//\t\tForce the chart to render data visible to this value. Default is 1.\r\n\t\t// majorTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a major tick is drawn. When not set the major ticks step is computed from\r\n\t\t//\t\tthe data range.\r\n\t\t// minorTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a minor tick is drawn. When not set the minor ticks step is computed from\r\n\t\t//\t\tthe data range.\r\n\t\t// microTickStep: Number?\r\n\t\t//\t\tThe amount to skip before a micro tick is drawn. When not set the micro ticks step is computed from\r\n\t};\r\n=====*/\r\n\r\n\treturn declare(\"dojox.charting.axis2d.Invisible\", Base, {\r\n\t\t// summary:\r\n\t\t//\t\tA axis object used in dojox.charting.  You can use that axis if you want the axis to be invisible.\r\n\t\t//\t\tSee dojox.charting.Chart.addAxis for details.\r\n\t\t//\r\n\t\t// defaultParams: Object\r\n\t\t//\t\tThe default parameters used to define any axis.\r\n\t\t// optionalParams: Object\r\n\t\t//\t\tAny optional parameters needed to define an axis.\r\n\r\n\t\t/*\r\n\t\t// TODO: the documentation tools need these to be pre-defined in order to pick them up\r\n\t\t//\tcorrectly, but the code here is partially predicated on whether or not the properties\r\n\t\t//\tactually exist.  For now, we will leave these undocumented but in the code for later. -- TRT\r\n\r\n\t\t// opt: Object\r\n\t\t//\t\tThe actual options used to define this axis, created at initialization.\r\n\t\t// scaler: Object\r\n\t\t//\t\tThe calculated helper object to tell charts how to draw an axis and any data.\r\n\t\t// ticks: Object\r\n\t\t//\t\tThe calculated tick object that helps a chart draw the scaling on an axis.\r\n\t\t// dirty: Boolean\r\n\t\t//\t\tThe state of the axis (whether it needs to be redrawn or not)\r\n\t\t// scale: Number\r\n\t\t//\t\tThe current scale of the axis.\r\n\t\t// offset: Number\r\n\t\t//\t\tThe current offset of the axis.\r\n\r\n\t\topt: null,\r\n\t\tscaler: null,\r\n\t\tticks: null,\r\n\t\tdirty: true,\r\n\t\tscale: 1,\r\n\t\toffset: 0,\r\n\t\t*/\r\n\t\tdefaultParams: {\r\n\t\t\tvertical:    false,\t\t// true for vertical axis\r\n\t\t\tfixUpper:    \"none\",\t// align the upper on ticks: \"major\", \"minor\", \"micro\", \"none\"\r\n\t\t\tfixLower:    \"none\",\t// align the lower on ticks: \"major\", \"minor\", \"micro\", \"none\"\r\n\t\t\tnatural:     false,\t\t// all tick marks should be made on natural numbers\r\n\t\t\tleftBottom:  true,\t\t// position of the axis, used with \"vertical\"\r\n\t\t\tincludeZero: false,\t\t// 0 should be included\r\n\t\t\tfixed:       true\t\t// all labels are fixed numbers\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tmin:\t\t\t0,\t// minimal value on this axis\r\n\t\t\tmax:\t\t\t1,\t// maximal value on this axis\r\n\t\t\tfrom:\t\t\t0,\t// visible from this value\r\n\t\t\tto:\t\t\t\t1,\t// visible to this value\r\n\t\t\tmajorTickStep:\t4,\t// major tick step\r\n\t\t\tminorTickStep:\t2,\t// minor tick step\r\n\t\t\tmicroTickStep:\t1\t// micro tick step\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for an invisible axis.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart the axis belongs to.\r\n\t\t\t// kwArgs: __InvisibleAxisCtorArgs?\r\n\t\t\t//\t\tAny optional keyword arguments to be used to define this axis.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n            du.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t},\r\n\t\tdependOnData: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFind out whether or not the axis options depend on the data in the axis.\r\n\t\t\treturn !(\"min\" in this.opt) || !(\"max\" in this.opt);\t//\tBoolean\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear out all calculated properties on this axis;\r\n\t\t\t// returns: dojox/charting/axis2d/Invisible\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\tdelete this.scaler;\r\n\t\t\tdelete this.ticks;\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\r\n\t\t},\r\n\t\tinitialized: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds out if this axis has been initialized or not.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tWhether a scaler has been calculated and if the axis is not dirty.\r\n\t\t\treturn \"scaler\" in this && !(this.dirty && this.dependOnData());\r\n\t\t},\r\n\t\tsetWindow: function(scale, offset){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet the drawing \"window\" for the axis.\r\n\t\t\t// scale: Number\r\n\t\t\t//\t\tThe new scale for the axis.\r\n\t\t\t// offset: Number\r\n\t\t\t//\t\tThe new offset for the axis.\r\n\t\t\t// returns: dojox/charting/axis2d/Invisible\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\tthis.scale  = scale;\r\n\t\t\tthis.offset = offset;\r\n\t\t\treturn this.clear();\t//\tdojox/charting/axis2d/Invisible\r\n\t\t},\r\n\t\tgetWindowScale: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the current windowing scale of the axis.\r\n\t\t\treturn \"scale\" in this ? this.scale : 1;\t//\tNumber\r\n\t\t},\r\n\t\tgetWindowOffset: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the current windowing offset for the axis.\r\n\t\t\treturn \"offset\" in this ? this.offset : 0;\t//\tNumber\r\n\t\t},\r\n\t\tcalculate: function(min, max, span, scalerType){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPerform all calculations needed to render this axis.\r\n\t\t\t// min: Number\r\n\t\t\t//\t\tThe smallest value represented on this axis.\r\n\t\t\t// max: Number\r\n\t\t\t//\t\tThe largest value represented on this axis.\r\n\t\t\t// span: Number\r\n\t\t\t//\t\tThe span in pixels over which axis calculations are made.\r\n\t\t\t// scalerType: Object\r\n\t\t\t//\t\tAn optional scaler type object.\r\n\t\t\t// returns: dojox/charting/axis2d/Invisible\r\n\t\t\t//\t\tThe reference to the axis for functional chaining.\r\n\t\t\tif(this.initialized()){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar o = this.opt;\r\n\t\t\t// we used to have a 4th function parameter to reach labels but\r\n\t\t\t// nobody was calling it with 4 parameters.\r\n\t\t\tthis.labels = o.labels;\r\n\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\r\n\t\t\t// store the absolute major tick start, this will be useful when dropping a label every n labels\r\n\t\t\t// TODO: if o.lower then it does not work\r\n\t\t\tvar tsb = this.scaler.bounds;\r\n\t\t\tif(\"scale\" in this){\r\n\t\t\t\t// calculate new range\r\n\t\t\t\to.from = tsb.lower + this.offset;\r\n\t\t\t\to.to   = (tsb.upper - tsb.lower) / this.scale + o.from;\r\n\t\t\t\t// make sure that bounds are correct\r\n\t\t\t\tif( !isFinite(o.from) ||\r\n\t\t\t\t\tisNaN(o.from) ||\r\n\t\t\t\t\t!isFinite(o.to) ||\r\n\t\t\t\t\tisNaN(o.to) ||\r\n\t\t\t\t\to.to - o.from >= tsb.upper - tsb.lower\r\n\t\t\t\t){\r\n\t\t\t\t\t// any error --- remove from/to bounds\r\n\t\t\t\t\tdelete o.from;\r\n\t\t\t\t\tdelete o.to;\r\n\t\t\t\t\tdelete this.scale;\r\n\t\t\t\t\tdelete this.offset;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// shift the window, if we are out of bounds\r\n\t\t\t\t\tif(o.from < tsb.lower){\r\n\t\t\t\t\t\to.to += tsb.lower - o.from;\r\n\t\t\t\t\t\to.from = tsb.lower;\r\n\t\t\t\t\t}else if(o.to > tsb.upper){\r\n\t\t\t\t\t\to.from += tsb.upper - o.to;\r\n\t\t\t\t\t\to.to = tsb.upper;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// update the offset\r\n\t\t\t\t\tthis.offset = o.from - tsb.lower;\r\n\t\t\t\t}\r\n\t\t\t\t// re-calculate the scaler\r\n\t\t\t\tthis.scaler = (scalerType || lin).buildScaler(min, max, span, o);\r\n\t\t\t\ttsb = this.scaler.bounds;\r\n\t\t\t\t// cleanup\r\n\t\t\t\tif(this.scale == 1 && this.offset == 0){\r\n\t\t\t\t\tdelete this.scale;\r\n\t\t\t\t\tdelete this.offset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/axis2d/Invisible\r\n\t\t},\r\n\t\tgetScaler: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the pre-calculated scaler object.\r\n\t\t\treturn this.scaler;\t//\tObject\r\n\t\t},\r\n\t\tgetTicks: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet the pre-calculated ticks object.\r\n\t\t\treturn this.ticks;\t//\tObject\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYXhpczJkL0ludmlzaWJsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9heGlzMmQvSW52aXNpYmxlLmpzPzFkMTgiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvbGFuZ1wiLCBcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcIi4vQmFzZVwiLCBcIi4uL3NjYWxlci9saW5lYXJcIixcclxuXHRcImRvam94L2xhbmcvdXRpbHNcIl0sXHJcblx0ZnVuY3Rpb24obGFuZywgZGVjbGFyZSwgQmFzZSwgbGluLCBkdSl7XHJcblxyXG4vKj09PT09XHJcblx0dmFyIF9fSW52aXNpYmxlQXhpc0N0b3JBcmdzID0ge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdE9wdGlvbmFsIGFyZ3VtZW50cyB1c2VkIGluIHRoZSBkZWZpbml0aW9uIG9mIGFuIGludmlzaWJsZSBheGlzLlxyXG5cdFx0Ly8gdmVydGljYWw6IEJvb2xlYW4/XHJcblx0XHQvL1x0XHRBIGZsYWcgdGhhdCBzYXlzIHdoZXRoZXIgYW4gYXhpcyBpcyB2ZXJ0aWNhbCAoaS5lLiB5IGF4aXMpIG9yIGhvcml6b250YWwuIERlZmF1bHQgaXMgZmFsc2UgKGhvcml6b250YWwpLlxyXG5cdFx0Ly8gZml4VXBwZXI6IFN0cmluZz9cclxuXHRcdC8vXHRcdEFsaWduIHRoZSBncmVhdGVzdCB2YWx1ZSBvbiB0aGUgYXhpcyB3aXRoIHRoZSBzcGVjaWZpZWQgdGljayBsZXZlbC4gT3B0aW9ucyBhcmUgXCJtYWpvclwiLCBcIm1pbm9yXCIsIFwibWljcm9cIiwgb3IgXCJub25lXCIuICBEZWZhdWx0cyB0byBcIm5vbmVcIi5cclxuXHRcdC8vIGZpeExvd2VyOiBTdHJpbmc/XHJcblx0XHQvL1x0XHRBbGlnbiB0aGUgc21hbGxlc3QgdmFsdWUgb24gdGhlIGF4aXMgd2l0aCB0aGUgc3BlY2lmaWVkIHRpY2sgbGV2ZWwuIE9wdGlvbnMgYXJlIFwibWFqb3JcIiwgXCJtaW5vclwiLCBcIm1pY3JvXCIsIG9yIFwibm9uZVwiLiAgRGVmYXVsdHMgdG8gXCJub25lXCIuXHJcblx0XHQvLyBuYXR1cmFsOiBCb29sZWFuP1xyXG5cdFx0Ly9cdFx0RW5zdXJlIHRpY2sgbWFya3MgYXJlIG1hZGUgb24gXCJuYXR1cmFsXCIgbnVtYmVycy4gRGVmYXVsdHMgdG8gZmFsc2UuXHJcblx0XHQvLyBsZWZ0Qm90dG9tOiBCb29sZWFuP1xyXG5cdFx0Ly9cdFx0VGhlIHBvc2l0aW9uIG9mIGEgdmVydGljYWwgYXhpczsgaWYgdHJ1ZSwgd2lsbCBiZSBwbGFjZWQgYWdhaW5zdCB0aGUgbGVmdC1ib3R0b20gY29ybmVyIG9mIHRoZSBjaGFydC4gIERlZmF1bHRzIHRvIHRydWUuXHJcblx0XHQvLyBpbmNsdWRlWmVybzogQm9vbGVhbj9cclxuXHRcdC8vXHRcdEluY2x1ZGUgMCBvbiB0aGUgYXhpcyByZW5kZXJpbmcuICBEZWZhdWx0IGlzIGZhbHNlLlxyXG5cdFx0Ly8gZml4ZWQ6IEJvb2xlYW4/XHJcblx0XHQvL1x0XHRGb3JjZSBhbGwgYXhpcyBsYWJlbHMgdG8gYmUgZml4ZWQgbnVtYmVycy4gIERlZmF1bHQgaXMgdHJ1ZS5cclxuXHRcdC8vIG1pbjogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0VGhlIHNtYWxsZXN0IHZhbHVlIG9uIGFuIGF4aXMuIERlZmF1bHQgaXMgMC5cclxuXHRcdC8vIG1heDogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0VGhlIGxhcmdlc3QgdmFsdWUgb24gYW4gYXhpcy4gRGVmYXVsdCBpcyAxLlxyXG5cdFx0Ly8gZnJvbTogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0Rm9yY2UgdGhlIGNoYXJ0IHRvIHJlbmRlciBkYXRhIHZpc2libGUgZnJvbSB0aGlzIHZhbHVlLiBEZWZhdWx0IGlzIDAuXHJcblx0XHQvLyB0bzogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0Rm9yY2UgdGhlIGNoYXJ0IHRvIHJlbmRlciBkYXRhIHZpc2libGUgdG8gdGhpcyB2YWx1ZS4gRGVmYXVsdCBpcyAxLlxyXG5cdFx0Ly8gbWFqb3JUaWNrU3RlcDogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0VGhlIGFtb3VudCB0byBza2lwIGJlZm9yZSBhIG1ham9yIHRpY2sgaXMgZHJhd24uIFdoZW4gbm90IHNldCB0aGUgbWFqb3IgdGlja3Mgc3RlcCBpcyBjb21wdXRlZCBmcm9tXHJcblx0XHQvL1x0XHR0aGUgZGF0YSByYW5nZS5cclxuXHRcdC8vIG1pbm9yVGlja1N0ZXA6IE51bWJlcj9cclxuXHRcdC8vXHRcdFRoZSBhbW91bnQgdG8gc2tpcCBiZWZvcmUgYSBtaW5vciB0aWNrIGlzIGRyYXduLiBXaGVuIG5vdCBzZXQgdGhlIG1pbm9yIHRpY2tzIHN0ZXAgaXMgY29tcHV0ZWQgZnJvbVxyXG5cdFx0Ly9cdFx0dGhlIGRhdGEgcmFuZ2UuXHJcblx0XHQvLyBtaWNyb1RpY2tTdGVwOiBOdW1iZXI/XHJcblx0XHQvL1x0XHRUaGUgYW1vdW50IHRvIHNraXAgYmVmb3JlIGEgbWljcm8gdGljayBpcyBkcmF3bi4gV2hlbiBub3Qgc2V0IHRoZSBtaWNybyB0aWNrcyBzdGVwIGlzIGNvbXB1dGVkIGZyb21cclxuXHR9O1xyXG49PT09PSovXHJcblxyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcuYXhpczJkLkludmlzaWJsZVwiLCBCYXNlLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBheGlzIG9iamVjdCB1c2VkIGluIGRvam94LmNoYXJ0aW5nLiAgWW91IGNhbiB1c2UgdGhhdCBheGlzIGlmIHlvdSB3YW50IHRoZSBheGlzIHRvIGJlIGludmlzaWJsZS5cclxuXHRcdC8vXHRcdFNlZSBkb2pveC5jaGFydGluZy5DaGFydC5hZGRBeGlzIGZvciBkZXRhaWxzLlxyXG5cdFx0Ly9cclxuXHRcdC8vIGRlZmF1bHRQYXJhbXM6IE9iamVjdFxyXG5cdFx0Ly9cdFx0VGhlIGRlZmF1bHQgcGFyYW1ldGVycyB1c2VkIHRvIGRlZmluZSBhbnkgYXhpcy5cclxuXHRcdC8vIG9wdGlvbmFsUGFyYW1zOiBPYmplY3RcclxuXHRcdC8vXHRcdEFueSBvcHRpb25hbCBwYXJhbWV0ZXJzIG5lZWRlZCB0byBkZWZpbmUgYW4gYXhpcy5cclxuXHJcblx0XHQvKlxyXG5cdFx0Ly8gVE9ETzogdGhlIGRvY3VtZW50YXRpb24gdG9vbHMgbmVlZCB0aGVzZSB0byBiZSBwcmUtZGVmaW5lZCBpbiBvcmRlciB0byBwaWNrIHRoZW0gdXBcclxuXHRcdC8vXHRjb3JyZWN0bHksIGJ1dCB0aGUgY29kZSBoZXJlIGlzIHBhcnRpYWxseSBwcmVkaWNhdGVkIG9uIHdoZXRoZXIgb3Igbm90IHRoZSBwcm9wZXJ0aWVzXHJcblx0XHQvL1x0YWN0dWFsbHkgZXhpc3QuICBGb3Igbm93LCB3ZSB3aWxsIGxlYXZlIHRoZXNlIHVuZG9jdW1lbnRlZCBidXQgaW4gdGhlIGNvZGUgZm9yIGxhdGVyLiAtLSBUUlRcclxuXHJcblx0XHQvLyBvcHQ6IE9iamVjdFxyXG5cdFx0Ly9cdFx0VGhlIGFjdHVhbCBvcHRpb25zIHVzZWQgdG8gZGVmaW5lIHRoaXMgYXhpcywgY3JlYXRlZCBhdCBpbml0aWFsaXphdGlvbi5cclxuXHRcdC8vIHNjYWxlcjogT2JqZWN0XHJcblx0XHQvL1x0XHRUaGUgY2FsY3VsYXRlZCBoZWxwZXIgb2JqZWN0IHRvIHRlbGwgY2hhcnRzIGhvdyB0byBkcmF3IGFuIGF4aXMgYW5kIGFueSBkYXRhLlxyXG5cdFx0Ly8gdGlja3M6IE9iamVjdFxyXG5cdFx0Ly9cdFx0VGhlIGNhbGN1bGF0ZWQgdGljayBvYmplY3QgdGhhdCBoZWxwcyBhIGNoYXJ0IGRyYXcgdGhlIHNjYWxpbmcgb24gYW4gYXhpcy5cclxuXHRcdC8vIGRpcnR5OiBCb29sZWFuXHJcblx0XHQvL1x0XHRUaGUgc3RhdGUgb2YgdGhlIGF4aXMgKHdoZXRoZXIgaXQgbmVlZHMgdG8gYmUgcmVkcmF3biBvciBub3QpXHJcblx0XHQvLyBzY2FsZTogTnVtYmVyXHJcblx0XHQvL1x0XHRUaGUgY3VycmVudCBzY2FsZSBvZiB0aGUgYXhpcy5cclxuXHRcdC8vIG9mZnNldDogTnVtYmVyXHJcblx0XHQvL1x0XHRUaGUgY3VycmVudCBvZmZzZXQgb2YgdGhlIGF4aXMuXHJcblxyXG5cdFx0b3B0OiBudWxsLFxyXG5cdFx0c2NhbGVyOiBudWxsLFxyXG5cdFx0dGlja3M6IG51bGwsXHJcblx0XHRkaXJ0eTogdHJ1ZSxcclxuXHRcdHNjYWxlOiAxLFxyXG5cdFx0b2Zmc2V0OiAwLFxyXG5cdFx0Ki9cclxuXHRcdGRlZmF1bHRQYXJhbXM6IHtcclxuXHRcdFx0dmVydGljYWw6ICAgIGZhbHNlLFx0XHQvLyB0cnVlIGZvciB2ZXJ0aWNhbCBheGlzXHJcblx0XHRcdGZpeFVwcGVyOiAgICBcIm5vbmVcIixcdC8vIGFsaWduIHRoZSB1cHBlciBvbiB0aWNrczogXCJtYWpvclwiLCBcIm1pbm9yXCIsIFwibWljcm9cIiwgXCJub25lXCJcclxuXHRcdFx0Zml4TG93ZXI6ICAgIFwibm9uZVwiLFx0Ly8gYWxpZ24gdGhlIGxvd2VyIG9uIHRpY2tzOiBcIm1ham9yXCIsIFwibWlub3JcIiwgXCJtaWNyb1wiLCBcIm5vbmVcIlxyXG5cdFx0XHRuYXR1cmFsOiAgICAgZmFsc2UsXHRcdC8vIGFsbCB0aWNrIG1hcmtzIHNob3VsZCBiZSBtYWRlIG9uIG5hdHVyYWwgbnVtYmVyc1xyXG5cdFx0XHRsZWZ0Qm90dG9tOiAgdHJ1ZSxcdFx0Ly8gcG9zaXRpb24gb2YgdGhlIGF4aXMsIHVzZWQgd2l0aCBcInZlcnRpY2FsXCJcclxuXHRcdFx0aW5jbHVkZVplcm86IGZhbHNlLFx0XHQvLyAwIHNob3VsZCBiZSBpbmNsdWRlZFxyXG5cdFx0XHRmaXhlZDogICAgICAgdHJ1ZVx0XHQvLyBhbGwgbGFiZWxzIGFyZSBmaXhlZCBudW1iZXJzXHJcblx0XHR9LFxyXG5cdFx0b3B0aW9uYWxQYXJhbXM6IHtcclxuXHRcdFx0bWluOlx0XHRcdDAsXHQvLyBtaW5pbWFsIHZhbHVlIG9uIHRoaXMgYXhpc1xyXG5cdFx0XHRtYXg6XHRcdFx0MSxcdC8vIG1heGltYWwgdmFsdWUgb24gdGhpcyBheGlzXHJcblx0XHRcdGZyb206XHRcdFx0MCxcdC8vIHZpc2libGUgZnJvbSB0aGlzIHZhbHVlXHJcblx0XHRcdHRvOlx0XHRcdFx0MSxcdC8vIHZpc2libGUgdG8gdGhpcyB2YWx1ZVxyXG5cdFx0XHRtYWpvclRpY2tTdGVwOlx0NCxcdC8vIG1ham9yIHRpY2sgc3RlcFxyXG5cdFx0XHRtaW5vclRpY2tTdGVwOlx0MixcdC8vIG1pbm9yIHRpY2sgc3RlcFxyXG5cdFx0XHRtaWNyb1RpY2tTdGVwOlx0MVx0Ly8gbWljcm8gdGljayBzdGVwXHJcblx0XHR9LFxyXG5cclxuXHRcdGNvbnN0cnVjdG9yOiBmdW5jdGlvbihjaGFydCwga3dBcmdzKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0VGhlIGNvbnN0cnVjdG9yIGZvciBhbiBpbnZpc2libGUgYXhpcy5cclxuXHRcdFx0Ly8gY2hhcnQ6IGRvam94L2NoYXJ0aW5nL0NoYXJ0XHJcblx0XHRcdC8vXHRcdFRoZSBjaGFydCB0aGUgYXhpcyBiZWxvbmdzIHRvLlxyXG5cdFx0XHQvLyBrd0FyZ3M6IF9fSW52aXNpYmxlQXhpc0N0b3JBcmdzP1xyXG5cdFx0XHQvL1x0XHRBbnkgb3B0aW9uYWwga2V5d29yZCBhcmd1bWVudHMgdG8gYmUgdXNlZCB0byBkZWZpbmUgdGhpcyBheGlzLlxyXG5cdFx0XHR0aGlzLm9wdCA9IGxhbmcuY2xvbmUodGhpcy5kZWZhdWx0UGFyYW1zKTtcclxuICAgICAgICAgICAgZHUudXBkYXRlV2l0aE9iamVjdCh0aGlzLm9wdCwga3dBcmdzKTtcclxuXHRcdFx0ZHUudXBkYXRlV2l0aFBhdHRlcm4odGhpcy5vcHQsIGt3QXJncywgdGhpcy5vcHRpb25hbFBhcmFtcyk7XHJcblx0XHR9LFxyXG5cdFx0ZGVwZW5kT25EYXRhOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRGaW5kIG91dCB3aGV0aGVyIG9yIG5vdCB0aGUgYXhpcyBvcHRpb25zIGRlcGVuZCBvbiB0aGUgZGF0YSBpbiB0aGUgYXhpcy5cclxuXHRcdFx0cmV0dXJuICEoXCJtaW5cIiBpbiB0aGlzLm9wdCkgfHwgIShcIm1heFwiIGluIHRoaXMub3B0KTtcdC8vXHRCb29sZWFuXHJcblx0XHR9LFxyXG5cdFx0Y2xlYXI6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENsZWFyIG91dCBhbGwgY2FsY3VsYXRlZCBwcm9wZXJ0aWVzIG9uIHRoaXMgYXhpcztcclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvYXhpczJkL0ludmlzaWJsZVxyXG5cdFx0XHQvL1x0XHRUaGUgcmVmZXJlbmNlIHRvIHRoZSBheGlzIGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRkZWxldGUgdGhpcy5zY2FsZXI7XHJcblx0XHRcdGRlbGV0ZSB0aGlzLnRpY2tzO1xyXG5cdFx0XHR0aGlzLmRpcnR5ID0gdHJ1ZTtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvYXhpczJkL0ludmlzaWJsZVxyXG5cdFx0fSxcclxuXHRcdGluaXRpYWxpemVkOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRGaW5kcyBvdXQgaWYgdGhpcyBheGlzIGhhcyBiZWVuIGluaXRpYWxpemVkIG9yIG5vdC5cclxuXHRcdFx0Ly8gcmV0dXJuczogQm9vbGVhblxyXG5cdFx0XHQvL1x0XHRXaGV0aGVyIGEgc2NhbGVyIGhhcyBiZWVuIGNhbGN1bGF0ZWQgYW5kIGlmIHRoZSBheGlzIGlzIG5vdCBkaXJ0eS5cclxuXHRcdFx0cmV0dXJuIFwic2NhbGVyXCIgaW4gdGhpcyAmJiAhKHRoaXMuZGlydHkgJiYgdGhpcy5kZXBlbmRPbkRhdGEoKSk7XHJcblx0XHR9LFxyXG5cdFx0c2V0V2luZG93OiBmdW5jdGlvbihzY2FsZSwgb2Zmc2V0KXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0U2V0IHRoZSBkcmF3aW5nIFwid2luZG93XCIgZm9yIHRoZSBheGlzLlxyXG5cdFx0XHQvLyBzY2FsZTogTnVtYmVyXHJcblx0XHRcdC8vXHRcdFRoZSBuZXcgc2NhbGUgZm9yIHRoZSBheGlzLlxyXG5cdFx0XHQvLyBvZmZzZXQ6IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgbmV3IG9mZnNldCBmb3IgdGhlIGF4aXMuXHJcblx0XHRcdC8vIHJldHVybnM6IGRvam94L2NoYXJ0aW5nL2F4aXMyZC9JbnZpc2libGVcclxuXHRcdFx0Ly9cdFx0VGhlIHJlZmVyZW5jZSB0byB0aGUgYXhpcyBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0dGhpcy5zY2FsZSAgPSBzY2FsZTtcclxuXHRcdFx0dGhpcy5vZmZzZXQgPSBvZmZzZXQ7XHJcblx0XHRcdHJldHVybiB0aGlzLmNsZWFyKCk7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvYXhpczJkL0ludmlzaWJsZVxyXG5cdFx0fSxcclxuXHRcdGdldFdpbmRvd1NjYWxlOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRHZXQgdGhlIGN1cnJlbnQgd2luZG93aW5nIHNjYWxlIG9mIHRoZSBheGlzLlxyXG5cdFx0XHRyZXR1cm4gXCJzY2FsZVwiIGluIHRoaXMgPyB0aGlzLnNjYWxlIDogMTtcdC8vXHROdW1iZXJcclxuXHRcdH0sXHJcblx0XHRnZXRXaW5kb3dPZmZzZXQ6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEdldCB0aGUgY3VycmVudCB3aW5kb3dpbmcgb2Zmc2V0IGZvciB0aGUgYXhpcy5cclxuXHRcdFx0cmV0dXJuIFwib2Zmc2V0XCIgaW4gdGhpcyA/IHRoaXMub2Zmc2V0IDogMDtcdC8vXHROdW1iZXJcclxuXHRcdH0sXHJcblx0XHRjYWxjdWxhdGU6IGZ1bmN0aW9uKG1pbiwgbWF4LCBzcGFuLCBzY2FsZXJUeXBlKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UGVyZm9ybSBhbGwgY2FsY3VsYXRpb25zIG5lZWRlZCB0byByZW5kZXIgdGhpcyBheGlzLlxyXG5cdFx0XHQvLyBtaW46IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgc21hbGxlc3QgdmFsdWUgcmVwcmVzZW50ZWQgb24gdGhpcyBheGlzLlxyXG5cdFx0XHQvLyBtYXg6IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgbGFyZ2VzdCB2YWx1ZSByZXByZXNlbnRlZCBvbiB0aGlzIGF4aXMuXHJcblx0XHRcdC8vIHNwYW46IE51bWJlclxyXG5cdFx0XHQvL1x0XHRUaGUgc3BhbiBpbiBwaXhlbHMgb3ZlciB3aGljaCBheGlzIGNhbGN1bGF0aW9ucyBhcmUgbWFkZS5cclxuXHRcdFx0Ly8gc2NhbGVyVHlwZTogT2JqZWN0XHJcblx0XHRcdC8vXHRcdEFuIG9wdGlvbmFsIHNjYWxlciB0eXBlIG9iamVjdC5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvYXhpczJkL0ludmlzaWJsZVxyXG5cdFx0XHQvL1x0XHRUaGUgcmVmZXJlbmNlIHRvIHRoZSBheGlzIGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHRpZih0aGlzLmluaXRpYWxpemVkKCkpe1xyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBvID0gdGhpcy5vcHQ7XHJcblx0XHRcdC8vIHdlIHVzZWQgdG8gaGF2ZSBhIDR0aCBmdW5jdGlvbiBwYXJhbWV0ZXIgdG8gcmVhY2ggbGFiZWxzIGJ1dFxyXG5cdFx0XHQvLyBub2JvZHkgd2FzIGNhbGxpbmcgaXQgd2l0aCA0IHBhcmFtZXRlcnMuXHJcblx0XHRcdHRoaXMubGFiZWxzID0gby5sYWJlbHM7XHJcblx0XHRcdHRoaXMuc2NhbGVyID0gKHNjYWxlclR5cGUgfHwgbGluKS5idWlsZFNjYWxlcihtaW4sIG1heCwgc3Bhbiwgbyk7XHJcblx0XHRcdC8vIHN0b3JlIHRoZSBhYnNvbHV0ZSBtYWpvciB0aWNrIHN0YXJ0LCB0aGlzIHdpbGwgYmUgdXNlZnVsIHdoZW4gZHJvcHBpbmcgYSBsYWJlbCBldmVyeSBuIGxhYmVsc1xyXG5cdFx0XHQvLyBUT0RPOiBpZiBvLmxvd2VyIHRoZW4gaXQgZG9lcyBub3Qgd29ya1xyXG5cdFx0XHR2YXIgdHNiID0gdGhpcy5zY2FsZXIuYm91bmRzO1xyXG5cdFx0XHRpZihcInNjYWxlXCIgaW4gdGhpcyl7XHJcblx0XHRcdFx0Ly8gY2FsY3VsYXRlIG5ldyByYW5nZVxyXG5cdFx0XHRcdG8uZnJvbSA9IHRzYi5sb3dlciArIHRoaXMub2Zmc2V0O1xyXG5cdFx0XHRcdG8udG8gICA9ICh0c2IudXBwZXIgLSB0c2IubG93ZXIpIC8gdGhpcy5zY2FsZSArIG8uZnJvbTtcclxuXHRcdFx0XHQvLyBtYWtlIHN1cmUgdGhhdCBib3VuZHMgYXJlIGNvcnJlY3RcclxuXHRcdFx0XHRpZiggIWlzRmluaXRlKG8uZnJvbSkgfHxcclxuXHRcdFx0XHRcdGlzTmFOKG8uZnJvbSkgfHxcclxuXHRcdFx0XHRcdCFpc0Zpbml0ZShvLnRvKSB8fFxyXG5cdFx0XHRcdFx0aXNOYU4oby50bykgfHxcclxuXHRcdFx0XHRcdG8udG8gLSBvLmZyb20gPj0gdHNiLnVwcGVyIC0gdHNiLmxvd2VyXHJcblx0XHRcdFx0KXtcclxuXHRcdFx0XHRcdC8vIGFueSBlcnJvciAtLS0gcmVtb3ZlIGZyb20vdG8gYm91bmRzXHJcblx0XHRcdFx0XHRkZWxldGUgby5mcm9tO1xyXG5cdFx0XHRcdFx0ZGVsZXRlIG8udG87XHJcblx0XHRcdFx0XHRkZWxldGUgdGhpcy5zY2FsZTtcclxuXHRcdFx0XHRcdGRlbGV0ZSB0aGlzLm9mZnNldDtcclxuXHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdC8vIHNoaWZ0IHRoZSB3aW5kb3csIGlmIHdlIGFyZSBvdXQgb2YgYm91bmRzXHJcblx0XHRcdFx0XHRpZihvLmZyb20gPCB0c2IubG93ZXIpe1xyXG5cdFx0XHRcdFx0XHRvLnRvICs9IHRzYi5sb3dlciAtIG8uZnJvbTtcclxuXHRcdFx0XHRcdFx0by5mcm9tID0gdHNiLmxvd2VyO1xyXG5cdFx0XHRcdFx0fWVsc2UgaWYoby50byA+IHRzYi51cHBlcil7XHJcblx0XHRcdFx0XHRcdG8uZnJvbSArPSB0c2IudXBwZXIgLSBvLnRvO1xyXG5cdFx0XHRcdFx0XHRvLnRvID0gdHNiLnVwcGVyO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0Ly8gdXBkYXRlIHRoZSBvZmZzZXRcclxuXHRcdFx0XHRcdHRoaXMub2Zmc2V0ID0gby5mcm9tIC0gdHNiLmxvd2VyO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQvLyByZS1jYWxjdWxhdGUgdGhlIHNjYWxlclxyXG5cdFx0XHRcdHRoaXMuc2NhbGVyID0gKHNjYWxlclR5cGUgfHwgbGluKS5idWlsZFNjYWxlcihtaW4sIG1heCwgc3Bhbiwgbyk7XHJcblx0XHRcdFx0dHNiID0gdGhpcy5zY2FsZXIuYm91bmRzO1xyXG5cdFx0XHRcdC8vIGNsZWFudXBcclxuXHRcdFx0XHRpZih0aGlzLnNjYWxlID09IDEgJiYgdGhpcy5vZmZzZXQgPT0gMCl7XHJcblx0XHRcdFx0XHRkZWxldGUgdGhpcy5zY2FsZTtcclxuXHRcdFx0XHRcdGRlbGV0ZSB0aGlzLm9mZnNldDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvYXhpczJkL0ludmlzaWJsZVxyXG5cdFx0fSxcclxuXHRcdGdldFNjYWxlcjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0R2V0IHRoZSBwcmUtY2FsY3VsYXRlZCBzY2FsZXIgb2JqZWN0LlxyXG5cdFx0XHRyZXR1cm4gdGhpcy5zY2FsZXI7XHQvL1x0T2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0Z2V0VGlja3M6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEdldCB0aGUgcHJlLWNhbGN1bGF0ZWQgdGlja3Mgb2JqZWN0LlxyXG5cdFx0XHRyZXR1cm4gdGhpcy50aWNrcztcdC8vXHRPYmplY3RcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxzSEFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/axis2d/Invisible.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/axis2d/common.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/axis2d/common.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), __webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, win, domGeom, g, has){\r\n\r\n\tvar common = lang.getObject(\"dojox.charting.axis2d.common\", true);\r\n\t\r\n\tvar clearNode = function(s){\r\n\t\ts.marginLeft   = \"0px\";\r\n\t\ts.marginTop    = \"0px\";\r\n\t\ts.marginRight  = \"0px\";\r\n\t\ts.marginBottom = \"0px\";\r\n\t\ts.paddingLeft   = \"0px\";\r\n\t\ts.paddingTop    = \"0px\";\r\n\t\ts.paddingRight  = \"0px\";\r\n\t\ts.paddingBottom = \"0px\";\r\n\t\ts.borderLeftWidth   = \"0px\";\r\n\t\ts.borderTopWidth    = \"0px\";\r\n\t\ts.borderRightWidth  = \"0px\";\r\n\t\ts.borderBottomWidth = \"0px\";\r\n\t};\r\n\r\n\tvar getBoxWidth = function(n){\r\n\t\t// marginBox is incredibly slow, so avoid it if we can\r\n\t\tif(n[\"getBoundingClientRect\"]){\r\n\t\t\tvar bcr = n.getBoundingClientRect();\r\n\t\t\treturn bcr.width || (bcr.right - bcr.left);\r\n\t\t}else{\r\n\t\t\treturn domGeom.getMarginBox(n).w;\r\n\t\t}\r\n\t};\r\n\r\n\treturn lang.mixin(common, {\r\n\t\t// summary:\r\n\t\t//\t\tCommon methods to be used by any axis.  This is considered \"static\".\r\n\t\tcreateText: {\r\n\t\t\tgfx: function(chart, creator, x, y, align, text, font, fontColor){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tUse dojox.gfx to create any text.\r\n\t\t\t\t// chart: dojox.charting.Chart\r\n\t\t\t\t//\t\tThe chart to create the text into.\r\n\t\t\t\t// creator: dojox.gfx.Surface\r\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\r\n\t\t\t\t// x: Number\r\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\r\n\t\t\t\t// y: Number\r\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\r\n\t\t\t\t// align: String\r\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\r\n\t\t\t\t// text: String\r\n\t\t\t\t//\t\tThe text to render.\r\n\t\t\t\t// font: String\r\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\r\n\t\t\t\t// fontColor: String|dojo.Color\r\n\t\t\t\t//\t\tThe color of the resultant text.\r\n\t\t\t\t// returns: dojox.gfx.Text\r\n\t\t\t\t//\t\tThe resultant GFX object.\r\n\t\t\t\treturn creator.createText({\r\n\t\t\t\t\tx: x, y: y, text: text, align: align\r\n\t\t\t\t}).setFont(font).setFill(fontColor);\t//\tdojox.gfx.Text\r\n\t\t\t},\r\n\t\t\thtml: function(chart, creator, x, y, align, text, font, fontColor, labelWidth){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tUse the HTML DOM to create any text.\r\n\t\t\t\t// chart: dojox.charting.Chart\r\n\t\t\t\t//\t\tThe chart to create the text into.\r\n\t\t\t\t// creator: dojox.gfx.Surface\r\n\t\t\t\t//\t\tThe graphics surface to use for creating the text.\r\n\t\t\t\t// x: Number\r\n\t\t\t\t//\t\tWhere to create the text along the x axis (CSS left).\r\n\t\t\t\t// y: Number\r\n\t\t\t\t//\t\tWhere to create the text along the y axis (CSS top).\r\n\t\t\t\t// align: String\r\n\t\t\t\t//\t\tHow to align the text.  Can be \"left\", \"right\", \"center\".\r\n\t\t\t\t// text: String\r\n\t\t\t\t//\t\tThe text to render.\r\n\t\t\t\t// font: String\r\n\t\t\t\t//\t\tThe font definition, a la CSS \"font\".\r\n\t\t\t\t// fontColor: String|dojo.Color\r\n\t\t\t\t//\t\tThe color of the resultant text.\r\n\t\t\t\t// labelWidth: Number?\r\n\t\t\t\t//\t\tThe maximum width of the resultant DOM node.\r\n\t\t\t\t// returns: DOMNode\r\n\t\t\t\t//\t\tThe resultant DOMNode (a \"div\" element).\r\n\r\n\t\t\t\t// setup the text node\r\n\t\t\t\tvar p = win.doc.createElement(\"div\"), s = p.style, boxWidth;\r\n\t\t\t\t// bidi support, if this function exists the module was loaded \r\n\t\t\t\tif(chart.getTextDir){\r\n\t\t\t\t\tp.dir = chart.getTextDir(text);\r\n\t\t\t\t}\r\n\t\t\t\tclearNode(s);\r\n\t\t\t\ts.font = font;\r\n\t\t\t\tp.innerHTML = String(text).replace(/\\s/g, \"&nbsp;\");\r\n\t\t\t\ts.color = fontColor;\r\n\t\t\t\t// measure the size\r\n\t\t\t\ts.position = \"absolute\";\r\n\t\t\t\ts.left = \"-10000px\";\r\n\t\t\t\twin.body().appendChild(p);\r\n\t\t\t\tvar size = g.normalizedLength(g.splitFontString(font).size);\r\n\r\n\t\t\t\t// do we need to calculate the label width?\r\n\t\t\t\tif(!labelWidth){\r\n\t\t\t\t\tboxWidth = getBoxWidth(p);\r\n\t\t\t\t}\r\n\t\t\t\t// when the textDir is rtl, but the UI ltr needs\r\n\t\t\t\t// to recalculate the starting point\r\n\t\t\t\tif(p.dir == \"rtl\"){\r\n\t\t\t\t\tx += labelWidth ? labelWidth : boxWidth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// new settings for the text node\r\n\t\t\t\twin.body().removeChild(p);\r\n\r\n\t\t\t\ts.position = \"relative\";\r\n\t\t\t\tif(labelWidth){\r\n\t\t\t\t\ts.width = labelWidth + \"px\";\r\n\t\t\t\t\t// s.border = \"1px dotted grey\";\r\n\t\t\t\t\tswitch(align){\r\n\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\ts.textAlign = \"center\";\r\n\t\t\t\t\t\t\ts.left = (x - labelWidth / 2) + \"px\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\t\ts.textAlign = \"right\";\r\n\t\t\t\t\t\t\ts.left = (x - labelWidth) + \"px\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\ts.left = x + \"px\";\r\n\t\t\t\t\t\t\ts.textAlign = \"left\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tswitch(align){\r\n\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth / 2) + \"px\";\r\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth / 2) + \"px\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\t\ts.left = Math.floor(x - boxWidth) + \"px\";\r\n\t\t\t\t\t\t\t// s.left = Math.floor(x - p.offsetWidth) + \"px\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//case \"start\":\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\ts.left = Math.floor(x) + \"px\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ts.top = Math.floor(y - size) + \"px\";\r\n\t\t\t\ts.whiteSpace = \"nowrap\";\t// hack for WebKit\r\n\t\t\t\t// setup the wrapper node\r\n\t\t\t\tvar wrap = win.doc.createElement(\"div\"), w = wrap.style;\r\n\t\t\t\tclearNode(w);\r\n\t\t\t\tw.width = \"0px\";\r\n\t\t\t\tw.height = \"0px\";\r\n\t\t\t\t// insert nodes\r\n\t\t\t\twrap.appendChild(p);\r\n\t\t\t\tchart.node.insertBefore(wrap, chart.node.firstChild);\r\n\t\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\t\tchart.htmlElementsRegistry.push([wrap, x, y, align, text, font, fontColor]);\r\n\t\t\t\t}\r\n\t\t\t\treturn wrap;\t//\tDOMNode\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/axis2d/common.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/bidi/Chart.js":
/*!***************************************************!*\
  !*** ./node_modules/dojox/charting/bidi/Chart.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojox/main */ \"./node_modules/dojox/main.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"),\r\n\t__webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"),__webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"),\r\n\t__webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/gfx/_gfxBidiSupport */ \"./node_modules/dojox/gfx/_gfxBidiSupport.js\"), __webpack_require__(/*! ../axis2d/common */ \"./node_modules/dojox/charting/axis2d/common.js\"), __webpack_require__(/*! dojox/string/BidiEngine */ \"./node_modules/dojox/string/BidiEngine.js\"),\r\n\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"),__webpack_require__(/*! dojo/dom-attr */ \"./node_modules/dojo/dom-attr.js\"),__webpack_require__(/*! ./_bidiutils */ \"./node_modules/dojox/charting/bidi/_bidiutils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojox, declare, lang, domStyle, arr, has, dom, domConstruct, g, gBidi, da, BidiEngine, df, domAttr,utils){\r\n\t// module:\r\n\t//\t\tdojox/charting/bidi/Chart\t\t\t\t\t\t\t\r\n\tvar bidiEngine = new BidiEngine();\r\n\tvar dc = lang.getObject(\"charting\", true, dojox);\r\n\tfunction validateTextDir(textDir){\r\n\t\treturn /^(ltr|rtl|auto)$/.test(textDir) ? textDir : null;\r\n\t};\r\n\t\r\n\treturn declare(null, {\r\n\t\t// textDir: String\r\n\t\t//\t\tBi-directional support,\tthe main variable which is responsible for the direction of the text.\r\n\t\t//\t\tThe text direction can be different than the GUI direction by using this parameter.\r\n\t\t//\t\tAllowed values:\r\n\t\t//\r\n\t\t//\t\t1. \"ltr\"\r\n\t\t//\t\t2. \"rtl\"\r\n\t\t//\t\t3. \"auto\" - contextual the direction of a text defined by first strong letter.\r\n\t\t//\r\n\t\t//\t\tBy default is as the page direction.\r\n\t\ttextDir:\"\",\r\n\t\t\r\n\t\t// dir: String\r\n\t\t//\t\tMirroring support,\tthe main variable which is responsible for the direction of the chart.\r\n\t\t//\r\n\t\t//\t\tAllowed values:\r\n\t\t//\t\t1. \"ltr\"\r\n\t\t//\t\t2. \"rtl\"\r\n\t\t//\r\n\t\t//\t\tBy default is ltr.\r\n\t\tdir: \"\",\r\n\t\tisMirrored: false,\r\n\t\t\r\n\t\tgetTextDir: function(text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn direction of the text. \r\n\t\t\t// description:\r\n\t\t\t//\t\tIf textDir is ltr or rtl returns the value.\r\n\t\t\t//\t\tIf it's auto, calls to another function that responsible \r\n\t\t\t//\t\tfor checking the value, and defining the direction.\t\t\t\r\n\t\t\t// text:\r\n\t\t\t//\t\tUsed in case textDir is \"auto\", this case the direction is according to the first\r\n\t\t\t//\t\tstrong (directionally - which direction is strong defined) letter.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected.\r\n\t\t\tvar textDir = this.textDir == \"auto\" ? bidiEngine.checkContextual(text) : this.textDir;\r\n\t\t\t// providing default value\r\n\t\t\tif(!textDir){\r\n\t\t\t\ttextDir = domStyle.get(this.node, \"direction\");\r\n\t\t\t}\r\n\t\t\treturn textDir;\r\n\t\t},\r\n\r\n\t\tpostscript: function(node,args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tKicks off chart instantiation.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsed for setting the textDir of the chart. \r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// validate textDir\r\n\t\t\tvar textDir = args ? (args[\"textDir\"] ? validateTextDir(args[\"textDir\"]) : \"\") : \"\";\r\n\t\t\t// if textDir wasn't defined or was defined wrong, apply default value\r\n\t\t\ttextDir = textDir ? textDir : domStyle.get(this.node, \"direction\");\r\n\t\t\tthis.textDir = textDir;\r\n\r\n\t\t\tthis.surface.textDir = textDir;\r\n\t\t\t\r\n\t\t\t// two data structures, used for storing data for further enablement to change\r\n\t\t\t// textDir dynamically\r\n\t\t\tthis.htmlElementsRegistry = [];\r\n\t\t\tthis.truncatedLabelsRegistry = [];\r\n\t\t\t// chart mirroring starts\r\n\t\t\tvar chartDir = \"ltr\";\r\n\t\t\tif(domAttr.has(node, \"direction\")){\r\n\t\t\t\tchartDir = domAttr.get(node, \"direction\");\r\n\t\t\t}\r\n\t\t\tthis.setDir(args ? (args.dir ? args.dir: chartDir) : chartDir);\r\n\t\t\t// chart mirroring ends\r\n\t\t},\r\n\r\n\t\tsetTextDir: function(newTextDir, obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetter for the textDir attribute.\r\n\t\t\t// description:\r\n\t\t\t//\t\tAllows dynamically set the textDir, goes over all the text-children and  \r\n\t\t\t//\t\tupdates their base text direction.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t\r\n\t\t\tif(newTextDir == this.textDir){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tif(validateTextDir(newTextDir) != null){\r\n\t\t\t\tthis.textDir = newTextDir;\r\n\t\t\t\t\r\n\t\t\t\t// set automatically all the gfx objects that were created by this surface\r\n\t\t\t\t// (groups, text objects)\r\n\t\t\t\tthis.surface.setTextDir(newTextDir);\r\n\t\t\t\r\n\t\t\t\t// truncated labels that were created with gfx creator need to recalculate dir\r\n\t\t\t\t// for case like: \"111111A\" (A stands for bidi character) and the truncation\r\n\t\t\t\t// is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\r\n\t\t\t\t// case we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\r\n\t\t\t\t// label, which value is \"111...\" but th real is \"111111A\".\r\n\t\t\t\t// each time we created a gfx truncated label we stored it in the truncatedLabelsRegistry, so update now \r\n\t\t\t\t// the registry.\r\n\t\t\t\tif(this.truncatedLabelsRegistry && newTextDir == \"auto\"){\r\n\t\t\t\t\tarr.forEach(this.truncatedLabelsRegistry, function(elem){\r\n\t\t\t\t\t\tvar tDir = this.getTextDir(elem[\"label\"]);\r\n\t\t\t\t\t\tif(elem[\"element\"].textDir != tDir){\r\n\t\t\t\t\t\t\telem[\"element\"].setShape({textDir: tDir});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// re-render axes with html labels. for recalculation of the labels\r\n\t\t\t\t// positions etc.\r\n\t\t\t\t// create array of keys for all the axis in chart \r\n\t\t\t\tvar axesKeyArr = df.keys(this.axes);\r\n\t\t\t\tif(axesKeyArr.length > 0){\r\n\t\t\t\t\t// iterate over the axes, and for each that have html labels render it.\r\n\t\t\t\t\tarr.forEach(axesKeyArr, function(key, index, arr){\r\n\t\t\t\t\t\t// get the axis \r\n\t\t\t\t\t\tvar axis = this.axes[key];\r\n\t\t\t\t\t\t// if the axis has html labels \r\n\t\t\t\t\t\tif(axis.htmlElements[0]){\r\n\t\t\t\t\t\t\taxis.dirty = true;\r\n\t\t\t\t\t\t\taxis.render(this.dim, this.offsets);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},this);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// recreate title\r\n\t\t\t\t\tif(this.title){\r\n\t\t\t\t\t\tthis._renderTitle(this.dim, this.offsets);\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// case of pies, spiders etc.\r\n\t\t\t\t\tarr.forEach(this.htmlElementsRegistry, function(elem, index, arr){\r\n\t\t\t\t\t\tvar tDir = newTextDir == \"auto\" ? this.getTextDir(elem[4]) : newTextDir;\r\n\t\t\t\t\t\tif(elem[0].children[0] && elem[0].children[0].dir != tDir){\r\n\t\t\t\t\t\t\tdomConstruct.destroy(elem[0].children[0]);\r\n\t\t\t\t\t\t\telem[0].children[0] = da.createText[\"html\"]\r\n\t\t\t\t\t\t\t\t\t(this, this.surface, elem[1], elem[2], elem[3], elem[4], elem[5], elem[6]).children[0];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\tsetDir : function(dir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetter for the dir attribute.\r\n\t\t\t// description:\r\n\t\t\t//\t\tAllows dynamically set the dri attribute, which will used to\r\n\t\t\t//\t\tupdates the chart rendering direction.\r\n\t\t\t//\tdir : the desired chart direction [rtl: for right to left ,ltr: for left to right]\r\n \r\n\t\t\tif(dir == \"rtl\" || dir == \"ltr\"){\r\n\t\t\t\tif(this.dir != dir){\r\n\t\t\t\t\tthis.isMirrored = true;\r\n\t\t\t\t\tthis.dirty = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis.dir = dir;\r\n\t\t\t}\t\t\t\r\n\t\t\treturn this; \r\n\t\t},\r\n\t\t\r\n\t\tisRightToLeft: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcheck the direction of the chart.\r\n\t\t\t// description:\r\n\t\t\t//\t\tcheck the dir attribute to determine the rendering direction\r\n\t\t\t//\t\tof the chart.\r\n\t\t\treturn this.dir == \"rtl\";\r\n        },\r\n        \r\n\t\tapplyMirroring: function(plot, dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapply the mirroring operation to the current chart plots.\r\n\t\t\t//\r\n\t\t\tutils.reverseMatrix(plot, dim, offsets, this.dir == \"rtl\");\r\n\t\t\t//force the direction of the node to be ltr to properly render the axes and the plots labels.\r\n\t\t\tdomStyle.set(this.node, \"direction\", \"ltr\");\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tformatTruncatedLabel: function(element, label, labelType){\r\n\t\t\tthis.truncateBidi(element, label, labelType);\r\n\t\t},\r\n\r\n\t\ttruncateBidi: function(elem, label, labelType){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEnables bidi support for truncated labels.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCan be two types of labels: html or gfx.\r\n\t\t\t//\r\n\t\t\t//\t\t####gfx labels:\r\n\t\t\t//\r\n\t\t\t//\t\tNeed to be stored in registry to be used when the textDir will be set dynamically.\r\n\t\t\t//\t\tAdditional work on truncated labels is needed for case as 111111A (A stands for \"bidi\" character rtl directioned).\r\n\t\t\t//\t\tlet's say in this case the truncation is \"111...\" If the textDir is auto, the display should be: \"...111\" but in gfx\r\n\t\t\t//\t\tcase we will get \"111...\". Because this.surface.setTextDir will calculate the dir of truncated\r\n\t\t\t//\t\tlabel, which value is \"111...\" but th real is \"111111A\".\r\n\t\t\t//\t\teach time we created a gfx truncated label we store it in the truncatedLabelsRegistry.\r\n\t\t\t//\r\n\t\t\t//\t\t####html labels:\r\n\t\t\t//\r\n\t\t\t//\t\tno need for repository (stored in another place). Here we only need to update the current dir according to textDir.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\r\n\t\t\tif(labelType == \"gfx\"){\r\n\t\t\t\t// store truncated gfx labels in the data structure.\r\n\t\t\t\tthis.truncatedLabelsRegistry.push({element: elem, label: label});\r\n\t\t\t\tif(this.textDir == \"auto\"){\r\n\t\t\t\t\telem.setShape({textDir: this.getTextDir(label)});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(labelType == \"html\" && this.textDir == \"auto\"){\r\n\t\t\t\telem.children[0].dir = this.getTextDir(label);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\trender: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.isMirrored = false;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t_resetLeftBottom: function(axis){\r\n\t\t\tif(axis.vertical && this.isMirrored){\r\n\t\t\t\taxis.opt.leftBottom = !axis.opt.leftBottom;\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/bidi/Chart.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/bidi/_bidiutils.js":
/*!********************************************************!*\
  !*** ./node_modules/dojox/charting/bidi/_bidiutils.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("  !(module.exports = {\r\n\t\treverseMatrix: function(plot, dim, offsets, rtl){\r\n\t\t\t//summary:\r\n\t\t\t//\treverse the underlying matrix of the plots to perform the mirroring behavior.\r\n\t\t\t//plot:\r\n\t\t\t//  the plot which has the matrix to be reversed.\r\n\t\t\t//dim:\r\n\t\t\t//  the dimension (width,height) of the chart.\r\n\t\t\t//offsets:\r\n\t\t\t//  the offsets of the chart\r\n\t\t\tvar shift = offsets.l - offsets.r;\r\n\t\t\tvar xx = rtl? -1 : 1;\r\n\t\t\tvar xy = 0;\r\n\t\t\tvar yx = 0;\r\n\t\t\tvar yy = 1;\r\n\t\t\tvar dx = rtl? dim.width + shift : 0;\r\n\t\t\tvar dy = 0;\r\n\t\t\tif(plot.matrix){\r\n\t\t\t\txx = xx * Math.abs(plot.matrix.xx);\r\n\t\t\t\tyy = plot.matrix.yy;\r\n\t\t\t\txy = plot.matrix.xy;\r\n\t\t\t\tyx = plot.matrix.yx;\r\n\t\t\t\tdy = plot.matrix.xy;\r\n\t\t\t}\r\n\t\t\tplot.setTransform({xx: xx, xy: xy, yx: yx, yy: yy, dx: dx, dy: dy});\r\n \t}\r\n });\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYmlkaS9fYmlkaXV0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL2JpZGkvX2JpZGl1dGlscy5qcz9mNGVjIl0sInNvdXJjZXNDb250ZW50IjpbIiAgZGVmaW5lICh7XHJcblx0XHRyZXZlcnNlTWF0cml4OiBmdW5jdGlvbihwbG90LCBkaW0sIG9mZnNldHMsIHJ0bCl7XHJcblx0XHRcdC8vc3VtbWFyeTpcclxuXHRcdFx0Ly9cdHJldmVyc2UgdGhlIHVuZGVybHlpbmcgbWF0cml4IG9mIHRoZSBwbG90cyB0byBwZXJmb3JtIHRoZSBtaXJyb3JpbmcgYmVoYXZpb3IuXHJcblx0XHRcdC8vcGxvdDpcclxuXHRcdFx0Ly8gIHRoZSBwbG90IHdoaWNoIGhhcyB0aGUgbWF0cml4IHRvIGJlIHJldmVyc2VkLlxyXG5cdFx0XHQvL2RpbTpcclxuXHRcdFx0Ly8gIHRoZSBkaW1lbnNpb24gKHdpZHRoLGhlaWdodCkgb2YgdGhlIGNoYXJ0LlxyXG5cdFx0XHQvL29mZnNldHM6XHJcblx0XHRcdC8vICB0aGUgb2Zmc2V0cyBvZiB0aGUgY2hhcnRcclxuXHRcdFx0dmFyIHNoaWZ0ID0gb2Zmc2V0cy5sIC0gb2Zmc2V0cy5yO1xyXG5cdFx0XHR2YXIgeHggPSBydGw/IC0xIDogMTtcclxuXHRcdFx0dmFyIHh5ID0gMDtcclxuXHRcdFx0dmFyIHl4ID0gMDtcclxuXHRcdFx0dmFyIHl5ID0gMTtcclxuXHRcdFx0dmFyIGR4ID0gcnRsPyBkaW0ud2lkdGggKyBzaGlmdCA6IDA7XHJcblx0XHRcdHZhciBkeSA9IDA7XHJcblx0XHRcdGlmKHBsb3QubWF0cml4KXtcclxuXHRcdFx0XHR4eCA9IHh4ICogTWF0aC5hYnMocGxvdC5tYXRyaXgueHgpO1xyXG5cdFx0XHRcdHl5ID0gcGxvdC5tYXRyaXgueXk7XHJcblx0XHRcdFx0eHkgPSBwbG90Lm1hdHJpeC54eTtcclxuXHRcdFx0XHR5eCA9IHBsb3QubWF0cml4Lnl4O1xyXG5cdFx0XHRcdGR5ID0gcGxvdC5tYXRyaXgueHk7XHJcblx0XHRcdH1cclxuXHRcdFx0cGxvdC5zZXRUcmFuc2Zvcm0oe3h4OiB4eCwgeHk6IHh5LCB5eDogeXgsIHl5OiB5eSwgZHg6IGR4LCBkeTogZHl9KTtcclxuIFx0fVxyXG4gfSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/bidi/_bidiutils.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/bidi/action2d/Tooltip.js":
/*!**************************************************************!*\
  !*** ./node_modules/dojox/charting/bidi/action2d/Tooltip.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, domStyle){\r\n\t// module:\r\n\t//\t\tdojox/charting/bidi/action2d/Tooltip\t\t\r\n\treturn declare(null, {\r\n\t\t_recheckPosition: function(obj,rect,position){\r\n\t\t\tif(!this.chart.isRightToLeft()){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar shift = this.chart.offsets.l - this.chart.offsets.r;\r\n\t\t\tif(obj.element == \"marker\"){\r\n\t\t\t\trect.x = this.chart.dim.width - obj.cx + shift;\r\n\t\t\t\tposition[0] = \"before-centered\";\r\n\t\t\t\tposition[1] = \"after-centered\";\r\n\t\t\t}\r\n\t\t\telse if(obj.element == \"circle\"){\r\n\t\t\t\trect.x = this.chart.dim.width - obj.cx - obj.cr + shift;\r\n\t\t\t}\r\n\t\t\telse if(obj.element == \"bar\" || obj.element == \"column\"){\r\n\t\t\t\trect.x = this.chart.dim.width - rect.width - rect.x + shift;\r\n\t\t\t\tif(obj.element == \"bar\"){\r\n\t\t\t\t\tposition[0] = \"before-centered\";\r\n\t\t\t\t\tposition[1] = \"after-centered\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(obj.element == \"candlestick\"){\r\n\t\t\t\trect.x = this.chart.dim.width + shift - obj.x;\r\n\t\t\t}\r\n\t\t\telse if(obj.element == \"slice\"){\r\n\t\t\t\tif((position[0] == \"before-centered\") || (position[0] == \"after-centered\")) {\r\n\t\t\t\t\tposition.reverse();\r\n\t\t\t\t}\r\n\t\t\t\trect.x = obj.cx + (obj.cx - rect.x);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_format: function(tooltip){\r\n\t\t\tvar isChartDirectionRtl = (domStyle.get(this.chart.node, \"direction\") == \"rtl\");\r\n\t\t\tvar isBaseTextDirRtl = (this.chart.getTextDir(tooltip) == \"rtl\");\r\n\t\t\tif(isBaseTextDirRtl && !isChartDirectionRtl){\r\n\t\t\t\treturn \"<span dir = 'rtl'>\" + tooltip +\"</span>\";\r\n\t\t\t}\r\n\t\t\telse if(!isBaseTextDirRtl && isChartDirectionRtl){\r\n\t\t\t\treturn \"<span dir = 'ltr'>\" + tooltip +\"</span>\";\r\n\t\t\t}else{\r\n\t\t\t\treturn tooltip;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYmlkaS9hY3Rpb24yZC9Ub29sdGlwLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL2JpZGkvYWN0aW9uMmQvVG9vbHRpcC5qcz9iYTEwIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCJkb2pvL2RvbS1zdHlsZVwiXSxcclxuXHRmdW5jdGlvbihkZWNsYXJlLCBkb21TdHlsZSl7XHJcblx0Ly8gbW9kdWxlOlxyXG5cdC8vXHRcdGRvam94L2NoYXJ0aW5nL2JpZGkvYWN0aW9uMmQvVG9vbHRpcFx0XHRcclxuXHRyZXR1cm4gZGVjbGFyZShudWxsLCB7XHJcblx0XHRfcmVjaGVja1Bvc2l0aW9uOiBmdW5jdGlvbihvYmoscmVjdCxwb3NpdGlvbil7XHJcblx0XHRcdGlmKCF0aGlzLmNoYXJ0LmlzUmlnaHRUb0xlZnQoKSl7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBzaGlmdCA9IHRoaXMuY2hhcnQub2Zmc2V0cy5sIC0gdGhpcy5jaGFydC5vZmZzZXRzLnI7XHJcblx0XHRcdGlmKG9iai5lbGVtZW50ID09IFwibWFya2VyXCIpe1xyXG5cdFx0XHRcdHJlY3QueCA9IHRoaXMuY2hhcnQuZGltLndpZHRoIC0gb2JqLmN4ICsgc2hpZnQ7XHJcblx0XHRcdFx0cG9zaXRpb25bMF0gPSBcImJlZm9yZS1jZW50ZXJlZFwiO1xyXG5cdFx0XHRcdHBvc2l0aW9uWzFdID0gXCJhZnRlci1jZW50ZXJlZFwiO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2UgaWYob2JqLmVsZW1lbnQgPT0gXCJjaXJjbGVcIil7XHJcblx0XHRcdFx0cmVjdC54ID0gdGhpcy5jaGFydC5kaW0ud2lkdGggLSBvYmouY3ggLSBvYmouY3IgKyBzaGlmdDtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmKG9iai5lbGVtZW50ID09IFwiYmFyXCIgfHwgb2JqLmVsZW1lbnQgPT0gXCJjb2x1bW5cIil7XHJcblx0XHRcdFx0cmVjdC54ID0gdGhpcy5jaGFydC5kaW0ud2lkdGggLSByZWN0LndpZHRoIC0gcmVjdC54ICsgc2hpZnQ7XHJcblx0XHRcdFx0aWYob2JqLmVsZW1lbnQgPT0gXCJiYXJcIil7XHJcblx0XHRcdFx0XHRwb3NpdGlvblswXSA9IFwiYmVmb3JlLWNlbnRlcmVkXCI7XHJcblx0XHRcdFx0XHRwb3NpdGlvblsxXSA9IFwiYWZ0ZXItY2VudGVyZWRcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZSBpZihvYmouZWxlbWVudCA9PSBcImNhbmRsZXN0aWNrXCIpe1xyXG5cdFx0XHRcdHJlY3QueCA9IHRoaXMuY2hhcnQuZGltLndpZHRoICsgc2hpZnQgLSBvYmoueDtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmKG9iai5lbGVtZW50ID09IFwic2xpY2VcIil7XHJcblx0XHRcdFx0aWYoKHBvc2l0aW9uWzBdID09IFwiYmVmb3JlLWNlbnRlcmVkXCIpIHx8IChwb3NpdGlvblswXSA9PSBcImFmdGVyLWNlbnRlcmVkXCIpKSB7XHJcblx0XHRcdFx0XHRwb3NpdGlvbi5yZXZlcnNlKCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJlY3QueCA9IG9iai5jeCArIChvYmouY3ggLSByZWN0LngpO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0XHJcblx0XHRfZm9ybWF0OiBmdW5jdGlvbih0b29sdGlwKXtcclxuXHRcdFx0dmFyIGlzQ2hhcnREaXJlY3Rpb25SdGwgPSAoZG9tU3R5bGUuZ2V0KHRoaXMuY2hhcnQubm9kZSwgXCJkaXJlY3Rpb25cIikgPT0gXCJydGxcIik7XHJcblx0XHRcdHZhciBpc0Jhc2VUZXh0RGlyUnRsID0gKHRoaXMuY2hhcnQuZ2V0VGV4dERpcih0b29sdGlwKSA9PSBcInJ0bFwiKTtcclxuXHRcdFx0aWYoaXNCYXNlVGV4dERpclJ0bCAmJiAhaXNDaGFydERpcmVjdGlvblJ0bCl7XHJcblx0XHRcdFx0cmV0dXJuIFwiPHNwYW4gZGlyID0gJ3J0bCc+XCIgKyB0b29sdGlwICtcIjwvc3Bhbj5cIjtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIGlmKCFpc0Jhc2VUZXh0RGlyUnRsICYmIGlzQ2hhcnREaXJlY3Rpb25SdGwpe1xyXG5cdFx0XHRcdHJldHVybiBcIjxzcGFuIGRpciA9ICdsdHInPlwiICsgdG9vbHRpcCArXCI8L3NwYW4+XCI7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdHJldHVybiB0b29sdGlwO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG5cclxuIl0sIm1hcHBpbmdzIjoiQUFBQSwwU0FDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/bidi/action2d/Tooltip.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/bidi/axis2d/Default.js":
/*!************************************************************!*\
  !*** ./node_modules/dojox/charting/bidi/axis2d/Default.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, domStyle){\r\n\t// module:\r\n\t//\t\tdojox/charting/bidi/axis2d/Default\t\t\t\r\n\treturn declare(null, {\r\n\t\tlabelTooltip: function(elem, chart, label, truncatedLabel, font, elemType){\r\n\t\t\t// additional preprocessing of the labels, needed for rtl base text direction in LTR\r\n\t\t\t// GUI, or for ltr base text direction for RTL GUI.\r\n\r\n\t\t\tvar isChartDirectionRtl = (domStyle.get(chart.node,\"direction\") == \"rtl\");\r\n\t\t\tvar isBaseTextDirRtl = (chart.getTextDir(label) == \"rtl\");\r\n\r\n\t\t\tif(isBaseTextDirRtl && !isChartDirectionRtl){\r\n\t\t\t\tlabel = \"<span dir='rtl'>\" + label +\"</span>\";\r\n\t\t\t}\r\n\t\t\tif(!isBaseTextDirRtl && isChartDirectionRtl){\r\n\t\t\t\tlabel = \"<span dir='ltr'>\" + label +\"</span>\";\r\n\t\t\t}\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\t\r\n\t\t_isRtl: function(){\r\n\t\t\treturn this.chart.isRightToLeft();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvYmlkaS9heGlzMmQvRGVmYXVsdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9iaWRpL2F4aXMyZC9EZWZhdWx0LmpzP2E4NjQiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcImRvam8vZG9tLXN0eWxlXCJdLFxyXG5cdGZ1bmN0aW9uKGRlY2xhcmUsIGRvbVN0eWxlKXtcclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZG9qb3gvY2hhcnRpbmcvYmlkaS9heGlzMmQvRGVmYXVsdFx0XHRcdFxyXG5cdHJldHVybiBkZWNsYXJlKG51bGwsIHtcclxuXHRcdGxhYmVsVG9vbHRpcDogZnVuY3Rpb24oZWxlbSwgY2hhcnQsIGxhYmVsLCB0cnVuY2F0ZWRMYWJlbCwgZm9udCwgZWxlbVR5cGUpe1xyXG5cdFx0XHQvLyBhZGRpdGlvbmFsIHByZXByb2Nlc3Npbmcgb2YgdGhlIGxhYmVscywgbmVlZGVkIGZvciBydGwgYmFzZSB0ZXh0IGRpcmVjdGlvbiBpbiBMVFJcclxuXHRcdFx0Ly8gR1VJLCBvciBmb3IgbHRyIGJhc2UgdGV4dCBkaXJlY3Rpb24gZm9yIFJUTCBHVUkuXHJcblxyXG5cdFx0XHR2YXIgaXNDaGFydERpcmVjdGlvblJ0bCA9IChkb21TdHlsZS5nZXQoY2hhcnQubm9kZSxcImRpcmVjdGlvblwiKSA9PSBcInJ0bFwiKTtcclxuXHRcdFx0dmFyIGlzQmFzZVRleHREaXJSdGwgPSAoY2hhcnQuZ2V0VGV4dERpcihsYWJlbCkgPT0gXCJydGxcIik7XHJcblxyXG5cdFx0XHRpZihpc0Jhc2VUZXh0RGlyUnRsICYmICFpc0NoYXJ0RGlyZWN0aW9uUnRsKXtcclxuXHRcdFx0XHRsYWJlbCA9IFwiPHNwYW4gZGlyPSdydGwnPlwiICsgbGFiZWwgK1wiPC9zcGFuPlwiO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKCFpc0Jhc2VUZXh0RGlyUnRsICYmIGlzQ2hhcnREaXJlY3Rpb25SdGwpe1xyXG5cdFx0XHRcdGxhYmVsID0gXCI8c3BhbiBkaXI9J2x0cic+XCIgKyBsYWJlbCArXCI8L3NwYW4+XCI7XHJcblx0XHRcdH1cclxuXHRcdFx0dGhpcy5pbmhlcml0ZWQoYXJndW1lbnRzKTtcclxuXHRcdH0sXHJcblx0XHRcclxuXHRcdF9pc1J0bDogZnVuY3Rpb24oKXtcclxuXHRcdFx0cmV0dXJuIHRoaXMuY2hhcnQuaXNSaWdodFRvTGVmdCgpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsMFNBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/bidi/axis2d/Default.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Areas.js":
/*!*****************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Areas.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Default */ \"./node_modules/dojox/charting/plot2d/Default.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Default){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Areas\", Default, {\r\n\t\t// summary:\r\n\t\t//\t\tRepresents an area chart.  See dojox/charting/plot2d/Default for details.\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for an Area chart.\r\n\t\t\tthis.opt.lines = true;\r\n\t\t\tthis.opt.areas = true;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0FyZWFzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL3Bsb3QyZC9BcmVhcy5qcz9lZGVjIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCIuL0RlZmF1bHRcIl0sIFxyXG4gIGZ1bmN0aW9uKGRlY2xhcmUsIERlZmF1bHQpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5BcmVhc1wiLCBEZWZhdWx0LCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0UmVwcmVzZW50cyBhbiBhcmVhIGNoYXJ0LiAgU2VlIGRvam94L2NoYXJ0aW5nL3Bsb3QyZC9EZWZhdWx0IGZvciBkZXRhaWxzLlxyXG5cdFx0Y29uc3RydWN0b3I6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFRoZSBjb25zdHJ1Y3RvciBmb3IgYW4gQXJlYSBjaGFydC5cclxuXHRcdFx0dGhpcy5vcHQubGluZXMgPSB0cnVlO1xyXG5cdFx0XHR0aGlzLm9wdC5hcmVhcyA9IHRydWU7XHJcblx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLG9UQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Areas.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Bars.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Bars.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"),\r\n\t__webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, fx, du, df, dfr){\r\n\t\t\r\n\t/*=====\r\n\tdeclare(\"dojox.charting.plot2d.__BarCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\r\n\t\t// summary:\r\n\t\t//\t\tAdditional keyword arguments for bar charts.\r\n\t\r\n\t\t// minBarSize: Number?\r\n\t\t//\t\tThe minimum size for a bar in pixels.  Default is 1.\r\n\t\tminBarSize: 1,\r\n\t\r\n\t\t// maxBarSize: Number?\r\n\t\t//\t\tThe maximum size for a bar in pixels.  Default is 1.\r\n\t\tmaxBarSize: 1,\r\n\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use for any series on the plot.\r\n\t\tstroke:\t\t{},\r\n\r\n\t\t// outline: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\r\n\t\toutline:\t{},\r\n\r\n\t\t// shadow: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\r\n\t\tshadow:\t\t{},\r\n\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tAny fill to be used for elements on the plot.\r\n\t\tfill:\t\t{},\r\n\r\n\t\t// filter: dojox.gfx.Filter?\r\n\t \t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\r\n\t \t//\t\tbe required for this to work.\r\n\t \tfilter:\t\t{},\r\n\r\n\t\t// styleFunc: Function?\r\n\t\t//\t\tA function that returns a styling object for the a given data item.\r\n\t\tstyleFunc:\tnull,\r\n\r\n\t\t// font: String?\r\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\r\n\t\tfont:\t\t\"\",\r\n\r\n\t\t// fontColor: String|dojo.Color?\r\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\r\n\t\tfontColor:\t\"\",\r\n\t\t\r\n\t\t// enableCache: Boolean?\r\n\t\t//\t\tWhether the bars rect are cached from one rendering to another. This improves the rendering performance of\r\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\r\n\t\tenableCache: false\r\n\t});\r\n\t=====*/\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\t\r\n\tvar alwaysFalse = function(){ return false; }\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Bars\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot object representing a bar chart (horizontal bars).\r\n\t\tdefaultParams: {\r\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\r\n\t\t\tanimate: null,   // animate bars into place\r\n\t\t\tenableCache: false\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tminBarSize:\t1,\t// minimal bar width in pixels\r\n\t\t\tmaxBarSize:\t1,\t// maximal bar width in pixels\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:\t    {},\r\n\t\t\tstyleFunc:  null,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a bar chart.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\r\n\t\t},\r\n\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\")), t;\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\r\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\t\t\r\n\t\tcreateRect: function(run, creator, params){\r\n\t\t\tvar rect;\r\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\r\n\t\t\t\trect = run._rectFreePool.pop();\r\n\t\t\t\trect.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(rect);\r\n\t\t\t}else{\r\n\t\t\t\trect = creator.createRect(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\trun._rectUsePool.push(rect);\r\n\t\t\t}\r\n\t\t\treturn rect;\r\n\t\t},\r\n\r\n\t\tcreateLabel: function(group, value, bbox, theme){\r\n\t\t\tif(this.opt.labels && this.opt.labelStyle == \"outside\"){\r\n\t\t\t\tvar y = bbox.y + bbox.height / 2;\r\n\t\t\t\tvar x = bbox.x + bbox.width + this.opt.labelOffset;\r\n\t\t\t\tthis.renderLabel(group, x, y, this._getLabel(isNaN(value.y)?value:value.y), theme, \"start\");\r\n          \t}else{\r\n\t\t\t\tthis.inherited(arguments);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Bars\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets); // dojox/charting/plot2d/Bars\r\n\t\t\t}\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tthis.resetEvents();\r\n\t\t\tvar s;\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tbaseline = Math.max(this._hScaler.bounds.lower,\r\n\t\t\t\t\tthis._hAxis ? this._hAxis.naturalBaseline : 0),\t\t\t\t\r\n\t\t\t\tbaselineWidth = ht(baseline),\r\n\t\t\t\tevents = this.events();\r\n\t\t\tvar bar = this.getBarProperties();\r\n\r\n\t\t\tvar actualLength = this.series.length;\r\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){actualLength--;}});\r\n\t\t\tvar z = actualLength;\r\n\t\t\t\r\n\t\t\t// Collect and calculate all values\r\n\t\t\tvar extractedValues = this.extractValues(this._vScaler);\r\n\t\t\textractedValues = this.rearrangeValues(extractedValues, ht, baselineWidth);\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(this.opt.enableCache){\r\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\r\n\t\t\t\t\trun._rectUsePool = [];\r\n\t\t\t\t}\r\n\t\t\t\tvar theme = t.next(\"bar\", [this.opt, run]);\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tz--;\r\n\r\n\t\t\t\tvar\teventSeries = new Array(run.data.length);\r\n\t\t\t\ts = run.group;\t\r\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\r\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\r\n\t\t\t\t});\r\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\r\n\t\t\t\t// data point to save time\r\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._vScaler.bounds.from - 1)):0;\r\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._vScaler.bounds.to)):run.data.length;\r\n\t\t\t\tfor(var j = min; j < max; ++j){\r\n\t\t\t\t\tvar value = run.data[j];\r\n\t\t\t\t\tif(!this.isNullValue(value)){\r\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\r\n\t\t\t\t\t\t\tw = extractedValues[i][j], finalTheme, sshape;\r\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\r\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\r\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"bar\", tMixin, true);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"bar\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(w && bar.height >= 1){\r\n\t\t\t\t\t\t\tvar rect = {\r\n\t\t\t\t\t\t\t\tx: offsets.l + baselineWidth + Math.min(w, 0),\r\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(val.x + 1.5) + bar.gap + bar.thickness * (actualLength - z - 1),\r\n\t\t\t\t\t\t\t\twidth: Math.abs(w),\r\n\t\t\t\t\t\t\t\theight: bar.height\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\r\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\r\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\r\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\r\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\r\n\t\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\t\tthis._animateBar(sshape, offsets.l + baselineWidth, -w);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\r\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\r\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\r\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\r\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\r\n\t\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"bar\",\r\n\t\t\t\t\t\t\t\t\tindex:   j,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\t\t\t\tshadow:\t sshape,\r\n\t\t\t\t\t\t\t\t\tcx:      val.y,\r\n\t\t\t\t\t\t\t\t\tcy:      val.x + 1.5,\r\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\r\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[j] = o;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\r\n\t\t\t\t\t\t\t\trect.x += ht(val.py);\r\n\t\t\t\t\t\t\t\trect.width -= ht(val.py);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateBar(shape, offsets.l + baselineWidth, -Math.abs(w));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bars\r\n\t\t},\r\n\t\tgetValue: function(value, j, seriesIndex, indexed){\r\n\t\t\tvar y, x;\r\n\t\t\tif(indexed){\r\n\t\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\t\ty = value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ty = value.y;\r\n\t\t\t\t}\r\n\t\t\t\tx = j;\r\n\t\t\t}else{\r\n\t\t\t\ty = value.y;\r\n\t\t\t\tx = value.x -1;\r\n\t\t\t}\r\n\t\t\treturn {y:y, x:x};\r\n\t\t},\r\n\t\textractValues: function(scaler){\r\n\t\t\tvar extracted = [];\r\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\r\n\t\t\t\t// data point to save time\r\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\r\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\r\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\r\n\t\t\t\t\textractedSet = extracted[i] = [];\r\n\t\t\t\textractedSet.min = min;\r\n\t\t\t\textractedSet.max = max;\r\n\t\t\t\tfor(var j = min; j < max; ++j){\r\n\t\t\t\t\tvar value = run.data[j];\r\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\r\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn extracted;\r\n\t\t},\r\n\t\trearrangeValues: function(values, transform, baseline){\r\n\t\t\t// transform to pixels\r\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\r\n\t\t\t\tvar extractedSet = values[i];\r\n\t\t\t\tif(extractedSet){\r\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\r\n\t\t\t\t\t\tvar value = extractedSet[j];\r\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\t\t},\r\n\t\tisNullValue: function(value){\r\n\t\t\tif(value === null || typeof value == \"undefined\"){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\r\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\r\n\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\treturn v(0.5) || h(value);\r\n\t\t\t}\r\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\r\n\t\t},\t\t\r\n\t\tgetBarProperties: function(){\r\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt);\r\n\t\t\treturn {gap: f.gap, height: f.size, thickness: 0};\r\n\t\t},\r\n\t\t_animateBar: function(shape, hoffset, hsize){\r\n\t\t\tif(hsize==0){\r\n\t\t\t\thsize = 1;\r\n\t\t\t}\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [hoffset - (hoffset/hsize), 0], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [1/hsize, 1], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Bars.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Base.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Base.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"),\r\n\t\t__webpack_require__(/*! ../Element */ \"./node_modules/dojox/charting/Element.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"), __webpack_require__(/*! ../axis2d/common */ \"./node_modules/dojox/charting/axis2d/common.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, arr, lang, gfx, Element, common, ac, has){\r\n/*=====\r\ndojox.charting.plot2d.__PlotCtorArgs = {\r\n\t// summary:\r\n\t//\t\tThe base keyword arguments object for plot constructors.\r\n\t//\t\tNote that the parameters for this may change based on the\r\n\t//\t\tspecific plot type (see the corresponding plot type for\r\n\t//\t\tdetails).\r\n\r\n\t// tooltipFunc: Function?\r\n\t//\t\tAn optional function used to compute tooltip text for this plot. It takes precedence over\r\n\t//\t\tthe default function when available.\r\n\t//\t|\t\tfunction tooltipFunc(o) { return \"text\"; }\r\n\t//\t\t`o`is the event object that triggered the tooltip.\r\n\ttooltipFunc: null\r\n};\r\n=====*/\r\n\tvar Base = declare(\"dojox.charting.plot2d.Base\", Element, {\r\n\t\t// summary:\r\n\t\t//\t\tBase class for all plot types.\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a base plot for charting.\r\n\t\t\t// chart: dojox/chart/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__PlotCtorArgs?\r\n\t\t\t//\t\tAn optional arguments object to help define the plot.\r\n\t\r\n\t\t\t// TODO does not work in markup\r\n\t\t\tif(kwArgs && kwArgs.tooltipFunc){\r\n\t\t\t\tthis.tooltipFunc = kwArgs.tooltipFunc;\r\n\t\t\t}\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear out all of the information tied to this plot.\r\n\t\t\t// returns: dojox.charting.plot2d.Base\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.series = [];\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\r\n\t\t},\r\n\t\tsetAxis: function(axis){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet an axis for this plot.\r\n\t\t\t// axis: dojox.charting.axis2d.Base\r\n\t\t\t//\t\tThe axis to set.\r\n\t\t\t// returns: dojox/charting/plot2d/Base\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\r\n\t\t},\r\n\t\tassignAxes: function(axes){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFrom an array of axes pick the ones that correspond to this plot and\r\n\t\t\t//\t\tassign them to the plot using setAxis method.\r\n\t\t\t// axes: Array\r\n\t\t\t//\t\tAn array of dojox/charting/axis2d/Base\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tarr.forEach(this.axes, function(axis){\r\n\t\t\t\tif(this[axis]){\r\n\t\t\t\t\tthis.setAxis(axes[this[axis]]);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\t\taddSeries: function(run){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a data series to this plot.\r\n\t\t\t// run: dojox.charting.Series\r\n\t\t\t//\t\tThe series to be added.\r\n\t\t\t// returns: dojox/charting/plot2d/Base\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.series.push(run);\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\r\n\t\t},\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\treturn common.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\r\n\t\t},\r\n\t\tcalculateAxes: function(dim){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function for running the axis calculations (deprecated).\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }\r\n\t\t\t// returns: dojox/charting/plot2d/Base\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.initializeScalers(dim, this.getSeriesStats());\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\r\n\t\t},\r\n\t\tinitializeScalers: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDoes nothing.\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tisDataDirty: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns whether or not any of this plot's data series need to be rendered.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tFlag indicating if any of this plot's series are invalid and need rendering.\r\n\t\t\treturn arr.some(this.series, function(item){ return item.dirty; });\t//\tBoolean\r\n\t\t},\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender the plot on the chart.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/plot2d/Base\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Base\r\n\t\t},\r\n\t\trenderLabel: function(group, x, y, label, theme, block, align){\r\n\t\t\tvar elem = ac.createText[this.opt.htmlLabels && gfx.renderer != \"vml\" ? \"html\" : \"gfx\"]\r\n\t\t\t\t(this.chart, group, x, y, align?align:\"middle\", label, theme.series.font, theme.series.fontColor);\r\n\t\t\t// if the label is inside we need to avoid catching events on it this would prevent action on\r\n\t\t\t// chart elements\r\n\t\t\tif(block){\r\n\t\t\t\t// TODO this won't work in IE neither in VML nor in HTML\r\n\t\t\t\t// a solution would be to catch the event on the label and refire it to the element\r\n\t\t\t\t// possibly using elementFromPoint or having it already available\r\n\t\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\r\n\t\t\t\t\t// we have HTML labels, let's use pointEvents on the HTML node\r\n\t\t\t\t\telem.style.pointerEvents = \"none\";\r\n\t\t\t\t}else if(elem.rawNode){\r\n\t\t\t\t\t// we have SVG labels, let's use pointerEvents on the SVG or VML node\r\n\t\t\t\t\telem.rawNode.style.pointerEvents = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\t// else we have Canvas, we need do nothing, as Canvas text won't catch events\r\n\t\t\t}\r\n\t\t\tif(this.opt.htmlLabels && gfx.renderer != \"vml\"){\r\n\t\t\t\tthis.htmlElements.push(elem);\r\n\t\t\t}\r\n\r\n\t\t\treturn elem;\r\n\t\t},\r\n\t\tgetRequiredColors: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet how many data series we have, so we know how many colors to use.\r\n\t\t\t// returns: Number\r\n\t\t\t//\t\tThe number of colors needed.\r\n\t\t\treturn this.series.length;\t//\tNumber\r\n\t\t},\r\n\t\t_getLabel: function(number){\r\n\t\t\treturn common.getLabel(number, this.opt.fixed, this.opt.precision);\r\n\t\t}\r\n\t});\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tBase.extend({\r\n\t\t\t_checkOrientation: function(group, dim, offsets){\r\n\t\t\t\tthis.chart.applyMirroring(this.group, dim, offsets);\r\n\t\t\t}\t\t\r\n\t\t});\r\n\t}\r\n\treturn Base;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Base.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Bubble.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Bubble.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), \r\n\t\t__webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\"),\r\n\t\t__webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Bubble\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tA plot representing bubbles.  Note that data for Bubbles requires 3 parameters,\r\n\t\t//\t\tin the form of:  { x, y, size }, where size determines the size of the bubble.\r\n\t\tdefaultParams: {\r\n\t\t\tanimate: null   // animate bars into place\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc:\tnull,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\",\r\n\t\t\tlabelFunc: null\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a plot of bubbles.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\r\n\t\t\t//\t\tOptional keyword arguments object to help define plot parameters.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tif(!this.opt.labelFunc){\r\n\t\t\t\tthis.opt.labelFunc = function(value, fixed, precision){\r\n\t\t\t\t\treturn this._getLabel(value.size, fixed, precision);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\t//\toverride the render so that we are plotting only circles.\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Bubble\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tvar s;\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\r\n\t\t\tvar t = this.chart.theme,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tevents = this.events();\r\n\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(!run.data.length){\r\n\t\t\t\t\trun.dirty = false;\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof run.data[0] == \"number\"){\r\n\t\t\t\t\tconsole.warn(\"dojox.charting.plot2d.Bubble: the data in the following series cannot be rendered as a bubble chart; \", run);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar theme = t.next(\"circle\", [this.opt, run]),\r\n\t\t\t\t\tpoints = arr.map(run.data, function(v){\r\n\t\t\t\t\t\treturn v ? {\r\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\r\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\r\n\t\t\t\t\t\t\tradius: this._vScaler.bounds.scale * (v.size / 2)\r\n\t\t\t\t\t\t} : null;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ts = run.group;\r\n                \r\n\t\t\t\tvar frontCircles = null, outlineCircles = null, shadowCircles = null, styleFunc = this.opt.styleFunc;\r\n\r\n\t\t\t\tvar getFinalTheme = function(item){\r\n\t\t\t\t\tif(styleFunc){\r\n\t\t\t\t\t\treturn t.addMixin(theme, \"circle\", [item, styleFunc(item)], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn t.addMixin(theme, \"circle\", item, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// make shadows if needed\r\n\t\t\t\tif(theme.series.shadow){\r\n\t\t\t\t\tshadowCircles = arr.map(points, function(item, i){\r\n\t\t\t\t\t\tif(!this.isNullValue(item)){\r\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\r\n\t\t\t\t\t\t\t\tshadow = finalTheme.series.shadow;\r\n\t\t\t\t\t\t\tvar shape = s.createCircle({\r\n\t\t\t\t\t\t\t\tcx: item.x + shadow.dx, cy: item.y + shadow.dy, r: item.radius\r\n\t\t\t\t\t\t\t}).setStroke(shadow).setFill(shadow.color);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn shape;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tif(shadowCircles.length){\r\n\t\t\t\t\t\trun.dyn.shadow = shadowCircles[shadowCircles.length - 1].getStroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// make outlines if needed\r\n\t\t\t\tif(theme.series.outline){\r\n\t\t\t\t\toutlineCircles = arr.map(points, function(item, i){\r\n\t\t\t\t\t\tif(!this.isNullValue(item)){\r\n\t\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\r\n\t\t\t\t\t\t\t\toutline = dc.makeStroke(finalTheme.series.outline);\r\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (theme.series.stroke && theme.series.stroke.width || 0);\r\n\t\t\t\t\t\t\tvar shape = s.createCircle({\r\n\t\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\r\n\t\t\t\t\t\t\t}).setStroke(outline);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn shape;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tif(outlineCircles.length){\r\n\t\t\t\t\t\trun.dyn.outline = outlineCircles[outlineCircles.length - 1].getStroke();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\trun through the data and add the circles.\r\n\t\t\t\tfrontCircles = arr.map(points, function(item, i){\r\n\t\t\t\t\tif(!this.isNullValue(item)){\r\n\t\t\t\t\t\tvar finalTheme = getFinalTheme(run.data[i]),\r\n\t\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\t\tx: item.x - item.radius,\r\n\t\t\t\t\t\t\t\ty: item.y - item.radius,\r\n\t\t\t\t\t\t\t\twidth:  2 * item.radius,\r\n\t\t\t\t\t\t\t\theight: 2 * item.radius\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\r\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\r\n\t\t\t\t\t\tvar shape = s.createCircle({\r\n\t\t\t\t\t\t\tcx: item.x, cy: item.y, r: item.radius\r\n\t\t\t\t\t\t}).setFill(specialFill).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\r\n\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateBubble(shape, dim.height - offsets.b, item.radius);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.createLabel(s, run.data[i], rect, finalTheme);\r\n\t\t\t\t\t\treturn shape;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}, this);\r\n\t\t\t\tif(frontCircles.length){\r\n\t\t\t\t\trun.dyn.fill   = frontCircles[frontCircles.length - 1].getFill();\r\n\t\t\t\t\trun.dyn.stroke = frontCircles[frontCircles.length - 1].getStroke();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(events){\r\n\t\t\t\t\tvar eventSeries = new Array(frontCircles.length);\r\n\t\t\t\t\tarr.forEach(frontCircles, function(s, i){\r\n\t\t\t\t\t\tif(s !== null){\r\n\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\telement: \"circle\",\r\n\t\t\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\tshape:   s,\r\n\t\t\t\t\t\t\t\toutline: outlineCircles && outlineCircles[i] || null,\r\n\t\t\t\t\t\t\t\tshadow:  shadowCircles && shadowCircles[i] || null,\r\n\t\t\t\t\t\t\t\tx:       run.data[i].x,\r\n\t\t\t\t\t\t\t\ty:       run.data[i].y,\r\n\t\t\t\t\t\t\t\tr:       run.data[i].size / 2,\r\n\t\t\t\t\t\t\t\tcx:      points[i].x,\r\n\t\t\t\t\t\t\t\tcy:      points[i].y,\r\n\t\t\t\t\t\t\t\tcr:      points[i].radius\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete this._eventSeries[run.name];\r\n\t\t\t\t}\r\n\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Bubble\r\n\t\t},\r\n\t\t_animateBubble: function(shape, offset, size){\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [0, 1/size], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Bubble.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Candlesticks.js":
/*!************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Candlesticks.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"),\r\n\t\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\r\n\t//\tas values in a series:\r\n\t//\t{ x?, open, close, high, low, mid? }\r\n\t//\tif x is not provided, the array index is used.\r\n\t//\tfailing to provide the OHLC values will throw an error.\r\n\treturn declare(\"dojox.charting.plot2d.Candlesticks\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tA plot that represents typical candlesticks (financial reporting, primarily).\r\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\r\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\r\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\r\n\t\t//\t\tdata array is used.\r\n\t\tdefaultParams: {\r\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\r\n\t\t\tanimate: null   // animate bars into place\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tminBarSize:\t1,\t// minimal candle width in pixels\r\n\t\t\tmaxBarSize:\t1,\t// maximal candle width in pixels\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a candlestick chart.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\tcollectStats: function(series){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\r\n\t\t\t//\t\tfunctionality only assumes x and y, Candlesticks must create it's own\r\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\r\n\t\t\t// series: dojox.charting.Series[]\r\n\t\t\t//\t\tThe data series array to be drawn on this plot.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\r\n\r\n\t\t\t//\twe have to roll our own, since we need to use all four passed\r\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\r\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\r\n\t\t\tfor(var i=0; i<series.length; i++){\r\n\t\t\t\tvar run = series[i];\r\n\t\t\t\tif(!run.data.length){ continue; }\r\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\r\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\r\n\t\t\t\t\t\tif(!this.isNullValue(val)){\r\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\r\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\r\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t}\r\n\t\t\treturn stats;\t//\tObject\r\n\t\t},\r\n\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = this.collectStats(this.series);\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Candlesticks\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tvar s;\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme, f, gap, width,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tevents = this.events();\r\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\r\n\t\t\tgap = f.gap;\r\n\t\t\twidth = f.size;\r\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]),\r\n\t\t\t\t\teventSeries = new Array(run.data.length);\r\n\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\trun.dyn.stroke =  theme.series.stroke;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ts = run.group;\r\n                \r\n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\r\n\t\t\t\t\tvar v = run.data[j];\r\n\t\t\t\t\tif(!this.isNullValue(v)){\r\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\r\n\r\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\r\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\r\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\r\n\t\t\t\t\t\t\topen = vt(v.open),\r\n\t\t\t\t\t\t\tclose = vt(v.close),\r\n\t\t\t\t\t\t\thigh = vt(v.high),\r\n\t\t\t\t\t\t\tlow = vt(v.low);\r\n\t\t\t\t\t\tif(\"mid\" in v){\r\n\t\t\t\t\t\t\tvar mid = vt(v.mid);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(low > high){\r\n\t\t\t\t\t\t\tvar tmp = high;\r\n\t\t\t\t\t\t\thigh = low;\r\n\t\t\t\t\t\t\tlow = tmp;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(width >= 1){\r\n\t\t\t\t\t\t\t//\tdraw the line and rect, set up as a group and pass that to the events.\r\n\t\t\t\t\t\t\tvar doFill = open > close;\r\n\t\t\t\t\t\t\tvar line = { x1: width/2, x2: width/2, y1: y - high, y2: y - low },\r\n\t\t\t\t\t\t\t\trect = {\r\n\t\t\t\t\t\t\t\t\tx: 0, y: y-Math.max(open, close),\r\n\t\t\t\t\t\t\t\t\twidth: width, height: Math.max(doFill ? open-close : close-open, 1)\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tvar shape = s.createGroup();\r\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0 });\r\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\r\n\t\t\t\t\t\t\tinner.createLine(line).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tinner.createRect(rect).setStroke(finalTheme.series.stroke).\r\n\t\t\t\t\t\t\t\tsetFill(doFill ? finalTheme.series.fill : \"white\");\r\n\t\t\t\t\t\t\tif(\"mid\" in v){\r\n\t\t\t\t\t\t\t\t//\tadd the mid line.\r\n\t\t\t\t\t\t\t\tinner.createLine({\r\n\t\t\t\t\t\t\t\t\t\tx1: (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1), x2: width - (finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1),\r\n\t\t\t\t\t\t\t\t\ty1: y - mid, y2: y - mid\r\n\t\t\t\t\t\t\t\t}).setStroke(doFill ? \"white\" : finalTheme.series.stroke);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// TODO: double check this.\r\n\t\t\t\t\t\t\trun.dyn.fill   = finalTheme.series.fill;\r\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\r\n\t\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\r\n\t\t\t\t\t\t\t\t\tindex:   j,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:   inner,\r\n\t\t\t\t\t\t\t\t\tx:       x,\r\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\r\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\r\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(doFill ? open-close : close-open, 1)/2),\r\n\t\t\t\t\t\t\t\t\twidth:\t width,\r\n\t\t\t\t\t\t\t\t\theight:  Math.max(doFill ? open-close : close-open, 1),\r\n\t\t\t\t\t\t\t\t\tdata:\t v\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[j] = o;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateCandlesticks(shape, y - low, high - low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Candlesticks\r\n\t\t},\r\n\r\n\t\ttooltipFunc: function(o){\r\n\t\t\treturn '<table cellpadding=\"1\" cellspacing=\"0\" border=\"0\" style=\"font-size:0.9em;\">'\r\n\t\t\t\t\t\t+ '<tr><td>Open:</td><td align=\"right\"><strong>' + o.data.open + '</strong></td></tr>'\r\n\t\t\t\t\t\t+ '<tr><td>High:</td><td align=\"right\"><strong>' + o.data.high + '</strong></td></tr>'\r\n\t\t\t\t\t\t+ '<tr><td>Low:</td><td align=\"right\"><strong>' + o.data.low + '</strong></td></tr>'\r\n\t\t\t\t\t\t+ '<tr><td>Close:</td><td align=\"right\"><strong>' + o.data.close + '</strong></td></tr>'\r\n\t\t\t\t\t\t+ (o.data.mid !== undefined ? '<tr><td>Mid:</td><td align=\"right\"><strong>' + o.data.mid + '</strong></td></tr>' : '')\r\n\t\t\t\t\t\t+ '</table>';\r\n\t\t},\r\n\r\n\t\t_animateCandlesticks: function(shape, voffset, vsize){\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Candlesticks.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/CartesianBase.js":
/*!*************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/CartesianBase.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"),\r\n\t\t__webpack_require__(/*! ./Base */ \"./node_modules/dojox/charting/plot2d/Base.js\"), __webpack_require__(/*! ../scaler/primitive */ \"./node_modules/dojox/charting/scaler/primitive.js\"), __webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, hub, has, Base, primitive, gfx, fx, du){\r\n\t/*=====\r\n\tdeclare(\"dojox.charting.plot2d.__CartesianCtorArgs\", dojox.charting.plot2d.__PlotCtorArgs, {\r\n\t\t// hAxis: String?\r\n\t\t//\t\tThe horizontal axis name.\r\n\t\thAxis: \"x\",\r\n\r\n\t\t// vAxis: String?\r\n\t\t//\t\tThe vertical axis name\r\n\t\tvAxis: \"y\",\r\n\r\n\t\t// labels: Boolean?\r\n\t\t//\t\tFor plots that support labels, whether or not to draw labels for each data item.  Default is false.\r\n\t\tlabels:\t\t\tfalse,\r\n\r\n\t\t// fixed: Boolean?\r\n        //\t\tWhether a fixed precision must be applied to data values for display. Default is true.\r\n\t\tfixed:\t\t\ttrue,\r\n\r\n\t\t// precision: Number?\r\n        //\t\tThe precision at which to round data values for display. Default is 0.\r\n\t\tprecision:\t\t1,\r\n\r\n\t\t// labelOffset: Number?\r\n\t\t//\t\tThe amount in pixels by which to offset labels when using \"outside\" labelStyle.  Default is 10.\r\n\t\tlabelOffset:\t10,\r\n\r\n\t\t// labelStyle: String?\r\n\t\t//\t\tOptions as to where to draw labels.  This must be either \"inside\" or \"outside\". By default\r\n\t\t//      the labels are drawn \"inside\" the shape representing the data point (a column rectangle for a Columns plot\r\n\t\t//      or a marker for a Line plot for instance). When \"outside\" is used the labels are drawn above the data point shape.\r\n\t\tlabelStyle:\t\t\"inside\",\r\n\r\n\t\t// htmlLabels: Boolean?\r\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\r\n\t\thtmlLabels:\t\ttrue,\r\n\r\n\t\t// omitLabels: Boolean?\r\n\t\t//\t\tWhether labels that do not fit in an item render are omitted or not.\tThis applies only when labelStyle\r\n\t\t//\t\tis \"inside\".\tDefault is false.\r\n\t\tomitLabels: true,\r\n\r\n\t\t// labelFunc: Function?\r\n\t\t//\t\tAn optional function to use to compute label text. It takes precedence over\r\n\t\t//\t\tthe default text when available.\r\n\t\t//\t|\t\tfunction labelFunc(value, fixed, precision) {}\r\n\t\t//\t\t`value` is the data value to display\r\n\t\t//\t\t`fixed` is true if fixed precision must be applied.\r\n\t\t//\t\t`precision` is the requested precision to be applied.\r\n\t\tlabelFunc: null\r\n\t});\r\n\t=====*/\r\n\r\n\tvar alwaysFalse = function(){ return false; }\r\n\r\n\treturn declare(\"dojox.charting.plot2d.CartesianBase\", Base, {\r\n\t\tbaseParams: {\r\n\t\t\thAxis: \t\t\t\"x\",\r\n\t\t\tvAxis: \t\t\t\"y\",\r\n\t\t\tlabels:\t\t\tfalse,\r\n\t\t\tlabelOffset:    10,\r\n\t\t\tfixed:\t\t\ttrue,\r\n\t\t\tprecision:\t\t1,\r\n\t\t\tlabelStyle:\t\t\"inside\",\r\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\r\n\t\t\tomitLabels:\t\ttrue,\r\n\t\t\tlabelFunc:\t\tnull\r\n        },\r\n\r\n\t\t// summary:\r\n\t\t//\t\tBase class for cartesian plot types.\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a cartesian base plot for cartesian charts.\r\n\t\t\t// chart: dojox/chart/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__CartesianCtorArgs?\r\n\t\t\t//\t\tAn optional arguments object to help define the plot.\r\n\t\t\tthis.axes = [\"hAxis\", \"vAxis\"];\r\n\t\t\tthis.zoom = null;\r\n\t\t\tthis.zoomQueue = [];\t// zooming action task queue\r\n\t\t\tthis.lastWindow = {vscale: 1, hscale: 1, xoffset: 0, yoffset: 0};\r\n\t\t\tthis.hAxis = (kwArgs && kwArgs.hAxis) || \"x\";\r\n\t\t\tthis.vAxis = (kwArgs && kwArgs.vAxis) || \"y\";\r\n\t\t\tthis.series = [];\r\n\t\t\tthis.opt = lang.clone(this.baseParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear out all of the information tied to this plot.\r\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._hAxis = null;\r\n\t\t\tthis._vAxis = null;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\r\n\t\t},\r\n\t\tcleanGroup: function(creator, noClip){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(!noClip && this.chart._nativeClip){\r\n\t\t\t\tvar offsets = this.chart.offsets, dim = this.chart.dim;\r\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\r\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\r\n\t\t\t\tthis.group.setClip({ x: offsets.l, y: offsets.t, width: w, height: h });\r\n\t\t\t\tif(!this._clippedGroup){\r\n\t\t\t\t\tthis._clippedGroup = this.group.createGroup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tpurgeGroup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._clippedGroup = null;\r\n\t\t},\r\n\t\tgetGroup: function(){\r\n\t\t\treturn this._clippedGroup || this.group;\r\n\t\t},\r\n\t\tsetAxis: function(axis){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet an axis for this plot.\r\n\t\t\t// axis: dojox/charting/axis2d/Base\r\n\t\t\t//\t\tThe axis to set.\r\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(axis){\r\n\t\t\t\tthis[axis.vertical ? \"_vAxis\" : \"_hAxis\"] = axis;\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\r\n\t\t},\r\n\t\ttoPage: function(coord){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompute page coordinates from plot axis data coordinates.\r\n\t\t\t// coord: Object?\r\n\t\t\t//\t\tThe coordinates in plot axis data coordinate space. For cartesian charts that is of the following form:\r\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\r\n\t\t\t//\t\tIf not provided return the transform method instead of the result of the transformation.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe resulting page pixel coordinates. That is of the following form:\r\n\t\t\t//\t\t`{ x: 50, y: 200 }`\r\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\r\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\r\n\t\t\t\tth = sh.scaler.getTransformerFromModel(sh),\r\n\t\t\t\ttv = sv.scaler.getTransformerFromModel(sv),\r\n\t\t\t\tc = this.chart.getCoords(),\r\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\r\n\t\t\tvar t = function(coord){\r\n\t\t\t\tvar r = {};\r\n\t\t\t\tr.x = th(coord[ah.name]) + c.x + o.l;\r\n\t\t\t\tr.y = c.y + dim.height - o.b - tv(coord[av.name]);\r\n\t\t\t\treturn r;\r\n\t\t\t};\r\n\t\t\t// if no coord return the function so that we can capture the current transforms\r\n\t\t\t// and reuse them later on\r\n\t\t\treturn coord?t(coord):t; // Object\r\n\t\t},\r\n\t\ttoData: function(coord){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCompute plot axis data coordinates from page coordinates.\r\n\t\t\t// coord: Object\r\n\t\t\t//\t\tThe pixel coordinate in page coordinate space. That is of the following form:\r\n\t\t\t//\t\t`{ x: 50, y: 200 }`\r\n\t\t\t//\t\tIf not provided return the tranform method instead of the result of the transformation.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tThe resulting plot axis data coordinates. For cartesian charts that is of the following form:\r\n\t\t\t//\t\t`{ hAxisName: 50, vAxisName: 200 }`\r\n\t\t\tvar ah = this._hAxis, av = this._vAxis,\r\n\t\t\t\tsh = ah.getScaler(), sv = av.getScaler(),\r\n\t\t\t\tth = sh.scaler.getTransformerFromPlot(sh),\r\n\t\t\t\ttv = sv.scaler.getTransformerFromPlot(sv),\r\n\t\t\t\tc = this.chart.getCoords(),\r\n\t\t\t\to = this.chart.offsets, dim = this.chart.dim;\r\n\t\t\tvar t = function(coord){\r\n\t\t\t\tvar r = {};\r\n\t\t\t\tr[ah.name] = th(coord.x - c.x - o.l);\r\n\t\t\t\tr[av.name] = tv(c.y + dim.height - coord.y  - o.b);\r\n\t\t\t\treturn r;\r\n\t\t\t};\r\n\t\t\t// if no coord return the function so that we can capture the current transforms\r\n\t\t\t// and reuse them later on\r\n\t\t\treturn coord?t(coord):t; // Object\r\n\t\t},\r\n\t\tisDirty: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns whether or not this plot needs to be rendered.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tThe state of the plot.\r\n\t\t\treturn this.dirty || this._hAxis && this._hAxis.dirty || this._vAxis && this._vAxis.dirty;\t//\tBoolean\r\n\t\t},\r\n\t\tcreateLabel: function(group, value, bbox, theme){\r\n\t\t\tif(this.opt.labels){\r\n\t\t\t\tvar x, y, label = this.opt.labelFunc?this.opt.labelFunc.apply(this, [value, this.opt.fixed, this.opt.precision]):\r\n\t\t\t\t\tthis._getLabel(isNaN(value.y)?value:value.y);\r\n\t\t\t\tif(this.opt.labelStyle == \"inside\"){\r\n\t\t\t\t\tvar lbox = gfx._base._getTextBox(label, { font: theme.series.font } );\r\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\r\n\t\t\t\t\ty = bbox.y + bbox.height / 2 + lbox.h / 4;\r\n\t\t\t\t\tif(lbox.w > bbox.width || lbox.h > bbox.height){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t\tx = bbox.x + bbox.width / 2;\r\n\t\t\t\t\ty = bbox.y - this.opt.labelOffset;\r\n\t\t\t\t}\r\n\t\t\t\tthis.renderLabel(group, x, y, label, theme, this.opt.labelStyle == \"inside\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tperformZoom: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate/alter any zooming windows on this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\r\n\t\t\t// get current zooming various\r\n\t\t\tvar vs = this._vAxis.scale || 1,\r\n\t\t\t\ths = this._hAxis.scale || 1,\r\n\t\t\t\tvOffset = dim.height - offsets.b,\r\n\t\t\t\thBounds = this._hScaler.bounds,\r\n\t\t\t\txOffset = (hBounds.from - hBounds.lower) * hBounds.scale,\r\n\t\t\t\tvBounds = this._vScaler.bounds,\r\n\t\t\t\tyOffset = (vBounds.from - vBounds.lower) * vBounds.scale,\r\n\t\t\t\t// get incremental zooming various\r\n\t\t\t\trVScale = vs / this.lastWindow.vscale,\r\n\t\t\t\trHScale = hs / this.lastWindow.hscale,\r\n\t\t\t\trXOffset = (this.lastWindow.xoffset - xOffset)/\r\n\t\t\t\t\t((this.lastWindow.hscale == 1)? hs : this.lastWindow.hscale),\r\n\t\t\t\trYOffset = (yOffset - this.lastWindow.yoffset)/\r\n\t\t\t\t\t((this.lastWindow.vscale == 1)? vs : this.lastWindow.vscale),\r\n\r\n\t\t\t\tshape = this.getGroup(),\r\n\t\t\t\tanim = fx.animateTransform(lang.delegate({\r\n\t\t\t\t\tshape: shape,\r\n\t\t\t\t\tduration: 1200,\r\n\t\t\t\t\ttransform:[\r\n\t\t\t\t\t\t{name:\"translate\", start:[0, 0], end: [offsets.l * (1 - rHScale), vOffset * (1 - rVScale)]},\r\n\t\t\t\t\t\t{name:\"scale\", start:[1, 1], end: [rHScale, rVScale]},\r\n\t\t\t\t\t\t{name:\"original\"},\r\n\t\t\t\t\t\t{name:\"translate\", start: [0, 0], end: [rXOffset, rYOffset]}\r\n\t\t\t\t\t]}, this.zoom));\r\n\r\n\t\t\tlang.mixin(this.lastWindow, {vscale: vs, hscale: hs, xoffset: xOffset, yoffset: yOffset});\r\n\t\t\t//add anim to zooming action queue,\r\n\t\t\t//in order to avoid several zooming action happened at the same time\r\n\t\t\tthis.zoomQueue.push(anim);\r\n\t\t\t//perform each anim one by one in zoomQueue\r\n\t\t\thub.connect(anim, \"onEnd\", this, function(){\r\n\t\t\t\tthis.zoom = null;\r\n\t\t\t\tthis.zoomQueue.shift();\r\n\t\t\t\tif(this.zoomQueue.length > 0){\r\n\t\t\t\t\tthis.zoomQueue[0].play();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(this.zoomQueue.length == 1){\r\n\t\t\t\tthis.zoomQueue[0].play();\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\r\n\t\t},\r\n\t\tinitializeScalers: function(dim, stats){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInitializes scalers using attached axes.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tSize of a plot area in pixels as {width, height}.\r\n\t\t\t// stats: Object\r\n\t\t\t//\t\tMin/max of data in both directions as {hmin, hmax, vmin, vmax}.\r\n\t\t\t// returns: dojox/charting/plot2d/CartesianBase\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this._hAxis){\r\n\t\t\t\tif(!this._hAxis.initialized()){\r\n\t\t\t\t\tthis._hAxis.calculate(stats.hmin, stats.hmax, dim.width);\r\n\t\t\t\t}\r\n\t\t\t\tthis._hScaler = this._hAxis.getScaler();\r\n\t\t\t}else{\r\n\t\t\t\tthis._hScaler = primitive.buildScaler(stats.hmin, stats.hmax, dim.width);\r\n\t\t\t}\r\n\t\t\tif(this._vAxis){\r\n\t\t\t\tif(!this._vAxis.initialized()){\r\n\t\t\t\t\tthis._vAxis.calculate(stats.vmin, stats.vmax, dim.height);\r\n\t\t\t\t}\r\n\t\t\t\tthis._vScaler = this._vAxis.getScaler();\r\n\t\t\t}else{\r\n\t\t\t\tthis._vScaler = primitive.buildScaler(stats.vmin, stats.vmax, dim.height);\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/CartesianBase\r\n\t\t},\r\n\t\tisNullValue: function(value){\r\n\t\t\tif(value === null || typeof value == \"undefined\"){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\r\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\r\n\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\treturn h(1) || v(value);\r\n\t\t\t}\r\n\t\t\treturn h(isNaN(value.x) ? 1 : value.x) || value.y === null || v(value.y);\r\n\t\t}\t\t\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/CartesianBase.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/ClusteredBars.js":
/*!*************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/ClusteredBars.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! ./Bars */ \"./node_modules/dojox/charting/plot2d/Bars.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, array, Bars, dc){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.ClusteredBars\", Bars, {\r\n\t\t// summary:\r\n\t\t//\t\tA plot representing grouped or clustered bars (horizontal bars)\r\n\t\tgetBarProperties: function(){\r\n\t\t\tvar length = this.series.length;\r\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\r\n\t\t\tvar f = dc.calculateBarSize(this._vScaler.bounds.scale, this.opt, length);\r\n\t\t\treturn {gap: f.gap, height: f.size, thickness: f.size};\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0NsdXN0ZXJlZEJhcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0NsdXN0ZXJlZEJhcnMuanM/NDQ1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9kZWNsYXJlXCIsIFwiZG9qby9fYmFzZS9hcnJheVwiLCBcIi4vQmFyc1wiLCBcIi4vY29tbW9uXCJdLCBcclxuXHRmdW5jdGlvbihkZWNsYXJlLCBhcnJheSwgQmFycywgZGMpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5DbHVzdGVyZWRCYXJzXCIsIEJhcnMsIHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRBIHBsb3QgcmVwcmVzZW50aW5nIGdyb3VwZWQgb3IgY2x1c3RlcmVkIGJhcnMgKGhvcml6b250YWwgYmFycylcclxuXHRcdGdldEJhclByb3BlcnRpZXM6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdHZhciBsZW5ndGggPSB0aGlzLnNlcmllcy5sZW5ndGg7XHJcblx0XHRcdGFycmF5LmZvckVhY2godGhpcy5zZXJpZXMsIGZ1bmN0aW9uKHNlcmllKXtpZihzZXJpZS5oaWRkZW4pe2xlbmd0aC0tO319KTtcclxuXHRcdFx0dmFyIGYgPSBkYy5jYWxjdWxhdGVCYXJTaXplKHRoaXMuX3ZTY2FsZXIuYm91bmRzLnNjYWxlLCB0aGlzLm9wdCwgbGVuZ3RoKTtcclxuXHRcdFx0cmV0dXJuIHtnYXA6IGYuZ2FwLCBoZWlnaHQ6IGYuc2l6ZSwgdGhpY2tuZXNzOiBmLnNpemV9O1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSx3ZEFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/ClusteredBars.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/ClusteredColumns.js":
/*!****************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/ClusteredColumns.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! ./Columns */ \"./node_modules/dojox/charting/plot2d/Columns.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, array, Columns, dc){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.ClusteredColumns\", Columns, {\r\n\t\t// summary:\r\n\t\t//\t\tA plot representing grouped or clustered columns (vertical bars)\r\n\t\tgetBarProperties: function(){\r\n\t\t\tvar length = this.series.length;\r\n\t\t\tarray.forEach(this.series, function(serie){if(serie.hidden){length--;}});\r\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt, length);\r\n\t\t\treturn {gap: f.gap, width: f.size, thickness: f.size, clusterSize: length};\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0NsdXN0ZXJlZENvbHVtbnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0NsdXN0ZXJlZENvbHVtbnMuanM/NWVkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9kZWNsYXJlXCIsIFwiZG9qby9fYmFzZS9hcnJheVwiLCBcIi4vQ29sdW1uc1wiLCBcIi4vY29tbW9uXCJdLCBcclxuXHRmdW5jdGlvbihkZWNsYXJlLCBhcnJheSwgQ29sdW1ucywgZGMpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5DbHVzdGVyZWRDb2x1bW5zXCIsIENvbHVtbnMsIHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRBIHBsb3QgcmVwcmVzZW50aW5nIGdyb3VwZWQgb3IgY2x1c3RlcmVkIGNvbHVtbnMgKHZlcnRpY2FsIGJhcnMpXHJcblx0XHRnZXRCYXJQcm9wZXJ0aWVzOiBmdW5jdGlvbigpe1xyXG5cdFx0XHR2YXIgbGVuZ3RoID0gdGhpcy5zZXJpZXMubGVuZ3RoO1xyXG5cdFx0XHRhcnJheS5mb3JFYWNoKHRoaXMuc2VyaWVzLCBmdW5jdGlvbihzZXJpZSl7aWYoc2VyaWUuaGlkZGVuKXtsZW5ndGgtLTt9fSk7XHJcblx0XHRcdHZhciBmID0gZGMuY2FsY3VsYXRlQmFyU2l6ZSh0aGlzLl9oU2NhbGVyLmJvdW5kcy5zY2FsZSwgdGhpcy5vcHQsIGxlbmd0aCk7XHJcblx0XHRcdHJldHVybiB7Z2FwOiBmLmdhcCwgd2lkdGg6IGYuc2l6ZSwgdGhpY2tuZXNzOiBmLnNpemUsIGNsdXN0ZXJTaXplOiBsZW5ndGh9O1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSw4ZEFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/ClusteredColumns.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Columns.js":
/*!*******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Columns.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"),\r\n\t\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\tvar alwaysFalse = function(){ return false; };\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Columns\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot object representing a column chart (vertical bars).\r\n\t\tdefaultParams: {\r\n\t\t\tgap:\t0,\t\t// gap between columns in pixels\r\n\t\t\tanimate: null,  // animate bars into place\r\n\t\t\tenableCache: false\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tminBarSize:\t1,\t// minimal column width in pixels\r\n\t\t\tmaxBarSize:\t1,\t// maximal column width in pixels\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc:  null,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a columns chart.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t\tthis.renderingOptions = { \"shape-rendering\": \"crispEdges\" };\r\n\t\t},\r\n\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = dc.collectSimpleStats(this.series, lang.hitch(this, \"isNullValue\"));\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\tcreateRect: function(run, creator, params){\r\n\t\t\tvar rect;\r\n\t\t\tif(this.opt.enableCache && run._rectFreePool.length > 0){\r\n\t\t\t\trect = run._rectFreePool.pop();\r\n\t\t\t\trect.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(rect);\r\n\t\t\t}else{\r\n\t\t\t\trect = creator.createRect(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\trun._rectUsePool.push(rect);\r\n\t\t\t}\r\n\t\t\treturn rect;\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Columns\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tvar s;\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tbaseline = Math.max(this._vScaler.bounds.lower,\r\n\t\t\t\t\tthis._vAxis ? this._vAxis.naturalBaseline : 0),\r\n\t\t\t\tbaselineHeight = vt(baseline),\r\n\t\t\t\tevents = this.events(),\r\n\t\t\t\tbar = this.getBarProperties();\r\n\r\n\t\t\tvar z = this.series.length;\r\n\t\t\tarr.forEach(this.series, function(serie){if(serie.hidden){z--;}});\r\n\r\n\t\t\t// Collect and calculate  all values\r\n\t\t\tvar extractedValues = this.extractValues(this._hScaler);\r\n\t\t\textractedValues = this.rearrangeValues(extractedValues, vt, baselineHeight);\r\n\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(this.opt.enableCache){\r\n\t\t\t\t\trun._rectFreePool = (run._rectFreePool?run._rectFreePool:[]).concat(run._rectUsePool?run._rectUsePool:[]);\r\n\t\t\t\t\trun._rectUsePool = [];\r\n\t\t\t\t}\r\n\t\t\t\tvar theme = t.next(\"column\", [this.opt, run]),\r\n\t\t\t\t\teventSeries = new Array(run.data.length);\r\n\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tz--;\r\n\r\n\t\t\t\ts = run.group;\r\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\r\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\r\n\t\t\t\t});\r\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\r\n\t\t\t\t// data point to save time\r\n\t\t\t\tvar min = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0;\r\n\t\t\t\tvar max = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length;\r\n\t\t\t\tfor(var j = min; j < max; ++j){\r\n\t\t\t\t\tvar value = run.data[j];\r\n\t\t\t\t\tif(!this.isNullValue(value)){\r\n\t\t\t\t\t\tvar val = this.getValue(value, j, i, indexed),\r\n\t\t\t\t\t\t\tvv = vt(val.y),\r\n\t\t\t\t\t\t\th = extractedValues[i][j],\r\n\t\t\t\t\t\t\tfinalTheme,\r\n\t\t\t\t\t\t\tsshape;\r\n\r\n\t\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\r\n\t\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\r\n\t\t\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"column\", tMixin, true);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tfinalTheme = t.post(theme, \"column\");\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(bar.width >= 1){\r\n\t\t\t\t\t\t\tvar rect = {\r\n\t\t\t\t\t\t\t\tx: offsets.l + ht(val.x + 0.5) + bar.gap + bar.thickness * z,\r\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - baselineHeight - Math.max(h, 0),\r\n\t\t\t\t\t\t\t\twidth: bar.width,\r\n\t\t\t\t\t\t\t\theight: Math.abs(h)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif(finalTheme.series.shadow){\r\n\t\t\t\t\t\t\t\tvar srect = lang.clone(rect);\r\n\t\t\t\t\t\t\t\tsrect.x += finalTheme.series.shadow.dx;\r\n\t\t\t\t\t\t\t\tsrect.y += finalTheme.series.shadow.dy;\r\n\t\t\t\t\t\t\t\tsshape = this.createRect(run, s, srect).setFill(finalTheme.series.shadow.color).setStroke(finalTheme.series.shadow);\r\n\t\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\t\tthis._animateColumn(sshape, dim.height - offsets.b + baselineHeight, h);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar specialFill = this._plotFill(finalTheme.series.fill, dim, offsets);\r\n\t\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, rect);\r\n\t\t\t\t\t\t\tvar shape = this.createRect(run, s, rect).setFill(specialFill).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tthis.overrideShape(shape, {index: j, value: val});\r\n\t\t\t\t\t\t\tif(shape.setFilter && finalTheme.series.filter){\r\n\t\t\t\t\t\t\t\tshape.setFilter(finalTheme.series.filter);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trun.dyn.fill   = shape.getFill();\r\n\t\t\t\t\t\t\trun.dyn.stroke = shape.getStroke();\r\n\t\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"column\",\r\n\t\t\t\t\t\t\t\t\tindex:   j,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\t\t\t\tshadow:  sshape,\r\n\t\t\t\t\t\t\t\t\tcx:      val.x + 0.5,\r\n\t\t\t\t\t\t\t\t\tcy:      val.y,\r\n\t\t\t\t\t\t\t\t\tx:\t     indexed?j:run.data[j].x,\r\n\t\t\t\t\t\t\t\t\ty:\t \t indexed?run.data[j]:run.data[j].y\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[j] = o;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if val.py is here, this means we are stacking and we need to subtract previous\r\n\t\t\t\t\t\t\t// value to get the high in which we will lay out the label\r\n\t\t\t\t\t\t\tif(!isNaN(val.py) && val.py > baseline){\r\n\t\t\t\t\t\t\t\trect.height = h - vt(val.py);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.createLabel(s, value, rect, finalTheme);\r\n\t\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\t\tthis._animateColumn(shape, dim.height - offsets.b - baselineHeight, h);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Columns\r\n\t\t},\r\n\t\tgetValue: function(value, j, seriesIndex, indexed){\r\n\t\t\tvar y,x;\r\n\t\t\tif(indexed){\r\n\t\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\t\ty = value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\ty = value.y;\r\n\t\t\t\t}\r\n\t\t\t\tx = j;\r\n\t\t\t}else{\r\n\t\t\t\ty = value.y;\r\n\t\t\t\tx = value.x - 1;\r\n\t\t\t}\r\n\t\t\treturn { x: x, y: y };\r\n\t\t},\r\n\t\textractValues: function(scaler){\r\n\t\t\tvar extracted = [];\r\n\t\t\tfor(var i = this.series.length - 1; i >= 0; --i){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t// on indexed charts we can easily just interate from the first visible to the last visible\r\n\t\t\t\t// data point to save time\r\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\r\n\t\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tmin = indexed ? Math.max(0, Math.floor(scaler.bounds.from - 1)) : 0,\r\n\t\t\t\t\tmax = indexed ? Math.min(run.data.length, Math.ceil(scaler.bounds.to)) : run.data.length,\r\n\t\t\t\t\textractedSet = extracted[i] = [];\r\n\t\t\t\textractedSet.min = min;\r\n\t\t\t\textractedSet.max = max;\r\n\t\t\t\tfor(var j = min; j < max; ++j){\r\n\t\t\t\t\tvar value = run.data[j];\r\n\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 :\r\n\t\t\t\t\t\t(typeof value == \"number\" ? value : value.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn extracted;\r\n\t\t},\r\n\t\trearrangeValues: function(values, transform, baseline){\r\n\t\t\t// transform to pixels\r\n\t\t\tfor(var i = 0, n = values.length; i < n; ++i){\r\n\t\t\t\tvar extractedSet = values[i];\r\n\t\t\t\tif(extractedSet){\r\n\t\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\r\n\t\t\t\t\t\tvar value = extractedSet[j];\r\n\t\t\t\t\t\textractedSet[j] = this.isNullValue(value) ? 0 : transform(value) - baseline;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\t\t},\r\n\r\n\t\tisNullValue: function(value){\r\n\t\t\tif(value === null || typeof value == \"undefined\"){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tvar h = this._hAxis ? this._hAxis.isNullValue : alwaysFalse,\r\n\t\t\t\tv = this._vAxis ? this._vAxis.isNullValue : alwaysFalse;\r\n\t\t\tif(typeof value == \"number\"){\r\n\t\t\t\treturn v(0.5) || h(value);\r\n\t\t\t}\r\n\t\t\treturn v(isNaN(value.x) ? 0.5 : value.x + 0.5) || value.y === null || h(value.y);\r\n\t\t},\r\n\t\tgetBarProperties: function(){\r\n\t\t\tvar f = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\r\n\t\t\treturn {gap: f.gap, width: f.size, thickness: 0};\r\n\t\t},\r\n\t\t_animateColumn: function(shape, voffset, vsize){\r\n\t\t\tif(vsize===0){\r\n\t\t\t\tvsize = 1;\r\n\t\t\t}\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Columns.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Default.js":
/*!*******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Default.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"),\r\n\t\t__webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, arr, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\t/*=====\r\n\tdeclare(\"dojox.charting.plot2d.__DefaultCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\r\n\t\t// summary:\r\n\t\t//\t\tThe arguments used for any/most plots.\r\n\r\n\t\t// lines: Boolean?\r\n\t\t//\t\tWhether or not to draw lines on this plot.  Defaults to true.\r\n\t\tlines:   true,\r\n\r\n\t\t// areas: Boolean?\r\n\t\t//\t\tWhether or not to draw areas on this plot. Defaults to false.\r\n\t\tareas:   false,\r\n\r\n\t\t// markers: Boolean?\r\n\t\t//\t\tWhether or not to draw markers at data points on this plot. Default is false.\r\n\t\tmarkers: false,\r\n\r\n\t\t// tension: Number|String?\r\n\t\t//\t\tWhether or not to apply 'tensioning' to the lines on this chart.\r\n\t\t//\t\tOptions include a number, \"X\", \"x\", or \"S\"; if a number is used, the\r\n\t\t//\t\tsimpler bezier curve calculations are used to draw the lines.  If X, x or S\r\n\t\t//\t\tis used, the more accurate smoothing algorithm is used.\r\n\t\ttension: \"\",\r\n\r\n\t\t// animate: Boolean?|Number?\r\n\t\t//\t\tWhether or not to animate the chart to place. When a Number it specifies the duration of the animation.\r\n\t\t//\t\tDefault is false.\r\n\t\tanimate: false,\r\n\r\n\t\t// stroke: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use for any series on the plot.\r\n\t\tstroke:\t\t{},\r\n\r\n\t\t// outline: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke used to outline any series on the plot.\r\n\t\toutline:\t{},\r\n\r\n\t\t// shadow: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\r\n\t\tshadow:\t\t{},\r\n\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tAny fill to be used for elements on the plot (such as areas).\r\n\t\tfill:\t\t{},\r\n\r\n\t\t// filter: dojox.gfx.Filter?\r\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\r\n\t\t//\t\tbe required for this to work.\r\n\t\tfilter:\t\t{},\r\n\r\n\t\t// styleFunc: Function?\r\n\t\t//\t\tA function that returns a styling object for the a given data item.\r\n\t\tstyleFunc:\tnull,\r\n\r\n\t\t// font: String?\r\n\t\t//\t\tA font definition to be used for labels and other text-based elements on the plot.\r\n\t\tfont:\t\t\"\",\r\n\r\n\t\t// fontColor: String|dojo.Color?\r\n\t\t//\t\tThe color to be used for any text-based elements on the plot.\r\n\t\tfontColor:\t\"\",\r\n\r\n\t\t// markerStroke: dojo.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use for any markers on the plot.\r\n\t\tmarkerStroke:\t\t{},\r\n\r\n\t\t// markerOutline: dojo.gfx.Stroke?\r\n\t\t//\t\tAn optional outline to use for any markers on the plot.\r\n\t\tmarkerOutline:\t\t{},\r\n\r\n\t\t// markerShadow: dojo.gfx.Stroke?\r\n\t\t//\t\tAn optional shadow to use for any markers on the plot.\r\n\t\tmarkerShadow:\t\t{},\r\n\r\n\t\t// markerFill: dojo.gfx.Fill?\r\n\t\t//\t\tAn optional fill to use for any markers on the plot.\r\n\t\tmarkerFill:\t\t\t{},\r\n\r\n\t\t// markerFont: String?\r\n\t\t//\t\tAn optional font definition to use for any markers on the plot.\r\n\t\tmarkerFont:\t\t\t\"\",\r\n\r\n\t\t// markerFontColor: String|dojo.Color?\r\n\t\t//\t\tAn optional color to use for any marker text on the plot.\r\n\t\tmarkerFontColor:\t\"\",\r\n\r\n\t\t// enableCache: Boolean?\r\n\t\t//\t\tWhether the markers are cached from one rendering to another. This improves the rendering performance of\r\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\r\n\t\tenableCache: false,\r\n\r\n\t\t// interpolate: Boolean?\r\n\t\t//\t\tWhether when there is a null data point in the data the plot interpolates it or if the lines is split at that\r\n\t\t//\t\tpoint.\tDefault false.\r\n\t\tinterpolate: false,\r\n\r\n\t\t// zeroLine: Number?\r\n\t\t//\t\tZero line for an area fill. Should be a numeric value in user coordinates.\r\n\t\t//\t\tDefault: the lowest value on a vertical axis.\r\n\t\tzeroLine: 0\r\n\t});\r\n=====*/\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\tvar DEFAULT_ANIMATION_LENGTH = 1200;\t// in ms\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Default\", [CartesianBase, _PlotEvents], {\r\n\r\n\t\t// defaultParams:\r\n\t\t//\t\tThe default parameters of this plot.\r\n\t\tdefaultParams: {\r\n\t\t\tlines:   true,\t// draw lines\r\n\t\t\tareas:   false,\t// draw areas\r\n\t\t\tmarkers: false,\t// draw markers\r\n\t\t\ttension: \"\",\t// draw curved lines (tension is \"X\", \"x\", or \"S\")\r\n\t\t\tanimate: false, // animate chart to place\r\n\t\t\tenableCache: false,\r\n\t\t\tinterpolate: false\r\n\t\t},\r\n\r\n\t\t// optionalParams:\r\n\t\t//\t\tThe optional parameters of this plot.\r\n\t\toptionalParams: {\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc: null,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\",\r\n\t\t\tmarker:             \"\",\r\n\t\t\tmarkerStroke:\t\t{},\r\n\t\t\tmarkerOutline:\t\t{},\r\n\t\t\tmarkerShadow:\t\t{},\r\n\t\t\tmarkerFill:\t\t\t{},\r\n\t\t\tmarkerFont:\t\t\t\"\",\r\n\t\t\tmarkerFontColor:\t\"\",\r\n\t\t\tzeroLine:           0\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn a new plot.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\r\n\t\t\t//\t\tAn optional arguments object to help define this plot.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\t// animation properties\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\tcreatePath: function(run, creator, params){\r\n\t\t\tvar path;\r\n\t\t\tif(this.opt.enableCache && run._pathFreePool.length > 0){\r\n\t\t\t\tpath = run._pathFreePool.pop();\r\n\t\t\t\tpath.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(path);\r\n\t\t\t}else{\r\n\t\t\t\tpath = creator.createPath(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\trun._pathUsePool.push(path);\r\n\t\t\t}\r\n\t\t\treturn path;\r\n\t\t},\r\n\r\n\t\tbuildSegments: function(i, indexed){\r\n\t\t\tvar run = this.series[i],\r\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\r\n\t\t\t\tmax = indexed?Math.min(run.data.length, Math.ceil(this._hScaler.bounds.to)):run.data.length,\r\n\t\t\t\trseg = null, segments = [];\r\n\r\n\t\t\t// split the run data into dense segments (each containing no nulls)\r\n\t\t\t// except if interpolates is false in which case ignore null between valid data\r\n\t\t\tfor(var j = min; j < max; j++){\r\n\t\t\t\tif(!this.isNullValue(run.data[j])){\r\n\t\t\t\t\tif(!rseg){\r\n\t\t\t\t\t\trseg = [];\r\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\r\n\t\t\t\t\t}\r\n\t\t\t\t\trseg.push((indexed && run.data[j].hasOwnProperty(\"y\"))?run.data[j].y:run.data[j]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\r\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\r\n\t\t\t\t\t\trseg = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn segments;\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender/draw everything on this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }\r\n\t\t\t// returns: dojox/charting/plot2d/Default\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\r\n\t\t\t// make sure all the series is not modified\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tvar s;\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\tthis.getGroup().setTransform(null);\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme, stroke, outline, events = this.events();\r\n\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(this.opt.enableCache){\r\n\t\t\t\t\trun._pathFreePool = (run._pathFreePool?run._pathFreePool:[]).concat(run._pathUsePool?run._pathUsePool:[]);\r\n\t\t\t\t\trun._pathUsePool = [];\r\n\t\t\t\t}\r\n\t\t\t\tif(!run.data.length){\r\n\t\t\t\t\trun.dirty = false;\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar theme = t.next(this.opt.areas ? \"area\" : \"line\", [this.opt, run], true),\r\n\t\t\t\t\tlpoly,\r\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\t\teventSeries = this._eventSeries[run.name] = new Array(run.data.length);\r\n\r\n\t\t\t\ts = run.group;\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\tif(this.opt.lines){\r\n\t\t\t\t\t\trun.dyn.stroke = theme.series.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (run.markers || (run.markers === undefined && this.opt.markers)) {\r\n\t\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\r\n\t\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\r\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.areas){\r\n\t\t\t\t\t\trun.dyn.fill = theme.series.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// optim works only for index based case\r\n\t\t\t\tvar indexed = arr.some(run.data, function(item){\r\n\t\t\t\t\treturn typeof item == \"number\" || (item && !item.hasOwnProperty(\"x\"));\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar rsegments = this.buildSegments(i, indexed);\r\n\t\t\t\tfor(var seg = 0; seg < rsegments.length; seg++){\r\n\t\t\t\t\tvar rsegment = rsegments[seg];\r\n\t\t\t\t\tif(indexed){\r\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v, i){\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\r\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\r\n\t\t\t\t\t\t\t\tdata: v\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlpoly = arr.map(rsegment.rseg, function(v){\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\r\n\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y),\r\n\t\t\t\t\t\t\t\tdata: v\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if we are indexed & we interpolate we need to put all the segments as a single one now\r\n\t\t\t\t\tif(indexed && this.opt.interpolate){\r\n\t\t\t\t\t\twhile(seg < rsegments.length) {\r\n\t\t\t\t\t\t\tseg++;\r\n\t\t\t\t\t\t\trsegment = rsegments[seg];\r\n\t\t\t\t\t\t\tif(rsegment){\r\n\t\t\t\t\t\t\t\tlpoly = lpoly.concat(arr.map(rsegment.rseg, function(v, i){\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tx: ht(i + rsegment.index + 1) + offsets.l,\r\n\t\t\t\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v),\r\n\t\t\t\t\t\t\t\t\t\tdata: v\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar lpath = this.opt.tension ? dc.curve(lpoly, this.opt.tension) : \"\";\r\n\r\n\t\t\t\t\tif(this.opt.areas && lpoly.length > 1){\r\n\t\t\t\t\t\tvar fill = this._plotFill(theme.series.fill, dim, offsets), apoly = lang.clone(lpoly),\r\n\t\t\t\t\t\t\tzeroLine = dim.height - offsets.b;\r\n\t\t\t\t\t\tif(!isNaN(this.opt.zeroLine)){\r\n\t\t\t\t\t\t\tzeroLine = Math.max(offsets.t, Math.min(dim.height - offsets.b - vt(this.opt.zeroLine), zeroLine));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.opt.tension){\r\n\t\t\t\t\t\t\tvar apath = \"L\" + apoly[apoly.length-1].x + \",\" + zeroLine +\r\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + zeroLine +\r\n\t\t\t\t\t\t\t\t\" L\" + apoly[0].x + \",\" + apoly[0].y;\r\n\t\t\t\t\t\t\trun.dyn.fill = s.createPath(lpath + \" \" + apath).setFill(fill).getFill();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapoly.push({x: lpoly[lpoly.length - 1].x, y: zeroLine});\r\n\t\t\t\t\t\t\tapoly.push({x: lpoly[0].x, y: zeroLine});\r\n\t\t\t\t\t\t\tapoly.push(lpoly[0]);\r\n\t\t\t\t\t\t\trun.dyn.fill = s.createPolyline(apoly).setFill(fill).getFill();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.lines || this.opt.markers){\r\n\t\t\t\t\t\t// need a stroke\r\n\t\t\t\t\t\tstroke = theme.series.stroke;\r\n\t\t\t\t\t\tif(theme.series.outline){\r\n\t\t\t\t\t\t\toutline = run.dyn.outline = dc.makeStroke(theme.series.outline);\r\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (stroke && stroke.width || 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.markers){\r\n\t\t\t\t\t\trun.dyn.marker = theme.symbol;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar frontMarkers = null, outlineMarkers = null, shadowMarkers = null;\r\n\t\t\t\t\tif(stroke && theme.series.shadow && lpoly.length > 1){\r\n\t\t\t\t\t\tvar shadow = theme.series.shadow,\r\n\t\t\t\t\t\t\tspoly = arr.map(lpoly, function(c){\r\n\t\t\t\t\t\t\t\treturn {x: c.x + shadow.dx, y: c.y + shadow.dy};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(this.opt.lines){\r\n\t\t\t\t\t\t\tif(this.opt.tension){\r\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPath(dc.curve(spoly, this.opt.tension)).setStroke(shadow).getStroke();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trun.dyn.shadow = s.createPolyline(spoly).setStroke(shadow).getStroke();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.opt.markers && theme.marker.shadow){\r\n\t\t\t\t\t\t\tshadow = theme.marker.shadow;\r\n\t\t\t\t\t\t\tshadowMarkers = arr.map(spoly, function(c){\r\n\t\t\t\t\t\t\t\treturn this.createPath(run, s, \"M\" + c.x + \" \" + c.y + \" \" + theme.symbol).\r\n\t\t\t\t\t\t\t\t\tsetStroke(shadow).setFill(shadow.color);\r\n\t\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.lines && lpoly.length > 1){\r\n\t\t\t\t\t\tvar shape;\r\n\t\t\t\t\t\tif(outline){\r\n\t\t\t\t\t\t\tif(this.opt.tension){\r\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPath(lpath).setStroke(outline).getStroke();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trun.dyn.outline = s.createPolyline(lpoly).setStroke(outline).getStroke();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.opt.tension){\r\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPath(lpath)).setStroke(stroke).getStroke();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trun.dyn.stroke = (shape = s.createPolyline(lpoly)).setStroke(stroke).getStroke();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(shape.setFilter && theme.series.filter){\r\n\t\t\t\t\t\t\tshape.setFilter(theme.series.filter);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar markerBox = null;\r\n\t\t\t\t\tif(this.opt.markers){\r\n\t\t\t\t\t\tvar markerTheme = theme;\r\n\t\t\t\t\t\tfrontMarkers = new Array(lpoly.length);\r\n\t\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\r\n\t\t\t\t\t\toutline = null;\r\n\t\t\t\t\t\tif(markerTheme.marker.outline){\r\n\t\t\t\t\t\t\toutline = dc.makeStroke(markerTheme.marker.outline);\r\n\t\t\t\t\t\t\toutline.width = 2 * outline.width + (markerTheme.marker.stroke ? markerTheme.marker.stroke.width : 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\r\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\r\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\r\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + markerTheme.symbol;\r\n\t\t\t\t\t\t\tif(outline){\r\n\t\t\t\t\t\t\t\toutlineMarkers[i] = this.createPath(run, s, path).setStroke(outline);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfrontMarkers[i] = this.createPath(run, s, path).setStroke(markerTheme.marker.stroke).setFill(markerTheme.marker.fill);\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\trun.dyn.markerFill = markerTheme.marker.fill;\r\n\t\t\t\t\t\trun.dyn.markerStroke = markerTheme.marker.stroke;\r\n\t\t\t\t\t\tif(!markerBox && this.opt.labels){\r\n\t\t\t\t\t\t\tmarkerBox = frontMarkers[0].getBoundingBox();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"marker\",\r\n\t\t\t\t\t\t\t\t\tindex:   i + rsegment.index,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:   s,\r\n\t\t\t\t\t\t\t\t\toutline: outlineMarkers[i] || null,\r\n\t\t\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\r\n\t\t\t\t\t\t\t\t\tcx:      lpoly[i].x,\r\n\t\t\t\t\t\t\t\t\tcy:      lpoly[i].y\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tif(indexed){\r\n\t\t\t\t\t\t\t\t\to.x = i + rsegment.index + 1;\r\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index];\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\to.x = rsegment.rseg[i].x;\r\n\t\t\t\t\t\t\t\t\to.y = run.data[i + rsegment.index].y;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[i + rsegment.index] = o;\r\n\t\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tdelete this._eventSeries[run.name];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.labels){\r\n\t\t\t\t\t\tvar labelBoxW = markerBox?markerBox.width:2;\r\n\t\t\t\t\t\tvar labelBoxH = markerBox?markerBox.height:2;\r\n\t\t\t\t\t\tarr.forEach(lpoly, function(c, i){\r\n\t\t\t\t\t\t\tif(this.opt.styleFunc || typeof c.data != \"number\"){\r\n\t\t\t\t\t\t\t\tvar tMixin = typeof c.data != \"number\" ? [c.data] : [];\r\n\t\t\t\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(c.data));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmarkerTheme = t.addMixin(theme, \"marker\", tMixin, true);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tmarkerTheme = t.post(theme, \"marker\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.createLabel(s, rsegment.rseg[i], { x: c.x - labelBoxW / 2, y: c.y - labelBoxH / 2,\r\n\t\t\t\t\t\t\t\twidth: labelBoxW , height: labelBoxH }, markerTheme);\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\tif(this.animate){\r\n\t\t\t\t// grow from the bottom\r\n\t\t\t\tvar plotGroup = this.getGroup();\r\n\t\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\t\tshape: plotGroup,\r\n\t\t\t\t\tduration: DEFAULT_ANIMATION_LENGTH,\r\n\t\t\t\t\ttransform:[\r\n\t\t\t\t\t\t{name:\"translate\", start: [0, dim.height - offsets.b], end: [0, 0]},\r\n\t\t\t\t\t\t{name:\"scale\", start: [1, 0], end:[1, 1]},\r\n\t\t\t\t\t\t{name:\"original\"}\r\n\t\t\t\t\t]\r\n\t\t\t\t}, this.animate)).play();\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Default\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Default.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Grid.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Grid.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"),\r\n\t\t__webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, arr, has, CartesianBase, dc, du, fx){\r\n\r\n\tvar sortTicks = function(a,b){return a.value - b.value};\r\n\r\n\t/*=====\r\n\tdeclare(\"dojox.charting.plot2d.__GridCtorArgs\", dojox.charting.plot2d.__CartesianCtorArgs, {\r\n\t\t// summary:\r\n\t\t//\t\tA special keyword arguments object that is specific to a grid \"plot\".\r\n\r\n\t\t// majorHLine: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major horizontal line. By default major lines use major tick stroke.\r\n\t\tmajorHLine:undefined,\r\n\r\n\t\t// minorHLine: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor horizontal line. By default minor lines use minor tick stroke.\r\n\t\tminorHLine:undefined,\r\n\r\n\t\t// majorVLine: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional dojox.gfx.Stroke for a major vertical line. By default major lines use major tick stroke.\r\n\t\tmajorVLine:undefined,\r\n\r\n\t\t// minorVLine: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional dojox.gfx.Stroke for a minor vertical line. By default major lines use major tick stroke.\r\n\t\tminorVLine:undefined,\r\n\r\n\t\t// hFill: dojox.gfx.Fill?\r\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other horizontal stripe created by grid lines.\r\n\t\thFill: undefined,\r\n\r\n\t\t// hAlternateFill: dojox.gfx.Fill?\r\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating horizontal stripe created by grid lines not filled by `hFill`.\r\n\t\thAlternateFill: undefined,\r\n\r\n\t\t// vFill: dojox.gfx.Fill?\r\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill every other vertical stripe created by grid lines.\r\n\t\tvFill: undefined,\r\n\r\n\t\t// vAlternateFill: dojox.gfx.Fill?\r\n\t\t//\t\tAn optional dojox.gfx.Fill used to fill alternating vertical stripe created by grid lines not filled by `vFill`.\r\n\t\tvAlternateFill: undefined,\r\n\r\n\t\t// hMajorLines: Boolean?\r\n\t\t//\t\tWhether to show lines at the major ticks along the horizontal axis. Default is true.\r\n\t\thMajorLines: true,\r\n\r\n\t\t// hMinorLines: Boolean?\r\n\t\t//\t\tWhether to show lines at the minor ticks along the horizontal axis. Default is false.\r\n\t\thMinorLines: false,\r\n\r\n\t\t// vMajorLines: Boolean?\r\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is true.\r\n\t\tvMajorLines: true,\r\n\r\n\t\t// vMinorLines: Boolean?\r\n\t\t//\t\tWhether to show lines at the major ticks along the vertical axis. Default is false.\r\n\t\tvMinorLines: false,\r\n\r\n\t\t// hStripes: Boolean?\r\n\t\t//\t\tWhether to show horizontal stripes. Default is false.\r\n\t\thStripes: false,\r\n\r\n\t\t// vStripes: Boolean?\r\n\t\t//\t\tWhether to show vertical stripes. Default is false.\r\n\t\tvStripes: false,\r\n\r\n\t\t// enableCache: Boolean?\r\n\t\t//\t\tWhether the grid lines are cached from one rendering to another. This improves the rendering performance of\r\n\t\t//\t\tsuccessive rendering but penalize the first rendering.  Default false.\r\n\t\tenableCache: false,\r\n\r\n\t\t// renderOnAxis: Boolean?\r\n\t\t//\t\tWhether or not the grid is rendered when drawn at horizontal or vertical axis position. Default is true.\r\n\t\trenderOnAxis: true\r\n\t});\r\n\t=====*/\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Grid\", CartesianBase, {\r\n\t\t// summary:\r\n\t\t//\t\tA \"faux\" plot that can be placed behind other plots to represent\r\n\t\t//\t\ta grid against which other plots can be easily measured.\r\n\t\tdefaultParams: {\r\n\t\t\thMajorLines: true,\t// draw horizontal major lines\r\n\t\t\thMinorLines: false,\t// draw horizontal minor lines\r\n\t\t\tvMajorLines: true,\t// draw vertical major lines\r\n\t\t\tvMinorLines: false,\t// draw vertical minor lines\r\n\t\t\thStripes: false,\t// draw vertical stripes\r\n\t\t\tvStripes: false,\t// draw vertical stripes\r\n\t\t\tanimate: null,   // animate bars into place\r\n\t\t\tenableCache: false,\r\n\t\t\trenderOnAxis: true\r\n\t\t},\r\n\r\n\t\toptionalParams: {\r\n\t\t\tmajorHLine: {},\r\n\t\t\tminorHLine: {},\r\n\t\t\tmajorVLine: {},\r\n\t\t\tminorVLine: {},\r\n\t\t\thFill: {},\r\n\t\t\tvFill: {},\r\n\t\t\thAlternateFill: {},\r\n\t\t\tvAlternateFill: {}\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the faux Grid plot.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__GridCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the parameters of the underlying grid.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._lineFreePool = [];\r\n\t\t\t\tthis._lineUsePool = [];\r\n\t\t\t\tthis._rectFreePool = [];\r\n\t\t\t\tthis._rectUsePool = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\taddSeries: function(run){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIgnored but included as a dummy method.\r\n\t\t\t// returns: dojox/charting/plot2d/Grid\r\n\t\t\t//\t\tThe reference to this plot for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\r\n\t\t},\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\r\n\t\t},\r\n\t\tcleanGroup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._lineFreePool = this._lineFreePool.concat(this._lineUsePool);\r\n\t\t\t\tthis._lineUsePool = [];\r\n\t\t\t\tthis._rectFreePool = this._rectFreePool.concat(this._rectUsePool);\r\n\t\t\t\tthis._rectUsePool = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreateLine: function(creator, params){\r\n\t\t\tvar line;\r\n\t\t\tif(this.opt.enableCache && this._lineFreePool.length > 0){\r\n\t\t\t\tline = this._lineFreePool.pop();\r\n\t\t\t\tline.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(line);\r\n\t\t\t}else{\r\n\t\t\t\tline = creator.createLine(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._lineUsePool.push(line);\r\n\t\t\t}\r\n\t\t\treturn line;\r\n\t\t},\r\n\t\tcreateRect: function(creator, params){\r\n\t\t\tvar rect;\r\n\t\t\tif(this.opt.enableCache && this._rectFreePool.length > 0){\r\n\t\t\t\trect = this._rectFreePool.pop();\r\n\t\t\t\trect.setShape(params);\r\n\t\t\t\t// was cleared, add it back\r\n\t\t\t\tcreator.add(rect);\r\n\t\t\t}else{\r\n\t\t\t\trect = creator.createRect(params);\r\n\t\t\t}\r\n\t\t\tif(this.opt.enableCache){\r\n\t\t\t\tthis._rectUsePool.push(rect);\r\n\t\t\t}\r\n\t\t\treturn rect;\r\n\t\t},\r\n\t\t\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender the plot on the chart.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/plot2d/Grid\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tif(!this.dirty){ return this; }\r\n\t\t\tthis.cleanGroup();\r\n\t\t\tvar s = this.getGroup(), ta = this.chart.theme, lineStroke, ticks;\r\n\t\t\tif((has(\"ios\") && has(\"ios\") < 6) || has(\"android\") || (has(\"safari\") && !has(\"ios\"))){\r\n\t\t\t\t// clipping seems buggy in some mobile Webkit browser and Safari desktop\r\n\t\t\t\t// it does not clip correctly if only lines are present => create a invisible rectangle...\r\n\t\t\t\tvar w = Math.max(0, dim.width  - offsets.l - offsets.r),\r\n\t\t\t\t\th = Math.max(0, dim.height - offsets.t - offsets.b);\r\n\t\t\t\ts.createRect({ x: offsets.l, y: offsets.t, width: w, height: h});\r\n\t\t\t}\r\n\t\t\tif(this._vAxis){\r\n\t\t\t\t// draw horizontal stripes and lines\r\n\t\t\t\tticks = this._vAxis.getTicks();\r\n\t\t\t\tvar vScaler = this._vAxis.getScaler();\r\n\t\t\t\tif(ticks != null && vScaler != null){\r\n\t\t\t\t\tvar vt = vScaler.scaler.getTransformerFromModel(vScaler);\r\n\t\t\t\t\tif(this.opt.hStripes){\r\n\t\t\t\t\t\tthis._renderHRect(ticks, ta.grid, dim, offsets, vScaler, vt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.hMinorLines){\r\n\t\t\t\t\t\tlineStroke = this.opt.minorHLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\r\n\t\t\t\t\t\tthis._renderHLines(ticks.minor, lineStroke, dim, offsets, vScaler, vt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.hMajorLines){\r\n\t\t\t\t\t\tlineStroke = this.opt.majorHLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\r\n\t\t\t\t\t\tthis._renderHLines(ticks.major, lineStroke, dim, offsets, vScaler, vt);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tif(this._hAxis){\r\n\t\t\t\t// draw vertical stripes and lines\r\n\t\t\t\tticks = this._hAxis.getTicks();\r\n\t\t\t\tvar hScaler = this._hAxis.getScaler();\r\n\t\t\t\tif(ticks != null && hScaler != null){\r\n\t\t\t\t\tvar ht = hScaler.scaler.getTransformerFromModel(hScaler);\r\n\t\t\t\t\tif(this.opt.vStripes){\r\n\t\t\t\t\t\tthis._renderVRect(ticks, ta.grid, dim, offsets, hScaler, ht);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(ticks && this.opt.vMinorLines){\r\n\t\t\t\t\t\tlineStroke = this.opt.minorVLine || (ta.grid && ta.grid.minorLine) || ta.axis.minorTick;\r\n\t\t\t\t\t\tthis._renderVLines(ticks.minor, lineStroke, dim, offsets, hScaler, ht);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(ticks && this.opt.vMajorLines){\r\n\t\t\t\t\t\tlineStroke = this.opt.majorVLine || (ta.grid && ta.grid.majorLine) || ta.axis.majorTick;\r\n\t\t\t\t\t\tthis._renderVLines(ticks.major, lineStroke, dim, offsets, hScaler, ht);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Grid\r\n\t\t},\r\n\t\t_renderHLines: function(ticks, lineStroke, dim, offsets, vScaler, vt){\r\n\t\t\tvar s = this.getGroup();\r\n\t\t\tarr.forEach(ticks, function(tick){\r\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._vAxis.opt.leftBottom?vScaler.bounds.from:vScaler.bounds.to)){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar y = dim.height - offsets.b - vt(tick.value);\r\n\t\t\t\tvar hLine = this.createLine(s, {\r\n\t\t\t\t\tx1: offsets.l,\r\n\t\t\t\t\ty1: y,\r\n\t\t\t\t\tx2: dim.width - offsets.r,\r\n\t\t\t\t\ty2: y\r\n\t\t\t\t}).setStroke(lineStroke);\r\n\t\t\t\tif(this.animate){\r\n\t\t\t\t\tthis._animateGrid(hLine, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\t\t_renderVLines: function(ticks, lineStroke, dim, offsets, hScaler, ht){\r\n\t\t\tvar s = this.getGroup();\r\n\t\t\tarr.forEach(ticks, function(tick){\r\n\t\t\t\tif(!this.opt.renderOnAxis && tick.value == (this._hAxis.opt.leftBottom?hScaler.bounds.from:hScaler.bounds.to)){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar x = offsets.l + ht(tick.value);\r\n\t\t\t\tvar vLine = this.createLine(s, {\r\n\t\t\t\t\tx1: x,\r\n\t\t\t\t\ty1: offsets.t,\r\n\t\t\t\t\tx2: x,\r\n\t\t\t\t\ty2: dim.height - offsets.b\r\n\t\t\t\t}).setStroke(lineStroke);\r\n\t\t\t\tif(this.animate){\r\n\t\t\t\t\tthis._animateGrid(vLine, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\t\t_renderHRect: function(ticks, theme, dim, offsets, vScaler, vt){\r\n\t\t\tvar fill, tick, y, y2, hStripe;\r\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\r\n\t\t\tallTicks.sort(sortTicks);\r\n\t\t\tif(allTicks[0].value > vScaler.bounds.from){\r\n\t\t\t\tallTicks.splice(0, 0, {value: vScaler.bounds.from});\r\n\t\t\t}\r\n\t\t\tif(allTicks[allTicks.length - 1].value < vScaler.bounds.to){\r\n\t\t\t\tallTicks.push({value: vScaler.bounds.to});\r\n\t\t\t}\r\n\t\t\tvar s = this.getGroup();\r\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\r\n\t\t\t\ttick = allTicks[j];\r\n\t\t\t\ty = dim.height - offsets.b - vt(tick.value);\r\n\t\t\t\ty2 = dim.height - offsets.b - vt(allTicks[j+1].value);\r\n\r\n\t\t\t\tfill = (j%2 == 0)?(this.opt.hAlternateFill ||(theme && theme.alternateFill)):\r\n\t\t\t\t\t(this.opt.hFill || (theme && theme.fill));\r\n\t\t\t\tif(fill){\r\n\t\t\t\t\thStripe = this.createRect(s, {\r\n\t\t\t\t\t\tx: offsets.l,\r\n\t\t\t\t\t\ty: y,\r\n\t\t\t\t\t\twidth: dim.width - offsets.r,\r\n\t\t\t\t\t\theight: y - y2\r\n\t\t\t\t\t}).setFill(fill);\r\n\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\tthis._animateGrid(hStripe, \"h\", offsets.l, offsets.r + offsets.l - dim.width);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_renderVRect: function(ticks, theme, dim, offsets, hScaler, ht){\r\n\t\t\tvar fill, tick, x, x2, vStripe;\r\n\t\t\tvar allTicks = ticks.major.concat(ticks.minor);\r\n\t\t\tallTicks.sort(sortTicks);\r\n\t\t\tif(allTicks[0].value > hScaler.bounds.from){\r\n\t\t\t\tallTicks.splice(0, 0, {value: hScaler.bounds.from});\r\n\t\t\t}\r\n\t\t\tif(allTicks[allTicks.length - 1].value < hScaler.bounds.to){\r\n\t\t\t\tallTicks.push({value: hScaler.bounds.to});\r\n\t\t\t}\r\n\t\t\tvar s = this.getGroup();\r\n\t\t\tfor(var j = 0; j < allTicks.length - 1; j++){\r\n\t\t\t\ttick = allTicks[j];\r\n\t\t\t\tx = offsets.l + ht(tick.value);\r\n\t\t\t\tx2 = offsets.l + ht(allTicks[j+1].value);\r\n\r\n\t\t\t\tfill = (j%2 == 0)?(this.opt.vAlternateFill ||(theme && theme.alternateFill)):\r\n\t\t\t\t\t(this.opt.vFill || (theme && theme.fill));\r\n\t\t\t\tif(fill){\r\n\t\t\t\t\tvStripe = this.createRect(s, {\r\n\t\t\t\t\t\tx: x,\r\n\t\t\t\t\t\ty: offsets.t,\r\n\t\t\t\t\t\twidth: x2 - x,\r\n\t\t\t\t\t\theight: dim.width - offsets.r\r\n\t\t\t\t\t}).setFill(fill);\r\n\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\tthis._animateGrid(vStripe, \"v\", dim.height - offsets.b, dim.height - offsets.b - offsets.t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t_animateGrid: function(shape, type, offset, size){\r\n\t\t\tvar transStart = type == \"h\" ? [offset, 0] : [0, offset];\r\n\t\t\tvar scaleStart = type == \"h\" ? [1/size, 1] : [1, 1/size];\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: transStart, end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: scaleStart, end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Grid.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Lines.js":
/*!*****************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Lines.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Default */ \"./node_modules/dojox/charting/plot2d/Default.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Default){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Lines\", Default, {\r\n\t\t// summary:\r\n\t\t//\t\tA convenience constructor to create a typical line chart.\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPreset our default plot to be line-based.\r\n\t\t\tthis.opt.lines = true;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL0xpbmVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL3Bsb3QyZC9MaW5lcy5qcz84NmM3Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCIuL0RlZmF1bHRcIl0sIGZ1bmN0aW9uKGRlY2xhcmUsIERlZmF1bHQpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5MaW5lc1wiLCBEZWZhdWx0LCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBjb252ZW5pZW5jZSBjb25zdHJ1Y3RvciB0byBjcmVhdGUgYSB0eXBpY2FsIGxpbmUgY2hhcnQuXHJcblx0XHRjb25zdHJ1Y3RvcjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UHJlc2V0IG91ciBkZWZhdWx0IHBsb3QgdG8gYmUgbGluZS1iYXNlZC5cclxuXHRcdFx0dGhpcy5vcHQubGluZXMgPSB0cnVlO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Lines.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Markers.js":
/*!*******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Markers.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Default */ \"./node_modules/dojox/charting/plot2d/Default.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Default){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Markers\", Default, {\r\n\t\t// summary:\r\n\t\t//\t\tA convenience plot to draw a line chart with markers.\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet up the plot for lines and markers.\r\n\t\t\tthis.opt.markers = true;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL01hcmtlcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL01hcmtlcnMuanM/OGRjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9kZWNsYXJlXCIsIFwiLi9EZWZhdWx0XCJdLCBmdW5jdGlvbihkZWNsYXJlLCBEZWZhdWx0KXtcclxuXHJcblx0cmV0dXJuIGRlY2xhcmUoXCJkb2pveC5jaGFydGluZy5wbG90MmQuTWFya2Vyc1wiLCBEZWZhdWx0LCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBjb252ZW5pZW5jZSBwbG90IHRvIGRyYXcgYSBsaW5lIGNoYXJ0IHdpdGggbWFya2Vycy5cclxuXHRcdGNvbnN0cnVjdG9yOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRTZXQgdXAgdGhlIHBsb3QgZm9yIGxpbmVzIGFuZCBtYXJrZXJzLlxyXG5cdFx0XHR0aGlzLm9wdC5tYXJrZXJzID0gdHJ1ZTtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Markers.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/MarkersOnly.js":
/*!***********************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/MarkersOnly.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Default */ \"./node_modules/dojox/charting/plot2d/Default.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Default){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.MarkersOnly\", Default, {\r\n\t\t// summary:\r\n\t\t//\t\tA convenience object to draw only markers (like a scatter but not quite).\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet up our default plot to only have markers and no lines.\r\n\t\t\tthis.opt.lines   = false;\r\n\t\t\tthis.opt.markers = true;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL01hcmtlcnNPbmx5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL3Bsb3QyZC9NYXJrZXJzT25seS5qcz80NjkzIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCIuL0RlZmF1bHRcIl0sIGZ1bmN0aW9uKGRlY2xhcmUsIERlZmF1bHQpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5NYXJrZXJzT25seVwiLCBEZWZhdWx0LCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBjb252ZW5pZW5jZSBvYmplY3QgdG8gZHJhdyBvbmx5IG1hcmtlcnMgKGxpa2UgYSBzY2F0dGVyIGJ1dCBub3QgcXVpdGUpLlxyXG5cdFx0Y29uc3RydWN0b3I6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFNldCB1cCBvdXIgZGVmYXVsdCBwbG90IHRvIG9ubHkgaGF2ZSBtYXJrZXJzIGFuZCBubyBsaW5lcy5cclxuXHRcdFx0dGhpcy5vcHQubGluZXMgICA9IGZhbHNlO1xyXG5cdFx0XHR0aGlzLm9wdC5tYXJrZXJzID0gdHJ1ZTtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/MarkersOnly.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/OHLC.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/OHLC.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"),\r\n\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\t//\tCandlesticks are based on the Bars plot type; we expect the following passed\r\n\t//\tas values in a series:\r\n\t//\t{ x?, open, close, high, low }\r\n\t//\tif x is not provided, the array index is used.\r\n\t//\tfailing to provide the OHLC values will throw an error.\r\n\treturn declare(\"dojox.charting.plot2d.OHLC\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tA plot that represents typical open/high/low/close (financial reporting, primarily).\r\n\t\t//\t\tUnlike most charts, the Candlestick expects data points to be represented by\r\n\t\t//\t\tan object of the form { x?, open, close, high, low, mid? }, where both\r\n\t\t//\t\tx and mid are optional parameters.  If x is not provided, the index of the\r\n\t\t//\t\tdata array is used.\r\n\t\tdefaultParams: {\r\n\t\t\tgap:\t2,\t\t// gap between columns in pixels\r\n\t\t\tanimate: null\t// animate chart to place\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tminBarSize: 1,\t// minimal bar size in pixels\r\n\t\t\tmaxBarSize: 1,\t// maximal bar size in pixels\r\n\t\t\t// theme component\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe constructor for a candlestick chart.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__BarCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define the plot.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\tcollectStats: function(series){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollect all statistics for drawing this chart.  Since the common\r\n\t\t\t//\t\tfunctionality only assumes x and y, OHLC must create it's own\r\n\t\t\t//\t\tstats (since data has no y value, but open/close/high/low instead).\r\n\t\t\t// series: dojox/charting/Series[]\r\n\t\t\t//\t\tThe data series array to be drawn on this plot.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\tReturns an object in the form of { hmin, hmax, vmin, vmax }.\r\n\r\n\t\t\t//\twe have to roll our own, since we need to use all four passed\r\n\t\t\t//\tvalues to figure out our stats, and common only assumes x and y.\r\n\t\t\tvar stats = lang.delegate(dc.defaultStats);\r\n\t\t\tfor(var i=0; i<series.length; i++){\r\n\t\t\t\tvar run = series[i];\r\n\t\t\t\tif(!run.data.length){ continue; }\r\n\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\tif(!(\"ymin\" in run) || !(\"ymax\" in run)){\r\n\t\t\t\t\tarr.forEach(run.data, function(val, idx){\r\n\t\t\t\t\t\tif(!this.isNullValue(val)){\r\n\t\t\t\t\t\t\tvar x = val.x || idx + 1;\r\n\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, val.open, val.close, val.high, val.low);\r\n\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, val.open, val.close, val.high, val.low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t}\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = this.collectStats(this.series);\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/OHLC\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\tvar s = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme, f, gap, width,\r\n\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler),\r\n\t\t\t\tevents = this.events();\r\n\t\t\tf = dc.calculateBarSize(this._hScaler.bounds.scale, this.opt);\r\n\t\t\tgap = f.gap;\r\n\t\t\twidth = f.size;\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tvar theme = t.next(\"candlestick\", [this.opt, run]), s = run.group,\r\n\t\t\t\t\teventSeries = new Array(run.data.length);\r\n\t\t\t\tfor(var j = 0; j < run.data.length; ++j){\r\n\t\t\t\t\tvar v = run.data[j];\r\n\t\t\t\t\tif(!this.isNullValue(v)){\r\n\t\t\t\t\t\tvar finalTheme = t.addMixin(theme, \"candlestick\", v, true);\r\n\r\n\t\t\t\t\t\t//\tcalculate the points we need for OHLC\r\n\t\t\t\t\t\tvar x = ht(v.x || (j+0.5)) + offsets.l + gap,\r\n\t\t\t\t\t\t\ty = dim.height - offsets.b,\r\n\t\t\t\t\t\t\topen = vt(v.open),\r\n\t\t\t\t\t\t\tclose = vt(v.close),\r\n\t\t\t\t\t\t\thigh = vt(v.high),\r\n\t\t\t\t\t\t\tlow = vt(v.low);\r\n\t\t\t\t\t\tif(low > high){\r\n\t\t\t\t\t\t\tvar tmp = high;\r\n\t\t\t\t\t\t\thigh = low;\r\n\t\t\t\t\t\t\tlow = tmp;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(width >= 1){\r\n\t\t\t\t\t\t\tvar hl = {x1: width/2, x2: width/2, y1: y - high, y2: y - low},\r\n\t\t\t\t\t\t\t\top = {x1: 0, x2: ((width/2) + ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), y1: y-open, y2: y-open},\r\n\t\t\t\t\t\t\t\tcl = {x1: ((width/2) - ((finalTheme.series.stroke ? finalTheme.series.stroke.width || 1 : 1)/2)), x2: width, y1: y-close, y2: y-close};\r\n\t\t\t\t\t\t\tvar shape = s.createGroup();\r\n\t\t\t\t\t\t\tshape.setTransform({dx: x, dy: 0});\r\n\t\t\t\t\t\t\tvar inner = shape.createGroup();\r\n\t\t\t\t\t\t\tinner.createLine(hl).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tinner.createLine(op).setStroke(finalTheme.series.stroke);\r\n\t\t\t\t\t\t\tinner.createLine(cl).setStroke(finalTheme.series.stroke);\r\n\r\n\t\t\t\t\t\t\t// TODO: double check this.\r\n\t\t\t\t\t\t\trun.dyn.stroke = finalTheme.series.stroke;\r\n\t\t\t\t\t\t\tif(events){\r\n\t\t\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\t\t\telement: \"candlestick\",\r\n\t\t\t\t\t\t\t\t\tindex:   j,\r\n\t\t\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\t\t\tshape:\t inner,\r\n\t\t\t\t\t\t\t\t\tx:       x,\r\n\t\t\t\t\t\t\t\t\ty:       y-Math.max(open, close),\r\n\t\t\t\t\t\t\t\t\tcx:\t\t width/2,\r\n\t\t\t\t\t\t\t\t\tcy:\t\t (y-Math.max(open, close)) + (Math.max(open > close ? open-close : close-open, 1)/2),\r\n\t\t\t\t\t\t\t\t\twidth:\t width,\r\n\t\t\t\t\t\t\t\t\theight:  Math.max(open > close ? open-close : close-open, 1),\r\n\t\t\t\t\t\t\t\t\tdata:\t v\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\t\teventSeries[j] = o;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateOHLC(shape, y - low, high - low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/OHLC\r\n\t\t},\r\n\t\t_animateOHLC: function(shape, voffset, vsize){\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, voffset - (voffset/vsize)], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [1, 1/vsize], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/OHLC.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Pie.js":
/*!***************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Pie.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\") ,__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"),\r\n\t\t__webpack_require__(/*! ./Base */ \"./node_modules/dojox/charting/plot2d/Base.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"),\r\n\t\t__webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/gfx/matrix */ \"./node_modules/dojox/gfx/matrix.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"),__webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, domGeom, Color, Base, PlotEvents, dc, g, m, df, du, has){\r\n\r\n\t/*=====\r\n\tdeclare(\"dojox.charting.plot2d.__PieCtorArgs\", dojox.charting.plot2d.__DefaultCtorArgs, {\r\n\t\t// summary:\r\n\t\t//\t\tSpecialized keyword arguments object for use in defining parameters on a Pie chart.\r\n\r\n\t\t// labels: Boolean?\r\n\t\t//\t\tWhether or not to draw labels for each pie slice.  Default is true.\r\n\t\tlabels:\t\t\ttrue,\r\n\r\n\t\t// ticks: Boolean?\r\n\t\t//\t\tWhether or not to draw ticks to labels within each slice. Default is false.\r\n\t\tticks:\t\t\tfalse,\r\n\r\n\t\t// fixed: Boolean?\r\n\t\t//\t\tWhether a fixed precision must be applied to data values for display. Default is true.\r\n\t\tfixed:\t\t\ttrue,\r\n\r\n\t\t// precision: Number?\r\n\t\t//\t\tThe precision at which to round data values for display. Default is 0.\r\n\t\tprecision:\t\t1,\r\n\r\n\t\t// labelOffset: Number?\r\n\t\t//\t\tThe amount in pixels by which to offset labels.  Default is 20.\r\n\t\tlabelOffset:\t20,\r\n\r\n\t\t// labelStyle: String?\r\n\t\t//\t\tOptions as to where to draw labels.  Values include \"default\", and \"columns\".\tDefault is \"default\".\r\n\t\tlabelStyle:\t\t\"default\",\t// default/columns\r\n\r\n\t\t// omitLabels: Boolean?\r\n\t\t//\t\tWhether labels of slices small to the point of not being visible are omitted.\tDefault false.\r\n\t\tomitLabels: false,\r\n\r\n\t\t// htmlLabels: Boolean?\r\n\t\t//\t\tWhether or not to use HTML to render slice labels. Default is true.\r\n\t\thtmlLabels:\t\ttrue,\r\n\r\n\t\t// radGrad: String?\r\n\t\t//\t\tThe type of radial gradient to use in rendering.  Default is \"native\".\r\n\t\tradGrad:        \"native\",\r\n\r\n\t\t// fanSize: Number?\r\n\t\t//\t\tThe amount for a radial gradient.  Default is 5.\r\n\t\tfanSize:\t\t5,\r\n\r\n\t\t// startAngle: Number?\r\n\t\t//\t\tWhere to being rendering gradients in slices, in degrees.  Default is 0.\r\n\t\tstartAngle:     0,\r\n\r\n\t\t// radius: Number?\r\n\t\t//\t\tThe size of the radial gradient.  Default is 0.\r\n\t\tradius:\t\t0,\r\n\r\n\t\t// shadow: dojox.gfx.Stroke?\r\n\t\t//\t\tAn optional stroke to use to draw any shadows for a series on a plot.\r\n\t\tshadow:\t\t{},\r\n\r\n\t\t// fill: dojox.gfx.Fill?\r\n\t\t//\t\tAny fill to be used for elements on the plot.\r\n\t\tfill:\t\t{},\r\n\r\n\t\t// filter: dojox.gfx.Filter?\r\n\t\t//\t\tAn SVG filter to be used for elements on the plot. gfx SVG renderer must be used and dojox/gfx/svgext must\r\n\t\t//\t\tbe required for this to work.\r\n\t\tfilter:\t\t{},\r\n\r\n\t\t// styleFunc: Function?\r\n\t\t//\t\tA function that returns a styling object for the a given data item.\r\n\t\tstyleFunc:\tnull,\r\n\r\n\t\t// innerRadius: Number?\r\n\t\t//\t\tThe inner radius of a ring in percent (0-100).  If value < 0\r\n\t\t//\t\tthen it is assumed to be pixels, not percent.\r\n\t\tinnerRadius:\t0,\r\n\r\n\t\t//  minWidth: Number?\r\n\t\t//      The minimum width of a pie slice at its chord. The default is 10px.\r\n\t\tminWidth:   10\r\n\r\n\t});\r\n\t=====*/\r\n\r\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Pie\", [Base, PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot that represents a typical pie chart.\r\n\t\tdefaultParams: {\r\n\t\t\tlabels:\t\t\ttrue,\r\n\t\t\tticks:\t\t\tfalse,\r\n\t\t\tfixed:\t\t\ttrue,\r\n\t\t\tprecision:\t\t1,\r\n\t\t\tlabelOffset:\t20,\r\n\t\t\tlabelStyle:\t\t\"default\",\t// default/columns\r\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\r\n\t\t\tradGrad:       \"native\",\t// or \"linear\", or \"fan\"\r\n\t\t\tfanSize:\t\t   5,\t\t\t// maximum fan size in degrees\r\n\t\t\tstartAngle:    0,\t\t\t// start angle for slices in degrees\r\n\t\t\tinnerRadius:\t0,\t\t\t// inner radius in pixels\r\n\t\t\tminWidth:      0,\t\t\t// minimal width of degenerated slices\r\n\t\t\tzeroDataMessage: \"\"     // The message to display when there is no data, if provided by the user.\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tradius:\t\t0,\r\n\t\t\tomitLabels: false,\r\n\t\t\t// theme components\r\n\t\t\tstroke:\t\t{},\r\n\t\t\toutline:\t{},\r\n\t\t\tshadow:\t\t{},\r\n\t\t\tfill:\t\t{},\r\n\t\t\tfilter:     {},\r\n\t\t\tstyleFunc:\tnull,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\",\r\n\t\t\tlabelWiring: {}\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a pie plot.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.axes = [];\r\n\t\t\tthis.run = null;\r\n\t\t\tthis.dyn = [];\r\n\t\t\tthis.runFilter = [];\r\n\t\t\tif(kwArgs && kwArgs.hasOwnProperty(\"innerRadius\")){\r\n\t\t\t\tthis._plotSetInnerRadius = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear out all of the information tied to this plot.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.dyn = [];\r\n\t\t\tthis.run = null;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\tsetAxis: function(axis){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDummy method, since axes are irrelevant with a Pie chart.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tThe reference to this plot for functional chaining.\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\taddSeries: function(run){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a series of data to this plot.\r\n\t\t\t// returns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tThe reference to this plot for functional chaining.\r\n\t\t\tthis.run = run;\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns default stats (irrelevant for this type of plot).\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\treturn lang.delegate(dc.defaultStats); // Object\r\n\t\t},\r\n\t\tgetRequiredColors: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn the number of colors needed to draw this plot.\r\n\t\t\treturn this.run ? this.run.data.length : 0;\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t//\tsummary:\r\n\t\t\t//\t\tRender the plot on the chart.\r\n\t\t\t//\tdim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }.\r\n\t\t\t//\toffsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t//\treturns: dojox/charting/plot2d/Pie\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(!this.dirty){ return this; }\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = false;\r\n\t\t\tthis._eventSeries = {};\r\n\t\t\tthis.cleanGroup();\r\n\t\t\tvar s = this.group, t = this.chart.theme;\r\n\r\n\t\t\tif(!this._plotSetInnerRadius && t && t.pieInnerRadius){\r\n\t\t\t\tthis.opt.innerRadius = t.pieInnerRadius;\r\n\t\t\t}\r\n\r\n\t\t\t// calculate the geometry\r\n\t\t\tvar rx = (dim.width  - offsets.l - offsets.r) / 2,\r\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\r\n\t\t\t\tr  = Math.min(rx, ry),\r\n\t\t\t\ttaFont = \"font\" in this.opt ? this.opt.font : t.axis.tick.titleFont || \"\",\r\n\t\t\t\tsize = taFont ? g.normalizedLength(g.splitFontString(taFont).size) : 0,\r\n\t\t\t\ttaFontColor = this.opt.hasOwnProperty(\"fontColor\") ? this.opt.fontColor : t.axis.tick.fontColor,\r\n\t\t\t\tstartAngle = m._degToRad(this.opt.startAngle),\r\n\t\t\t\tstart = startAngle, filteredRun, slices, labels, shift, labelR,\r\n\t\t\t\trun = this.run.data,\r\n\t\t\t\tevents = this.events();\r\n\r\n\t\t\t/* Added to handle no data case */\r\n\t\t\tvar noDataFunc = lang.hitch(this, function(){\r\n\t\t\t\tvar ct = t.clone();\r\n\t\t\t\tvar themes = df.map(run, function(v){\r\n\t\t\t\t\tvar tMixin = [this.opt, this.run];\r\n\t\t\t\t\tif(v !== null && typeof v != \"number\"){\r\n\t\t\t\t\t\ttMixin.push(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn ct.next(\"slice\", tMixin, true);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// Draw initial pie, with text in it noting 0 data.\r\n\t\t\t\tif(\"radius\" in this.opt){\r\n\t\t\t\t\tr = this.opt.radius < r ? this.opt.radius : r;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar circle = {\r\n\t\t\t\t\tcx: offsets.l + rx,\r\n\t\t\t\t\tcy: offsets.t + ry,\r\n\t\t\t\t\tr:  r\r\n\t\t\t\t};\r\n\t\t\t\tvar rColor = new Color(taFontColor);\r\n\t\t\t\t// If we have a radius, we'll need to fade the ring some\r\n\t\t\t\tif(this.opt.innerRadius){\r\n\t\t\t\t\trColor.a = 0.1;\r\n\t\t\t\t}\r\n\t\t\t\tvar ring = this._createRing(s, circle).setStroke(rColor);\r\n\t\t\t\tif(this.opt.innerRadius){\r\n\t\t\t\t\t// If we have a radius, fill it with the faded color.\r\n\t\t\t\t\tring.setFill(rColor);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.opt.zeroDataMessage){\r\n\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size/3, this.opt.zeroDataMessage, {\r\n\t\t\t\t\t\tseries: {\r\n\t\t\t\t\t\t\tfont: taFont,\r\n\t\t\t\t\t\t\tfontColor: taFontColor\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\tnull, \"middle\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.dyn = [];\r\n\t\t\t\tarr.forEach(run, function(item, i){\r\n\t\t\t\t\tthis.dyn.push({\r\n\t\t\t\t\t\tfill: this._plotFill(themes[i].series.fill, dim, offsets),\r\n\t\t\t\t\t\tstroke: themes[i].series.stroke});\r\n\t\t\t\t}, this);\r\n\t\t\t});\r\n\t\t\t/* END Added to handle no data case */\r\n\r\n\t\t\t// Draw over circle!\r\n\t\t\tif(!this.run && !this.run.data.ength){\r\n\t\t\t\tnoDataFunc();\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tif(typeof run[0] == \"number\"){\r\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x, 0) : 0\");\r\n\t\t\t\tif(df.every(filteredRun, \"<= 0\")){\r\n\t\t\t\t\tnoDataFunc();\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\tif(this.opt.labels){\r\n\t\t\t\t\tlabels = arr.map(slices, function(x){\r\n\t\t\t\t\t\treturn x > 0 ? this._getLabel(x * 100) + \"%\" : \"\";\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfilteredRun = df.map(run, \"x ? Math.max(x.y, 0) : 0\");\r\n\t\t\t\tif(!filteredRun.length || df.every(filteredRun, \"<= 0\")){\r\n\t\t\t\t\tnoDataFunc();\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tslices = df.map(filteredRun, \"/this\", df.foldl(filteredRun, \"+\", 0));\r\n\t\t\t\tif(this.opt.labels){\r\n\t\t\t\t\tlabels = arr.map(slices, function(x, i){\r\n\t\t\t\t\t\tif(x < 0){ return \"\"; }\r\n\t\t\t\t\t\tvar v = run[i];\r\n\t\t\t\t\t\treturn v.hasOwnProperty(\"text\") ? v.text : this._getLabel(x * 100) + \"%\";\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar themes = df.map(run, function(v){\r\n\t\t\t\tvar tMixin = [this.opt, this.run];\r\n\t\t\t\tif(v !== null && typeof v != \"number\"){\r\n\t\t\t\t\ttMixin.push(v);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\ttMixin.push(this.opt.styleFunc(v));\r\n\t\t\t\t}\r\n\t\t\t\treturn t.next(\"slice\", tMixin, true);\r\n\t\t\t}, this);\r\n\r\n\t\t\tif(this.opt.labels) {\r\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label, i){\r\n\t\t\t\t\tvar font = themes[i].series.font;\r\n\t\t\t\t\treturn g._base._getTextBox(label, {font: font}).w;\r\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\r\n\r\n\t\t\t\tif(this.opt.labelOffset < 0){\r\n\t\t\t\t\tr = Math.min(rx - 2 * shift, ry - size) + this.opt.labelOffset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.opt.hasOwnProperty(\"radius\")){\r\n\t\t\t\tr = this.opt.radius < r * 0.9 ? this.opt.radius : r * 0.9;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.opt.radius && this.opt.labels && this.opt.labelStyle == \"columns\") {\r\n\t\t\t\tr = r / 2;\r\n\t\t\t\tif (rx > ry && rx > r * 2) {\r\n\t\t\t\t\tr *= rx / (r * 2);\r\n\t\t\t\t}\r\n\t\t\t\tif (r >= ry * 0.8) {\r\n\t\t\t\t\tr = ry * 0.8;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (r >= ry * 0.9) {\r\n\t\t\t\t\tr = ry * 0.9;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlabelR = r - this.opt.labelOffset;\r\n\r\n\t\t\tvar circle = {\r\n\t\t\t\t\tcx: offsets.l + rx,\r\n\t\t\t\t\tcy: offsets.t + ry,\r\n\t\t\t\t\tr:  r\r\n\t\t\t\t};\r\n\r\n\t\t\tthis.dyn = [];\r\n\t\t\t// draw slices\r\n\t\t\tvar eventSeries = new Array(slices.length);\r\n\r\n\t\t\t// Calulate primarily size for each slice\r\n\t\t\tvar slicesSteps = [], localStart = start;\r\n\t\t\tvar minWidth = this.opt.minWidth;\r\n\t\t\tarr.forEach(slices, function(slice, i){\r\n\t\t\t\tif(slice === 0){\r\n\t\t\t\t\tslicesSteps[i] = {\r\n\t\t\t\t\t\tstep: 0,\r\n\t\t\t\t\t\tend: localStart,\r\n\t\t\t\t\t\tstart: localStart,\r\n\t\t\t\t\t\tweak: false\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar end = localStart + slice * 2 * Math.PI;\r\n\t\t\t\tif(i === slices.length - 1){\r\n\t\t\t\t\tend = startAngle + 2 * Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\tvar step = end - localStart,\r\n\t\t\t\t\tdist = step * r;\r\n\t\t\t\tslicesSteps[i] = {\r\n\t\t\t\t\tstep:  step,\r\n\t\t\t\t\tstart: localStart,\r\n\t\t\t\t\tend:   end,\r\n\t\t\t\t\tweak: dist < minWidth\r\n\t\t\t\t};\r\n\t\t\t\tlocalStart = end;\r\n\t\t\t});\r\n\r\n\t\t\tif(minWidth > 0){\r\n\t\t\t\tvar weakCount = 0, weakCoef = minWidth / r, oldWeakCoefSum = 0, i;\r\n\t\t\t\tfor(i = slicesSteps.length - 1; i >= 0; i--){\r\n\t\t\t\t\tif(slicesSteps[i].weak){\r\n\t\t\t\t\t\t++weakCount;\r\n\t\t\t\t\t\toldWeakCoefSum += slicesSteps[i].step;\r\n\t\t\t\t\t\tslicesSteps[i].step = weakCoef;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// make sure that our steps are small enough\r\n\t\t\t\tvar weakCoefSum = weakCount * weakCoef;\r\n\t\t\t\tif(weakCoefSum > Math.PI){\r\n\t\t\t\t\tweakCoef = Math.PI / weakCount;\r\n\t\t\t\t\tfor(i = 0; i < slicesSteps.length; ++i){\r\n\t\t\t\t\t\tif(slicesSteps[i].weak){\r\n\t\t\t\t\t\t\tslicesSteps[i].step = weakCoef;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tweakCoefSum = Math.PI;\r\n\t\t\t\t}\r\n\t\t\t\t// now let's redistribute percentage\r\n\t\t\t\tif(weakCount > 0){\r\n\t\t\t\t\tweakCoef = 1 - (weakCoefSum - oldWeakCoefSum) / 2 / Math.PI;\r\n\t\t\t\t\tfor(i = 0; i < slicesSteps.length; ++i){\r\n\t\t\t\t\t\tif(!slicesSteps[i].weak){\r\n\t\t\t\t\t\t\tslicesSteps[i].step = weakCoef * slicesSteps[i].step;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// now let's update start and end values\r\n\t\t\t\tfor(i = 0; i < slicesSteps.length; ++i){\r\n\t\t\t\t\tslicesSteps[i].start = i ? slicesSteps[i].end : localStart;\r\n\t\t\t\t\tslicesSteps[i].end = slicesSteps[i].start + slicesSteps[i].step;\r\n\t\t\t\t}\r\n\t\t\t\t// let's make sure that our last end is exactly 2 * Math.PI\r\n\t\t\t\tfor(i = slicesSteps.length - 1; i >= 0; --i){\r\n\t\t\t\t\tif(slicesSteps[i].step !== 0){\r\n\t\t\t\t\t\tslicesSteps[i].end = localStart + 2 * Math.PI;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlocalStart = start;\r\n\t\t\tvar o, specialFill;\r\n\t\t\tarr.some(slices, function(slice, i){\r\n\t\t\t\tvar shape;\r\n\t\t\t\tvar v = run[i], theme = themes[i];\r\n\r\n\t\t\t\tif(slice >= 1){\r\n\t\t\t\t\t// whole pie\r\n\t\t\t\t\tspecialFill = this._plotFill(theme.series.fill, dim, offsets);\r\n\t\t\t\t\tspecialFill = this._shapeFill(specialFill,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tx: circle.cx - circle.r, y: circle.cy - circle.r,\r\n\t\t\t\t\t\t\twidth: 2 * circle.r, height: 2 * circle.r\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, circle.r);\r\n\t\t\t\t\tshape = this._createRing(s, circle).setFill(specialFill).setStroke(theme.series.stroke);\r\n\t\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\r\n\r\n\t\t\t\t\tif(events){\r\n\t\t\t\t\t\to = {\r\n\t\t\t\t\t\t\telement: \"slice\",\r\n\t\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\t\trun:     this.run,\r\n\t\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\t\tx:       i,\r\n\t\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\r\n\t\t\t\t\t\t\tcx:      circle.cx,\r\n\t\t\t\t\t\t\tcy:      circle.cy,\r\n\t\t\t\t\t\t\tcr:      r\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar k;\r\n\t\t\t\t\tfor(k = i + 1; k < slices.length; k++){\r\n\t\t\t\t\t\ttheme = themes[k];\r\n\t\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\t// stop iteration\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(slicesSteps[i].step === 0){\r\n\t\t\t\t\t// degenerated slice\r\n\t\t\t\t\t// But we still want a fill since this will be skipped and we need the fill\r\n\t\t\t\t\t// for the label.\r\n\t\t\t\t\tthis.dyn.push({fill: theme.series.fill, stroke: theme.series.stroke});\r\n\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// calculate the geometry of the slice\r\n\t\t\t\tvar step = slicesSteps[i].step,\r\n\t\t\t\t\tx1 = circle.cx + r * Math.cos(localStart),\r\n\t\t\t\t\ty1 = circle.cy + r * Math.sin(localStart),\r\n\t\t\t\t\tx2 = circle.cx + r * Math.cos(localStart + step),\r\n\t\t\t\t\ty2 = circle.cy + r * Math.sin(localStart + step);\r\n\t\t\t\t// draw the slice\r\n\t\t\t\tvar fanSize = m._degToRad(this.opt.fanSize), stroke;\r\n\t\t\t\tif(theme.series.fill && theme.series.fill.type === \"radial\" && this.opt.radGrad === \"fan\" && step > fanSize){\r\n\t\t\t\t\tvar group = s.createGroup(), nfans = Math.ceil(step / fanSize), delta = step / nfans;\r\n\t\t\t\t\tspecialFill = this._shapeFill(theme.series.fill,\r\n\t\t\t\t\t\t{x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\r\n\t\t\t\t\tvar j, alpha, beta, fansx, fansy, fanex, faney;\r\n\t\t\t\t\tfor(j = 0; j < nfans; ++j){\r\n\t\t\t\t\t\talpha = localStart + (j - FUDGE_FACTOR) * delta;\r\n\t\t\t\t\t\tbeta  = localStart + (j + 1 + FUDGE_FACTOR) * delta;\r\n\t\t\t\t\t\tfansx = j == 0 ? x1 : circle.cx + r * Math.cos(alpha);\r\n\t\t\t\t\t\tfansy = j == 0 ? y1 : circle.cy + r * Math.sin(alpha);\r\n\t\t\t\t\t\tfanex = j == nfans - 1 ? x2 : circle.cx + r * Math.cos(beta);\r\n\t\t\t\t\t\tfaney = j == nfans - 1 ? y2 : circle.cy + r * Math.sin(beta);\r\n\t\t\t\t\t\tthis._createSlice(group, circle, r, fansx, fansy, fanex, faney, alpha, delta).\r\n\t\t\t\t\t\t\tsetFill(this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r,\r\n\t\t\t\t\t\t\t\tlocalStart + (j + 0.5) * delta, localStart + (j + 0.5) * delta));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstroke = theme.series.stroke;\r\n\t\t\t\t\tthis._createSlice(group, circle, r, x1, y1, x2, y2, localStart, step).setStroke(stroke);\r\n\t\t\t\t\tshape = group;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstroke = theme.series.stroke;\r\n\r\n\t\t\t\t\tshape = this._createSlice(s, circle, r, x1, y1, x2, y2, localStart, step).setStroke(stroke);\r\n\r\n\t\t\t\t\tspecialFill = theme.series.fill;\r\n\t\t\t\t\tif(specialFill && specialFill.type === \"radial\"){\r\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, {x: circle.cx - circle.r, y: circle.cy - circle.r, width: 2 * circle.r, height: 2 * circle.r});\r\n\t\t\t\t\t\tif(this.opt.radGrad === \"linear\"){\r\n\t\t\t\t\t\t\tspecialFill = this._pseudoRadialFill(specialFill, {x: circle.cx, y: circle.cy}, r, localStart, localStart + step);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(specialFill && specialFill.type === \"linear\"){\r\n\t\t\t\t\t\tvar bbox = lang.clone(shape.getBoundingBox());\r\n\t\t\t\t\t\tif(g.renderer === \"svg\"){\r\n\t\t\t\t\t\t\t// Try to fix the bounding box calculations for\r\n\t\t\t\t\t\t\t// height.  Only really works for SVG.\r\n\t\t\t\t\t\t\tvar pos = {w: 0, h: 0};\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tpos = domGeom.position(shape.rawNode);\r\n\t\t\t\t\t\t\t}catch(ignore){}\r\n\t\t\t\t\t\t\tif(pos.h > bbox.height){\r\n\t\t\t\t\t\t\t\tbbox.height = pos.h;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(pos.w > bbox.width){\r\n\t\t\t\t\t\t\t\tbbox.width = pos.w;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tspecialFill = this._plotFill(specialFill, dim, offsets);\r\n\t\t\t\t\t\tspecialFill = this._shapeFill(specialFill, bbox);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tshape.setFill(specialFill);\r\n\t\t\t\t}\r\n\t\t\t\tthis.dyn.push({fill: specialFill, stroke: theme.series.stroke});\r\n\r\n\t\t\t\tif(events){\r\n\t\t\t\t\to = {\r\n\t\t\t\t\t\telement: \"slice\",\r\n\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\trun:     this.run,\r\n\t\t\t\t\t\tshape:   shape,\r\n\t\t\t\t\t\tx:       i,\r\n\t\t\t\t\t\ty:       typeof v == \"number\" ? v : v.y,\r\n\t\t\t\t\t\tcx:      circle.cx,\r\n\t\t\t\t\t\tcy:      circle.cy,\r\n\t\t\t\t\t\tcr:      r\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlocalStart = localStart + step;\r\n\r\n\t\t\t\treturn false;\t// continue\r\n\t\t\t}, this);\r\n\t\t\t// draw labels\r\n\t\t\tif(this.opt.labels){\r\n\t\t\t\tvar isRtl = has(\"dojo-bidi\") && this.chart.isRightToLeft();\r\n\t\t\t\tif(this.opt.labelStyle == \"default\"){\r\n\t\t\t\t\tstart = startAngle;\r\n\t\t\t\t\tlocalStart = start;\r\n\t\t\t\t\tarr.some(slices, function(slice, i){\r\n\t\t\t\t\t\tif(slice <= 0 && !this.opt.minWidth){\r\n\t\t\t\t\t\t\t// degenerated slice\r\n\t\t\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar theme = themes[i];\r\n\t\t\t\t\t\tif(slice >= 1){\r\n\t\t\t\t\t\t\t// whole pie\r\n\t\t\t\t\t\t\tthis.renderLabel(s, circle.cx, circle.cy + size / 2, labels[i], theme, this.opt.labelOffset > 0);\r\n\t\t\t\t\t\t\treturn true;\t// stop iteration\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// calculate the geometry of the slice\r\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\r\n\t\t\t\t\t\tif(i + 1 == slices.length){\r\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.opt.omitLabels && end-start < 0.001){\r\n\t\t\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar labelAngle = localStart + (slicesSteps[i].step / 2),//(start + end) / 2,\r\n\t\t\t\t\t\t\tx = circle.cx + labelR * Math.cos(labelAngle),\r\n\t\t\t\t\t\t\ty = circle.cy + labelR * Math.sin(labelAngle) + size / 2;\r\n\t\t\t\t\t\t// draw the label\r\n\t\t\t\t\t\tthis.renderLabel(s, isRtl ? dim.width - x : x, y, labels[i], theme, this.opt.labelOffset > 0);\r\n\t\t\t\t\t\tlocalStart += slicesSteps[i].step;\r\n\t\t\t\t\t\tstart = end;\r\n\t\t\t\t\t\treturn false;\t// continue\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}else if(this.opt.labelStyle == \"columns\"){\r\n\t\t\t\t\t//calculate label angles\r\n\t\t\t\t\tvar omitLabels = this.opt.omitLabels;\r\n\t\t\t\t\tstart = startAngle;\r\n\t\t\t\t\tlocalStart = start;\r\n\t\t\t\t\tvar labeledSlices = [],\r\n\t\t\t\t\t\tsignificantCount = 0, k;\r\n\t\t\t\t\tfor(k = slices.length - 1; k >= 0; --k){\r\n\t\t\t\t\t\tif(slices[k]){\r\n\t\t\t\t\t\t\t++significantCount;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tarr.forEach(slices, function(slice, i){\r\n\t\t\t\t\t\tvar end = start + slice * 2 * Math.PI;\r\n\t\t\t\t\t\tif(i + 1 == slices.length){\r\n\t\t\t\t\t\t\tend = startAngle + 2 * Math.PI;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.minWidth !== 0 || end - start >= 0.001){\r\n\t\t\t\t\t\t\t// var labelAngle = (start + end) / 2;\r\n\t\t\t\t\t\t\tvar labelAngle = localStart + (slicesSteps[i].step / 2);//(start + end) / 2,\r\n\t\t\t\t\t\t\tif(significantCount === 1 && !this.opt.minWidth){\r\n\t\t\t\t\t\t\t\tlabelAngle = (start + end) / 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlabeledSlices.push({\r\n\t\t\t\t\t\t\t\tangle: labelAngle,\r\n\t\t\t\t\t\t\t\tleft:  Math.cos(labelAngle) < 0,\r\n\t\t\t\t\t\t\t\ttheme: themes[i],\r\n\t\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\t\tomit: omitLabels? end - start < 0.001:false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstart = end;\r\n\t\t\t\t\t\tlocalStart += slicesSteps[i].step;\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\t//calculate label radius to each slice\r\n\t\t\t\t\tvar labelHeight = g._base._getTextBox(\"a\", {font:taFont, whiteSpace: \"nowrap\"}).h;\r\n\t\t\t\t\tthis._getProperLabelRadius(labeledSlices, labelHeight, circle.r * 1.1);\r\n\r\n\t\t\t\t\t//draw label and wiring\r\n\t\t\t\t\tvar leftColumn  = circle.cx - circle.r * 2,\r\n\t\t\t\t\t\trightColumn = circle.cx + circle.r * 2;\r\n\t\t\t\t\tarr.forEach(labeledSlices, function(slice){\r\n\t\t\t\t\t\tif(slice.omit){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar cTheme = themes[slice.index], lrPadding = 0;\r\n\t\t\t\t\t\tif(cTheme && cTheme.axis && cTheme.axis.tick && cTheme.axis.tick.labelGap){\r\n\t\t\t\t\t\t\t// Try to pad the lable a bit, the same as a tick gap.\r\n\t\t\t\t\t\t\tlrPadding = cTheme.axis.tick.labelGap;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar labelWidth = g._base._getTextBox(labels[slice.index],\r\n\t\t\t\t\t\t\t\t{font: cTheme.series.font, whiteSpace: \"nowrap\", paddingLeft: lrPadding + \"px\"}).w,\r\n\t\t\t\t\t\t\tx = circle.cx + slice.labelR * Math.cos(slice.angle),\r\n\t\t\t\t\t\t\ty = circle.cy + slice.labelR * Math.sin(slice.angle),\r\n\t\t\t\t\t\t\tjointX = (slice.left) ? (leftColumn + labelWidth) : (rightColumn - labelWidth),\r\n\t\t\t\t\t\t\tlabelX = (slice.left) ? leftColumn : jointX + lrPadding,\r\n\t\t\t\t\t\t\tnewRadius = circle.r,\r\n\t\t\t\t\t\t\twiring = s.createPath().moveTo(circle.cx + newRadius * Math.cos(slice.angle),\r\n\t\t\t\t\t\t\t\tcircle.cy + newRadius * Math.sin(slice.angle));\r\n\t\t\t\t\t\tif(Math.abs(slice.labelR * Math.cos(slice.angle)) < circle.r * 2 - labelWidth){\r\n\t\t\t\t\t\t\twiring.lineTo(x, y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twiring.lineTo(jointX, y).setStroke(slice.theme.series.labelWiring);\r\n\t\t\t\t\t\t// Push the wiring to the back so that highlight/magnify actions don't bleed the wire.\r\n\t\t\t\t\t\twiring.moveToBack();\r\n\t\t\t\t\t\t// Try to adjust the wiring position here.  The browser always adds a bit\r\n\t\t\t\t\t\t// of padding on height, so divide by 3 instead of 2.\r\n\t\t\t\t\t\tvar mid = labelHeight/3 + y;\r\n\t\t\t\t\t\tvar elem = this.renderLabel(s, labelX, mid || 0, labels[slice.index], cTheme, false, \"left\");\r\n\r\n\t\t\t\t\t\tif(events && !this.opt.htmlLabels){\r\n\t\t\t\t\t\t\tvar fontWidth  = g._base._getTextBox(labels[slice.index], {font: slice.theme.series.font}).w || 0,\r\n\t\t\t\t\t\t\t\tfontHeight = g.normalizedLength(g.splitFontString(slice.theme.series.font).size);\r\n\t\t\t\t\t\t\to = {\r\n\t\t\t\t\t\t\t\telement: \"labels\",\r\n\t\t\t\t\t\t\t\tindex:   slice.index,\r\n\t\t\t\t\t\t\t\trun:     this.run,\r\n\t\t\t\t\t\t\t\tshape:   elem,\r\n\t\t\t\t\t\t\t\tx:       labelX,\r\n\t\t\t\t\t\t\t\ty:       y,\r\n\t\t\t\t\t\t\t\tlabel:   labels[slice.index]\r\n\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\tvar shp = elem.getShape(),\r\n\t\t\t\t\t\t\t\tlt = domGeom.position(this.chart.node, true),\r\n\t\t\t\t\t\t\t\taroundRect = lang.mixin({ type : 'rect' }, {\r\n\t\t\t\t\t\t\t\t\tx: shp.x,\r\n\t\t\t\t\t\t\t\t\ty: shp.y - 2 * fontHeight\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\taroundRect.x += lt.x;\r\n\t\t\t\t\t\t\taroundRect.y += lt.y;\r\n\t\t\t\t\t\t\taroundRect.x = Math.round(aroundRect.x);\r\n\t\t\t\t\t\t\taroundRect.y = Math.round(aroundRect.y);\r\n\t\t\t\t\t\t\taroundRect.width  = Math.ceil(fontWidth);\r\n\t\t\t\t\t\t\taroundRect.height = Math.ceil(fontHeight);\r\n\r\n\t\t\t\t\t\t\to.aroundRect = aroundRect;\r\n\r\n\t\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\t\teventSeries[slices.length + slice.index] = o;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// post-process events to restore the original indexing\r\n\t\t\tvar esi = 0;\r\n\t\t\tthis._eventSeries[this.run.name] = df.map(run, function(v){\r\n\t\t\t\treturn v <= 0 ? null : eventSeries[esi++];\r\n\t\t\t});\r\n\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Pie\r\n\t\t},\r\n\r\n\t\t_getProperLabelRadius: function(slices, labelHeight, minRadius){\r\n\t\t\tif(slices.length == 1){\r\n\t\t\t\tslices[0].labelR = minRadius;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar leftCenterSlice = {}, rightCenterSlice = {}, leftMinSIN = 2, rightMinSIN = 2, i;\r\n\t\t\tvar tempSIN;\r\n\t\t\tfor(i = 0; i < slices.length; ++i){\r\n\t\t\t\ttempSIN = Math.abs(Math.sin(slices[i].angle));\r\n\t\t\t\tif(slices[i].left){\r\n\t\t\t\t\tif(leftMinSIN > tempSIN){\r\n\t\t\t\t\t\tleftMinSIN = tempSIN;\r\n\t\t\t\t\t\tleftCenterSlice = slices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(rightMinSIN > tempSIN){\r\n\t\t\t\t\t\trightMinSIN = tempSIN;\r\n\t\t\t\t\t\trightCenterSlice = slices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tleftCenterSlice.labelR = rightCenterSlice.labelR = minRadius;\r\n\t\t\tthis._caculateLabelR(leftCenterSlice,  slices, labelHeight);\r\n\t\t\tthis._caculateLabelR(rightCenterSlice, slices, labelHeight);\r\n\t\t},\r\n\r\n\t\t_caculateLabelR: function(firstSlice, slices, labelHeight){\r\n\t\t\tvar i, j, k, length = slices.length, currentLabelR = firstSlice.labelR, nextLabelR,\r\n\t\t\t\tstep = slices[firstSlice.index].left ? -labelHeight : labelHeight;\r\n\t\t\tfor(k = 0, i = firstSlice.index, j = (i + 1) % length; k < length && slices[i].left === slices[j].left; ++k){\r\n\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR + step) / Math.sin(slices[j].angle);\r\n\t\t\t\tcurrentLabelR = Math.max(firstSlice.labelR, nextLabelR);\r\n\t\t\t\tslices[j].labelR = currentLabelR;\r\n\t\t\t\ti = (i + 1) % length;\r\n\t\t\t\tj = (j + 1) % length;\r\n\t\t\t}\r\n\t\t\tif(k >= length){\r\n\t\t\t\tslices[0].labelR = firstSlice.labelR;\r\n\t\t\t}\r\n\t\t\tfor(k = 0, i = firstSlice.index, j = (i || length) - 1; k < length && slices[i].left === slices[j].left; ++k){\r\n\t\t\t\tnextLabelR = (Math.sin(slices[i].angle) * currentLabelR - step) / Math.sin(slices[j].angle);\r\n\t\t\t\tcurrentLabelR = Math.max(firstSlice.labelR, nextLabelR);\r\n\t\t\t\tslices[j].labelR = currentLabelR;\r\n\t\t\t\ti = (i || length) - 1;\r\n\t\t\t\tj = (j || length) - 1;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_createRing: function(group, circle){\r\n\t\t\tvar r = this.opt.innerRadius;\r\n\t\t\tif(r > 0){\r\n\t\t\t\t// Percentage, use circle.  Anything < 0 for innerRadius\r\n\t\t\t\t// is assumed to be a multiple of the radius.  So 0.25 innerRadius value\r\n\t\t\t\t// is computed to be 25% of the outer radius.\r\n\t\t\t\tr = circle.r * (r/100);\r\n\t\t\t}else if(r < 0){\r\n\t\t\t\tr = -r; // Assume it is pixels, fixed size hole.\r\n\t\t\t}\r\n\t\t\tif(r){\r\n\t\t\t\treturn group.createPath({}).setAbsoluteMode(true).\r\n\t\t\t\t\tmoveTo(circle.cx, circle.cy - circle.r).\r\n\t\t\t\t\tarcTo(circle.r, circle.r, 0, false, true, circle.cx + circle.r, circle.cy).\r\n\t\t\t\t\tarcTo(circle.r, circle.r, 0,  true, true, circle.cx, circle.cy - circle.r).\r\n\t\t\t\t\tclosePath().\r\n\t\t\t\t\tmoveTo(circle.cx, circle.cy - r).\r\n\t\t\t\t\tarcTo(r, r, 0, false, true, circle.cx + r, circle.cy).\r\n\t\t\t\t\tarcTo(r, r, 0,  true, true, circle.cx, circle.cy - r).\r\n\t\t\t\t\tclosePath();\r\n\t\t\t}\r\n\t\t\treturn group.createCircle(circle);\r\n\t\t},\r\n\t\t_createSlice: function(group, circle, R, x1, y1, x2, y2, fromAngle, stepAngle){\r\n\t\t\tvar r = this.opt.innerRadius;\r\n\t\t\tif(r > 0){\r\n\t\t\t\t// Percentage, use circle.  Anything < 0 for innerRadius\r\n\t\t\t\t// is assumed to be a multiple of the radius.  So 0.25 innerRadius value\r\n\t\t\t\t// is computed to be 25% of the outer radius.\r\n\t\t\t\tr = circle.r * (r/100);\r\n\t\t\t}else if(r < 0){\r\n\t\t\t\tr = -r; // Assume it is pixels, fixed size hole.\r\n\t\t\t}\r\n\t\t\tif(r){\r\n\t\t\t\tvar innerX1 = circle.cx + r * Math.cos(fromAngle),\r\n\t\t\t\t\tinnerY1 = circle.cy + r * Math.sin(fromAngle),\r\n\t\t\t\t\tinnerX2 = circle.cx + r * Math.cos(fromAngle + stepAngle),\r\n\t\t\t\t\tinnerY2 = circle.cy + r * Math.sin(fromAngle + stepAngle);\r\n\t\t\t\treturn group.createPath({}).setAbsoluteMode(true).\r\n\t\t\t\t\tmoveTo(innerX1, innerY1).\r\n\t\t\t\t\tlineTo(x1, y1).\r\n\t\t\t\t\tarcTo(R, R, 0, stepAngle > Math.PI, true, x2, y2).\r\n\t\t\t\t\tlineTo(innerX2, innerY2).\r\n\t\t\t\t\tarcTo(r, r, 0, stepAngle > Math.PI, false, innerX1, innerY1).\r\n\t\t\t\t\tclosePath();\r\n\t\t\t}\r\n\t\t\treturn group.createPath({}).setAbsoluteMode(true).\r\n\t\t\t\tmoveTo(circle.cx, circle.cy).\r\n\t\t\t\tlineTo(x1, y1).\r\n\t\t\t\tarcTo(R, R, 0, stepAngle > Math.PI, true, x2, y2).\r\n\t\t\t\tlineTo(circle.cx, circle.cy).\r\n\t\t\t\tclosePath();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1BpZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9wbG90MmQvUGllLmpzPzhjNGQiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvbGFuZ1wiLCBcImRvam8vX2Jhc2UvYXJyYXlcIiAsXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCJkb2pvL2RvbS1nZW9tZXRyeVwiLCBcImRvam8vX2Jhc2UvQ29sb3JcIixcclxuXHRcdFwiLi9CYXNlXCIsIFwiLi9fUGxvdEV2ZW50c1wiLCBcIi4vY29tbW9uXCIsXHJcblx0XHRcImRvam94L2dmeFwiLCBcImRvam94L2dmeC9tYXRyaXhcIiwgXCJkb2pveC9sYW5nL2Z1bmN0aW9uYWxcIiwgXCJkb2pveC9sYW5nL3V0aWxzXCIsXCJkb2pvL2hhc1wiXSxcclxuXHRmdW5jdGlvbihsYW5nLCBhcnIsIGRlY2xhcmUsIGRvbUdlb20sIENvbG9yLCBCYXNlLCBQbG90RXZlbnRzLCBkYywgZywgbSwgZGYsIGR1LCBoYXMpe1xyXG5cclxuXHQvKj09PT09XHJcblx0ZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5fX1BpZUN0b3JBcmdzXCIsIGRvam94LmNoYXJ0aW5nLnBsb3QyZC5fX0RlZmF1bHRDdG9yQXJncywge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFNwZWNpYWxpemVkIGtleXdvcmQgYXJndW1lbnRzIG9iamVjdCBmb3IgdXNlIGluIGRlZmluaW5nIHBhcmFtZXRlcnMgb24gYSBQaWUgY2hhcnQuXHJcblxyXG5cdFx0Ly8gbGFiZWxzOiBCb29sZWFuP1xyXG5cdFx0Ly9cdFx0V2hldGhlciBvciBub3QgdG8gZHJhdyBsYWJlbHMgZm9yIGVhY2ggcGllIHNsaWNlLiAgRGVmYXVsdCBpcyB0cnVlLlxyXG5cdFx0bGFiZWxzOlx0XHRcdHRydWUsXHJcblxyXG5cdFx0Ly8gdGlja3M6IEJvb2xlYW4/XHJcblx0XHQvL1x0XHRXaGV0aGVyIG9yIG5vdCB0byBkcmF3IHRpY2tzIHRvIGxhYmVscyB3aXRoaW4gZWFjaCBzbGljZS4gRGVmYXVsdCBpcyBmYWxzZS5cclxuXHRcdHRpY2tzOlx0XHRcdGZhbHNlLFxyXG5cclxuXHRcdC8vIGZpeGVkOiBCb29sZWFuP1xyXG5cdFx0Ly9cdFx0V2hldGhlciBhIGZpeGVkIHByZWNpc2lvbiBtdXN0IGJlIGFwcGxpZWQgdG8gZGF0YSB2YWx1ZXMgZm9yIGRpc3BsYXkuIERlZmF1bHQgaXMgdHJ1ZS5cclxuXHRcdGZpeGVkOlx0XHRcdHRydWUsXHJcblxyXG5cdFx0Ly8gcHJlY2lzaW9uOiBOdW1iZXI/XHJcblx0XHQvL1x0XHRUaGUgcHJlY2lzaW9uIGF0IHdoaWNoIHRvIHJvdW5kIGRhdGEgdmFsdWVzIGZvciBkaXNwbGF5LiBEZWZhdWx0IGlzIDAuXHJcblx0XHRwcmVjaXNpb246XHRcdDEsXHJcblxyXG5cdFx0Ly8gbGFiZWxPZmZzZXQ6IE51bWJlcj9cclxuXHRcdC8vXHRcdFRoZSBhbW91bnQgaW4gcGl4ZWxzIGJ5IHdoaWNoIHRvIG9mZnNldCBsYWJlbHMuICBEZWZhdWx0IGlzIDIwLlxyXG5cdFx0bGFiZWxPZmZzZXQ6XHQyMCxcclxuXHJcblx0XHQvLyBsYWJlbFN0eWxlOiBTdHJpbmc/XHJcblx0XHQvL1x0XHRPcHRpb25zIGFzIHRvIHdoZXJlIHRvIGRyYXcgbGFiZWxzLiAgVmFsdWVzIGluY2x1ZGUgXCJkZWZhdWx0XCIsIGFuZCBcImNvbHVtbnNcIi5cdERlZmF1bHQgaXMgXCJkZWZhdWx0XCIuXHJcblx0XHRsYWJlbFN0eWxlOlx0XHRcImRlZmF1bHRcIixcdC8vIGRlZmF1bHQvY29sdW1uc1xyXG5cclxuXHRcdC8vIG9taXRMYWJlbHM6IEJvb2xlYW4/XHJcblx0XHQvL1x0XHRXaGV0aGVyIGxhYmVscyBvZiBzbGljZXMgc21hbGwgdG8gdGhlIHBvaW50IG9mIG5vdCBiZWluZyB2aXNpYmxlIGFyZSBvbWl0dGVkLlx0RGVmYXVsdCBmYWxzZS5cclxuXHRcdG9taXRMYWJlbHM6IGZhbHNlLFxyXG5cclxuXHRcdC8vIGh0bWxMYWJlbHM6IEJvb2xlYW4/XHJcblx0XHQvL1x0XHRXaGV0aGVyIG9yIG5vdCB0byB1c2UgSFRNTCB0byByZW5kZXIgc2xpY2UgbGFiZWxzLiBEZWZhdWx0IGlzIHRydWUuXHJcblx0XHRodG1sTGFiZWxzOlx0XHR0cnVlLFxyXG5cclxuXHRcdC8vIHJhZEdyYWQ6IFN0cmluZz9cclxuXHRcdC8vXHRcdFRoZSB0eXBlIG9mIHJhZGlhbCBncmFkaWVudCB0byB1c2UgaW4gcmVuZGVyaW5nLiAgRGVmYXVsdCBpcyBcIm5hdGl2ZVwiLlxyXG5cdFx0cmFkR3JhZDogICAgICAgIFwibmF0aXZlXCIsXHJcblxyXG5cdFx0Ly8gZmFuU2l6ZTogTnVtYmVyP1xyXG5cdFx0Ly9cdFx0VGhlIGFtb3VudCBmb3IgYSByYWRpYWwgZ3JhZGllbnQuICBEZWZhdWx0IGlzIDUuXHJcblx0XHRmYW5TaXplOlx0XHQ1LFxyXG5cclxuXHRcdC8vIHN0YXJ0QW5nbGU6IE51bWJlcj9cclxuXHRcdC8vXHRcdFdoZXJlIHRvIGJlaW5nIHJlbmRlcmluZyBncmFkaWVudHMgaW4gc2xpY2VzLCBpbiBkZWdyZWVzLiAgRGVmYXVsdCBpcyAwLlxyXG5cdFx0c3RhcnRBbmdsZTogICAgIDAsXHJcblxyXG5cdFx0Ly8gcmFkaXVzOiBOdW1iZXI/XHJcblx0XHQvL1x0XHRUaGUgc2l6ZSBvZiB0aGUgcmFkaWFsIGdyYWRpZW50LiAgRGVmYXVsdCBpcyAwLlxyXG5cdFx0cmFkaXVzOlx0XHQwLFxyXG5cclxuXHRcdC8vIHNoYWRvdzogZG9qb3guZ2Z4LlN0cm9rZT9cclxuXHRcdC8vXHRcdEFuIG9wdGlvbmFsIHN0cm9rZSB0byB1c2UgdG8gZHJhdyBhbnkgc2hhZG93cyBmb3IgYSBzZXJpZXMgb24gYSBwbG90LlxyXG5cdFx0c2hhZG93Olx0XHR7fSxcclxuXHJcblx0XHQvLyBmaWxsOiBkb2pveC5nZnguRmlsbD9cclxuXHRcdC8vXHRcdEFueSBmaWxsIHRvIGJlIHVzZWQgZm9yIGVsZW1lbnRzIG9uIHRoZSBwbG90LlxyXG5cdFx0ZmlsbDpcdFx0e30sXHJcblxyXG5cdFx0Ly8gZmlsdGVyOiBkb2pveC5nZnguRmlsdGVyP1xyXG5cdFx0Ly9cdFx0QW4gU1ZHIGZpbHRlciB0byBiZSB1c2VkIGZvciBlbGVtZW50cyBvbiB0aGUgcGxvdC4gZ2Z4IFNWRyByZW5kZXJlciBtdXN0IGJlIHVzZWQgYW5kIGRvam94L2dmeC9zdmdleHQgbXVzdFxyXG5cdFx0Ly9cdFx0YmUgcmVxdWlyZWQgZm9yIHRoaXMgdG8gd29yay5cclxuXHRcdGZpbHRlcjpcdFx0e30sXHJcblxyXG5cdFx0Ly8gc3R5bGVGdW5jOiBGdW5jdGlvbj9cclxuXHRcdC8vXHRcdEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgc3R5bGluZyBvYmplY3QgZm9yIHRoZSBhIGdpdmVuIGRhdGEgaXRlbS5cclxuXHRcdHN0eWxlRnVuYzpcdG51bGwsXHJcblxyXG5cdFx0Ly8gaW5uZXJSYWRpdXM6IE51bWJlcj9cclxuXHRcdC8vXHRcdFRoZSBpbm5lciByYWRpdXMgb2YgYSByaW5nIGluIHBlcmNlbnQgKDAtMTAwKS4gIElmIHZhbHVlIDwgMFxyXG5cdFx0Ly9cdFx0dGhlbiBpdCBpcyBhc3N1bWVkIHRvIGJlIHBpeGVscywgbm90IHBlcmNlbnQuXHJcblx0XHRpbm5lclJhZGl1czpcdDAsXHJcblxyXG5cdFx0Ly8gIG1pbldpZHRoOiBOdW1iZXI/XHJcblx0XHQvLyAgICAgIFRoZSBtaW5pbXVtIHdpZHRoIG9mIGEgcGllIHNsaWNlIGF0IGl0cyBjaG9yZC4gVGhlIGRlZmF1bHQgaXMgMTBweC5cclxuXHRcdG1pbldpZHRoOiAgIDEwXHJcblxyXG5cdH0pO1xyXG5cdD09PT09Ki9cclxuXHJcblx0dmFyIEZVREdFX0ZBQ1RPUiA9IDAuMjsgLy8gdXNlIHRvIG92ZXJsYXAgZmFuc1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5QaWVcIiwgW0Jhc2UsIFBsb3RFdmVudHNdLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0VGhlIHBsb3QgdGhhdCByZXByZXNlbnRzIGEgdHlwaWNhbCBwaWUgY2hhcnQuXHJcblx0XHRkZWZhdWx0UGFyYW1zOiB7XHJcblx0XHRcdGxhYmVsczpcdFx0XHR0cnVlLFxyXG5cdFx0XHR0aWNrczpcdFx0XHRmYWxzZSxcclxuXHRcdFx0Zml4ZWQ6XHRcdFx0dHJ1ZSxcclxuXHRcdFx0cHJlY2lzaW9uOlx0XHQxLFxyXG5cdFx0XHRsYWJlbE9mZnNldDpcdDIwLFxyXG5cdFx0XHRsYWJlbFN0eWxlOlx0XHRcImRlZmF1bHRcIixcdC8vIGRlZmF1bHQvY29sdW1uc1xyXG5cdFx0XHRodG1sTGFiZWxzOlx0XHR0cnVlLFx0XHQvLyB1c2UgSFRNTCB0byBkcmF3IGxhYmVsc1xyXG5cdFx0XHRyYWRHcmFkOiAgICAgICBcIm5hdGl2ZVwiLFx0Ly8gb3IgXCJsaW5lYXJcIiwgb3IgXCJmYW5cIlxyXG5cdFx0XHRmYW5TaXplOlx0XHQgICA1LFx0XHRcdC8vIG1heGltdW0gZmFuIHNpemUgaW4gZGVncmVlc1xyXG5cdFx0XHRzdGFydEFuZ2xlOiAgICAwLFx0XHRcdC8vIHN0YXJ0IGFuZ2xlIGZvciBzbGljZXMgaW4gZGVncmVlc1xyXG5cdFx0XHRpbm5lclJhZGl1czpcdDAsXHRcdFx0Ly8gaW5uZXIgcmFkaXVzIGluIHBpeGVsc1xyXG5cdFx0XHRtaW5XaWR0aDogICAgICAwLFx0XHRcdC8vIG1pbmltYWwgd2lkdGggb2YgZGVnZW5lcmF0ZWQgc2xpY2VzXHJcblx0XHRcdHplcm9EYXRhTWVzc2FnZTogXCJcIiAgICAgLy8gVGhlIG1lc3NhZ2UgdG8gZGlzcGxheSB3aGVuIHRoZXJlIGlzIG5vIGRhdGEsIGlmIHByb3ZpZGVkIGJ5IHRoZSB1c2VyLlxyXG5cdFx0fSxcclxuXHRcdG9wdGlvbmFsUGFyYW1zOiB7XHJcblx0XHRcdHJhZGl1czpcdFx0MCxcclxuXHRcdFx0b21pdExhYmVsczogZmFsc2UsXHJcblx0XHRcdC8vIHRoZW1lIGNvbXBvbmVudHNcclxuXHRcdFx0c3Ryb2tlOlx0XHR7fSxcclxuXHRcdFx0b3V0bGluZTpcdHt9LFxyXG5cdFx0XHRzaGFkb3c6XHRcdHt9LFxyXG5cdFx0XHRmaWxsOlx0XHR7fSxcclxuXHRcdFx0ZmlsdGVyOiAgICAge30sXHJcblx0XHRcdHN0eWxlRnVuYzpcdG51bGwsXHJcblx0XHRcdGZvbnQ6XHRcdFwiXCIsXHJcblx0XHRcdGZvbnRDb2xvcjpcdFwiXCIsXHJcblx0XHRcdGxhYmVsV2lyaW5nOiB7fVxyXG5cdFx0fSxcclxuXHJcblx0XHRjb25zdHJ1Y3RvcjogZnVuY3Rpb24oY2hhcnQsIGt3QXJncyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENyZWF0ZSBhIHBpZSBwbG90LlxyXG5cdFx0XHR0aGlzLm9wdCA9IGxhbmcuY2xvbmUodGhpcy5kZWZhdWx0UGFyYW1zKTtcclxuXHRcdFx0ZHUudXBkYXRlV2l0aE9iamVjdCh0aGlzLm9wdCwga3dBcmdzKTtcclxuXHRcdFx0ZHUudXBkYXRlV2l0aFBhdHRlcm4odGhpcy5vcHQsIGt3QXJncywgdGhpcy5vcHRpb25hbFBhcmFtcyk7XHJcblx0XHRcdHRoaXMuYXhlcyA9IFtdO1xyXG5cdFx0XHR0aGlzLnJ1biA9IG51bGw7XHJcblx0XHRcdHRoaXMuZHluID0gW107XHJcblx0XHRcdHRoaXMucnVuRmlsdGVyID0gW107XHJcblx0XHRcdGlmKGt3QXJncyAmJiBrd0FyZ3MuaGFzT3duUHJvcGVydHkoXCJpbm5lclJhZGl1c1wiKSl7XHJcblx0XHRcdFx0dGhpcy5fcGxvdFNldElubmVyUmFkaXVzID0gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGNsZWFyOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRDbGVhciBvdXQgYWxsIG9mIHRoZSBpbmZvcm1hdGlvbiB0aWVkIHRvIHRoaXMgcGxvdC5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1BpZVxyXG5cdFx0XHQvL1x0XHRBIHJlZmVyZW5jZSB0byB0aGlzIHBsb3QgZm9yIGZ1bmN0aW9uYWwgY2hhaW5pbmcuXHJcblx0XHRcdHRoaXMuaW5oZXJpdGVkKGFyZ3VtZW50cyk7XHJcblx0XHRcdHRoaXMuZHluID0gW107XHJcblx0XHRcdHRoaXMucnVuID0gbnVsbDtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1BpZVxyXG5cdFx0fSxcclxuXHRcdHNldEF4aXM6IGZ1bmN0aW9uKGF4aXMpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHREdW1teSBtZXRob2QsIHNpbmNlIGF4ZXMgYXJlIGlycmVsZXZhbnQgd2l0aCBhIFBpZSBjaGFydC5cclxuXHRcdFx0Ly8gcmV0dXJuczogZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1BpZVxyXG5cdFx0XHQvL1x0XHRUaGUgcmVmZXJlbmNlIHRvIHRoaXMgcGxvdCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1BpZVxyXG5cdFx0fSxcclxuXHRcdGFkZFNlcmllczogZnVuY3Rpb24ocnVuKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0QWRkIGEgc2VyaWVzIG9mIGRhdGEgdG8gdGhpcyBwbG90LlxyXG5cdFx0XHQvLyByZXR1cm5zOiBkb2pveC9jaGFydGluZy9wbG90MmQvUGllXHJcblx0XHRcdC8vXHRcdFRoZSByZWZlcmVuY2UgdG8gdGhpcyBwbG90IGZvciBmdW5jdGlvbmFsIGNoYWluaW5nLlxyXG5cdFx0XHR0aGlzLnJ1biA9IHJ1bjtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHQvL1x0ZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1BpZVxyXG5cdFx0fSxcclxuXHRcdGdldFNlcmllc1N0YXRzOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXR1cm5zIGRlZmF1bHQgc3RhdHMgKGlycmVsZXZhbnQgZm9yIHRoaXMgdHlwZSBvZiBwbG90KS5cclxuXHRcdFx0Ly8gcmV0dXJuczogT2JqZWN0XHJcblx0XHRcdC8vXHRcdHtobWluLCBobWF4LCB2bWluLCB2bWF4fSBtaW4vbWF4IGluIGJvdGggZGlyZWN0aW9ucy5cclxuXHRcdFx0cmV0dXJuIGxhbmcuZGVsZWdhdGUoZGMuZGVmYXVsdFN0YXRzKTsgLy8gT2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0Z2V0UmVxdWlyZWRDb2xvcnM6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJldHVybiB0aGUgbnVtYmVyIG9mIGNvbG9ycyBuZWVkZWQgdG8gZHJhdyB0aGlzIHBsb3QuXHJcblx0XHRcdHJldHVybiB0aGlzLnJ1biA/IHRoaXMucnVuLmRhdGEubGVuZ3RoIDogMDtcclxuXHRcdH0sXHJcblxyXG5cdFx0cmVuZGVyOiBmdW5jdGlvbihkaW0sIG9mZnNldHMpe1xyXG5cdFx0XHQvL1x0c3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UmVuZGVyIHRoZSBwbG90IG9uIHRoZSBjaGFydC5cclxuXHRcdFx0Ly9cdGRpbTogT2JqZWN0XHJcblx0XHRcdC8vXHRcdEFuIG9iamVjdCBvZiB0aGUgZm9ybSB7IHdpZHRoLCBoZWlnaHQgfS5cclxuXHRcdFx0Ly9cdG9mZnNldHM6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRBbiBvYmplY3Qgb2YgdGhlIGZvcm0geyBsLCByLCB0LCBiIH0uXHJcblx0XHRcdC8vXHRyZXR1cm5zOiBkb2pveC9jaGFydGluZy9wbG90MmQvUGllXHJcblx0XHRcdC8vXHRcdEEgcmVmZXJlbmNlIHRvIHRoaXMgcGxvdCBmb3IgZnVuY3Rpb25hbCBjaGFpbmluZy5cclxuXHRcdFx0aWYoIXRoaXMuZGlydHkpeyByZXR1cm4gdGhpczsgfVxyXG5cdFx0XHR0aGlzLnJlc2V0RXZlbnRzKCk7XHJcblx0XHRcdHRoaXMuZGlydHkgPSBmYWxzZTtcclxuXHRcdFx0dGhpcy5fZXZlbnRTZXJpZXMgPSB7fTtcclxuXHRcdFx0dGhpcy5jbGVhbkdyb3VwKCk7XHJcblx0XHRcdHZhciBzID0gdGhpcy5ncm91cCwgdCA9IHRoaXMuY2hhcnQudGhlbWU7XHJcblxyXG5cdFx0XHRpZighdGhpcy5fcGxvdFNldElubmVyUmFkaXVzICYmIHQgJiYgdC5waWVJbm5lclJhZGl1cyl7XHJcblx0XHRcdFx0dGhpcy5vcHQuaW5uZXJSYWRpdXMgPSB0LnBpZUlubmVyUmFkaXVzO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBjYWxjdWxhdGUgdGhlIGdlb21ldHJ5XHJcblx0XHRcdHZhciByeCA9IChkaW0ud2lkdGggIC0gb2Zmc2V0cy5sIC0gb2Zmc2V0cy5yKSAvIDIsXHJcblx0XHRcdFx0cnkgPSAoZGltLmhlaWdodCAtIG9mZnNldHMudCAtIG9mZnNldHMuYikgLyAyLFxyXG5cdFx0XHRcdHIgID0gTWF0aC5taW4ocngsIHJ5KSxcclxuXHRcdFx0XHR0YUZvbnQgPSBcImZvbnRcIiBpbiB0aGlzLm9wdCA/IHRoaXMub3B0LmZvbnQgOiB0LmF4aXMudGljay50aXRsZUZvbnQgfHwgXCJcIixcclxuXHRcdFx0XHRzaXplID0gdGFGb250ID8gZy5ub3JtYWxpemVkTGVuZ3RoKGcuc3BsaXRGb250U3RyaW5nKHRhRm9udCkuc2l6ZSkgOiAwLFxyXG5cdFx0XHRcdHRhRm9udENvbG9yID0gdGhpcy5vcHQuaGFzT3duUHJvcGVydHkoXCJmb250Q29sb3JcIikgPyB0aGlzLm9wdC5mb250Q29sb3IgOiB0LmF4aXMudGljay5mb250Q29sb3IsXHJcblx0XHRcdFx0c3RhcnRBbmdsZSA9IG0uX2RlZ1RvUmFkKHRoaXMub3B0LnN0YXJ0QW5nbGUpLFxyXG5cdFx0XHRcdHN0YXJ0ID0gc3RhcnRBbmdsZSwgZmlsdGVyZWRSdW4sIHNsaWNlcywgbGFiZWxzLCBzaGlmdCwgbGFiZWxSLFxyXG5cdFx0XHRcdHJ1biA9IHRoaXMucnVuLmRhdGEsXHJcblx0XHRcdFx0ZXZlbnRzID0gdGhpcy5ldmVudHMoKTtcclxuXHJcblx0XHRcdC8qIEFkZGVkIHRvIGhhbmRsZSBubyBkYXRhIGNhc2UgKi9cclxuXHRcdFx0dmFyIG5vRGF0YUZ1bmMgPSBsYW5nLmhpdGNoKHRoaXMsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0dmFyIGN0ID0gdC5jbG9uZSgpO1xyXG5cdFx0XHRcdHZhciB0aGVtZXMgPSBkZi5tYXAocnVuLCBmdW5jdGlvbih2KXtcclxuXHRcdFx0XHRcdHZhciB0TWl4aW4gPSBbdGhpcy5vcHQsIHRoaXMucnVuXTtcclxuXHRcdFx0XHRcdGlmKHYgIT09IG51bGwgJiYgdHlwZW9mIHYgIT0gXCJudW1iZXJcIil7XHJcblx0XHRcdFx0XHRcdHRNaXhpbi5wdXNoKHYpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYodGhpcy5vcHQuc3R5bGVGdW5jKXtcclxuXHRcdFx0XHRcdFx0dE1peGluLnB1c2godGhpcy5vcHQuc3R5bGVGdW5jKHYpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiBjdC5uZXh0KFwic2xpY2VcIiwgdE1peGluLCB0cnVlKTtcclxuXHRcdFx0XHR9LCB0aGlzKTtcclxuXHJcblx0XHRcdFx0Ly8gRHJhdyBpbml0aWFsIHBpZSwgd2l0aCB0ZXh0IGluIGl0IG5vdGluZyAwIGRhdGEuXHJcblx0XHRcdFx0aWYoXCJyYWRpdXNcIiBpbiB0aGlzLm9wdCl7XHJcblx0XHRcdFx0XHRyID0gdGhpcy5vcHQucmFkaXVzIDwgciA/IHRoaXMub3B0LnJhZGl1cyA6IHI7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR2YXIgY2lyY2xlID0ge1xyXG5cdFx0XHRcdFx0Y3g6IG9mZnNldHMubCArIHJ4LFxyXG5cdFx0XHRcdFx0Y3k6IG9mZnNldHMudCArIHJ5LFxyXG5cdFx0XHRcdFx0cjogIHJcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdHZhciByQ29sb3IgPSBuZXcgQ29sb3IodGFGb250Q29sb3IpO1xyXG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSByYWRpdXMsIHdlJ2xsIG5lZWQgdG8gZmFkZSB0aGUgcmluZyBzb21lXHJcblx0XHRcdFx0aWYodGhpcy5vcHQuaW5uZXJSYWRpdXMpe1xyXG5cdFx0XHRcdFx0ckNvbG9yLmEgPSAwLjE7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHZhciByaW5nID0gdGhpcy5fY3JlYXRlUmluZyhzLCBjaXJjbGUpLnNldFN0cm9rZShyQ29sb3IpO1xyXG5cdFx0XHRcdGlmKHRoaXMub3B0LmlubmVyUmFkaXVzKXtcclxuXHRcdFx0XHRcdC8vIElmIHdlIGhhdmUgYSByYWRpdXMsIGZpbGwgaXQgd2l0aCB0aGUgZmFkZWQgY29sb3IuXHJcblx0XHRcdFx0XHRyaW5nLnNldEZpbGwockNvbG9yKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYodGhpcy5vcHQuemVyb0RhdGFNZXNzYWdlKXtcclxuXHRcdFx0XHRcdHRoaXMucmVuZGVyTGFiZWwocywgY2lyY2xlLmN4LCBjaXJjbGUuY3kgKyBzaXplLzMsIHRoaXMub3B0Lnplcm9EYXRhTWVzc2FnZSwge1xyXG5cdFx0XHRcdFx0XHRzZXJpZXM6IHtcclxuXHRcdFx0XHRcdFx0XHRmb250OiB0YUZvbnQsXHJcblx0XHRcdFx0XHRcdFx0Zm9udENvbG9yOiB0YUZvbnRDb2xvclxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9LFx0bnVsbCwgXCJtaWRkbGVcIik7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHRoaXMuZHluID0gW107XHJcblx0XHRcdFx0YXJyLmZvckVhY2gocnVuLCBmdW5jdGlvbihpdGVtLCBpKXtcclxuXHRcdFx0XHRcdHRoaXMuZHluLnB1c2goe1xyXG5cdFx0XHRcdFx0XHRmaWxsOiB0aGlzLl9wbG90RmlsbCh0aGVtZXNbaV0uc2VyaWVzLmZpbGwsIGRpbSwgb2Zmc2V0cyksXHJcblx0XHRcdFx0XHRcdHN0cm9rZTogdGhlbWVzW2ldLnNlcmllcy5zdHJva2V9KTtcclxuXHRcdFx0XHR9LCB0aGlzKTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdC8qIEVORCBBZGRlZCB0byBoYW5kbGUgbm8gZGF0YSBjYXNlICovXHJcblxyXG5cdFx0XHQvLyBEcmF3IG92ZXIgY2lyY2xlIVxyXG5cdFx0XHRpZighdGhpcy5ydW4gJiYgIXRoaXMucnVuLmRhdGEuZW5ndGgpe1xyXG5cdFx0XHRcdG5vRGF0YUZ1bmMoKTtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0fVxyXG5cdFx0XHRpZih0eXBlb2YgcnVuWzBdID09IFwibnVtYmVyXCIpe1xyXG5cdFx0XHRcdGZpbHRlcmVkUnVuID0gZGYubWFwKHJ1biwgXCJ4ID8gTWF0aC5tYXgoeCwgMCkgOiAwXCIpO1xyXG5cdFx0XHRcdGlmKGRmLmV2ZXJ5KGZpbHRlcmVkUnVuLCBcIjw9IDBcIikpe1xyXG5cdFx0XHRcdFx0bm9EYXRhRnVuYygpO1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHNsaWNlcyA9IGRmLm1hcChmaWx0ZXJlZFJ1biwgXCIvdGhpc1wiLCBkZi5mb2xkbChmaWx0ZXJlZFJ1biwgXCIrXCIsIDApKTtcclxuXHRcdFx0XHRpZih0aGlzLm9wdC5sYWJlbHMpe1xyXG5cdFx0XHRcdFx0bGFiZWxzID0gYXJyLm1hcChzbGljZXMsIGZ1bmN0aW9uKHgpe1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4geCA+IDAgPyB0aGlzLl9nZXRMYWJlbCh4ICogMTAwKSArIFwiJVwiIDogXCJcIjtcclxuXHRcdFx0XHRcdH0sIHRoaXMpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0ZmlsdGVyZWRSdW4gPSBkZi5tYXAocnVuLCBcInggPyBNYXRoLm1heCh4LnksIDApIDogMFwiKTtcclxuXHRcdFx0XHRpZighZmlsdGVyZWRSdW4ubGVuZ3RoIHx8IGRmLmV2ZXJ5KGZpbHRlcmVkUnVuLCBcIjw9IDBcIikpe1xyXG5cdFx0XHRcdFx0bm9EYXRhRnVuYygpO1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHNsaWNlcyA9IGRmLm1hcChmaWx0ZXJlZFJ1biwgXCIvdGhpc1wiLCBkZi5mb2xkbChmaWx0ZXJlZFJ1biwgXCIrXCIsIDApKTtcclxuXHRcdFx0XHRpZih0aGlzLm9wdC5sYWJlbHMpe1xyXG5cdFx0XHRcdFx0bGFiZWxzID0gYXJyLm1hcChzbGljZXMsIGZ1bmN0aW9uKHgsIGkpe1xyXG5cdFx0XHRcdFx0XHRpZih4IDwgMCl7IHJldHVybiBcIlwiOyB9XHJcblx0XHRcdFx0XHRcdHZhciB2ID0gcnVuW2ldO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gdi5oYXNPd25Qcm9wZXJ0eShcInRleHRcIikgPyB2LnRleHQgOiB0aGlzLl9nZXRMYWJlbCh4ICogMTAwKSArIFwiJVwiO1xyXG5cdFx0XHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHZhciB0aGVtZXMgPSBkZi5tYXAocnVuLCBmdW5jdGlvbih2KXtcclxuXHRcdFx0XHR2YXIgdE1peGluID0gW3RoaXMub3B0LCB0aGlzLnJ1bl07XHJcblx0XHRcdFx0aWYodiAhPT0gbnVsbCAmJiB0eXBlb2YgdiAhPSBcIm51bWJlclwiKXtcclxuXHRcdFx0XHRcdHRNaXhpbi5wdXNoKHYpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZih0aGlzLm9wdC5zdHlsZUZ1bmMpe1xyXG5cdFx0XHRcdFx0dE1peGluLnB1c2godGhpcy5vcHQuc3R5bGVGdW5jKHYpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHQubmV4dChcInNsaWNlXCIsIHRNaXhpbiwgdHJ1ZSk7XHJcblx0XHRcdH0sIHRoaXMpO1xyXG5cclxuXHRcdFx0aWYodGhpcy5vcHQubGFiZWxzKSB7XHJcblx0XHRcdFx0c2hpZnQgPSBkZi5mb2xkbDEoZGYubWFwKGxhYmVscywgZnVuY3Rpb24obGFiZWwsIGkpe1xyXG5cdFx0XHRcdFx0dmFyIGZvbnQgPSB0aGVtZXNbaV0uc2VyaWVzLmZvbnQ7XHJcblx0XHRcdFx0XHRyZXR1cm4gZy5fYmFzZS5fZ2V0VGV4dEJveChsYWJlbCwge2ZvbnQ6IGZvbnR9KS53O1xyXG5cdFx0XHRcdH0sIHRoaXMpLCBcIk1hdGgubWF4KGEsIGIpXCIpIC8gMjtcclxuXHJcblx0XHRcdFx0aWYodGhpcy5vcHQubGFiZWxPZmZzZXQgPCAwKXtcclxuXHRcdFx0XHRcdHIgPSBNYXRoLm1pbihyeCAtIDIgKiBzaGlmdCwgcnkgLSBzaXplKSArIHRoaXMub3B0LmxhYmVsT2Zmc2V0O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZih0aGlzLm9wdC5oYXNPd25Qcm9wZXJ0eShcInJhZGl1c1wiKSl7XHJcblx0XHRcdFx0ciA9IHRoaXMub3B0LnJhZGl1cyA8IHIgKiAwLjkgPyB0aGlzLm9wdC5yYWRpdXMgOiByICogMC45O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIXRoaXMub3B0LnJhZGl1cyAmJiB0aGlzLm9wdC5sYWJlbHMgJiYgdGhpcy5vcHQubGFiZWxTdHlsZSA9PSBcImNvbHVtbnNcIikge1xyXG5cdFx0XHRcdHIgPSByIC8gMjtcclxuXHRcdFx0XHRpZiAocnggPiByeSAmJiByeCA+IHIgKiAyKSB7XHJcblx0XHRcdFx0XHRyICo9IHJ4IC8gKHIgKiAyKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKHIgPj0gcnkgKiAwLjgpIHtcclxuXHRcdFx0XHRcdHIgPSByeSAqIDAuODtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0aWYgKHIgPj0gcnkgKiAwLjkpIHtcclxuXHRcdFx0XHRcdHIgPSByeSAqIDAuOTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxhYmVsUiA9IHIgLSB0aGlzLm9wdC5sYWJlbE9mZnNldDtcclxuXHJcblx0XHRcdHZhciBjaXJjbGUgPSB7XHJcblx0XHRcdFx0XHRjeDogb2Zmc2V0cy5sICsgcngsXHJcblx0XHRcdFx0XHRjeTogb2Zmc2V0cy50ICsgcnksXHJcblx0XHRcdFx0XHRyOiAgclxyXG5cdFx0XHRcdH07XHJcblxyXG5cdFx0XHR0aGlzLmR5biA9IFtdO1xyXG5cdFx0XHQvLyBkcmF3IHNsaWNlc1xyXG5cdFx0XHR2YXIgZXZlbnRTZXJpZXMgPSBuZXcgQXJyYXkoc2xpY2VzLmxlbmd0aCk7XHJcblxyXG5cdFx0XHQvLyBDYWx1bGF0ZSBwcmltYXJpbHkgc2l6ZSBmb3IgZWFjaCBzbGljZVxyXG5cdFx0XHR2YXIgc2xpY2VzU3RlcHMgPSBbXSwgbG9jYWxTdGFydCA9IHN0YXJ0O1xyXG5cdFx0XHR2YXIgbWluV2lkdGggPSB0aGlzLm9wdC5taW5XaWR0aDtcclxuXHRcdFx0YXJyLmZvckVhY2goc2xpY2VzLCBmdW5jdGlvbihzbGljZSwgaSl7XHJcblx0XHRcdFx0aWYoc2xpY2UgPT09IDApe1xyXG5cdFx0XHRcdFx0c2xpY2VzU3RlcHNbaV0gPSB7XHJcblx0XHRcdFx0XHRcdHN0ZXA6IDAsXHJcblx0XHRcdFx0XHRcdGVuZDogbG9jYWxTdGFydCxcclxuXHRcdFx0XHRcdFx0c3RhcnQ6IGxvY2FsU3RhcnQsXHJcblx0XHRcdFx0XHRcdHdlYWs6IGZhbHNlXHJcblx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgZW5kID0gbG9jYWxTdGFydCArIHNsaWNlICogMiAqIE1hdGguUEk7XHJcblx0XHRcdFx0aWYoaSA9PT0gc2xpY2VzLmxlbmd0aCAtIDEpe1xyXG5cdFx0XHRcdFx0ZW5kID0gc3RhcnRBbmdsZSArIDIgKiBNYXRoLlBJO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgc3RlcCA9IGVuZCAtIGxvY2FsU3RhcnQsXHJcblx0XHRcdFx0XHRkaXN0ID0gc3RlcCAqIHI7XHJcblx0XHRcdFx0c2xpY2VzU3RlcHNbaV0gPSB7XHJcblx0XHRcdFx0XHRzdGVwOiAgc3RlcCxcclxuXHRcdFx0XHRcdHN0YXJ0OiBsb2NhbFN0YXJ0LFxyXG5cdFx0XHRcdFx0ZW5kOiAgIGVuZCxcclxuXHRcdFx0XHRcdHdlYWs6IGRpc3QgPCBtaW5XaWR0aFxyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0bG9jYWxTdGFydCA9IGVuZDtcclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHRpZihtaW5XaWR0aCA+IDApe1xyXG5cdFx0XHRcdHZhciB3ZWFrQ291bnQgPSAwLCB3ZWFrQ29lZiA9IG1pbldpZHRoIC8gciwgb2xkV2Vha0NvZWZTdW0gPSAwLCBpO1xyXG5cdFx0XHRcdGZvcihpID0gc2xpY2VzU3RlcHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pe1xyXG5cdFx0XHRcdFx0aWYoc2xpY2VzU3RlcHNbaV0ud2Vhayl7XHJcblx0XHRcdFx0XHRcdCsrd2Vha0NvdW50O1xyXG5cdFx0XHRcdFx0XHRvbGRXZWFrQ29lZlN1bSArPSBzbGljZXNTdGVwc1tpXS5zdGVwO1xyXG5cdFx0XHRcdFx0XHRzbGljZXNTdGVwc1tpXS5zdGVwID0gd2Vha0NvZWY7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIG1ha2Ugc3VyZSB0aGF0IG91ciBzdGVwcyBhcmUgc21hbGwgZW5vdWdoXHJcblx0XHRcdFx0dmFyIHdlYWtDb2VmU3VtID0gd2Vha0NvdW50ICogd2Vha0NvZWY7XHJcblx0XHRcdFx0aWYod2Vha0NvZWZTdW0gPiBNYXRoLlBJKXtcclxuXHRcdFx0XHRcdHdlYWtDb2VmID0gTWF0aC5QSSAvIHdlYWtDb3VudDtcclxuXHRcdFx0XHRcdGZvcihpID0gMDsgaSA8IHNsaWNlc1N0ZXBzLmxlbmd0aDsgKytpKXtcclxuXHRcdFx0XHRcdFx0aWYoc2xpY2VzU3RlcHNbaV0ud2Vhayl7XHJcblx0XHRcdFx0XHRcdFx0c2xpY2VzU3RlcHNbaV0uc3RlcCA9IHdlYWtDb2VmO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR3ZWFrQ29lZlN1bSA9IE1hdGguUEk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIG5vdyBsZXQncyByZWRpc3RyaWJ1dGUgcGVyY2VudGFnZVxyXG5cdFx0XHRcdGlmKHdlYWtDb3VudCA+IDApe1xyXG5cdFx0XHRcdFx0d2Vha0NvZWYgPSAxIC0gKHdlYWtDb2VmU3VtIC0gb2xkV2Vha0NvZWZTdW0pIC8gMiAvIE1hdGguUEk7XHJcblx0XHRcdFx0XHRmb3IoaSA9IDA7IGkgPCBzbGljZXNTdGVwcy5sZW5ndGg7ICsraSl7XHJcblx0XHRcdFx0XHRcdGlmKCFzbGljZXNTdGVwc1tpXS53ZWFrKXtcclxuXHRcdFx0XHRcdFx0XHRzbGljZXNTdGVwc1tpXS5zdGVwID0gd2Vha0NvZWYgKiBzbGljZXNTdGVwc1tpXS5zdGVwO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIG5vdyBsZXQncyB1cGRhdGUgc3RhcnQgYW5kIGVuZCB2YWx1ZXNcclxuXHRcdFx0XHRmb3IoaSA9IDA7IGkgPCBzbGljZXNTdGVwcy5sZW5ndGg7ICsraSl7XHJcblx0XHRcdFx0XHRzbGljZXNTdGVwc1tpXS5zdGFydCA9IGkgPyBzbGljZXNTdGVwc1tpXS5lbmQgOiBsb2NhbFN0YXJ0O1xyXG5cdFx0XHRcdFx0c2xpY2VzU3RlcHNbaV0uZW5kID0gc2xpY2VzU3RlcHNbaV0uc3RhcnQgKyBzbGljZXNTdGVwc1tpXS5zdGVwO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQvLyBsZXQncyBtYWtlIHN1cmUgdGhhdCBvdXIgbGFzdCBlbmQgaXMgZXhhY3RseSAyICogTWF0aC5QSVxyXG5cdFx0XHRcdGZvcihpID0gc2xpY2VzU3RlcHMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpe1xyXG5cdFx0XHRcdFx0aWYoc2xpY2VzU3RlcHNbaV0uc3RlcCAhPT0gMCl7XHJcblx0XHRcdFx0XHRcdHNsaWNlc1N0ZXBzW2ldLmVuZCA9IGxvY2FsU3RhcnQgKyAyICogTWF0aC5QSTtcclxuXHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRsb2NhbFN0YXJ0ID0gc3RhcnQ7XHJcblx0XHRcdHZhciBvLCBzcGVjaWFsRmlsbDtcclxuXHRcdFx0YXJyLnNvbWUoc2xpY2VzLCBmdW5jdGlvbihzbGljZSwgaSl7XHJcblx0XHRcdFx0dmFyIHNoYXBlO1xyXG5cdFx0XHRcdHZhciB2ID0gcnVuW2ldLCB0aGVtZSA9IHRoZW1lc1tpXTtcclxuXHJcblx0XHRcdFx0aWYoc2xpY2UgPj0gMSl7XHJcblx0XHRcdFx0XHQvLyB3aG9sZSBwaWVcclxuXHRcdFx0XHRcdHNwZWNpYWxGaWxsID0gdGhpcy5fcGxvdEZpbGwodGhlbWUuc2VyaWVzLmZpbGwsIGRpbSwgb2Zmc2V0cyk7XHJcblx0XHRcdFx0XHRzcGVjaWFsRmlsbCA9IHRoaXMuX3NoYXBlRmlsbChzcGVjaWFsRmlsbCxcclxuXHRcdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcdHg6IGNpcmNsZS5jeCAtIGNpcmNsZS5yLCB5OiBjaXJjbGUuY3kgLSBjaXJjbGUucixcclxuXHRcdFx0XHRcdFx0XHR3aWR0aDogMiAqIGNpcmNsZS5yLCBoZWlnaHQ6IDIgKiBjaXJjbGUuclxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdHNwZWNpYWxGaWxsID0gdGhpcy5fcHNldWRvUmFkaWFsRmlsbChzcGVjaWFsRmlsbCwge3g6IGNpcmNsZS5jeCwgeTogY2lyY2xlLmN5fSwgY2lyY2xlLnIpO1xyXG5cdFx0XHRcdFx0c2hhcGUgPSB0aGlzLl9jcmVhdGVSaW5nKHMsIGNpcmNsZSkuc2V0RmlsbChzcGVjaWFsRmlsbCkuc2V0U3Ryb2tlKHRoZW1lLnNlcmllcy5zdHJva2UpO1xyXG5cdFx0XHRcdFx0dGhpcy5keW4ucHVzaCh7ZmlsbDogc3BlY2lhbEZpbGwsIHN0cm9rZTogdGhlbWUuc2VyaWVzLnN0cm9rZX0pO1xyXG5cclxuXHRcdFx0XHRcdGlmKGV2ZW50cyl7XHJcblx0XHRcdFx0XHRcdG8gPSB7XHJcblx0XHRcdFx0XHRcdFx0ZWxlbWVudDogXCJzbGljZVwiLFxyXG5cdFx0XHRcdFx0XHRcdGluZGV4OiAgIGksXHJcblx0XHRcdFx0XHRcdFx0cnVuOiAgICAgdGhpcy5ydW4sXHJcblx0XHRcdFx0XHRcdFx0c2hhcGU6ICAgc2hhcGUsXHJcblx0XHRcdFx0XHRcdFx0eDogICAgICAgaSxcclxuXHRcdFx0XHRcdFx0XHR5OiAgICAgICB0eXBlb2YgdiA9PSBcIm51bWJlclwiID8gdiA6IHYueSxcclxuXHRcdFx0XHRcdFx0XHRjeDogICAgICBjaXJjbGUuY3gsXHJcblx0XHRcdFx0XHRcdFx0Y3k6ICAgICAgY2lyY2xlLmN5LFxyXG5cdFx0XHRcdFx0XHRcdGNyOiAgICAgIHJcclxuXHRcdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdFx0dGhpcy5fY29ubmVjdEV2ZW50cyhvKTtcclxuXHRcdFx0XHRcdFx0ZXZlbnRTZXJpZXNbaV0gPSBvO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdHZhciBrO1xyXG5cdFx0XHRcdFx0Zm9yKGsgPSBpICsgMTsgayA8IHNsaWNlcy5sZW5ndGg7IGsrKyl7XHJcblx0XHRcdFx0XHRcdHRoZW1lID0gdGhlbWVzW2tdO1xyXG5cdFx0XHRcdFx0XHR0aGlzLmR5bi5wdXNoKHtmaWxsOiB0aGVtZS5zZXJpZXMuZmlsbCwgc3Ryb2tlOiB0aGVtZS5zZXJpZXMuc3Ryb2tlfSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcdC8vIHN0b3AgaXRlcmF0aW9uXHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRpZihzbGljZXNTdGVwc1tpXS5zdGVwID09PSAwKXtcclxuXHRcdFx0XHRcdC8vIGRlZ2VuZXJhdGVkIHNsaWNlXHJcblx0XHRcdFx0XHQvLyBCdXQgd2Ugc3RpbGwgd2FudCBhIGZpbGwgc2luY2UgdGhpcyB3aWxsIGJlIHNraXBwZWQgYW5kIHdlIG5lZWQgdGhlIGZpbGxcclxuXHRcdFx0XHRcdC8vIGZvciB0aGUgbGFiZWwuXHJcblx0XHRcdFx0XHR0aGlzLmR5bi5wdXNoKHtmaWxsOiB0aGVtZS5zZXJpZXMuZmlsbCwgc3Ryb2tlOiB0aGVtZS5zZXJpZXMuc3Ryb2tlfSk7XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHQvLyBjb250aW51ZVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gY2FsY3VsYXRlIHRoZSBnZW9tZXRyeSBvZiB0aGUgc2xpY2VcclxuXHRcdFx0XHR2YXIgc3RlcCA9IHNsaWNlc1N0ZXBzW2ldLnN0ZXAsXHJcblx0XHRcdFx0XHR4MSA9IGNpcmNsZS5jeCArIHIgKiBNYXRoLmNvcyhsb2NhbFN0YXJ0KSxcclxuXHRcdFx0XHRcdHkxID0gY2lyY2xlLmN5ICsgciAqIE1hdGguc2luKGxvY2FsU3RhcnQpLFxyXG5cdFx0XHRcdFx0eDIgPSBjaXJjbGUuY3ggKyByICogTWF0aC5jb3MobG9jYWxTdGFydCArIHN0ZXApLFxyXG5cdFx0XHRcdFx0eTIgPSBjaXJjbGUuY3kgKyByICogTWF0aC5zaW4obG9jYWxTdGFydCArIHN0ZXApO1xyXG5cdFx0XHRcdC8vIGRyYXcgdGhlIHNsaWNlXHJcblx0XHRcdFx0dmFyIGZhblNpemUgPSBtLl9kZWdUb1JhZCh0aGlzLm9wdC5mYW5TaXplKSwgc3Ryb2tlO1xyXG5cdFx0XHRcdGlmKHRoZW1lLnNlcmllcy5maWxsICYmIHRoZW1lLnNlcmllcy5maWxsLnR5cGUgPT09IFwicmFkaWFsXCIgJiYgdGhpcy5vcHQucmFkR3JhZCA9PT0gXCJmYW5cIiAmJiBzdGVwID4gZmFuU2l6ZSl7XHJcblx0XHRcdFx0XHR2YXIgZ3JvdXAgPSBzLmNyZWF0ZUdyb3VwKCksIG5mYW5zID0gTWF0aC5jZWlsKHN0ZXAgLyBmYW5TaXplKSwgZGVsdGEgPSBzdGVwIC8gbmZhbnM7XHJcblx0XHRcdFx0XHRzcGVjaWFsRmlsbCA9IHRoaXMuX3NoYXBlRmlsbCh0aGVtZS5zZXJpZXMuZmlsbCxcclxuXHRcdFx0XHRcdFx0e3g6IGNpcmNsZS5jeCAtIGNpcmNsZS5yLCB5OiBjaXJjbGUuY3kgLSBjaXJjbGUuciwgd2lkdGg6IDIgKiBjaXJjbGUuciwgaGVpZ2h0OiAyICogY2lyY2xlLnJ9KTtcclxuXHRcdFx0XHRcdHZhciBqLCBhbHBoYSwgYmV0YSwgZmFuc3gsIGZhbnN5LCBmYW5leCwgZmFuZXk7XHJcblx0XHRcdFx0XHRmb3IoaiA9IDA7IGogPCBuZmFuczsgKytqKXtcclxuXHRcdFx0XHRcdFx0YWxwaGEgPSBsb2NhbFN0YXJ0ICsgKGogLSBGVURHRV9GQUNUT1IpICogZGVsdGE7XHJcblx0XHRcdFx0XHRcdGJldGEgID0gbG9jYWxTdGFydCArIChqICsgMSArIEZVREdFX0ZBQ1RPUikgKiBkZWx0YTtcclxuXHRcdFx0XHRcdFx0ZmFuc3ggPSBqID09IDAgPyB4MSA6IGNpcmNsZS5jeCArIHIgKiBNYXRoLmNvcyhhbHBoYSk7XHJcblx0XHRcdFx0XHRcdGZhbnN5ID0gaiA9PSAwID8geTEgOiBjaXJjbGUuY3kgKyByICogTWF0aC5zaW4oYWxwaGEpO1xyXG5cdFx0XHRcdFx0XHRmYW5leCA9IGogPT0gbmZhbnMgLSAxID8geDIgOiBjaXJjbGUuY3ggKyByICogTWF0aC5jb3MoYmV0YSk7XHJcblx0XHRcdFx0XHRcdGZhbmV5ID0gaiA9PSBuZmFucyAtIDEgPyB5MiA6IGNpcmNsZS5jeSArIHIgKiBNYXRoLnNpbihiZXRhKTtcclxuXHRcdFx0XHRcdFx0dGhpcy5fY3JlYXRlU2xpY2UoZ3JvdXAsIGNpcmNsZSwgciwgZmFuc3gsIGZhbnN5LCBmYW5leCwgZmFuZXksIGFscGhhLCBkZWx0YSkuXHJcblx0XHRcdFx0XHRcdFx0c2V0RmlsbCh0aGlzLl9wc2V1ZG9SYWRpYWxGaWxsKHNwZWNpYWxGaWxsLCB7eDogY2lyY2xlLmN4LCB5OiBjaXJjbGUuY3l9LCByLFxyXG5cdFx0XHRcdFx0XHRcdFx0bG9jYWxTdGFydCArIChqICsgMC41KSAqIGRlbHRhLCBsb2NhbFN0YXJ0ICsgKGogKyAwLjUpICogZGVsdGEpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHN0cm9rZSA9IHRoZW1lLnNlcmllcy5zdHJva2U7XHJcblx0XHRcdFx0XHR0aGlzLl9jcmVhdGVTbGljZShncm91cCwgY2lyY2xlLCByLCB4MSwgeTEsIHgyLCB5MiwgbG9jYWxTdGFydCwgc3RlcCkuc2V0U3Ryb2tlKHN0cm9rZSk7XHJcblx0XHRcdFx0XHRzaGFwZSA9IGdyb3VwO1xyXG5cdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0c3Ryb2tlID0gdGhlbWUuc2VyaWVzLnN0cm9rZTtcclxuXHJcblx0XHRcdFx0XHRzaGFwZSA9IHRoaXMuX2NyZWF0ZVNsaWNlKHMsIGNpcmNsZSwgciwgeDEsIHkxLCB4MiwgeTIsIGxvY2FsU3RhcnQsIHN0ZXApLnNldFN0cm9rZShzdHJva2UpO1xyXG5cclxuXHRcdFx0XHRcdHNwZWNpYWxGaWxsID0gdGhlbWUuc2VyaWVzLmZpbGw7XHJcblx0XHRcdFx0XHRpZihzcGVjaWFsRmlsbCAmJiBzcGVjaWFsRmlsbC50eXBlID09PSBcInJhZGlhbFwiKXtcclxuXHRcdFx0XHRcdFx0c3BlY2lhbEZpbGwgPSB0aGlzLl9zaGFwZUZpbGwoc3BlY2lhbEZpbGwsIHt4OiBjaXJjbGUuY3ggLSBjaXJjbGUuciwgeTogY2lyY2xlLmN5IC0gY2lyY2xlLnIsIHdpZHRoOiAyICogY2lyY2xlLnIsIGhlaWdodDogMiAqIGNpcmNsZS5yfSk7XHJcblx0XHRcdFx0XHRcdGlmKHRoaXMub3B0LnJhZEdyYWQgPT09IFwibGluZWFyXCIpe1xyXG5cdFx0XHRcdFx0XHRcdHNwZWNpYWxGaWxsID0gdGhpcy5fcHNldWRvUmFkaWFsRmlsbChzcGVjaWFsRmlsbCwge3g6IGNpcmNsZS5jeCwgeTogY2lyY2xlLmN5fSwgciwgbG9jYWxTdGFydCwgbG9jYWxTdGFydCArIHN0ZXApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9ZWxzZSBpZihzcGVjaWFsRmlsbCAmJiBzcGVjaWFsRmlsbC50eXBlID09PSBcImxpbmVhclwiKXtcclxuXHRcdFx0XHRcdFx0dmFyIGJib3ggPSBsYW5nLmNsb25lKHNoYXBlLmdldEJvdW5kaW5nQm94KCkpO1xyXG5cdFx0XHRcdFx0XHRpZihnLnJlbmRlcmVyID09PSBcInN2Z1wiKXtcclxuXHRcdFx0XHRcdFx0XHQvLyBUcnkgdG8gZml4IHRoZSBib3VuZGluZyBib3ggY2FsY3VsYXRpb25zIGZvclxyXG5cdFx0XHRcdFx0XHRcdC8vIGhlaWdodC4gIE9ubHkgcmVhbGx5IHdvcmtzIGZvciBTVkcuXHJcblx0XHRcdFx0XHRcdFx0dmFyIHBvcyA9IHt3OiAwLCBoOiAwfTtcclxuXHRcdFx0XHRcdFx0XHR0cnl7XHJcblx0XHRcdFx0XHRcdFx0XHRwb3MgPSBkb21HZW9tLnBvc2l0aW9uKHNoYXBlLnJhd05vZGUpO1xyXG5cdFx0XHRcdFx0XHRcdH1jYXRjaChpZ25vcmUpe31cclxuXHRcdFx0XHRcdFx0XHRpZihwb3MuaCA+IGJib3guaGVpZ2h0KXtcclxuXHRcdFx0XHRcdFx0XHRcdGJib3guaGVpZ2h0ID0gcG9zLmg7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdGlmKHBvcy53ID4gYmJveC53aWR0aCl7XHJcblx0XHRcdFx0XHRcdFx0XHRiYm94LndpZHRoID0gcG9zLnc7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHNwZWNpYWxGaWxsID0gdGhpcy5fcGxvdEZpbGwoc3BlY2lhbEZpbGwsIGRpbSwgb2Zmc2V0cyk7XHJcblx0XHRcdFx0XHRcdHNwZWNpYWxGaWxsID0gdGhpcy5fc2hhcGVGaWxsKHNwZWNpYWxGaWxsLCBiYm94KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHNoYXBlLnNldEZpbGwoc3BlY2lhbEZpbGwpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR0aGlzLmR5bi5wdXNoKHtmaWxsOiBzcGVjaWFsRmlsbCwgc3Ryb2tlOiB0aGVtZS5zZXJpZXMuc3Ryb2tlfSk7XHJcblxyXG5cdFx0XHRcdGlmKGV2ZW50cyl7XHJcblx0XHRcdFx0XHRvID0ge1xyXG5cdFx0XHRcdFx0XHRlbGVtZW50OiBcInNsaWNlXCIsXHJcblx0XHRcdFx0XHRcdGluZGV4OiAgIGksXHJcblx0XHRcdFx0XHRcdHJ1bjogICAgIHRoaXMucnVuLFxyXG5cdFx0XHRcdFx0XHRzaGFwZTogICBzaGFwZSxcclxuXHRcdFx0XHRcdFx0eDogICAgICAgaSxcclxuXHRcdFx0XHRcdFx0eTogICAgICAgdHlwZW9mIHYgPT0gXCJudW1iZXJcIiA/IHYgOiB2LnksXHJcblx0XHRcdFx0XHRcdGN4OiAgICAgIGNpcmNsZS5jeCxcclxuXHRcdFx0XHRcdFx0Y3k6ICAgICAgY2lyY2xlLmN5LFxyXG5cdFx0XHRcdFx0XHRjcjogICAgICByXHJcblx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0dGhpcy5fY29ubmVjdEV2ZW50cyhvKTtcclxuXHRcdFx0XHRcdGV2ZW50U2VyaWVzW2ldID0gbztcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGxvY2FsU3RhcnQgPSBsb2NhbFN0YXJ0ICsgc3RlcDtcclxuXHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1x0Ly8gY29udGludWVcclxuXHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdC8vIGRyYXcgbGFiZWxzXHJcblx0XHRcdGlmKHRoaXMub3B0LmxhYmVscyl7XHJcblx0XHRcdFx0dmFyIGlzUnRsID0gaGFzKFwiZG9qby1iaWRpXCIpICYmIHRoaXMuY2hhcnQuaXNSaWdodFRvTGVmdCgpO1xyXG5cdFx0XHRcdGlmKHRoaXMub3B0LmxhYmVsU3R5bGUgPT0gXCJkZWZhdWx0XCIpe1xyXG5cdFx0XHRcdFx0c3RhcnQgPSBzdGFydEFuZ2xlO1xyXG5cdFx0XHRcdFx0bG9jYWxTdGFydCA9IHN0YXJ0O1xyXG5cdFx0XHRcdFx0YXJyLnNvbWUoc2xpY2VzLCBmdW5jdGlvbihzbGljZSwgaSl7XHJcblx0XHRcdFx0XHRcdGlmKHNsaWNlIDw9IDAgJiYgIXRoaXMub3B0Lm1pbldpZHRoKXtcclxuXHRcdFx0XHRcdFx0XHQvLyBkZWdlbmVyYXRlZCBzbGljZVxyXG5cdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcdC8vIGNvbnRpbnVlXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0dmFyIHRoZW1lID0gdGhlbWVzW2ldO1xyXG5cdFx0XHRcdFx0XHRpZihzbGljZSA+PSAxKXtcclxuXHRcdFx0XHRcdFx0XHQvLyB3aG9sZSBwaWVcclxuXHRcdFx0XHRcdFx0XHR0aGlzLnJlbmRlckxhYmVsKHMsIGNpcmNsZS5jeCwgY2lyY2xlLmN5ICsgc2l6ZSAvIDIsIGxhYmVsc1tpXSwgdGhlbWUsIHRoaXMub3B0LmxhYmVsT2Zmc2V0ID4gMCk7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHQvLyBzdG9wIGl0ZXJhdGlvblxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdC8vIGNhbGN1bGF0ZSB0aGUgZ2VvbWV0cnkgb2YgdGhlIHNsaWNlXHJcblx0XHRcdFx0XHRcdHZhciBlbmQgPSBzdGFydCArIHNsaWNlICogMiAqIE1hdGguUEk7XHJcblx0XHRcdFx0XHRcdGlmKGkgKyAxID09IHNsaWNlcy5sZW5ndGgpe1xyXG5cdFx0XHRcdFx0XHRcdGVuZCA9IHN0YXJ0QW5nbGUgKyAyICogTWF0aC5QSTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0aWYodGhpcy5vcHQub21pdExhYmVscyAmJiBlbmQtc3RhcnQgPCAwLjAwMSl7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1x0Ly8gY29udGludWVcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0dmFyIGxhYmVsQW5nbGUgPSBsb2NhbFN0YXJ0ICsgKHNsaWNlc1N0ZXBzW2ldLnN0ZXAgLyAyKSwvLyhzdGFydCArIGVuZCkgLyAyLFxyXG5cdFx0XHRcdFx0XHRcdHggPSBjaXJjbGUuY3ggKyBsYWJlbFIgKiBNYXRoLmNvcyhsYWJlbEFuZ2xlKSxcclxuXHRcdFx0XHRcdFx0XHR5ID0gY2lyY2xlLmN5ICsgbGFiZWxSICogTWF0aC5zaW4obGFiZWxBbmdsZSkgKyBzaXplIC8gMjtcclxuXHRcdFx0XHRcdFx0Ly8gZHJhdyB0aGUgbGFiZWxcclxuXHRcdFx0XHRcdFx0dGhpcy5yZW5kZXJMYWJlbChzLCBpc1J0bCA/IGRpbS53aWR0aCAtIHggOiB4LCB5LCBsYWJlbHNbaV0sIHRoZW1lLCB0aGlzLm9wdC5sYWJlbE9mZnNldCA+IDApO1xyXG5cdFx0XHRcdFx0XHRsb2NhbFN0YXJ0ICs9IHNsaWNlc1N0ZXBzW2ldLnN0ZXA7XHJcblx0XHRcdFx0XHRcdHN0YXJ0ID0gZW5kO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHQvLyBjb250aW51ZVxyXG5cdFx0XHRcdFx0fSwgdGhpcyk7XHJcblx0XHRcdFx0fWVsc2UgaWYodGhpcy5vcHQubGFiZWxTdHlsZSA9PSBcImNvbHVtbnNcIil7XHJcblx0XHRcdFx0XHQvL2NhbGN1bGF0ZSBsYWJlbCBhbmdsZXNcclxuXHRcdFx0XHRcdHZhciBvbWl0TGFiZWxzID0gdGhpcy5vcHQub21pdExhYmVscztcclxuXHRcdFx0XHRcdHN0YXJ0ID0gc3RhcnRBbmdsZTtcclxuXHRcdFx0XHRcdGxvY2FsU3RhcnQgPSBzdGFydDtcclxuXHRcdFx0XHRcdHZhciBsYWJlbGVkU2xpY2VzID0gW10sXHJcblx0XHRcdFx0XHRcdHNpZ25pZmljYW50Q291bnQgPSAwLCBrO1xyXG5cdFx0XHRcdFx0Zm9yKGsgPSBzbGljZXMubGVuZ3RoIC0gMTsgayA+PSAwOyAtLWspe1xyXG5cdFx0XHRcdFx0XHRpZihzbGljZXNba10pe1xyXG5cdFx0XHRcdFx0XHRcdCsrc2lnbmlmaWNhbnRDb3VudDtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0YXJyLmZvckVhY2goc2xpY2VzLCBmdW5jdGlvbihzbGljZSwgaSl7XHJcblx0XHRcdFx0XHRcdHZhciBlbmQgPSBzdGFydCArIHNsaWNlICogMiAqIE1hdGguUEk7XHJcblx0XHRcdFx0XHRcdGlmKGkgKyAxID09IHNsaWNlcy5sZW5ndGgpe1xyXG5cdFx0XHRcdFx0XHRcdGVuZCA9IHN0YXJ0QW5nbGUgKyAyICogTWF0aC5QSTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRpZih0aGlzLm1pbldpZHRoICE9PSAwIHx8IGVuZCAtIHN0YXJ0ID49IDAuMDAxKXtcclxuXHRcdFx0XHRcdFx0XHQvLyB2YXIgbGFiZWxBbmdsZSA9IChzdGFydCArIGVuZCkgLyAyO1xyXG5cdFx0XHRcdFx0XHRcdHZhciBsYWJlbEFuZ2xlID0gbG9jYWxTdGFydCArIChzbGljZXNTdGVwc1tpXS5zdGVwIC8gMik7Ly8oc3RhcnQgKyBlbmQpIC8gMixcclxuXHRcdFx0XHRcdFx0XHRpZihzaWduaWZpY2FudENvdW50ID09PSAxICYmICF0aGlzLm9wdC5taW5XaWR0aCl7XHJcblx0XHRcdFx0XHRcdFx0XHRsYWJlbEFuZ2xlID0gKHN0YXJ0ICsgZW5kKSAvIDI7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdGxhYmVsZWRTbGljZXMucHVzaCh7XHJcblx0XHRcdFx0XHRcdFx0XHRhbmdsZTogbGFiZWxBbmdsZSxcclxuXHRcdFx0XHRcdFx0XHRcdGxlZnQ6ICBNYXRoLmNvcyhsYWJlbEFuZ2xlKSA8IDAsXHJcblx0XHRcdFx0XHRcdFx0XHR0aGVtZTogdGhlbWVzW2ldLFxyXG5cdFx0XHRcdFx0XHRcdFx0aW5kZXg6IGksXHJcblx0XHRcdFx0XHRcdFx0XHRvbWl0OiBvbWl0TGFiZWxzPyBlbmQgLSBzdGFydCA8IDAuMDAxOmZhbHNlXHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0c3RhcnQgPSBlbmQ7XHJcblx0XHRcdFx0XHRcdGxvY2FsU3RhcnQgKz0gc2xpY2VzU3RlcHNbaV0uc3RlcDtcclxuXHRcdFx0XHRcdH0sIHRoaXMpO1xyXG5cclxuXHRcdFx0XHRcdC8vY2FsY3VsYXRlIGxhYmVsIHJhZGl1cyB0byBlYWNoIHNsaWNlXHJcblx0XHRcdFx0XHR2YXIgbGFiZWxIZWlnaHQgPSBnLl9iYXNlLl9nZXRUZXh0Qm94KFwiYVwiLCB7Zm9udDp0YUZvbnQsIHdoaXRlU3BhY2U6IFwibm93cmFwXCJ9KS5oO1xyXG5cdFx0XHRcdFx0dGhpcy5fZ2V0UHJvcGVyTGFiZWxSYWRpdXMobGFiZWxlZFNsaWNlcywgbGFiZWxIZWlnaHQsIGNpcmNsZS5yICogMS4xKTtcclxuXHJcblx0XHRcdFx0XHQvL2RyYXcgbGFiZWwgYW5kIHdpcmluZ1xyXG5cdFx0XHRcdFx0dmFyIGxlZnRDb2x1bW4gID0gY2lyY2xlLmN4IC0gY2lyY2xlLnIgKiAyLFxyXG5cdFx0XHRcdFx0XHRyaWdodENvbHVtbiA9IGNpcmNsZS5jeCArIGNpcmNsZS5yICogMjtcclxuXHRcdFx0XHRcdGFyci5mb3JFYWNoKGxhYmVsZWRTbGljZXMsIGZ1bmN0aW9uKHNsaWNlKXtcclxuXHRcdFx0XHRcdFx0aWYoc2xpY2Uub21pdCl7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHZhciBjVGhlbWUgPSB0aGVtZXNbc2xpY2UuaW5kZXhdLCBsclBhZGRpbmcgPSAwO1xyXG5cdFx0XHRcdFx0XHRpZihjVGhlbWUgJiYgY1RoZW1lLmF4aXMgJiYgY1RoZW1lLmF4aXMudGljayAmJiBjVGhlbWUuYXhpcy50aWNrLmxhYmVsR2FwKXtcclxuXHRcdFx0XHRcdFx0XHQvLyBUcnkgdG8gcGFkIHRoZSBsYWJsZSBhIGJpdCwgdGhlIHNhbWUgYXMgYSB0aWNrIGdhcC5cclxuXHRcdFx0XHRcdFx0XHRsclBhZGRpbmcgPSBjVGhlbWUuYXhpcy50aWNrLmxhYmVsR2FwO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHZhciBsYWJlbFdpZHRoID0gZy5fYmFzZS5fZ2V0VGV4dEJveChsYWJlbHNbc2xpY2UuaW5kZXhdLFxyXG5cdFx0XHRcdFx0XHRcdFx0e2ZvbnQ6IGNUaGVtZS5zZXJpZXMuZm9udCwgd2hpdGVTcGFjZTogXCJub3dyYXBcIiwgcGFkZGluZ0xlZnQ6IGxyUGFkZGluZyArIFwicHhcIn0pLncsXHJcblx0XHRcdFx0XHRcdFx0eCA9IGNpcmNsZS5jeCArIHNsaWNlLmxhYmVsUiAqIE1hdGguY29zKHNsaWNlLmFuZ2xlKSxcclxuXHRcdFx0XHRcdFx0XHR5ID0gY2lyY2xlLmN5ICsgc2xpY2UubGFiZWxSICogTWF0aC5zaW4oc2xpY2UuYW5nbGUpLFxyXG5cdFx0XHRcdFx0XHRcdGpvaW50WCA9IChzbGljZS5sZWZ0KSA/IChsZWZ0Q29sdW1uICsgbGFiZWxXaWR0aCkgOiAocmlnaHRDb2x1bW4gLSBsYWJlbFdpZHRoKSxcclxuXHRcdFx0XHRcdFx0XHRsYWJlbFggPSAoc2xpY2UubGVmdCkgPyBsZWZ0Q29sdW1uIDogam9pbnRYICsgbHJQYWRkaW5nLFxyXG5cdFx0XHRcdFx0XHRcdG5ld1JhZGl1cyA9IGNpcmNsZS5yLFxyXG5cdFx0XHRcdFx0XHRcdHdpcmluZyA9IHMuY3JlYXRlUGF0aCgpLm1vdmVUbyhjaXJjbGUuY3ggKyBuZXdSYWRpdXMgKiBNYXRoLmNvcyhzbGljZS5hbmdsZSksXHJcblx0XHRcdFx0XHRcdFx0XHRjaXJjbGUuY3kgKyBuZXdSYWRpdXMgKiBNYXRoLnNpbihzbGljZS5hbmdsZSkpO1xyXG5cdFx0XHRcdFx0XHRpZihNYXRoLmFicyhzbGljZS5sYWJlbFIgKiBNYXRoLmNvcyhzbGljZS5hbmdsZSkpIDwgY2lyY2xlLnIgKiAyIC0gbGFiZWxXaWR0aCl7XHJcblx0XHRcdFx0XHRcdFx0d2lyaW5nLmxpbmVUbyh4LCB5KTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR3aXJpbmcubGluZVRvKGpvaW50WCwgeSkuc2V0U3Ryb2tlKHNsaWNlLnRoZW1lLnNlcmllcy5sYWJlbFdpcmluZyk7XHJcblx0XHRcdFx0XHRcdC8vIFB1c2ggdGhlIHdpcmluZyB0byB0aGUgYmFjayBzbyB0aGF0IGhpZ2hsaWdodC9tYWduaWZ5IGFjdGlvbnMgZG9uJ3QgYmxlZWQgdGhlIHdpcmUuXHJcblx0XHRcdFx0XHRcdHdpcmluZy5tb3ZlVG9CYWNrKCk7XHJcblx0XHRcdFx0XHRcdC8vIFRyeSB0byBhZGp1c3QgdGhlIHdpcmluZyBwb3NpdGlvbiBoZXJlLiAgVGhlIGJyb3dzZXIgYWx3YXlzIGFkZHMgYSBiaXRcclxuXHRcdFx0XHRcdFx0Ly8gb2YgcGFkZGluZyBvbiBoZWlnaHQsIHNvIGRpdmlkZSBieSAzIGluc3RlYWQgb2YgMi5cclxuXHRcdFx0XHRcdFx0dmFyIG1pZCA9IGxhYmVsSGVpZ2h0LzMgKyB5O1xyXG5cdFx0XHRcdFx0XHR2YXIgZWxlbSA9IHRoaXMucmVuZGVyTGFiZWwocywgbGFiZWxYLCBtaWQgfHwgMCwgbGFiZWxzW3NsaWNlLmluZGV4XSwgY1RoZW1lLCBmYWxzZSwgXCJsZWZ0XCIpO1xyXG5cclxuXHRcdFx0XHRcdFx0aWYoZXZlbnRzICYmICF0aGlzLm9wdC5odG1sTGFiZWxzKXtcclxuXHRcdFx0XHRcdFx0XHR2YXIgZm9udFdpZHRoICA9IGcuX2Jhc2UuX2dldFRleHRCb3gobGFiZWxzW3NsaWNlLmluZGV4XSwge2ZvbnQ6IHNsaWNlLnRoZW1lLnNlcmllcy5mb250fSkudyB8fCAwLFxyXG5cdFx0XHRcdFx0XHRcdFx0Zm9udEhlaWdodCA9IGcubm9ybWFsaXplZExlbmd0aChnLnNwbGl0Rm9udFN0cmluZyhzbGljZS50aGVtZS5zZXJpZXMuZm9udCkuc2l6ZSk7XHJcblx0XHRcdFx0XHRcdFx0byA9IHtcclxuXHRcdFx0XHRcdFx0XHRcdGVsZW1lbnQ6IFwibGFiZWxzXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRpbmRleDogICBzbGljZS5pbmRleCxcclxuXHRcdFx0XHRcdFx0XHRcdHJ1bjogICAgIHRoaXMucnVuLFxyXG5cdFx0XHRcdFx0XHRcdFx0c2hhcGU6ICAgZWxlbSxcclxuXHRcdFx0XHRcdFx0XHRcdHg6ICAgICAgIGxhYmVsWCxcclxuXHRcdFx0XHRcdFx0XHRcdHk6ICAgICAgIHksXHJcblx0XHRcdFx0XHRcdFx0XHRsYWJlbDogICBsYWJlbHNbc2xpY2UuaW5kZXhdXHJcblx0XHRcdFx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0XHRcdFx0dmFyIHNocCA9IGVsZW0uZ2V0U2hhcGUoKSxcclxuXHRcdFx0XHRcdFx0XHRcdGx0ID0gZG9tR2VvbS5wb3NpdGlvbih0aGlzLmNoYXJ0Lm5vZGUsIHRydWUpLFxyXG5cdFx0XHRcdFx0XHRcdFx0YXJvdW5kUmVjdCA9IGxhbmcubWl4aW4oeyB0eXBlIDogJ3JlY3QnIH0sIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0eDogc2hwLngsXHJcblx0XHRcdFx0XHRcdFx0XHRcdHk6IHNocC55IC0gMiAqIGZvbnRIZWlnaHRcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRhcm91bmRSZWN0LnggKz0gbHQueDtcclxuXHRcdFx0XHRcdFx0XHRhcm91bmRSZWN0LnkgKz0gbHQueTtcclxuXHRcdFx0XHRcdFx0XHRhcm91bmRSZWN0LnggPSBNYXRoLnJvdW5kKGFyb3VuZFJlY3QueCk7XHJcblx0XHRcdFx0XHRcdFx0YXJvdW5kUmVjdC55ID0gTWF0aC5yb3VuZChhcm91bmRSZWN0LnkpO1xyXG5cdFx0XHRcdFx0XHRcdGFyb3VuZFJlY3Qud2lkdGggID0gTWF0aC5jZWlsKGZvbnRXaWR0aCk7XHJcblx0XHRcdFx0XHRcdFx0YXJvdW5kUmVjdC5oZWlnaHQgPSBNYXRoLmNlaWwoZm9udEhlaWdodCk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdG8uYXJvdW5kUmVjdCA9IGFyb3VuZFJlY3Q7XHJcblxyXG5cdFx0XHRcdFx0XHRcdHRoaXMuX2Nvbm5lY3RFdmVudHMobyk7XHJcblx0XHRcdFx0XHRcdFx0ZXZlbnRTZXJpZXNbc2xpY2VzLmxlbmd0aCArIHNsaWNlLmluZGV4XSA9IG87XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0sIHRoaXMpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHQvLyBwb3N0LXByb2Nlc3MgZXZlbnRzIHRvIHJlc3RvcmUgdGhlIG9yaWdpbmFsIGluZGV4aW5nXHJcblx0XHRcdHZhciBlc2kgPSAwO1xyXG5cdFx0XHR0aGlzLl9ldmVudFNlcmllc1t0aGlzLnJ1bi5uYW1lXSA9IGRmLm1hcChydW4sIGZ1bmN0aW9uKHYpe1xyXG5cdFx0XHRcdHJldHVybiB2IDw9IDAgPyBudWxsIDogZXZlbnRTZXJpZXNbZXNpKytdO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdC8vIGNoYXJ0IG1pcnJvcmluZyBzdGFydHNcclxuXHRcdFx0aWYoaGFzKFwiZG9qby1iaWRpXCIpKXtcclxuXHRcdFx0XHR0aGlzLl9jaGVja09yaWVudGF0aW9uKHRoaXMuZ3JvdXAsIGRpbSwgb2Zmc2V0cyk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB0aGlzO1x0Ly9cdGRvam94L2NoYXJ0aW5nL3Bsb3QyZC9QaWVcclxuXHRcdH0sXHJcblxyXG5cdFx0X2dldFByb3BlckxhYmVsUmFkaXVzOiBmdW5jdGlvbihzbGljZXMsIGxhYmVsSGVpZ2h0LCBtaW5SYWRpdXMpe1xyXG5cdFx0XHRpZihzbGljZXMubGVuZ3RoID09IDEpe1xyXG5cdFx0XHRcdHNsaWNlc1swXS5sYWJlbFIgPSBtaW5SYWRpdXM7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBsZWZ0Q2VudGVyU2xpY2UgPSB7fSwgcmlnaHRDZW50ZXJTbGljZSA9IHt9LCBsZWZ0TWluU0lOID0gMiwgcmlnaHRNaW5TSU4gPSAyLCBpO1xyXG5cdFx0XHR2YXIgdGVtcFNJTjtcclxuXHRcdFx0Zm9yKGkgPSAwOyBpIDwgc2xpY2VzLmxlbmd0aDsgKytpKXtcclxuXHRcdFx0XHR0ZW1wU0lOID0gTWF0aC5hYnMoTWF0aC5zaW4oc2xpY2VzW2ldLmFuZ2xlKSk7XHJcblx0XHRcdFx0aWYoc2xpY2VzW2ldLmxlZnQpe1xyXG5cdFx0XHRcdFx0aWYobGVmdE1pblNJTiA+IHRlbXBTSU4pe1xyXG5cdFx0XHRcdFx0XHRsZWZ0TWluU0lOID0gdGVtcFNJTjtcclxuXHRcdFx0XHRcdFx0bGVmdENlbnRlclNsaWNlID0gc2xpY2VzW2ldO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0aWYocmlnaHRNaW5TSU4gPiB0ZW1wU0lOKXtcclxuXHRcdFx0XHRcdFx0cmlnaHRNaW5TSU4gPSB0ZW1wU0lOO1xyXG5cdFx0XHRcdFx0XHRyaWdodENlbnRlclNsaWNlID0gc2xpY2VzW2ldO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRsZWZ0Q2VudGVyU2xpY2UubGFiZWxSID0gcmlnaHRDZW50ZXJTbGljZS5sYWJlbFIgPSBtaW5SYWRpdXM7XHJcblx0XHRcdHRoaXMuX2NhY3VsYXRlTGFiZWxSKGxlZnRDZW50ZXJTbGljZSwgIHNsaWNlcywgbGFiZWxIZWlnaHQpO1xyXG5cdFx0XHR0aGlzLl9jYWN1bGF0ZUxhYmVsUihyaWdodENlbnRlclNsaWNlLCBzbGljZXMsIGxhYmVsSGVpZ2h0KTtcclxuXHRcdH0sXHJcblxyXG5cdFx0X2NhY3VsYXRlTGFiZWxSOiBmdW5jdGlvbihmaXJzdFNsaWNlLCBzbGljZXMsIGxhYmVsSGVpZ2h0KXtcclxuXHRcdFx0dmFyIGksIGosIGssIGxlbmd0aCA9IHNsaWNlcy5sZW5ndGgsIGN1cnJlbnRMYWJlbFIgPSBmaXJzdFNsaWNlLmxhYmVsUiwgbmV4dExhYmVsUixcclxuXHRcdFx0XHRzdGVwID0gc2xpY2VzW2ZpcnN0U2xpY2UuaW5kZXhdLmxlZnQgPyAtbGFiZWxIZWlnaHQgOiBsYWJlbEhlaWdodDtcclxuXHRcdFx0Zm9yKGsgPSAwLCBpID0gZmlyc3RTbGljZS5pbmRleCwgaiA9IChpICsgMSkgJSBsZW5ndGg7IGsgPCBsZW5ndGggJiYgc2xpY2VzW2ldLmxlZnQgPT09IHNsaWNlc1tqXS5sZWZ0OyArK2spe1xyXG5cdFx0XHRcdG5leHRMYWJlbFIgPSAoTWF0aC5zaW4oc2xpY2VzW2ldLmFuZ2xlKSAqIGN1cnJlbnRMYWJlbFIgKyBzdGVwKSAvIE1hdGguc2luKHNsaWNlc1tqXS5hbmdsZSk7XHJcblx0XHRcdFx0Y3VycmVudExhYmVsUiA9IE1hdGgubWF4KGZpcnN0U2xpY2UubGFiZWxSLCBuZXh0TGFiZWxSKTtcclxuXHRcdFx0XHRzbGljZXNbal0ubGFiZWxSID0gY3VycmVudExhYmVsUjtcclxuXHRcdFx0XHRpID0gKGkgKyAxKSAlIGxlbmd0aDtcclxuXHRcdFx0XHRqID0gKGogKyAxKSAlIGxlbmd0aDtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZihrID49IGxlbmd0aCl7XHJcblx0XHRcdFx0c2xpY2VzWzBdLmxhYmVsUiA9IGZpcnN0U2xpY2UubGFiZWxSO1xyXG5cdFx0XHR9XHJcblx0XHRcdGZvcihrID0gMCwgaSA9IGZpcnN0U2xpY2UuaW5kZXgsIGogPSAoaSB8fCBsZW5ndGgpIC0gMTsgayA8IGxlbmd0aCAmJiBzbGljZXNbaV0ubGVmdCA9PT0gc2xpY2VzW2pdLmxlZnQ7ICsrayl7XHJcblx0XHRcdFx0bmV4dExhYmVsUiA9IChNYXRoLnNpbihzbGljZXNbaV0uYW5nbGUpICogY3VycmVudExhYmVsUiAtIHN0ZXApIC8gTWF0aC5zaW4oc2xpY2VzW2pdLmFuZ2xlKTtcclxuXHRcdFx0XHRjdXJyZW50TGFiZWxSID0gTWF0aC5tYXgoZmlyc3RTbGljZS5sYWJlbFIsIG5leHRMYWJlbFIpO1xyXG5cdFx0XHRcdHNsaWNlc1tqXS5sYWJlbFIgPSBjdXJyZW50TGFiZWxSO1xyXG5cdFx0XHRcdGkgPSAoaSB8fCBsZW5ndGgpIC0gMTtcclxuXHRcdFx0XHRqID0gKGogfHwgbGVuZ3RoKSAtIDE7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblxyXG5cdFx0X2NyZWF0ZVJpbmc6IGZ1bmN0aW9uKGdyb3VwLCBjaXJjbGUpe1xyXG5cdFx0XHR2YXIgciA9IHRoaXMub3B0LmlubmVyUmFkaXVzO1xyXG5cdFx0XHRpZihyID4gMCl7XHJcblx0XHRcdFx0Ly8gUGVyY2VudGFnZSwgdXNlIGNpcmNsZS4gIEFueXRoaW5nIDwgMCBmb3IgaW5uZXJSYWRpdXNcclxuXHRcdFx0XHQvLyBpcyBhc3N1bWVkIHRvIGJlIGEgbXVsdGlwbGUgb2YgdGhlIHJhZGl1cy4gIFNvIDAuMjUgaW5uZXJSYWRpdXMgdmFsdWVcclxuXHRcdFx0XHQvLyBpcyBjb21wdXRlZCB0byBiZSAyNSUgb2YgdGhlIG91dGVyIHJhZGl1cy5cclxuXHRcdFx0XHRyID0gY2lyY2xlLnIgKiAoci8xMDApO1xyXG5cdFx0XHR9ZWxzZSBpZihyIDwgMCl7XHJcblx0XHRcdFx0ciA9IC1yOyAvLyBBc3N1bWUgaXQgaXMgcGl4ZWxzLCBmaXhlZCBzaXplIGhvbGUuXHJcblx0XHRcdH1cclxuXHRcdFx0aWYocil7XHJcblx0XHRcdFx0cmV0dXJuIGdyb3VwLmNyZWF0ZVBhdGgoe30pLnNldEFic29sdXRlTW9kZSh0cnVlKS5cclxuXHRcdFx0XHRcdG1vdmVUbyhjaXJjbGUuY3gsIGNpcmNsZS5jeSAtIGNpcmNsZS5yKS5cclxuXHRcdFx0XHRcdGFyY1RvKGNpcmNsZS5yLCBjaXJjbGUuciwgMCwgZmFsc2UsIHRydWUsIGNpcmNsZS5jeCArIGNpcmNsZS5yLCBjaXJjbGUuY3kpLlxyXG5cdFx0XHRcdFx0YXJjVG8oY2lyY2xlLnIsIGNpcmNsZS5yLCAwLCAgdHJ1ZSwgdHJ1ZSwgY2lyY2xlLmN4LCBjaXJjbGUuY3kgLSBjaXJjbGUucikuXHJcblx0XHRcdFx0XHRjbG9zZVBhdGgoKS5cclxuXHRcdFx0XHRcdG1vdmVUbyhjaXJjbGUuY3gsIGNpcmNsZS5jeSAtIHIpLlxyXG5cdFx0XHRcdFx0YXJjVG8ociwgciwgMCwgZmFsc2UsIHRydWUsIGNpcmNsZS5jeCArIHIsIGNpcmNsZS5jeSkuXHJcblx0XHRcdFx0XHRhcmNUbyhyLCByLCAwLCAgdHJ1ZSwgdHJ1ZSwgY2lyY2xlLmN4LCBjaXJjbGUuY3kgLSByKS5cclxuXHRcdFx0XHRcdGNsb3NlUGF0aCgpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBncm91cC5jcmVhdGVDaXJjbGUoY2lyY2xlKTtcclxuXHRcdH0sXHJcblx0XHRfY3JlYXRlU2xpY2U6IGZ1bmN0aW9uKGdyb3VwLCBjaXJjbGUsIFIsIHgxLCB5MSwgeDIsIHkyLCBmcm9tQW5nbGUsIHN0ZXBBbmdsZSl7XHJcblx0XHRcdHZhciByID0gdGhpcy5vcHQuaW5uZXJSYWRpdXM7XHJcblx0XHRcdGlmKHIgPiAwKXtcclxuXHRcdFx0XHQvLyBQZXJjZW50YWdlLCB1c2UgY2lyY2xlLiAgQW55dGhpbmcgPCAwIGZvciBpbm5lclJhZGl1c1xyXG5cdFx0XHRcdC8vIGlzIGFzc3VtZWQgdG8gYmUgYSBtdWx0aXBsZSBvZiB0aGUgcmFkaXVzLiAgU28gMC4yNSBpbm5lclJhZGl1cyB2YWx1ZVxyXG5cdFx0XHRcdC8vIGlzIGNvbXB1dGVkIHRvIGJlIDI1JSBvZiB0aGUgb3V0ZXIgcmFkaXVzLlxyXG5cdFx0XHRcdHIgPSBjaXJjbGUuciAqIChyLzEwMCk7XHJcblx0XHRcdH1lbHNlIGlmKHIgPCAwKXtcclxuXHRcdFx0XHRyID0gLXI7IC8vIEFzc3VtZSBpdCBpcyBwaXhlbHMsIGZpeGVkIHNpemUgaG9sZS5cclxuXHRcdFx0fVxyXG5cdFx0XHRpZihyKXtcclxuXHRcdFx0XHR2YXIgaW5uZXJYMSA9IGNpcmNsZS5jeCArIHIgKiBNYXRoLmNvcyhmcm9tQW5nbGUpLFxyXG5cdFx0XHRcdFx0aW5uZXJZMSA9IGNpcmNsZS5jeSArIHIgKiBNYXRoLnNpbihmcm9tQW5nbGUpLFxyXG5cdFx0XHRcdFx0aW5uZXJYMiA9IGNpcmNsZS5jeCArIHIgKiBNYXRoLmNvcyhmcm9tQW5nbGUgKyBzdGVwQW5nbGUpLFxyXG5cdFx0XHRcdFx0aW5uZXJZMiA9IGNpcmNsZS5jeSArIHIgKiBNYXRoLnNpbihmcm9tQW5nbGUgKyBzdGVwQW5nbGUpO1xyXG5cdFx0XHRcdHJldHVybiBncm91cC5jcmVhdGVQYXRoKHt9KS5zZXRBYnNvbHV0ZU1vZGUodHJ1ZSkuXHJcblx0XHRcdFx0XHRtb3ZlVG8oaW5uZXJYMSwgaW5uZXJZMSkuXHJcblx0XHRcdFx0XHRsaW5lVG8oeDEsIHkxKS5cclxuXHRcdFx0XHRcdGFyY1RvKFIsIFIsIDAsIHN0ZXBBbmdsZSA+IE1hdGguUEksIHRydWUsIHgyLCB5MikuXHJcblx0XHRcdFx0XHRsaW5lVG8oaW5uZXJYMiwgaW5uZXJZMikuXHJcblx0XHRcdFx0XHRhcmNUbyhyLCByLCAwLCBzdGVwQW5nbGUgPiBNYXRoLlBJLCBmYWxzZSwgaW5uZXJYMSwgaW5uZXJZMSkuXHJcblx0XHRcdFx0XHRjbG9zZVBhdGgoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gZ3JvdXAuY3JlYXRlUGF0aCh7fSkuc2V0QWJzb2x1dGVNb2RlKHRydWUpLlxyXG5cdFx0XHRcdG1vdmVUbyhjaXJjbGUuY3gsIGNpcmNsZS5jeSkuXHJcblx0XHRcdFx0bGluZVRvKHgxLCB5MSkuXHJcblx0XHRcdFx0YXJjVG8oUiwgUiwgMCwgc3RlcEFuZ2xlID4gTWF0aC5QSSwgdHJ1ZSwgeDIsIHkyKS5cclxuXHRcdFx0XHRsaW5lVG8oY2lyY2xlLmN4LCBjaXJjbGUuY3kpLlxyXG5cdFx0XHRcdGNsb3NlUGF0aCgpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsOGFBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Pie.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Scatter.js":
/*!*******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Scatter.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./CartesianBase */ \"./node_modules/dojox/charting/plot2d/CartesianBase.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"),\r\n\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! dojox/lang/functional/reversed */ \"./node_modules/dojox/lang/functional/reversed.js\"), __webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\"), __webpack_require__(/*! dojox/gfx/gradutils */ \"./node_modules/dojox/gfx/gradutils.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, has, CartesianBase, _PlotEvents, dc, df, dfr, du, fx, gradutils){\r\n\r\n\tvar purgeGroup = dfr.lambda(\"item.purgeGroup()\");\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Scatter\", [CartesianBase, _PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tA plot object representing a typical scatter chart.\r\n\t\tdefaultParams: {\r\n\t\t\tshadows: null,\t// draw shadows\r\n\t\t\tanimate: null\t// animate chart to place\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\t// theme component\r\n\t\t\tmarkerStroke:\t\t{},\r\n\t\t\tmarkerOutline:\t\t{},\r\n\t\t\tmarkerShadow:\t\t{},\r\n\t\t\tmarkerFill:\t\t\t{},\r\n\t\t\tmarkerFont:\t\t\t\"\",\r\n\t\t\tmarkerFontColor:\t\"\",\r\n\t\t\tstyleFunc:\t\t\tnull\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the scatter plot.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\r\n\t\t\tthis.opt = lang.clone(lang.mixin(this.opt, this.defaultParams));\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.animate = this.opt.animate;\r\n\t\t},\r\n\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRun the calculations for any axes for this plot.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object in the form of { width, height }\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b}.\r\n\t\t\t// returns: dojox/charting/plot2d/Scatter\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(this.zoom && !this.isDataDirty()){\r\n\t\t\t\treturn this.performZoom(dim, offsets);\r\n\t\t\t}\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.dirty = this.isDirty();\r\n\t\t\tvar s;\r\n\t\t\tif(this.dirty){\r\n\t\t\t\tarr.forEach(this.series, purgeGroup);\r\n\t\t\t\tthis._eventSeries = {};\r\n\t\t\t\tthis.cleanGroup();\r\n\t\t\t\ts = this.getGroup();\r\n\t\t\t\tdf.forEachRev(this.series, function(item){ item.cleanGroup(s); });\r\n\t\t\t}\r\n\t\t\tvar t = this.chart.theme, events = this.events();\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar run = this.series[i];\r\n\t\t\t\tif(!this.dirty && !run.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tthis._reconnectEvents(run.name);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\trun.cleanGroup();\r\n\t\t\t\tif(!run.data.length){\r\n\t\t\t\t\trun.dirty = false;\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar theme = t.next(\"marker\", [this.opt, run]), lpoly,\r\n\t\t\t\t\tht = this._hScaler.scaler.getTransformerFromModel(this._hScaler),\r\n\t\t\t\t\tvt = this._vScaler.scaler.getTransformerFromModel(this._vScaler);\r\n\t\t\t\tif(run.hidden){\r\n\t\t\t\t\trun.dyn.marker = theme.symbol;\r\n\t\t\t\t\trun.dyn.markerFill = theme.marker.fill;\r\n\t\t\t\t\trun.dyn.markerStroke = theme.marker.stroke;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ts = run.group;\r\n\t\t\t\tif(typeof run.data[0] == \"number\"){\r\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tx: ht(i + 1) + offsets.l,\r\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlpoly = arr.map(run.data, function(v, i){\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tx: ht(v.x) + offsets.l,\r\n\t\t\t\t\t\t\ty: dim.height - offsets.b - vt(v.y)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowMarkers  = new Array(lpoly.length),\r\n\t\t\t\t\tfrontMarkers   = new Array(lpoly.length),\r\n\t\t\t\t\toutlineMarkers = new Array(lpoly.length);\r\n\r\n\t\t\t\tarr.forEach(lpoly, function(c, i){\r\n\t\t\t\t\tvar value = run.data[i], finalTheme;\r\n\t\t\t\t\tif(this.opt.styleFunc || typeof value != \"number\"){\r\n\t\t\t\t\t\tvar tMixin = typeof value != \"number\" ? [value] : [];\r\n\t\t\t\t\t\tif(this.opt.styleFunc){\r\n\t\t\t\t\t\t\ttMixin.push(this.opt.styleFunc(value));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfinalTheme = t.addMixin(theme, \"marker\", tMixin, true);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfinalTheme = t.post(theme, \"marker\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar path = \"M\" + c.x + \" \" + c.y + \" \" + finalTheme.symbol;\r\n\t\t\t\t\tif(finalTheme.marker.shadow){\r\n\t\t\t\t\t\tshadowMarkers[i] = s.createPath(\"M\" + (c.x + finalTheme.marker.shadow.dx) + \" \" +\r\n\t\t\t\t\t\t\t(c.y + finalTheme.marker.shadow.dy) + \" \" + finalTheme.symbol).\r\n\t\t\t\t\t\t\tsetStroke(finalTheme.marker.shadow).setFill(finalTheme.marker.shadow.color);\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateScatter(shadowMarkers[i], dim.height - offsets.b);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(finalTheme.marker.outline){\r\n\t\t\t\t\t\tvar outline = dc.makeStroke(finalTheme.marker.outline);\r\n\t\t\t\t\t\toutline.width = 2 * outline.width + (finalTheme.marker.stroke && finalTheme.marker.stroke.width || 0);\r\n\t\t\t\t\t\toutlineMarkers[i] = s.createPath(path).setStroke(outline);\r\n\t\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\t\tthis._animateScatter(outlineMarkers[i], dim.height - offsets.b);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar stroke = dc.makeStroke(finalTheme.marker.stroke),\r\n\t\t\t\t\t\tfill = this._plotFill(finalTheme.marker.fill, dim, offsets);\r\n\t\t\t\t\tif(fill && (fill.type === \"linear\" || fill.type == \"radial\")){\r\n\t\t\t\t\t\tvar color = gradutils.getColor(fill, {x: c.x, y: c.y});\r\n\t\t\t\t\t\tif(stroke){\r\n\t\t\t\t\t\t\tstroke.color = color;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(color);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfrontMarkers[i] = s.createPath(path).setStroke(stroke).setFill(fill);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.opt.labels){\r\n\t\t\t\t\t\tvar markerBox = frontMarkers[i].getBoundingBox();\r\n\t\t\t\t\t\tthis.createLabel(s, value, markerBox, finalTheme);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this.animate){\r\n\t\t\t\t\t\tthis._animateScatter(frontMarkers[i], dim.height - offsets.b);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t\tif(frontMarkers.length){\r\n\t\t\t\t\trun.dyn.marker = theme.symbol;\r\n\t\t\t\t\trun.dyn.markerStroke = frontMarkers[frontMarkers.length - 1].getStroke();\r\n\t\t\t\t\trun.dyn.markerFill   = frontMarkers[frontMarkers.length - 1].getFill();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(events){\r\n\t\t\t\t\tvar eventSeries = new Array(frontMarkers.length);\r\n\t\t\t\t\tarr.forEach(frontMarkers, function(s, i){\r\n\t\t\t\t\t\tvar o = {\r\n\t\t\t\t\t\t\telement: \"marker\",\r\n\t\t\t\t\t\t\tindex:   i,\r\n\t\t\t\t\t\t\trun:     run,\r\n\t\t\t\t\t\t\tshape:   s,\r\n\t\t\t\t\t\t\toutline: outlineMarkers && outlineMarkers[i] || null,\r\n\t\t\t\t\t\t\tshadow:  shadowMarkers && shadowMarkers[i] || null,\r\n\t\t\t\t\t\t\tcx:      lpoly[i].x,\r\n\t\t\t\t\t\t\tcy:      lpoly[i].y\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tif(typeof run.data[0] == \"number\"){\r\n\t\t\t\t\t\t\to.x = i + 1;\r\n\t\t\t\t\t\t\to.y = run.data[i];\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\to.x = run.data[i].x;\r\n\t\t\t\t\t\t\to.y = run.data[i].y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._connectEvents(o);\r\n\t\t\t\t\t\teventSeries[i] = o;\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tthis._eventSeries[run.name] = eventSeries;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdelete this._eventSeries[run.name];\r\n\t\t\t\t}\r\n\t\t\t\trun.dirty = false;\r\n\t\t\t}\r\n\t\t\tthis.dirty = false;\r\n\t\t\t// chart mirroring starts\r\n\t\t\tif(has(\"dojo-bidi\")){\r\n\t\t\t\tthis._checkOrientation(this.group, dim, offsets);\r\n\t\t\t}\r\n\t\t\t// chart mirroring ends\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Scatter\r\n\t\t},\r\n\t\t_animateScatter: function(shape, offset){\r\n\t\t\tfx.animateTransform(lang.delegate({\r\n\t\t\t\tshape: shape,\r\n\t\t\t\tduration: 1200,\r\n\t\t\t\ttransform: [\r\n\t\t\t\t\t{name: \"translate\", start: [0, offset], end: [0, 0]},\r\n\t\t\t\t\t{name: \"scale\", start: [0, 0], end: [1, 1]},\r\n\t\t\t\t\t{name: \"original\"}\r\n\t\t\t\t]\r\n\t\t\t}, this.animate)).play();\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Scatter.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Spider.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Spider.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"),\r\n\t__webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! dojo/_base/fx */ \"./node_modules/dojo/_base/fx.js\"), __webpack_require__(/*! dojo/fx */ \"./node_modules/dojo/fx.js\"), __webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"),\r\n\t__webpack_require__(/*! ./Base */ \"./node_modules/dojox/charting/plot2d/Base.js\"), __webpack_require__(/*! ./_PlotEvents */ \"./node_modules/dojox/charting/plot2d/_PlotEvents.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\"), __webpack_require__(/*! ../axis2d/common */ \"./node_modules/dojox/charting/axis2d/common.js\"),\r\n\t__webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/gfx/matrix */ \"./node_modules/dojox/gfx/matrix.js\"), __webpack_require__(/*! dojox/gfx/fx */ \"./node_modules/dojox/gfx/fx.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"),\r\n\t__webpack_require__(/*! dojox/lang/utils */ \"./node_modules/dojox/lang/utils.js\"), __webpack_require__(/*! dojo/fx/easing */ \"./node_modules/dojo/fx/easing.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, declare, hub, arr, domGeom, baseFx, coreFx, has,\r\n\t\t\tBase, PlotEvents, dc, da, g, m, gfxfx, df, du, easing){\r\n\r\n\tvar FUDGE_FACTOR = 0.2; // use to overlap fans\r\n\r\n\tvar Spider = declare(\"dojox.charting.plot2d.Spider\", [Base, PlotEvents], {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot that represents a typical Spider chart.\r\n\t\tdefaultParams: {\r\n\t\t\tlabels:\t\t\ttrue,\r\n\t\t\tticks:\t\t\tfalse,\r\n\t\t\tfixed:\t\t\ttrue,\r\n\t\t\tprecision:\t\t1,\r\n\t\t\tlabelOffset:\t-10,\r\n\t\t\tlabelStyle:\t\t\"default\",\t// default/rows/auto\r\n\t\t\thtmlLabels:\t\ttrue,\t\t// use HTML to draw labels\r\n\t\t\tstartAngle:\t\t-90,\t\t// start angle for slices in degrees\r\n\t\t\tdivisions:\t\t 3,\t\t\t// radius tick count\r\n\t\t\taxisColor:\t\t \"\",\t\t// spider axis color\r\n\t\t\taxisWidth:\t\t 0,\t\t\t// spider axis stroke width\r\n\t\t\tspiderColor:\t \"\",\t\t// spider web color\r\n\t\t\tspiderWidth:\t 0,\t\t\t// spider web stroke width\r\n\t\t\tseriesWidth:\t 0,\t\t\t// plot border with\r\n\t\t\tseriesFillAlpha: 0.2,\t\t// plot fill alpha\r\n\t\t\tspiderOrigin:\t 0.16,\r\n\t\t\tmarkerSize:\t\t 3,\t\t\t// radius of plot vertex (px)\r\n\t\t\tspiderType:\t\t \"polygon\", //\"circle\"\r\n\t\t\tanimationType:\t easing.backOut,\r\n\t\t\tanimate: null,\r\n\t\t\taxisTickFont:\t\t\"\",\r\n\t\t\taxisTickFontColor:\t\"\",\r\n\t\t\taxisFont:\t\t\t\"\",\r\n\t\t\taxisFontColor:\t\t\"\"\r\n\t\t},\r\n\t\toptionalParams: {\r\n\t\t\tradius:\t\t0,\r\n\t\t\tfont:\t\t\"\",\r\n\t\t\tfontColor:\t\"\"\r\n\t\t},\r\n\r\n\t\tconstructor: function(chart, kwArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate a Spider plot.\r\n\t\t\t// chart: dojox/charting/Chart\r\n\t\t\t//\t\tThe chart this plot belongs to.\r\n\t\t\t// kwArgs: dojox.charting.plot2d.__DefaultCtorArgs?\r\n\t\t\t//\t\tAn optional keyword arguments object to help define this plot's parameters.\r\n\t\t\tthis.opt = lang.clone(this.defaultParams);\r\n\t\t\tdu.updateWithObject(this.opt, kwArgs);\r\n\t\t\tdu.updateWithPattern(this.opt, kwArgs, this.optionalParams);\r\n\t\t\tthis.dyn = [];\r\n\t\t\tthis.datas = {};\r\n\t\t\tthis.labelKey = [];\r\n\t\t\tthis.oldSeriePoints = {};\r\n\t\t\tthis.animate = this.opt.animate === null ? {} : this.opt.animate;\r\n\t\t\tthis.animations = {};\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tClear out all of the information tied to this plot.\r\n\t\t\t// returns: dojox/charting/plot2d/Spider\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis.dyn = [];\r\n\t\t\tthis.axes = [];\r\n\t\t\tthis.datas = {};\r\n\t\t\tthis.labelKey = [];\r\n\t\t\tthis.oldSeriePoints = {};\r\n\t\t\tthis.animations = {};\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\r\n\t\t},\r\n\t\tsetAxis: function(axis){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tOptionally set axis min and max property.\r\n\t\t\t// returns: dojox/charting/plot2d/Spider\r\n\t\t\t//\t\tThe reference to this plot for functional chaining.\r\n\r\n\t\t\t// override the computed min/max with provided values if any\r\n\t\t\tif(axis){\r\n\t\t\t\tif(axis.opt.min != undefined){\r\n\t\t\t\t\tthis.datas[axis.name].min = axis.opt.min;\r\n\t\t\t\t}\r\n\t\t\t\tif(axis.opt.max != undefined){\r\n\t\t\t\t\tthis.datas[axis.name].max = axis.opt.max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\r\n\t\t},\r\n\t\taddSeries: function(run){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a data series to this plot.\r\n\t\t\t// run: dojox.charting.Series\r\n\t\t\t//\t\tThe series to be added.\r\n\t\t\t// returns: dojox/charting/plot2d/Base\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tthis.series.push(run);\r\n\t\t\tvar key;\r\n\t\t\tfor(key in run.data){\r\n\t\t\t\tvar val = run.data[key],\r\n\t\t\t\t\tdata = this.datas[key];\r\n\t\t\t\tif(data){\r\n\t\t\t\t\tdata.vlist.push(val);\r\n\t\t\t\t\tdata.min = Math.min(data.min, val);\r\n\t\t\t\t\tdata.max = Math.max(data.max, val);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar axisKey = \"__\"+key;\r\n\t\t\t\t\tthis.axes.push(axisKey);\r\n\t\t\t\t\tthis[axisKey] = key;\r\n\t\t\t\t\tthis.datas[key] = {min: val, max: val, vlist: [val]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.labelKey.length <= 0){\r\n\t\t\t\tfor(key in run.data){\r\n\t\t\t\t\tthis.labelKey.push(key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox.charting.plot2d.Base\r\n\t\t},\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\treturn dc.collectSimpleStats(this.series, function(v){ return v === null; }); // Object\r\n\t\t},\r\n\t\trender: function(dim, offsets){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRender the plot on the chart.\r\n\t\t\t// dim: Object\r\n\t\t\t//\t\tAn object of the form { width, height }.\r\n\t\t\t// offsets: Object\r\n\t\t\t//\t\tAn object of the form { l, r, t, b }.\r\n\t\t\t// returns: dojox/charting/plot2d/Spider\r\n\t\t\t//\t\tA reference to this plot for functional chaining.\r\n\t\t\tif(!this.dirty){ return this; }\r\n\t\t\tthis.dirty = false;\r\n\t\t\tthis.cleanGroup();\r\n\t\t\tvar s = this.group, t = this.chart.theme;\r\n\t\t\tthis.resetEvents();\r\n\r\n\t\t\tif(!this.series || !this.series.length){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\t// calculate the geometry\r\n\t\t\tvar o = this.opt, ta = t.axis,\r\n\t\t\t\trx = (dim.width\t - offsets.l - offsets.r) / 2,\r\n\t\t\t\try = (dim.height - offsets.t - offsets.b) / 2,\r\n\t\t\t\tr  = Math.min(rx, ry),\r\n\t\t\t\taxisTickFont = o.font || (ta.majorTick && ta.majorTick.font) || (ta.tick && ta.tick.font) || \"normal normal normal 7pt Tahoma\",\r\n\t\t\t\taxisFont = o.axisFont || (ta.tick && ta.tick.titleFont) || \"normal normal normal 11pt Tahoma\",\r\n\t\t\t\taxisTickFontColor = o.axisTickFontColor || (ta.majorTick && ta.majorTick.fontColor) || (ta.tick && ta.tick.fontColor) || \"silver\",\r\n\t\t\t\taxisFontColor = o.axisFontColor || (ta.tick && ta.tick.titleFontColor) || \"black\",\r\n\t\t\t\taxisColor = o.axisColor || (ta.tick && ta.tick.axisColor) || \"silver\",\r\n\t\t\t\tspiderColor = o.spiderColor || (ta.tick && ta.tick.spiderColor) || \"silver\",\r\n\t\t\t\taxisWidth = o.axisWidth || (ta.stroke && ta.stroke.width) || 2,\r\n\t\t\t\tspiderWidth = o.spiderWidth || (ta.stroke && ta.stroke.width) || 2,\r\n\t\t\t\tseriesWidth = o.seriesWidth || (ta.stroke && ta.stroke.width) || 2,\r\n\t\t\t\tasize = g.normalizedLength(g.splitFontString(axisFont).size),\r\n\t\t\t\tstartAngle = m._degToRad(o.startAngle),\r\n\t\t\t\tstart = startAngle, labels, shift, labelR,\r\n\t\t\t\touterPoints, innerPoints, divisionPoints, divisionRadius, labelPoints,\r\n\t\t\t\tro = o.spiderOrigin, dv = o.divisions >= 3 ? o.divisions : 3, ms = o.markerSize,\r\n\t\t\t\tspt = o.spiderType, at = o.animationType, lboffset = o.labelOffset < -10 ? o.labelOffset : -10,\r\n\t\t\t\taxisExtra = 0.2,\r\n\t\t\t\ti, j, point, len, fontWidth, render, serieEntry, run, data, min, max, distance;\r\n\t\t\t\r\n\t\t\tif(o.labels){\r\n\t\t\t\tlabels = arr.map(this.series, function(s){\r\n\t\t\t\t\treturn s.name;\r\n\t\t\t\t}, this);\r\n\t\t\t\tshift = df.foldl1(df.map(labels, function(label){\r\n\t\t\t\t\tvar font = t.series.font;\r\n\t\t\t\t\treturn g._base._getTextBox(label, {\r\n\t\t\t\t\t\tfont: font\r\n\t\t\t\t\t}).w;\r\n\t\t\t\t}, this), \"Math.max(a, b)\") / 2;\r\n\t\t\t\tr = Math.min(rx - 2 * shift, ry - asize) + lboffset;\r\n\t\t\t\tlabelR = r - lboffset;\r\n\t\t\t}\r\n\t\t\tif(\"radius\" in o){\r\n\t\t\t\tr = o.radius;\r\n\t\t\t\tlabelR = r - lboffset;\r\n\t\t\t}\r\n\t\t\tr /= (1+axisExtra);\r\n\t\t\tvar circle = {\r\n\t\t\t\tcx: offsets.l + rx,\r\n\t\t\t\tcy: offsets.t + ry,\r\n\t\t\t\tr: r\r\n\t\t\t};\r\n\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tserieEntry = this.series[i];\r\n\t\t\t\tif(!this.dirty && !serieEntry.dirty){\r\n\t\t\t\t\tt.skip();\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tserieEntry.cleanGroup();\r\n\t\t\t\trun = serieEntry.data;\r\n\t\t\t\tif(run !== null){\r\n\t\t\t\t\tlen = this._getObjectLength(run);\r\n\t\t\t\t\t//construct connect points\r\n\t\t\t\t\tif(!outerPoints || outerPoints.length <= 0){\r\n\t\t\t\t\t\touterPoints = [], innerPoints = [], labelPoints = [];\r\n\t\t\t\t\t\tthis._buildPoints(outerPoints, len, circle, r, start, true, dim);\r\n\t\t\t\t\t\tthis._buildPoints(innerPoints, len, circle, r*ro, start, true, dim);\r\n\t\t\t\t\t\tthis._buildPoints(labelPoints, len, circle, labelR, start, false, dim);\r\n\t\t\t\t\t\tif(dv > 2){\r\n\t\t\t\t\t\t\tdivisionPoints = [], divisionRadius = [];\r\n\t\t\t\t\t\t\tfor (j = 0; j < dv - 2; j++){\r\n\t\t\t\t\t\t\t\tdivisionPoints[j] = [];\r\n\t\t\t\t\t\t\t\tthis._buildPoints(divisionPoints[j], len, circle, r*(ro + (1-ro)*(j+1)/(dv-1)), start, true, dim);\r\n\t\t\t\t\t\t\t\tdivisionRadius[j] = r*(ro + (1-ro)*(j+1)/(dv-1));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//draw Spider\r\n\t\t\t//axis\r\n\t\t\tvar axisGroup = s.createGroup(), axisStroke = {color: axisColor, width: axisWidth},\r\n\t\t\t\tspiderStroke = {color: spiderColor, width: spiderWidth};\r\n\t\t\tfor (j = outerPoints.length - 1; j >= 0; --j){\r\n\t\t\t\tpoint = outerPoints[j];\r\n\t\t\t\tvar st = {\r\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra,\r\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnd = {\r\n\t\t\t\t\t\tx: point.x + (point.x - circle.cx) * axisExtra / 2,\r\n\t\t\t\t\t\ty: point.y + (point.y - circle.cy) * axisExtra / 2\r\n\t\t\t\t\t};\r\n\t\t\t\taxisGroup.createLine({\r\n\t\t\t\t\tx1: circle.cx,\r\n\t\t\t\t\ty1: circle.cy,\r\n\t\t\t\t\tx2: st.x,\r\n\t\t\t\t\ty2: st.y\r\n\t\t\t\t}).setStroke(axisStroke);\r\n\t\t\t\t//arrow\r\n\t\t\t\tthis._drawArrow(axisGroup, st, nd, axisStroke);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// draw the label\r\n\t\t\tvar labelGroup = s.createGroup();\r\n\t\t\tfor (j = labelPoints.length - 1; j >= 0; --j){\r\n\t\t\t\tpoint = labelPoints[j];\r\n\t\t\t\tfontWidth = g._base._getTextBox(this.labelKey[j], {font: axisFont}).w || 0;\r\n\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\r\n\t\t\t\tvar elem = da.createText[render](this.chart, labelGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\r\n\t\t\t\t\t\t\t\"middle\", this.labelKey[j], axisFont, axisFontColor);\r\n\t\t\t\tif(this.opt.htmlLabels){\r\n\t\t\t\t\tthis.htmlElements.push(elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//spider web: polygon or circle\r\n\t\t\tvar spiderGroup = s.createGroup();\r\n\t\t\tif(spt == \"polygon\"){\r\n\t\t\t\tspiderGroup.createPolyline(outerPoints).setStroke(spiderStroke);\r\n\t\t\t\tspiderGroup.createPolyline(innerPoints).setStroke(spiderStroke);\r\n\t\t\t\tif(divisionPoints.length > 0){\r\n\t\t\t\t\tfor (j = divisionPoints.length - 1; j >= 0; --j){\r\n\t\t\t\t\t\tspiderGroup.createPolyline(divisionPoints[j]).setStroke(spiderStroke);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{//circle\r\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r}).setStroke(spiderStroke);\r\n\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: r*ro}).setStroke(spiderStroke);\r\n\t\t\t\tif(divisionRadius.length > 0){\r\n\t\t\t\t\tfor (j = divisionRadius.length - 1; j >= 0; --j){\r\n\t\t\t\t\t\tspiderGroup.createCircle({cx: circle.cx, cy: circle.cy, r: divisionRadius[j]}).setStroke(spiderStroke);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//text\r\n\t\t\tlen = this._getObjectLength(this.datas);\r\n\t\t\tvar textGroup = s.createGroup(), k = 0;\r\n\t\t\tfor(var key in this.datas){\r\n\t\t\t\tdata = this.datas[key];\r\n\t\t\t\tmin = data.min;\r\n\t\t\t\tmax = data.max;\r\n\t\t\t\tdistance = max - min;\r\n\t\t\t\t\tend = start + 2 * Math.PI * k / len;\r\n\t\t\t\tfor (i = 0; i < dv; i++){\r\n\t\t\t\t\tvar text = min + distance*i/(dv-1);\r\n\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*i/(dv-1)), end, dim);\r\n\t\t\t\t\ttext = this._getLabel(text);\r\n\t\t\t\t\tfontWidth = g._base._getTextBox(text, {font: axisTickFont}).w || 0;\r\n\t\t\t\t\t\trender = this.opt.htmlLabels && g.renderer != \"vml\" ? \"html\" : \"gfx\";\r\n\t\t\t\t\tif(this.opt.htmlLabels){\r\n\t\t\t\t\t\tthis.htmlElements.push(da.createText[render]\r\n\t\t\t\t\t\t\t(this.chart, textGroup, (!domGeom.isBodyLtr() && render == \"html\") ? (point.x + fontWidth - dim.width) : point.x, point.y,\r\n\t\t\t\t\t\t\t\t\"start\", text, axisTickFont, axisTickFontColor));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tk++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//draw series (animation)\r\n\t\t\tthis.chart.seriesShapes = {};\r\n\t\t\tfor (i = this.series.length - 1; i >= 0; i--){\r\n\t\t\t\tserieEntry = this.series[i];\r\n\t\t\t\trun = serieEntry.data;\r\n\t\t\t\tif(run !== null){\r\n\t\t\t\t\tvar theme = t.next(\"spider\", [o, serieEntry]),\r\n\t\t\t\t\t\tf = g.normalizeColor(theme.series.fill), \r\n\t\t\t\t\t\tsk = {color: theme.series.fill, width: seriesWidth};\r\n\t\t\t\t\tf.a = o.seriesFillAlpha;\r\n\t\t\t\t\tserieEntry.dyn = {fill: f, stroke: sk};\r\n\t\t\t\t\tif(serieEntry.hidden){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//series polygon\r\n\t\t\t\t\tvar seriePoints = [], tipData = [];\r\n\t\t\t\t\tk = 0;\r\n\t\t\t\t\tfor(key in run){\r\n\t\t\t\t\t\tdata = this.datas[key];\r\n\t\t\t\t\t\tmin = data.min;\r\n\t\t\t\t\t\tmax = data.max;\r\n\t\t\t\t\t\tdistance = max - min;\r\n\t\t\t\t\t\tvar entry = run[key], end = start + 2 * Math.PI * k / len;\r\n\t\t\t\t\t\t\tpoint = this._getCoordinate(circle, r*(ro + (1-ro)*(entry-min)/distance), end, dim);\r\n\t\t\t\t\t\tseriePoints.push(point);\r\n\t\t\t\t\t\ttipData.push({sname: serieEntry.name, key: key, data: entry});\r\n\t\t\t\t\t\tk++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tseriePoints[seriePoints.length] = seriePoints[0];\r\n\t\t\t\t\ttipData[tipData.length] = tipData[0];\r\n\t\t\t\t\tvar polygonBoundRect = this._getBoundary(seriePoints),\r\n\t\t\t\t\t\tts = serieEntry.group;\r\n\t\t\t         \r\n\t\t\t\t\t\r\n\t\t\t\t\tvar osps = this.oldSeriePoints[serieEntry.name];\r\n\t\t\t\t\tvar cs = this._createSeriesEntry(ts, (osps || innerPoints), seriePoints, f, sk, r, ro, ms, at);\r\n\t\t\t\t\tthis.chart.seriesShapes[serieEntry.name] = cs;\r\n\t\t\t\t\tthis.oldSeriePoints[serieEntry.name] = seriePoints;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar po = {\r\n\t\t\t\t\t\telement: \"spider_poly\",\r\n\t\t\t\t\t\tindex:\t i,\r\n\t\t\t\t\t\tid:\t\t \"spider_poly_\"+serieEntry.name,\r\n\t\t\t\t\t\trun:\t serieEntry,\r\n\t\t\t\t\t\tplot:\t this,\r\n\t\t\t\t\t\tshape:\t cs.poly,\r\n\t\t\t\t\t\tparent:\t ts,\r\n\t\t\t\t\t\tbrect:\t polygonBoundRect,\r\n\t\t\t\t\t\tcx:\t\t circle.cx,\r\n\t\t\t\t\t\tcy:\t\t circle.cy,\r\n\t\t\t\t\t\tcr:\t\t r,\r\n\t\t\t\t\t\tf:\t\t f,\r\n\t\t\t\t\t\ts:\t\t s\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis._connectEvents(po);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar so = {\r\n\t\t\t\t\t\telement: \"spider_plot\",\r\n\t\t\t\t\t\tindex:\t i,\r\n\t\t\t\t\t\tid:\t\t \"spider_plot_\"+serieEntry.name,\r\n\t\t\t\t\t\trun:\t serieEntry,\r\n\t\t\t\t\t\tplot:\t this,\r\n\t\t\t\t\t\tshape:\t serieEntry.group\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis._connectEvents(so);\r\n\t\t\t\t\t\r\n\t\t\t\t\tarr.forEach(cs.circles, function(c, i){\r\n\t\t\t\t\t\tvar co = {\r\n\t\t\t\t\t\t\t\telement: \"spider_circle\",\r\n\t\t\t\t\t\t\t\tindex:\t i,\r\n\t\t\t\t\t\t\t\tid:\t\t \"spider_circle_\"+serieEntry.name+i,\r\n\t\t\t\t\t\t\t\trun:\t serieEntry,\r\n\t\t\t\t\t\t\t\tplot:\t this,\r\n\t\t\t\t\t\t\t\tshape:\t c,\r\n\t\t\t\t\t\t\t\tparent:\t ts,\r\n\t\t\t\t\t\t\t\ttdata:\t tipData[i],\r\n\t\t\t\t\t\t\t\tcx:\t\t seriePoints[i].x,\r\n\t\t\t\t\t\t\t\tcy:\t\t seriePoints[i].y,\r\n\t\t\t\t\t\t\t\tf:\t\t f,\r\n\t\t\t\t\t\t\t\ts:\t\t s\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis._connectEvents(co);\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t//\tdojox/charting/plot2d/Spider\r\n\t\t},\r\n\t\t_createSeriesEntry: function(ts, osps, sps, f, sk, r, ro, ms, at){\r\n\t\t\t//polygon\r\n\t\t\tvar initpoints = this.animate?osps:sps;\r\n\t\t\tvar spoly = ts.createPolyline(initpoints).setFill(f).setStroke(sk), scircle = [];\r\n\t\t\tfor (var j = 0; j < initpoints.length; j++){\r\n\t\t\t\tvar point = initpoints[j], cr = ms;\r\n\t\t\t\tvar circle = ts.createCircle({cx: point.x, cy: point.y, r: cr}).setFill(f).setStroke(sk);\r\n\t\t\t\tscircle.push(circle);\r\n\t\t\t}\r\n\t\t\tif(this.animate) {\r\n\t\t\t\tvar anims = arr.map(sps, function (np, j) {\r\n\t\t\t\t\t// create animation\r\n\t\t\t\t\tvar sp = osps[j],\r\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\r\n\t\t\t\t\t\t\tduration: 1000,\r\n\t\t\t\t\t\t\teasing: at,\r\n\t\t\t\t\t\t\tcurve: [sp.y, np.y]\r\n\t\t\t\t\t\t}, this.animate));\r\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\r\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (y) {\r\n\t\t\t\t\t\t//apply poly\r\n\t\t\t\t\t\tvar pshape = spl.getShape();\r\n\t\t\t\t\t\tpshape.points[j].y = y;\r\n\t\t\t\t\t\tspl.setShape(pshape);\r\n\t\t\t\t\t\t//apply circle\r\n\t\t\t\t\t\tvar cshape = sc.getShape();\r\n\t\t\t\t\t\tcshape.cy = y;\r\n\t\t\t\t\t\tsc.setShape(cshape);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn anim;\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tvar anims1 = arr.map(sps, function (np, j) {\r\n\t\t\t\t\t// create animation\r\n\t\t\t\t\tvar sp = osps[j],\r\n\t\t\t\t\t\tanim = new baseFx.Animation(lang.delegate({\r\n\t\t\t\t\t\t\tduration: 1000,\r\n\t\t\t\t\t\t\teasing: at,\r\n\t\t\t\t\t\t\tcurve: [sp.x, np.x]\r\n\t\t\t\t\t\t}, this.animate));\r\n\t\t\t\t\tvar spl = spoly, sc = scircle[j];\r\n\t\t\t\t\thub.connect(anim, \"onAnimate\", function (x) {\r\n\t\t\t\t\t\t//apply poly\r\n\t\t\t\t\t\tvar pshape = spl.getShape();\r\n\t\t\t\t\t\tpshape.points[j].x = x;\r\n\t\t\t\t\t\tspl.setShape(pshape);\r\n\t\t\t\t\t\t//apply circle\r\n\t\t\t\t\t\tvar cshape = sc.getShape();\r\n\t\t\t\t\t\tcshape.cx = x;\r\n\t\t\t\t\t\tsc.setShape(cshape);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn anim;\r\n\t\t\t\t}, this);\r\n\t\t\t\tvar masterAnimation = coreFx.combine(anims.concat(anims1)); //dojo.fx.chain(anims);\r\n\t\t\t\tmasterAnimation.play();\r\n\t\t\t}\r\n\t\t\treturn {group :ts, poly: spoly, circles: scircle};\r\n\t\t},\r\n\t\tplotEvent: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function for use by specific plots.\r\n\t\t\t// o: Object\r\n\t\t\t//\t\tAn object intended to represent event parameters.\r\n\t\t\tif(o.element == \"spider_plot\"){\r\n\t\t\t\t//dojo gfx function \"moveToFront\" not work in IE\r\n\t\t\t\tif(o.type == \"onmouseover\" && !has(\"ie\")){\r\n\t\t\t\t\to.shape.moveToFront();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttooltipFunc: function(o){\r\n\t\t\tif(o.element == \"spider_circle\"){\r\n\t\t\t\treturn o.tdata.sname + \"<br/>\" + o.tdata.key + \"<br/>\" + o.tdata.data;\r\n\t\t\t}else{\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_getBoundary: function(points){\r\n\t\t\tvar xmax = points[0].x,\r\n\t\t\t\txmin = points[0].x,\r\n\t\t\t\tymax = points[0].y,\r\n\t\t\t\tymin = points[0].y;\r\n\t\t\tfor(var i = 0; i < points.length; i++){\r\n\t\t\t\tvar point = points[i];\r\n\t\t\t\txmax = Math.max(point.x, xmax);\r\n\t\t\t\tymax = Math.max(point.y, ymax);\r\n\t\t\t\txmin = Math.min(point.x, xmin);\r\n\t\t\t\tymin = Math.min(point.y, ymin);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tx: xmin,\r\n\t\t\t\ty: ymin,\r\n\t\t\t\twidth: xmax - xmin,\r\n\t\t\t\theight: ymax - ymin\r\n\t\t\t};\r\n\t\t},\r\n\t\t\r\n\t\t_drawArrow: function(s, start, end, stroke){\r\n\t\t\tvar len = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2)),\r\n\t\t\t\tsin = (end.y - start.y)/len, cos = (end.x - start.x)/len,\r\n\t\t\t\tpoint2 = {x: end.x + (len/3)*(-sin), y: end.y + (len/3)*cos},\r\n\t\t\t\tpoint3 = {x: end.x + (len/3)*sin, y: end.y + (len/3)*(-cos)};\r\n\t\t\ts.createPolyline([start, point2, point3]).setFill(stroke.color).setStroke(stroke);\r\n\t\t},\r\n\t\t\r\n\t\t_buildPoints: function(points, count, circle, radius, angle, recursive, dim){\r\n\t\t\tfor(var i = 0; i < count; i++){\r\n\t\t\t\tvar end = angle + 2 * Math.PI * i / count;\r\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, end, dim));\r\n\t\t\t}\r\n\t\t\tif(recursive){\r\n\t\t\t\tpoints.push(this._getCoordinate(circle, radius, angle + 2 * Math.PI, dim));\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_getCoordinate: function(circle, radius, angle, dim){\r\n\t\t\tvar x = circle.cx + radius * Math.cos(angle);\r\n\t\t\tif(has(\"dojo-bidi\") && this.chart.isRightToLeft() && dim){\r\n\t\t\t\tx = dim.width - x;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: circle.cy + radius * Math.sin(angle)\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t_getObjectLength: function(obj){\r\n\t\t\tvar count = 0;\r\n\t\t\tif(lang.isObject(obj)){\r\n\t\t\t\tfor(var key in obj){\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn count;\r\n\t\t},\r\n\r\n\t\t// utilities\r\n\t\t_getLabel: function(number){\r\n\t\t\treturn dc.getLabel(number, this.opt.fixed, this.opt.precision);\r\n\t\t}\r\n\t});\r\n\r\n\treturn Spider; // dojox/plot2d/Spider\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Spider.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/Stacked.js":
/*!*******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/Stacked.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./Default */ \"./node_modules/dojox/charting/plot2d/Default.js\"), __webpack_require__(/*! ./commonStacked */ \"./node_modules/dojox/charting/plot2d/commonStacked.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, lang, Default, commonStacked){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.Stacked\", Default, {\r\n\t\t// summary:\r\n\t\t//\t\tLike the default plot, Stacked sets up lines, areas and markers\r\n\t\t//\t\tin a stacked fashion (values on the y axis added to each other)\r\n\t\t//\t\tas opposed to a direct one.\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\t\t\r\n\t\tbuildSegments: function(i, indexed){\r\n\t\t\tvar run = this.series[i],\r\n\t\t\t\tmin = indexed?Math.max(0, Math.floor(this._hScaler.bounds.from - 1)):0,\r\n\t\t\t\tmax = indexed?Math.min(run.data.length-1, Math.ceil(this._hScaler.bounds.to)):run.data.length-1,\r\n\t\t\t\trseg = null, segments = [], isNullValue = lang.hitch(this, \"isNullValue\");\r\n\t\t\t// split the run data into dense segments (each containing no nulls)\r\n\t\t\t// except if interpolates is false in which case ignore null between valid data\r\n\t\t\tfor(var j = min; j <= max; j++){\r\n\t\t\t\tvar value = indexed ? commonStacked.getIndexValue(this.series, i, j, isNullValue) : commonStacked.getValue(this.series, i, run.data[j] ?run.data[j].x: null, isNullValue);\r\n\t\t\t\tif(!isNullValue(value[0]) && (indexed || value[0].y != null)){\r\n\t\t\t\t\tif(!rseg){\r\n\t\t\t\t\t\trseg = [];\r\n\t\t\t\t\t\tsegments.push({index: j, rseg: rseg});\r\n\t\t\t\t\t}\r\n\t\t\t\t\trseg.push(value[0]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(!this.opt.interpolate || indexed){\r\n\t\t\t\t\t\t// we break the line only if not interpolating or if we have indexed data\r\n\t\t\t\t\t\trseg = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn segments;\r\n\t\t}\r\n\t\t\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1N0YWNrZWQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1N0YWNrZWQuanM/OWI0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9kZWNsYXJlXCIsIFwiZG9qby9fYmFzZS9sYW5nXCIsIFwiLi9EZWZhdWx0XCIsIFwiLi9jb21tb25TdGFja2VkXCJdLCBcclxuXHRmdW5jdGlvbihkZWNsYXJlLCBsYW5nLCBEZWZhdWx0LCBjb21tb25TdGFja2VkKXtcclxuXHJcblx0cmV0dXJuIGRlY2xhcmUoXCJkb2pveC5jaGFydGluZy5wbG90MmQuU3RhY2tlZFwiLCBEZWZhdWx0LCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0TGlrZSB0aGUgZGVmYXVsdCBwbG90LCBTdGFja2VkIHNldHMgdXAgbGluZXMsIGFyZWFzIGFuZCBtYXJrZXJzXHJcblx0XHQvL1x0XHRpbiBhIHN0YWNrZWQgZmFzaGlvbiAodmFsdWVzIG9uIHRoZSB5IGF4aXMgYWRkZWQgdG8gZWFjaCBvdGhlcilcclxuXHRcdC8vXHRcdGFzIG9wcG9zZWQgdG8gYSBkaXJlY3Qgb25lLlxyXG5cdFx0Z2V0U2VyaWVzU3RhdHM6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENhbGN1bGF0ZSB0aGUgbWluL21heCBvbiBhbGwgYXR0YWNoZWQgc2VyaWVzIGluIGJvdGggZGlyZWN0aW9ucy5cclxuXHRcdFx0Ly8gcmV0dXJuczogT2JqZWN0XHJcblx0XHRcdC8vXHRcdHtobWluLCBobWF4LCB2bWluLCB2bWF4fSBtaW4vbWF4IGluIGJvdGggZGlyZWN0aW9ucy5cclxuXHRcdFx0dmFyIHN0YXRzID0gY29tbW9uU3RhY2tlZC5jb2xsZWN0U3RhdHModGhpcy5zZXJpZXMsIGxhbmcuaGl0Y2godGhpcywgXCJpc051bGxWYWx1ZVwiKSk7XHJcblx0XHRcdHJldHVybiBzdGF0czsgLy8gT2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0XHJcblx0XHRidWlsZFNlZ21lbnRzOiBmdW5jdGlvbihpLCBpbmRleGVkKXtcclxuXHRcdFx0dmFyIHJ1biA9IHRoaXMuc2VyaWVzW2ldLFxyXG5cdFx0XHRcdG1pbiA9IGluZGV4ZWQ/TWF0aC5tYXgoMCwgTWF0aC5mbG9vcih0aGlzLl9oU2NhbGVyLmJvdW5kcy5mcm9tIC0gMSkpOjAsXHJcblx0XHRcdFx0bWF4ID0gaW5kZXhlZD9NYXRoLm1pbihydW4uZGF0YS5sZW5ndGgtMSwgTWF0aC5jZWlsKHRoaXMuX2hTY2FsZXIuYm91bmRzLnRvKSk6cnVuLmRhdGEubGVuZ3RoLTEsXHJcblx0XHRcdFx0cnNlZyA9IG51bGwsIHNlZ21lbnRzID0gW10sIGlzTnVsbFZhbHVlID0gbGFuZy5oaXRjaCh0aGlzLCBcImlzTnVsbFZhbHVlXCIpO1xyXG5cdFx0XHQvLyBzcGxpdCB0aGUgcnVuIGRhdGEgaW50byBkZW5zZSBzZWdtZW50cyAoZWFjaCBjb250YWluaW5nIG5vIG51bGxzKVxyXG5cdFx0XHQvLyBleGNlcHQgaWYgaW50ZXJwb2xhdGVzIGlzIGZhbHNlIGluIHdoaWNoIGNhc2UgaWdub3JlIG51bGwgYmV0d2VlbiB2YWxpZCBkYXRhXHJcblx0XHRcdGZvcih2YXIgaiA9IG1pbjsgaiA8PSBtYXg7IGorKyl7XHJcblx0XHRcdFx0dmFyIHZhbHVlID0gaW5kZXhlZCA/IGNvbW1vblN0YWNrZWQuZ2V0SW5kZXhWYWx1ZSh0aGlzLnNlcmllcywgaSwgaiwgaXNOdWxsVmFsdWUpIDogY29tbW9uU3RhY2tlZC5nZXRWYWx1ZSh0aGlzLnNlcmllcywgaSwgcnVuLmRhdGFbal0gP3J1bi5kYXRhW2pdLng6IG51bGwsIGlzTnVsbFZhbHVlKTtcclxuXHRcdFx0XHRpZighaXNOdWxsVmFsdWUodmFsdWVbMF0pICYmIChpbmRleGVkIHx8IHZhbHVlWzBdLnkgIT0gbnVsbCkpe1xyXG5cdFx0XHRcdFx0aWYoIXJzZWcpe1xyXG5cdFx0XHRcdFx0XHRyc2VnID0gW107XHJcblx0XHRcdFx0XHRcdHNlZ21lbnRzLnB1c2goe2luZGV4OiBqLCByc2VnOiByc2VnfSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyc2VnLnB1c2godmFsdWVbMF0pO1xyXG5cdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0aWYoIXRoaXMub3B0LmludGVycG9sYXRlIHx8IGluZGV4ZWQpe1xyXG5cdFx0XHRcdFx0XHQvLyB3ZSBicmVhayB0aGUgbGluZSBvbmx5IGlmIG5vdCBpbnRlcnBvbGF0aW5nIG9yIGlmIHdlIGhhdmUgaW5kZXhlZCBkYXRhXHJcblx0XHRcdFx0XHRcdHJzZWcgPSBudWxsO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gc2VnbWVudHM7XHJcblx0XHR9XHJcblx0XHRcclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsMGVBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/Stacked.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/StackedAreas.js":
/*!************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/StackedAreas.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Stacked */ \"./node_modules/dojox/charting/plot2d/Stacked.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Stacked){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.StackedAreas\", Stacked, {\r\n\t\t// summary:\r\n\t\t//\t\tA convenience object to set up a stacked area plot.\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tForce our Stacked plotter to include both lines and areas.\r\n\t\t\tthis.opt.lines = true;\r\n\t\t\tthis.opt.areas = true;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1N0YWNrZWRBcmVhcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9wbG90MmQvU3RhY2tlZEFyZWFzLmpzP2ZiNTgiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcIi4vU3RhY2tlZFwiXSwgZnVuY3Rpb24oZGVjbGFyZSwgU3RhY2tlZCl7XHJcblxyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcucGxvdDJkLlN0YWNrZWRBcmVhc1wiLCBTdGFja2VkLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBjb252ZW5pZW5jZSBvYmplY3QgdG8gc2V0IHVwIGEgc3RhY2tlZCBhcmVhIHBsb3QuXHJcblx0XHRjb25zdHJ1Y3RvcjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Rm9yY2Ugb3VyIFN0YWNrZWQgcGxvdHRlciB0byBpbmNsdWRlIGJvdGggbGluZXMgYW5kIGFyZWFzLlxyXG5cdFx0XHR0aGlzLm9wdC5saW5lcyA9IHRydWU7XHJcblx0XHRcdHRoaXMub3B0LmFyZWFzID0gdHJ1ZTtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/StackedAreas.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/StackedBars.js":
/*!***********************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/StackedBars.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./Bars */ \"./node_modules/dojox/charting/plot2d/Bars.js\"), __webpack_require__(/*! ./commonStacked */ \"./node_modules/dojox/charting/plot2d/commonStacked.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, lang, Bars, commonStacked){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.StackedBars\", Bars, {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot object representing a stacked bar chart (horizontal bars).\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\")), t;\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\tt = stats.hmin, stats.hmin = stats.vmin, stats.vmin = t;\r\n\t\t\tt = stats.hmax, stats.hmax = stats.vmax, stats.vmax = t;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\t\trearrangeValues: function(values, transform, baseline){\r\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1N0YWNrZWRCYXJzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL3Bsb3QyZC9TdGFja2VkQmFycy5qcz80YTgyIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCJkb2pvL19iYXNlL2xhbmdcIiwgXCIuL0JhcnNcIiwgXCIuL2NvbW1vblN0YWNrZWRcIl0sIFxyXG5cdGZ1bmN0aW9uKGRlY2xhcmUsIGxhbmcsIEJhcnMsIGNvbW1vblN0YWNrZWQpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5TdGFja2VkQmFyc1wiLCBCYXJzLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0VGhlIHBsb3Qgb2JqZWN0IHJlcHJlc2VudGluZyBhIHN0YWNrZWQgYmFyIGNoYXJ0IChob3Jpem9udGFsIGJhcnMpLlxyXG5cdFx0Z2V0U2VyaWVzU3RhdHM6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENhbGN1bGF0ZSB0aGUgbWluL21heCBvbiBhbGwgYXR0YWNoZWQgc2VyaWVzIGluIGJvdGggZGlyZWN0aW9ucy5cclxuXHRcdFx0Ly8gcmV0dXJuczogT2JqZWN0XHJcblx0XHRcdC8vXHRcdHtobWluLCBobWF4LCB2bWluLCB2bWF4fSBtaW4vbWF4IGluIGJvdGggZGlyZWN0aW9ucy5cclxuXHRcdFx0dmFyIHN0YXRzID0gY29tbW9uU3RhY2tlZC5jb2xsZWN0U3RhdHModGhpcy5zZXJpZXMsIGxhbmcuaGl0Y2godGhpcywgXCJpc051bGxWYWx1ZVwiKSksIHQ7XHJcblx0XHRcdHN0YXRzLmhtaW4gLT0gMC41O1xyXG5cdFx0XHRzdGF0cy5obWF4ICs9IDAuNTtcclxuXHRcdFx0dCA9IHN0YXRzLmhtaW4sIHN0YXRzLmhtaW4gPSBzdGF0cy52bWluLCBzdGF0cy52bWluID0gdDtcclxuXHRcdFx0dCA9IHN0YXRzLmhtYXgsIHN0YXRzLmhtYXggPSBzdGF0cy52bWF4LCBzdGF0cy52bWF4ID0gdDtcclxuXHRcdFx0cmV0dXJuIHN0YXRzOyAvLyBPYmplY3RcclxuXHRcdH0sXHJcblx0XHRyZWFycmFuZ2VWYWx1ZXM6IGZ1bmN0aW9uKHZhbHVlcywgdHJhbnNmb3JtLCBiYXNlbGluZSl7XHJcblx0XHRcdHJldHVybiBjb21tb25TdGFja2VkLnJlYXJyYW5nZVZhbHVlcy5jYWxsKHRoaXMsIHZhbHVlcywgdHJhbnNmb3JtLCBiYXNlbGluZSk7XHJcblx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLG9lQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/StackedBars.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/StackedColumns.js":
/*!**************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/StackedColumns.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./Columns */ \"./node_modules/dojox/charting/plot2d/Columns.js\"), __webpack_require__(/*! ./commonStacked */ \"./node_modules/dojox/charting/plot2d/commonStacked.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, lang, Columns, commonStacked){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.StackedColumns\", Columns, {\r\n\t\t// summary:\r\n\t\t//\t\tThe plot object representing a stacked column chart (vertical bars).\r\n\t\tgetSeriesStats: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalculate the min/max on all attached series in both directions.\r\n\t\t\t// returns: Object\r\n\t\t\t//\t\t{hmin, hmax, vmin, vmax} min/max in both directions.\r\n\t\t\tvar stats = commonStacked.collectStats(this.series, lang.hitch(this, \"isNullValue\"));\r\n\t\t\tstats.hmin -= 0.5;\r\n\t\t\tstats.hmax += 0.5;\r\n\t\t\treturn stats; // Object\r\n\t\t},\r\n\r\n\t\trearrangeValues: function(values, transform, baseline){\r\n\t\t\treturn commonStacked.rearrangeValues.call(this, values, transform, baseline);\r\n \t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1N0YWNrZWRDb2x1bW5zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL3Bsb3QyZC9TdGFja2VkQ29sdW1ucy5qcz9jNGE2Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2RlY2xhcmVcIiwgXCJkb2pvL19iYXNlL2xhbmdcIiwgXCIuL0NvbHVtbnNcIiwgXCIuL2NvbW1vblN0YWNrZWRcIl0sIFxyXG5cdGZ1bmN0aW9uKGRlY2xhcmUsIGxhbmcsIENvbHVtbnMsIGNvbW1vblN0YWNrZWQpe1xyXG5cclxuXHRyZXR1cm4gZGVjbGFyZShcImRvam94LmNoYXJ0aW5nLnBsb3QyZC5TdGFja2VkQ29sdW1uc1wiLCBDb2x1bW5zLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0VGhlIHBsb3Qgb2JqZWN0IHJlcHJlc2VudGluZyBhIHN0YWNrZWQgY29sdW1uIGNoYXJ0ICh2ZXJ0aWNhbCBiYXJzKS5cclxuXHRcdGdldFNlcmllc1N0YXRzOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRDYWxjdWxhdGUgdGhlIG1pbi9tYXggb24gYWxsIGF0dGFjaGVkIHNlcmllcyBpbiBib3RoIGRpcmVjdGlvbnMuXHJcblx0XHRcdC8vIHJldHVybnM6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHR7aG1pbiwgaG1heCwgdm1pbiwgdm1heH0gbWluL21heCBpbiBib3RoIGRpcmVjdGlvbnMuXHJcblx0XHRcdHZhciBzdGF0cyA9IGNvbW1vblN0YWNrZWQuY29sbGVjdFN0YXRzKHRoaXMuc2VyaWVzLCBsYW5nLmhpdGNoKHRoaXMsIFwiaXNOdWxsVmFsdWVcIikpO1xyXG5cdFx0XHRzdGF0cy5obWluIC09IDAuNTtcclxuXHRcdFx0c3RhdHMuaG1heCArPSAwLjU7XHJcblx0XHRcdHJldHVybiBzdGF0czsgLy8gT2JqZWN0XHJcblx0XHR9LFxyXG5cclxuXHRcdHJlYXJyYW5nZVZhbHVlczogZnVuY3Rpb24odmFsdWVzLCB0cmFuc2Zvcm0sIGJhc2VsaW5lKXtcclxuXHRcdFx0cmV0dXJuIGNvbW1vblN0YWNrZWQucmVhcnJhbmdlVmFsdWVzLmNhbGwodGhpcywgdmFsdWVzLCB0cmFuc2Zvcm0sIGJhc2VsaW5lKTtcclxuIFx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLDBlQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/StackedColumns.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/StackedLines.js":
/*!************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/StackedLines.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./Stacked */ \"./node_modules/dojox/charting/plot2d/Stacked.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, Stacked){\r\n\r\n\treturn declare(\"dojox.charting.plot2d.StackedLines\", Stacked, {\r\n\t\t// summary:\r\n\t\t//\t\tA convenience object to create a stacked line chart.\r\n\t\tconstructor: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tForce our Stacked base to be lines only.\r\n\t\t\tthis.opt.lines = true;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL1N0YWNrZWRMaW5lcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9wbG90MmQvU3RhY2tlZExpbmVzLmpzP2ViMWIiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCBcIi4vU3RhY2tlZFwiXSwgZnVuY3Rpb24oZGVjbGFyZSwgU3RhY2tlZCl7XHJcblxyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcucGxvdDJkLlN0YWNrZWRMaW5lc1wiLCBTdGFja2VkLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBjb252ZW5pZW5jZSBvYmplY3QgdG8gY3JlYXRlIGEgc3RhY2tlZCBsaW5lIGNoYXJ0LlxyXG5cdFx0Y29uc3RydWN0b3I6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEZvcmNlIG91ciBTdGFja2VkIGJhc2UgdG8gYmUgbGluZXMgb25seS5cclxuXHRcdFx0dGhpcy5vcHQubGluZXMgPSB0cnVlO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/StackedLines.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/_PlotEvents.js":
/*!***********************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/_PlotEvents.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, declare, hub){\r\n\r\n\treturn declare(\"dojox.charting.plot2d._PlotEvents\", null, {\r\n\t\tconstructor: function(){\r\n\t\t\tthis._shapeEvents = [];\r\n\t\t\tthis._eventSeries = {};\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy any internal elements and event handlers.\r\n\t\t\tthis.resetEvents();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tplotEvent: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStub function for use by specific plots.\r\n\t\t\t// o: Object\r\n\t\t\t//\t\tAn object intended to represent event parameters.\r\n\t\t},\r\n\t\traiseEvent: function(o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRaises events in predefined order\r\n\t\t\t// o: Object\r\n\t\t\t//\t\tAn object intended to represent event parameters.\r\n\t\t\tthis.plotEvent(o);\r\n\t\t\tvar t = lang.delegate(o);\r\n\t\t\tt.originalEvent = o.type;\r\n\t\t\tt.originalPlot  = o.plot;\r\n\t\t\tt.type = \"onindirect\";\r\n\t\t\tarr.forEach(this.chart.stack, function(plot){\r\n\t\t\t\tif(plot !== this && plot.plotEvent){\r\n\t\t\t\t\tt.plot = plot;\r\n\t\t\t\t\tplot.plotEvent(t);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\t\tconnect: function(object, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to connect any object's method to our plotEvent.\r\n\t\t\t// object: Object\r\n\t\t\t//\t\tThe object to connect to.\r\n\t\t\t// method: String|Function\r\n\t\t\t//\t\tThe method to fire when our plotEvent is fired.\r\n\t\t\t// returns: Array\r\n\t\t\t//\t\tThe handle as returned from dojo.connect (see dojo.connect).\r\n\t\t\tthis.dirty = true;\r\n\t\t\treturn hub.connect(this, \"plotEvent\", object, method);\t//\tArray\r\n\t\t},\r\n\t\tevents: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFind out if any event handlers have been connected to our plotEvent.\r\n\t\t\t// returns: Boolean\r\n\t\t\t//\t\tA flag indicating that there are handlers attached.\r\n\t\t\treturn !!this.plotEvent.after;\r\n\t\t},\r\n\t\tresetEvents: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReset all events attached to our plotEvent (i.e. disconnect).\r\n\t\t\tif(this._shapeEvents.length){\r\n\t\t\t\tarr.forEach(this._shapeEvents, function(item){\r\n\t\t\t\t\titem.shape.disconnect(item.handle);\r\n\t\t\t\t});\r\n\t\t\t\tthis._shapeEvents = [];\r\n\t\t\t}\r\n\t\t\tthis.raiseEvent({type: \"onplotreset\", plot: this});\r\n\t\t},\r\n\t\t_connectSingleEvent: function(o, eventName){\r\n\t\t\tthis._shapeEvents.push({\r\n\t\t\t\tshape:  o.eventMask,\r\n\t\t\t\thandle: o.eventMask.connect(eventName, this, function(e){\r\n\t\t\t\t\to.type  = eventName;\r\n\t\t\t\t\to.event = e;\r\n\t\t\t\t\tthis.raiseEvent(o);\r\n\t\t\t\t\to.event = null;\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t},\r\n\t\t_connectEvents: function(o){\r\n\t\t\tif(o){\r\n\t\t\t\to.chart = this.chart;\r\n\t\t\t\to.plot  = this;\r\n\t\t\t\to.hAxis = this.hAxis || null;\r\n\t\t\t\to.vAxis = this.vAxis || null;\r\n\t\t\t\to.eventMask = o.eventMask || o.shape;\r\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseover\");\r\n\t\t\t\tthis._connectSingleEvent(o, \"onmouseout\");\r\n\t\t\t\tthis._connectSingleEvent(o, \"onclick\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t_reconnectEvents: function(seriesName){\r\n\t\t\tvar a = this._eventSeries[seriesName];\r\n\t\t\tif(a){\r\n\t\t\t\tarr.forEach(a, this._connectEvents, this);\r\n\t\t\t}\r\n\t\t},\r\n\t\tfireEvent: function(seriesName, eventName, index, eventObject){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEmulates firing an event for a given data value (specified by\r\n\t\t\t//\t\tan index) of a given series.\r\n\t\t\t// seriesName: String\r\n\t\t\t//\t\tSeries name.\r\n\t\t\t// eventName: String\r\n\t\t\t//\t\tEvent name to emulate.\r\n\t\t\t// index: Number\r\n\t\t\t//\t\tValid data value index used to raise an event.\r\n\t\t\t// eventObject: Object?\r\n\t\t\t//\t\tOptional event object. Especially useful for synthetic events.\r\n\t\t\t//\t\tDefault: null.\r\n\t\t\tvar s = this._eventSeries[seriesName];\r\n\t\t\tif(s && s.length && index < s.length){\r\n\t\t\t\tvar o = s[index];\r\n\t\t\t\to.type  = eventName;\r\n\t\t\t\to.event = eventObject || null;\r\n\t\t\t\tthis.raiseEvent(o);\r\n\t\t\t\to.event = null;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvcGxvdDJkL19QbG90RXZlbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2NoYXJ0aW5nL3Bsb3QyZC9fUGxvdEV2ZW50cy5qcz8wM2E4Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2xhbmdcIiwgXCJkb2pvL19iYXNlL2FycmF5XCIsIFwiZG9qby9fYmFzZS9kZWNsYXJlXCIsIFwiZG9qby9fYmFzZS9jb25uZWN0XCJdLCBcclxuXHRmdW5jdGlvbihsYW5nLCBhcnIsIGRlY2xhcmUsIGh1Yil7XHJcblxyXG5cdHJldHVybiBkZWNsYXJlKFwiZG9qb3guY2hhcnRpbmcucGxvdDJkLl9QbG90RXZlbnRzXCIsIG51bGwsIHtcclxuXHRcdGNvbnN0cnVjdG9yOiBmdW5jdGlvbigpe1xyXG5cdFx0XHR0aGlzLl9zaGFwZUV2ZW50cyA9IFtdO1xyXG5cdFx0XHR0aGlzLl9ldmVudFNlcmllcyA9IHt9O1xyXG5cdFx0fSxcclxuXHRcdGRlc3Ryb3k6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdERlc3Ryb3kgYW55IGludGVybmFsIGVsZW1lbnRzIGFuZCBldmVudCBoYW5kbGVycy5cclxuXHRcdFx0dGhpcy5yZXNldEV2ZW50cygpO1xyXG5cdFx0XHR0aGlzLmluaGVyaXRlZChhcmd1bWVudHMpO1xyXG5cdFx0fSxcclxuXHRcdHBsb3RFdmVudDogZnVuY3Rpb24obyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFN0dWIgZnVuY3Rpb24gZm9yIHVzZSBieSBzcGVjaWZpYyBwbG90cy5cclxuXHRcdFx0Ly8gbzogT2JqZWN0XHJcblx0XHRcdC8vXHRcdEFuIG9iamVjdCBpbnRlbmRlZCB0byByZXByZXNlbnQgZXZlbnQgcGFyYW1ldGVycy5cclxuXHRcdH0sXHJcblx0XHRyYWlzZUV2ZW50OiBmdW5jdGlvbihvKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UmFpc2VzIGV2ZW50cyBpbiBwcmVkZWZpbmVkIG9yZGVyXHJcblx0XHRcdC8vIG86IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRBbiBvYmplY3QgaW50ZW5kZWQgdG8gcmVwcmVzZW50IGV2ZW50IHBhcmFtZXRlcnMuXHJcblx0XHRcdHRoaXMucGxvdEV2ZW50KG8pO1xyXG5cdFx0XHR2YXIgdCA9IGxhbmcuZGVsZWdhdGUobyk7XHJcblx0XHRcdHQub3JpZ2luYWxFdmVudCA9IG8udHlwZTtcclxuXHRcdFx0dC5vcmlnaW5hbFBsb3QgID0gby5wbG90O1xyXG5cdFx0XHR0LnR5cGUgPSBcIm9uaW5kaXJlY3RcIjtcclxuXHRcdFx0YXJyLmZvckVhY2godGhpcy5jaGFydC5zdGFjaywgZnVuY3Rpb24ocGxvdCl7XHJcblx0XHRcdFx0aWYocGxvdCAhPT0gdGhpcyAmJiBwbG90LnBsb3RFdmVudCl7XHJcblx0XHRcdFx0XHR0LnBsb3QgPSBwbG90O1xyXG5cdFx0XHRcdFx0cGxvdC5wbG90RXZlbnQodCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB0aGlzKTtcclxuXHRcdH0sXHJcblx0XHRjb25uZWN0OiBmdW5jdGlvbihvYmplY3QsIG1ldGhvZCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEhlbHBlciBmdW5jdGlvbiB0byBjb25uZWN0IGFueSBvYmplY3QncyBtZXRob2QgdG8gb3VyIHBsb3RFdmVudC5cclxuXHRcdFx0Ly8gb2JqZWN0OiBPYmplY3RcclxuXHRcdFx0Ly9cdFx0VGhlIG9iamVjdCB0byBjb25uZWN0IHRvLlxyXG5cdFx0XHQvLyBtZXRob2Q6IFN0cmluZ3xGdW5jdGlvblxyXG5cdFx0XHQvL1x0XHRUaGUgbWV0aG9kIHRvIGZpcmUgd2hlbiBvdXIgcGxvdEV2ZW50IGlzIGZpcmVkLlxyXG5cdFx0XHQvLyByZXR1cm5zOiBBcnJheVxyXG5cdFx0XHQvL1x0XHRUaGUgaGFuZGxlIGFzIHJldHVybmVkIGZyb20gZG9qby5jb25uZWN0IChzZWUgZG9qby5jb25uZWN0KS5cclxuXHRcdFx0dGhpcy5kaXJ0eSA9IHRydWU7XHJcblx0XHRcdHJldHVybiBodWIuY29ubmVjdCh0aGlzLCBcInBsb3RFdmVudFwiLCBvYmplY3QsIG1ldGhvZCk7XHQvL1x0QXJyYXlcclxuXHRcdH0sXHJcblx0XHRldmVudHM6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEZpbmQgb3V0IGlmIGFueSBldmVudCBoYW5kbGVycyBoYXZlIGJlZW4gY29ubmVjdGVkIHRvIG91ciBwbG90RXZlbnQuXHJcblx0XHRcdC8vIHJldHVybnM6IEJvb2xlYW5cclxuXHRcdFx0Ly9cdFx0QSBmbGFnIGluZGljYXRpbmcgdGhhdCB0aGVyZSBhcmUgaGFuZGxlcnMgYXR0YWNoZWQuXHJcblx0XHRcdHJldHVybiAhIXRoaXMucGxvdEV2ZW50LmFmdGVyO1xyXG5cdFx0fSxcclxuXHRcdHJlc2V0RXZlbnRzOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZXNldCBhbGwgZXZlbnRzIGF0dGFjaGVkIHRvIG91ciBwbG90RXZlbnQgKGkuZS4gZGlzY29ubmVjdCkuXHJcblx0XHRcdGlmKHRoaXMuX3NoYXBlRXZlbnRzLmxlbmd0aCl7XHJcblx0XHRcdFx0YXJyLmZvckVhY2godGhpcy5fc2hhcGVFdmVudHMsIGZ1bmN0aW9uKGl0ZW0pe1xyXG5cdFx0XHRcdFx0aXRlbS5zaGFwZS5kaXNjb25uZWN0KGl0ZW0uaGFuZGxlKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHR0aGlzLl9zaGFwZUV2ZW50cyA9IFtdO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMucmFpc2VFdmVudCh7dHlwZTogXCJvbnBsb3RyZXNldFwiLCBwbG90OiB0aGlzfSk7XHJcblx0XHR9LFxyXG5cdFx0X2Nvbm5lY3RTaW5nbGVFdmVudDogZnVuY3Rpb24obywgZXZlbnROYW1lKXtcclxuXHRcdFx0dGhpcy5fc2hhcGVFdmVudHMucHVzaCh7XHJcblx0XHRcdFx0c2hhcGU6ICBvLmV2ZW50TWFzayxcclxuXHRcdFx0XHRoYW5kbGU6IG8uZXZlbnRNYXNrLmNvbm5lY3QoZXZlbnROYW1lLCB0aGlzLCBmdW5jdGlvbihlKXtcclxuXHRcdFx0XHRcdG8udHlwZSAgPSBldmVudE5hbWU7XHJcblx0XHRcdFx0XHRvLmV2ZW50ID0gZTtcclxuXHRcdFx0XHRcdHRoaXMucmFpc2VFdmVudChvKTtcclxuXHRcdFx0XHRcdG8uZXZlbnQgPSBudWxsO1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pO1xyXG5cdFx0fSxcclxuXHRcdF9jb25uZWN0RXZlbnRzOiBmdW5jdGlvbihvKXtcclxuXHRcdFx0aWYobyl7XHJcblx0XHRcdFx0by5jaGFydCA9IHRoaXMuY2hhcnQ7XHJcblx0XHRcdFx0by5wbG90ICA9IHRoaXM7XHJcblx0XHRcdFx0by5oQXhpcyA9IHRoaXMuaEF4aXMgfHwgbnVsbDtcclxuXHRcdFx0XHRvLnZBeGlzID0gdGhpcy52QXhpcyB8fCBudWxsO1xyXG5cdFx0XHRcdG8uZXZlbnRNYXNrID0gby5ldmVudE1hc2sgfHwgby5zaGFwZTtcclxuXHRcdFx0XHR0aGlzLl9jb25uZWN0U2luZ2xlRXZlbnQobywgXCJvbm1vdXNlb3ZlclwiKTtcclxuXHRcdFx0XHR0aGlzLl9jb25uZWN0U2luZ2xlRXZlbnQobywgXCJvbm1vdXNlb3V0XCIpO1xyXG5cdFx0XHRcdHRoaXMuX2Nvbm5lY3RTaW5nbGVFdmVudChvLCBcIm9uY2xpY2tcIik7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRfcmVjb25uZWN0RXZlbnRzOiBmdW5jdGlvbihzZXJpZXNOYW1lKXtcclxuXHRcdFx0dmFyIGEgPSB0aGlzLl9ldmVudFNlcmllc1tzZXJpZXNOYW1lXTtcclxuXHRcdFx0aWYoYSl7XHJcblx0XHRcdFx0YXJyLmZvckVhY2goYSwgdGhpcy5fY29ubmVjdEV2ZW50cywgdGhpcyk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHRmaXJlRXZlbnQ6IGZ1bmN0aW9uKHNlcmllc05hbWUsIGV2ZW50TmFtZSwgaW5kZXgsIGV2ZW50T2JqZWN0KXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0RW11bGF0ZXMgZmlyaW5nIGFuIGV2ZW50IGZvciBhIGdpdmVuIGRhdGEgdmFsdWUgKHNwZWNpZmllZCBieVxyXG5cdFx0XHQvL1x0XHRhbiBpbmRleCkgb2YgYSBnaXZlbiBzZXJpZXMuXHJcblx0XHRcdC8vIHNlcmllc05hbWU6IFN0cmluZ1xyXG5cdFx0XHQvL1x0XHRTZXJpZXMgbmFtZS5cclxuXHRcdFx0Ly8gZXZlbnROYW1lOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0RXZlbnQgbmFtZSB0byBlbXVsYXRlLlxyXG5cdFx0XHQvLyBpbmRleDogTnVtYmVyXHJcblx0XHRcdC8vXHRcdFZhbGlkIGRhdGEgdmFsdWUgaW5kZXggdXNlZCB0byByYWlzZSBhbiBldmVudC5cclxuXHRcdFx0Ly8gZXZlbnRPYmplY3Q6IE9iamVjdD9cclxuXHRcdFx0Ly9cdFx0T3B0aW9uYWwgZXZlbnQgb2JqZWN0LiBFc3BlY2lhbGx5IHVzZWZ1bCBmb3Igc3ludGhldGljIGV2ZW50cy5cclxuXHRcdFx0Ly9cdFx0RGVmYXVsdDogbnVsbC5cclxuXHRcdFx0dmFyIHMgPSB0aGlzLl9ldmVudFNlcmllc1tzZXJpZXNOYW1lXTtcclxuXHRcdFx0aWYocyAmJiBzLmxlbmd0aCAmJiBpbmRleCA8IHMubGVuZ3RoKXtcclxuXHRcdFx0XHR2YXIgbyA9IHNbaW5kZXhdO1xyXG5cdFx0XHRcdG8udHlwZSAgPSBldmVudE5hbWU7XHJcblx0XHRcdFx0by5ldmVudCA9IGV2ZW50T2JqZWN0IHx8IG51bGw7XHJcblx0XHRcdFx0dGhpcy5yYWlzZUV2ZW50KG8pO1xyXG5cdFx0XHRcdG8uZXZlbnQgPSBudWxsO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLHNkQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/_PlotEvents.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/common.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/common.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"), \r\n\t\t__webpack_require__(/*! dojox/gfx */ \"./node_modules/dojox/gfx.js\"), __webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"), __webpack_require__(/*! ../scaler/common */ \"./node_modules/dojox/charting/scaler/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, Color, g, df, sc){\r\n\t\r\n\tvar common = lang.getObject(\"dojox.charting.plot2d.common\", true);\r\n\t\r\n\treturn lang.mixin(common, {\t\r\n\t\tdoIfLoaded: sc.doIfLoaded,\r\n\t\tmakeStroke: function(stroke){\r\n\t\t\tif(!stroke){ return stroke; }\r\n\t\t\tif(typeof stroke == \"string\" || stroke instanceof Color){\r\n\t\t\t\tstroke = {color: stroke};\r\n\t\t\t}\r\n\t\t\treturn g.makeParameters(g.defaultStroke, stroke);\r\n\t\t},\r\n\t\taugmentColor: function(target, color){\r\n\t\t\tvar t = new Color(target),\r\n\t\t\t\tc = new Color(color);\r\n\t\t\tc.a = t.a;\r\n\t\t\treturn c;\r\n\t\t},\r\n\t\taugmentStroke: function(stroke, color){\r\n\t\t\tvar s = common.makeStroke(stroke);\r\n\t\t\tif(s){\r\n\t\t\t\ts.color = common.augmentColor(s.color, color);\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t},\r\n\t\taugmentFill: function(fill, color){\r\n\t\t\tvar fc, c = new Color(color);\r\n\t\t\tif(typeof fill == \"string\" || fill instanceof Color){\r\n\t\t\t\treturn common.augmentColor(fill, color);\r\n\t\t\t}\r\n\t\t\treturn fill;\r\n\t\t},\r\n\r\n\t\tdefaultStats: {\r\n\t\t\tvmin: Number.POSITIVE_INFINITY, vmax: Number.NEGATIVE_INFINITY,\r\n\t\t\thmin: Number.POSITIVE_INFINITY, hmax: Number.NEGATIVE_INFINITY\r\n\t\t},\r\n\r\n\t\tcollectSimpleStats: function(series, isNullValue){\r\n\t\t\tvar stats = lang.delegate(common.defaultStats);\r\n\t\t\tfor(var i = 0; i < series.length; ++i){\r\n\t\t\t\tvar run = series[i];\r\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\r\n\t\t\t\t\tif(!isNullValue(run.data[j])){\r\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\"){\r\n\t\t\t\t\t\t\t// 1D case\r\n\t\t\t\t\t\t\tvar old_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\r\n\t\t\t\t\t\t\t\tif(!isNullValue(val)){\r\n\t\t\t\t\t\t\t\t\tvar x = i + 1, y = val;\r\n\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\r\n\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\r\n\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// 2D case\r\n\t\t\t\t\t\t\tvar old_hmin = stats.hmin, old_hmax = stats.hmax,\r\n\t\t\t\t\t\t\t\told_vmin = stats.vmin, old_vmax = stats.vmax;\r\n\t\t\t\t\t\t\tif(!(\"xmin\" in run) || !(\"xmax\" in run) || !(\"ymin\" in run) || !(\"ymax\" in run)){\r\n\t\t\t\t\t\t\t\tarr.forEach(run.data, function(val, i){\r\n\t\t\t\t\t\t\t\t\tif(!isNullValue(val)){\r\n\t\t\t\t\t\t\t\t\t\tvar x = \"x\" in val ? val.x : i + 1, y = val.y;\r\n\t\t\t\t\t\t\t\t\t\tif(isNaN(x)){ x = 0; }\r\n\t\t\t\t\t\t\t\t\t\tif(isNaN(y)){ y = 0; }\r\n\t\t\t\t\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\r\n\t\t\t\t\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(\"xmin\" in run){ stats.hmin = Math.min(old_hmin, run.xmin); }\r\n\t\t\t\t\t\t\tif(\"xmax\" in run){ stats.hmax = Math.max(old_hmax, run.xmax); }\r\n\t\t\t\t\t\t\tif(\"ymin\" in run){ stats.vmin = Math.min(old_vmin, run.ymin); }\r\n\t\t\t\t\t\t\tif(\"ymax\" in run){ stats.vmax = Math.max(old_vmax, run.ymax); }\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn stats;\r\n\t\t},\r\n\r\n\t\tcalculateBarSize: function(/* Number */ availableSize, /* Object */ opt, /* Number? */ clusterSize){\r\n\t\t\tif(!clusterSize){\r\n\t\t\t\tclusterSize = 1;\r\n\t\t\t}\r\n\t\t\tvar gap = opt.gap, size = (availableSize - 2 * gap) / clusterSize;\r\n\t\t\tif(\"minBarSize\" in opt){\r\n\t\t\t\tsize = Math.max(size, opt.minBarSize);\r\n\t\t\t}\r\n\t\t\tif(\"maxBarSize\" in opt){\r\n\t\t\t\tsize = Math.min(size, opt.maxBarSize);\r\n\t\t\t}\r\n\t\t\tsize = Math.max(size, 1);\r\n\t\t\tgap = (availableSize - size * clusterSize) / 2;\r\n\t\t\treturn {size: size, gap: gap};\t// Object\r\n\t\t},\r\n\r\n\t\tcollectStackedStats: function(series){\r\n\t\t\t// collect statistics\r\n\t\t\tvar stats = lang.clone(common.defaultStats);\r\n\t\t\tif(series.length){\r\n\t\t\t\t// 1st pass: find the maximal length of runs\r\n\t\t\t\tstats.hmin = Math.min(stats.hmin, 1);\r\n\t\t\t\tstats.hmax = df.foldl(series, \"seed, run -> Math.max(seed, run.data.length)\", stats.hmax);\r\n\t\t\t\t// 2nd pass: stack values\r\n\t\t\t\tfor(var i = 0; i < stats.hmax; ++i){\r\n\t\t\t\t\tvar v = series[0].data[i];\r\n\t\t\t\t\tv = v && (typeof v == \"number\" ? v : v.y);\r\n\t\t\t\t\tif(isNaN(v)){ v = 0; }\r\n\t\t\t\t\tstats.vmin = Math.min(stats.vmin, v);\r\n\t\t\t\t\tfor(var j = 1; j < series.length; ++j){\r\n\t\t\t\t\t\tvar t = series[j].data[i];\r\n\t\t\t\t\t\tt = t && (typeof t == \"number\" ? t : t.y);\r\n\t\t\t\t\t\tif(isNaN(t)){ t = 0; }\r\n\t\t\t\t\t\tv += t;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstats.vmax = Math.max(stats.vmax, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn stats;\r\n\t\t},\r\n\r\n\t\tcurve: function(/* Number[] */a, /* Number|String */tension){\r\n\t\t\t//\tFIX for #7235, submitted by Enzo Michelangeli.\r\n\t\t\t//\tEmulates the smoothing algorithms used in a famous, unnamed spreadsheet\r\n\t\t\t//\t\tprogram ;)\r\n\t\t\tvar array = a.slice(0);\r\n\t\t\tif(tension == \"x\") {\r\n\t\t\t\tarray[array.length] = array[0];   // add a last element equal to the first, closing the loop\r\n\t\t\t}\r\n\t\t\tvar p=arr.map(array, function(item, i){\r\n\t\t\t\tif(i==0){ return \"M\" + item.x + \",\" + item.y; }\r\n\t\t\t\tif(!isNaN(tension)) { // use standard Dojo smoothing in tension is numeric\r\n\t\t\t\t\tvar dx=item.x-array[i-1].x, dy=array[i-1].y;\r\n\t\t\t\t\treturn \"C\"+(item.x-(tension-1)*(dx/tension))+\",\"+dy+\" \"+(item.x-(dx/tension))+\",\"+item.y+\" \"+item.x+\",\"+item.y;\r\n\t\t\t\t} else if(tension == \"X\" || tension == \"x\" || tension == \"S\") {\r\n\t\t\t\t\t// use Excel \"line smoothing\" algorithm (http://xlrotor.com/resources/files.shtml)\r\n\t\t\t\t\tvar p0, p1 = array[i-1], p2 = array[i], p3;\r\n\t\t\t\t\tvar bz1x, bz1y, bz2x, bz2y;\r\n\t\t\t\t\tvar f = 1/6;\r\n\t\t\t\t\tif(i==1) {\r\n\t\t\t\t\t\tif(tension == \"x\") {\r\n\t\t\t\t\t\t\tp0 = array[array.length-2];\r\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\r\n\t\t\t\t\t\t\tp0 = p1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tf = 1/3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tp0 = array[i-2];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(i==(array.length-1)) {\r\n\t\t\t\t\t\tif(tension == \"x\") {\r\n\t\t\t\t\t\t\tp3 = array[1];\r\n\t\t\t\t\t\t} else { // \"tension == X || tension == \"S\"\r\n\t\t\t\t\t\t\tp3 = p2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tf = 1/3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tp3 = array[i+1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar p1p2 = Math.sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y));\r\n\t\t\t\t\tvar p0p2 = Math.sqrt((p2.x-p0.x)*(p2.x-p0.x)+(p2.y-p0.y)*(p2.y-p0.y));\r\n\t\t\t\t\tvar p1p3 = Math.sqrt((p3.x-p1.x)*(p3.x-p1.x)+(p3.y-p1.y)*(p3.y-p1.y));\r\n\r\n\t\t\t\t\tvar p0p2f = p0p2 * f;\r\n\t\t\t\t\tvar p1p3f = p1p3 * f;\r\n\r\n\t\t\t\t\tif(p0p2f > p1p2/2 && p1p3f > p1p2/2) {\r\n\t\t\t\t\t\tp0p2f = p1p2/2;\r\n\t\t\t\t\t\tp1p3f = p1p2/2;\r\n\t\t\t\t\t} else if(p0p2f > p1p2/2) {\r\n\t\t\t\t\t\tp0p2f = p1p2/2;\r\n\t\t\t\t\t\tp1p3f = p1p2/2 * p1p3/p0p2;\r\n\t\t\t\t\t} else if(p1p3f > p1p2/2) {\r\n\t\t\t\t\t\tp1p3f = p1p2/2;\r\n\t\t\t\t\t\tp0p2f = p1p2/2 * p0p2/p1p3;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(tension == \"S\") {\r\n\t\t\t\t\t\tif(p0 == p1) { p0p2f = 0; }\r\n\t\t\t\t\t\tif(p2 == p3) { p1p3f = 0; }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbz1x = p1.x + p0p2f*(p2.x - p0.x)/p0p2;\r\n\t\t\t\t\tbz1y = p1.y + p0p2f*(p2.y - p0.y)/p0p2;\r\n\t\t\t\t\tbz2x = p2.x - p1p3f*(p3.x - p1.x)/p1p3;\r\n\t\t\t\t\tbz2y = p2.y - p1p3f*(p3.y - p1.y)/p1p3;\r\n\t\t\t\t}\r\n\t\t\t\treturn \"C\"+(bz1x+\",\"+bz1y+\" \"+bz2x+\",\"+bz2y+\" \"+p2.x+\",\"+p2.y);\r\n\t\t\t});\r\n\t\t\treturn p.join(\" \");\r\n\t\t},\r\n\t\t\r\n\t\tgetLabel: function(/*Number*/number, /*Boolean*/fixed, /*Number*/precision){\r\n\t\t\treturn sc.doIfLoaded(\"dojo/number\", function(numberLib){\r\n\t\t\t\treturn (fixed ? numberLib.format(number, {places : precision}) :\r\n\t\t\t\t\tnumberLib.format(number)) || \"\";\r\n\t\t\t}, function(){\r\n\t\t\t\treturn fixed ? number.toFixed(precision) : number.toString();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/common.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/plot2d/commonStacked.js":
/*!*************************************************************!*\
  !*** ./node_modules/dojox/charting/plot2d/commonStacked.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"),\r\n\t__webpack_require__(/*! dojox/lang/functional */ \"./node_modules/dojox/lang/functional.js\"),\r\n\t__webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/plot2d/common.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, df, common){\r\n\t\r\n\tvar commonStacked = lang.getObject(\"dojox.charting.plot2d.commonStacked\", true);\r\n\treturn lang.mixin(commonStacked, {\r\n\t\tcollectStats: function(series, isNullValue){\r\n\t\t\tvar stats = lang.delegate(common.defaultStats);\r\n\t\t\tfor(var i = 0; i < series.length; ++i){\r\n\t\t\t\tvar run = series[i];\r\n\t\t\t\tfor(var j = 0; j < run.data.length; j++){\r\n\t\t\t\t\tvar x, y;\r\n\t\t\t\t\tif(run.data[j] !== null){\r\n\t\t\t\t\t\tif(typeof run.data[j] == \"number\" || !run.data[j].hasOwnProperty(\"x\")){\r\n\t\t\t\t\t\t\ty = commonStacked.getIndexValue(series, i, j, isNullValue)[0];\r\n\t\t\t\t\t\t\tx = j+1;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tx = run.data[j].x;\r\n\t\t\t\t\t\t\tif(x !== null){\r\n\t\t\t\t\t\t\t\ty = commonStacked.getValue(series, i, x, isNullValue)[0];\r\n\t\t\t\t\t\t\t\ty = y != null && y.y ? y.y:null; \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstats.hmin = Math.min(stats.hmin, x);\r\n\t\t\t\t\t\tstats.hmax = Math.max(stats.hmax, x);\r\n\t\t\t\t\t\tstats.vmin = Math.min(stats.vmin, y);\r\n\t\t\t\t\t\tstats.vmax = Math.max(stats.vmax, y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn stats;\r\n\t\t},\r\n\t\t\r\n\t\trearrangeValues: function(values, transform, baseline){\r\n\t\t\t// collect references to non-empty sets\r\n\t\t\tvar sets = df.filter(values, \"x\"), n = sets.length;\r\n\t\t\tif(!n){\r\n\t\t\t\t// nothing to do at all\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\r\n\t\t\t// stack values\r\n\t\t\tvar previousSet = {};\r\n\t\t\tfor(var i = 0; i < n; ++i){\r\n\t\t\t\tvar extractedSet = sets[i];\r\n\t\t\t\tfor(var j = extractedSet.min, k = extractedSet.max; j < k; ++j){\r\n\t\t\t\t\textractedSet[j] = (extractedSet[j] || 0) + (previousSet[j] || 0);\r\n\t\t\t\t}\r\n\t\t\t\tpreviousSet = extractedSet;\r\n\t\t\t}\r\n\r\n\t\t\t// transform to pixels\r\n\t\t\tfor(i = 0; i < n; ++i){\r\n\t\t\t\textractedSet = sets[i];\r\n\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\r\n\t\t\t\t\textractedSet[j] = this.isNullValue(extractedSet[j]) ? 0 :\r\n\t\t\t\t\t\ttransform(extractedSet[j]) - baseline;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// correct the minimal width\r\n\t\t\tif(this.opt.minWidth){\r\n\t\t\t\tvar minWidth = this.opt.minWidth;\r\n\r\n\t\t\t\t// unstack\r\n\t\t\t\tfor(i = n - 1; i; --i){\r\n\t\t\t\t\textractedSet = sets[i];\r\n\t\t\t\t\tpreviousSet  = sets[i - 1];\r\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\r\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] - previousSet[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now let's go over all values and correct them, if needed\r\n\t\t\t\tvar min = extractedSet.min, max = extractedSet.max;\r\n\t\t\t\tfor(var j = min; j < max; ++j){\r\n\r\n\t\t\t\t\t// find a total length of stack\r\n\t\t\t\t\tvar sum = 0, counter = 0;\r\n\t\t\t\t\tfor(i = 0; i < n; ++i){\r\n\t\t\t\t\t\tvar value = sets[i][j];\r\n\t\t\t\t\t\tif(value > 0){\r\n\t\t\t\t\t\t\tsum += value;\r\n\t\t\t\t\t\t\t++counter;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(sum <= counter * minWidth){\r\n\t\t\t\t\t\t// the corner case: all values are very small\r\n\t\t\t\t\t\tfor(i = 0; i < n; ++i){\r\n\t\t\t\t\t\t\tvalue = sets[i][j];\r\n\t\t\t\t\t\t\tif(value > 0){\r\n\t\t\t\t\t\t\t\tsets[i][j] = minWidth;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontinue;\t// next stack\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// distributing overflow up\r\n\t\t\t\t\tvar overflow = 0;\r\n\t\t\t\t\tfor(i = 0; i < n; ++i){\r\n\t\t\t\t\t\textractedSet = sets[i];\r\n\t\t\t\t\t\tvalue = extractedSet[j];\r\n\t\t\t\t\t\tif(value > 0){\r\n\t\t\t\t\t\t\tif(value < minWidth){\r\n\t\t\t\t\t\t\t\toverflow += minWidth - value;\r\n\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\r\n\t\t\t\t\t\t\t}else if(overflow > 0){\r\n\t\t\t\t\t\t\t\t// calculate available space\r\n\t\t\t\t\t\t\t\tvar available = extractedSet[j] - minWidth;\r\n\t\t\t\t\t\t\t\tif(available >= overflow){\r\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\r\n\t\t\t\t\t\t\t\t\toverflow = 0;\r\n\t\t\t\t\t\t\t\t}else if(available > 0){\r\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\r\n\t\t\t\t\t\t\t\t\toverflow -= available;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// distributing overflow down, if any\r\n\t\t\t\t\tif(overflow > 0){\r\n\t\t\t\t\t\tfor(i = n - 1; i >= 0; --i){\r\n\t\t\t\t\t\t\textractedSet = sets[i];\r\n\t\t\t\t\t\t\tvalue = extractedSet[j];\r\n\t\t\t\t\t\t\tif(value > 0){\r\n\t\t\t\t\t\t\t\t// calculate available space\r\n\t\t\t\t\t\t\t\tavailable = extractedSet[j] - minWidth;\r\n\t\t\t\t\t\t\t\tif(available >= overflow){\r\n\t\t\t\t\t\t\t\t\textractedSet[j] -= overflow;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}else if(available > 0){\r\n\t\t\t\t\t\t\t\t\textractedSet[j] = minWidth;\r\n\t\t\t\t\t\t\t\t\toverflow -= available;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// stack\r\n\t\t\t\tfor(i = 1; i < n; ++i){\r\n\t\t\t\t\textractedSet = sets[i];\r\n\t\t\t\t\tpreviousSet  = sets[i - 1];\r\n\t\t\t\t\tfor(j = extractedSet.min, k = extractedSet.max; j < k; ++j){\r\n\t\t\t\t\t\textractedSet[j] = extractedSet[j] + previousSet[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\t\t},\r\n\t\t\r\n\t\tgetIndexValue: function(series, i, index, isNullValue){\r\n\t\t\tvar value = 0, v, j, pvalue;\r\n\t\t\tfor(j = 0; j <= i; ++j){\r\n\t\t\t\tif(series[j].hidden){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tpvalue = value;\r\n\t\t\t\tv = series[j].data[index];\r\n\t\t\t\tif(!isNullValue(v)){\r\n\t\t\t\t\tif(isNaN(v)){ v = v.y || 0; }\r\n\t\t\t\t\tvalue += v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [value , pvalue];\r\n\t\t},\r\n\t\t\r\n\t\tgetValue: function(series, i, x, isNullValue){\r\n\t\t\tvar value = null, j, z, v, pvalue;\r\n\t\t\tfor(j = 0; j <= i; ++j){\r\n\t\t\t\tif(series[j].hidden){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor(z = 0; z < series[j].data.length; z++){\r\n\t\t\t\t\tpvalue = value;\r\n\t\t\t\t\tv = series[j].data[z];\r\n\t\t\t\t\tif(!isNullValue(v)){\r\n\t\t\t\t\t\tif(v.x == x){\r\n\t\t\t\t\t\t\tif(!value){\r\n\t\t\t\t\t\t\t\tvalue = {x: x};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(v.y != null){\r\n\t\t\t\t\t\t\t\tif(value.y == null){\r\n\t\t\t\t\t\t\t\t\tvalue.y = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvalue.y += v.y;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}else if(v.x > x){break;}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [value, pvalue];\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/plot2d/commonStacked.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/scaler/common.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/scaler/common.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang){\r\n\r\n\tvar eq = function(/*Number*/ a, /*Number*/ b){\r\n\t\t// summary:\r\n\t\t//\t\tcompare two FP numbers for equality\r\n\t\treturn Math.abs(a - b) <= 1e-6 * (Math.abs(a) + Math.abs(b));\t// Boolean\r\n\t};\r\n\r\n\tvar common = lang.getObject(\"dojox.charting.scaler.common\", true);\r\n\r\n\tvar testedModules = {};\r\n\r\n\treturn lang.mixin(common, {\r\n\t\tdoIfLoaded: function(moduleName, ifloaded, ifnotloaded){\r\n\t\t\tif(testedModules[moduleName] === undefined){\r\n\t\t\t\ttry{\r\n\t\t\t\t\ttestedModules[moduleName] = require(moduleName);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\ttestedModules[moduleName] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(testedModules[moduleName]){\r\n\t\t\t\treturn ifloaded(testedModules[moduleName]);\r\n\t\t\t}else{\r\n\t\t\t\treturn ifnotloaded();\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetNumericLabel: function(/*Number*/ number, /*Number*/ precision, /*Object*/ kwArgs){\r\n\t\t\tvar def = \"\";\r\n\t\t\tcommon.doIfLoaded(\"dojo/number\", function(numberLib){\r\n\t\t\t\tdef = (kwArgs.fixed ? numberLib.format(number, {places : precision < 0 ? -precision : 0}) :\r\n\t\t\t\t\tnumberLib.format(number)) || \"\";\r\n\t\t\t}, function(){\r\n\t\t\t\tdef = kwArgs.fixed ? number.toFixed(precision < 0 ? -precision : 0) : number.toString();\r\n\t\t\t});\r\n\t\t\tif(kwArgs.labelFunc){\r\n\t\t\t\tvar r = kwArgs.labelFunc(def, number, precision);\r\n\t\t\t\tif(r){ return r; }\r\n\t\t\t\t// else fall through to the regular labels search\r\n\t\t\t}\r\n\t\t\tif(kwArgs.labels){\r\n\t\t\t\t// classic binary search\r\n\t\t\t\t// TODO: working only if the array is sorted per value should be better documented or sorted automatically\r\n\t\t\t\tvar l = kwArgs.labels, lo = 0, hi = l.length;\r\n\t\t\t\twhile(lo < hi){\r\n\t\t\t\t\tvar mid = Math.floor((lo + hi) / 2), val = l[mid].value;\r\n\t\t\t\t\tif(val < number){\r\n\t\t\t\t\t\tlo = mid + 1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\thi = mid;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// lets take into account FP errors\r\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\r\n\t\t\t\t\treturn l[lo].text;\r\n\t\t\t\t}\r\n\t\t\t\t--lo;\r\n\t\t\t\tif(lo >= 0 && lo < l.length && eq(l[lo].value, number)){\r\n\t\t\t\t\treturn l[lo].text;\r\n\t\t\t\t}\r\n\t\t\t\tlo += 2;\r\n\t\t\t\tif(lo < l.length && eq(l[lo].value, number)){\r\n\t\t\t\t\treturn l[lo].text;\r\n\t\t\t\t}\r\n\t\t\t\t// otherwise we will produce a number\r\n\t\t\t}\r\n\t\t\treturn def;\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvc2NhbGVyL2NvbW1vbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9zY2FsZXIvY29tbW9uLmpzP2ZjZmEiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvbGFuZ1wiXSwgZnVuY3Rpb24obGFuZyl7XHJcblxyXG5cdHZhciBlcSA9IGZ1bmN0aW9uKC8qTnVtYmVyKi8gYSwgLypOdW1iZXIqLyBiKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRjb21wYXJlIHR3byBGUCBudW1iZXJzIGZvciBlcXVhbGl0eVxyXG5cdFx0cmV0dXJuIE1hdGguYWJzKGEgLSBiKSA8PSAxZS02ICogKE1hdGguYWJzKGEpICsgTWF0aC5hYnMoYikpO1x0Ly8gQm9vbGVhblxyXG5cdH07XHJcblxyXG5cdHZhciBjb21tb24gPSBsYW5nLmdldE9iamVjdChcImRvam94LmNoYXJ0aW5nLnNjYWxlci5jb21tb25cIiwgdHJ1ZSk7XHJcblxyXG5cdHZhciB0ZXN0ZWRNb2R1bGVzID0ge307XHJcblxyXG5cdHJldHVybiBsYW5nLm1peGluKGNvbW1vbiwge1xyXG5cdFx0ZG9JZkxvYWRlZDogZnVuY3Rpb24obW9kdWxlTmFtZSwgaWZsb2FkZWQsIGlmbm90bG9hZGVkKXtcclxuXHRcdFx0aWYodGVzdGVkTW9kdWxlc1ttb2R1bGVOYW1lXSA9PT0gdW5kZWZpbmVkKXtcclxuXHRcdFx0XHR0cnl7XHJcblx0XHRcdFx0XHR0ZXN0ZWRNb2R1bGVzW21vZHVsZU5hbWVdID0gcmVxdWlyZShtb2R1bGVOYW1lKTtcclxuXHRcdFx0XHR9Y2F0Y2goZSl7XHJcblx0XHRcdFx0XHR0ZXN0ZWRNb2R1bGVzW21vZHVsZU5hbWVdID0gbnVsbDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0aWYodGVzdGVkTW9kdWxlc1ttb2R1bGVOYW1lXSl7XHJcblx0XHRcdFx0cmV0dXJuIGlmbG9hZGVkKHRlc3RlZE1vZHVsZXNbbW9kdWxlTmFtZV0pO1xyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRyZXR1cm4gaWZub3Rsb2FkZWQoKTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGdldE51bWVyaWNMYWJlbDogZnVuY3Rpb24oLypOdW1iZXIqLyBudW1iZXIsIC8qTnVtYmVyKi8gcHJlY2lzaW9uLCAvKk9iamVjdCovIGt3QXJncyl7XHJcblx0XHRcdHZhciBkZWYgPSBcIlwiO1xyXG5cdFx0XHRjb21tb24uZG9JZkxvYWRlZChcImRvam8vbnVtYmVyXCIsIGZ1bmN0aW9uKG51bWJlckxpYil7XHJcblx0XHRcdFx0ZGVmID0gKGt3QXJncy5maXhlZCA/IG51bWJlckxpYi5mb3JtYXQobnVtYmVyLCB7cGxhY2VzIDogcHJlY2lzaW9uIDwgMCA/IC1wcmVjaXNpb24gOiAwfSkgOlxyXG5cdFx0XHRcdFx0bnVtYmVyTGliLmZvcm1hdChudW1iZXIpKSB8fCBcIlwiO1xyXG5cdFx0XHR9LCBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdGRlZiA9IGt3QXJncy5maXhlZCA/IG51bWJlci50b0ZpeGVkKHByZWNpc2lvbiA8IDAgPyAtcHJlY2lzaW9uIDogMCkgOiBudW1iZXIudG9TdHJpbmcoKTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdGlmKGt3QXJncy5sYWJlbEZ1bmMpe1xyXG5cdFx0XHRcdHZhciByID0ga3dBcmdzLmxhYmVsRnVuYyhkZWYsIG51bWJlciwgcHJlY2lzaW9uKTtcclxuXHRcdFx0XHRpZihyKXsgcmV0dXJuIHI7IH1cclxuXHRcdFx0XHQvLyBlbHNlIGZhbGwgdGhyb3VnaCB0byB0aGUgcmVndWxhciBsYWJlbHMgc2VhcmNoXHJcblx0XHRcdH1cclxuXHRcdFx0aWYoa3dBcmdzLmxhYmVscyl7XHJcblx0XHRcdFx0Ly8gY2xhc3NpYyBiaW5hcnkgc2VhcmNoXHJcblx0XHRcdFx0Ly8gVE9ETzogd29ya2luZyBvbmx5IGlmIHRoZSBhcnJheSBpcyBzb3J0ZWQgcGVyIHZhbHVlIHNob3VsZCBiZSBiZXR0ZXIgZG9jdW1lbnRlZCBvciBzb3J0ZWQgYXV0b21hdGljYWxseVxyXG5cdFx0XHRcdHZhciBsID0ga3dBcmdzLmxhYmVscywgbG8gPSAwLCBoaSA9IGwubGVuZ3RoO1xyXG5cdFx0XHRcdHdoaWxlKGxvIDwgaGkpe1xyXG5cdFx0XHRcdFx0dmFyIG1pZCA9IE1hdGguZmxvb3IoKGxvICsgaGkpIC8gMiksIHZhbCA9IGxbbWlkXS52YWx1ZTtcclxuXHRcdFx0XHRcdGlmKHZhbCA8IG51bWJlcil7XHJcblx0XHRcdFx0XHRcdGxvID0gbWlkICsgMTtcclxuXHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHRoaSA9IG1pZDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly8gbGV0cyB0YWtlIGludG8gYWNjb3VudCBGUCBlcnJvcnNcclxuXHRcdFx0XHRpZihsbyA8IGwubGVuZ3RoICYmIGVxKGxbbG9dLnZhbHVlLCBudW1iZXIpKXtcclxuXHRcdFx0XHRcdHJldHVybiBsW2xvXS50ZXh0O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQtLWxvO1xyXG5cdFx0XHRcdGlmKGxvID49IDAgJiYgbG8gPCBsLmxlbmd0aCAmJiBlcShsW2xvXS52YWx1ZSwgbnVtYmVyKSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gbFtsb10udGV4dDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0bG8gKz0gMjtcclxuXHRcdFx0XHRpZihsbyA8IGwubGVuZ3RoICYmIGVxKGxbbG9dLnZhbHVlLCBudW1iZXIpKXtcclxuXHRcdFx0XHRcdHJldHVybiBsW2xvXS50ZXh0O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQvLyBvdGhlcndpc2Ugd2Ugd2lsbCBwcm9kdWNlIGEgbnVtYmVyXHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGRlZjtcclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/scaler/common.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/scaler/linear.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/charting/scaler/linear.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./common */ \"./node_modules/dojox/charting/scaler/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, common){\r\n\tvar linear = lang.getObject(\"dojox.charting.scaler.linear\", true);\r\n\t\r\n\tvar deltaLimit = 3,\t// pixels\r\n\t\tgetLabel = common.getNumericLabel;\r\n\r\n\t\tfunction findString(/*String*/ val, /*Array*/ text){\r\n\t\t\tval = val.toLowerCase();\r\n\t\t\tfor(var i = text.length - 1; i >= 0; --i){\r\n\t\t\t\tif(val === text[i]){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\r\n\tvar calcTicks = function(min, max, kwArgs, majorTick, minorTick, microTick, span){\r\n\t\tkwArgs = lang.delegate(kwArgs);\r\n\t\tif(!majorTick){\r\n\t\t\tif(kwArgs.fixUpper == \"major\"){ kwArgs.fixUpper = \"minor\"; }\r\n\t\t\tif(kwArgs.fixLower == \"major\"){ kwArgs.fixLower = \"minor\"; }\r\n\t\t}\r\n\t\tif(!minorTick){\r\n\t\t\tif(kwArgs.fixUpper == \"minor\"){ kwArgs.fixUpper = \"micro\"; }\r\n\t\t\tif(kwArgs.fixLower == \"minor\"){ kwArgs.fixLower = \"micro\"; }\r\n\t\t}\r\n\t\tif(!microTick){\r\n\t\t\tif(kwArgs.fixUpper == \"micro\"){ kwArgs.fixUpper = \"none\"; }\r\n\t\t\tif(kwArgs.fixLower == \"micro\"){ kwArgs.fixLower = \"none\"; }\r\n\t\t}\r\n\t\tvar lowerBound = findString(kwArgs.fixLower, [\"major\"]) ?\r\n\t\t\t\tMath.floor(kwArgs.min / majorTick) * majorTick :\r\n\t\t\t\t\tfindString(kwArgs.fixLower, [\"minor\"]) ?\r\n\t\t\t\t\t\tMath.floor(kwArgs.min / minorTick) * minorTick :\r\n\t\t\t\t\t\t\tfindString(kwArgs.fixLower, [\"micro\"]) ?\r\n\t\t\t\t\t\t\t\tMath.floor(kwArgs.min / microTick) * microTick : kwArgs.min,\r\n\t\t\tupperBound = findString(kwArgs.fixUpper, [\"major\"]) ?\r\n\t\t\t\tMath.ceil(kwArgs.max / majorTick) * majorTick :\r\n\t\t\t\t\tfindString(kwArgs.fixUpper, [\"minor\"]) ?\r\n\t\t\t\t\t\tMath.ceil(kwArgs.max / minorTick) * minorTick :\r\n\t\t\t\t\t\t\tfindString(kwArgs.fixUpper, [\"micro\"]) ?\r\n\t\t\t\t\t\t\t\tMath.ceil(kwArgs.max / microTick) * microTick : kwArgs.max;\r\n\t\t\t\t\t\t\t\t\r\n\t\tif(kwArgs.useMin){ min = lowerBound; }\r\n\t\tif(kwArgs.useMax){ max = upperBound; }\r\n\t\t\r\n\t\tvar majorStart = (!majorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\"])) ?\r\n\t\t\t\tmin : Math.ceil(min / majorTick) * majorTick,\r\n\t\t\tminorStart = (!minorTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\"])) ?\r\n\t\t\t\tmin : Math.ceil(min / minorTick) * minorTick,\r\n\t\t\tmicroStart = (! microTick || kwArgs.useMin && findString(kwArgs.fixLower, [\"major\", \"minor\", \"micro\"])) ?\r\n\t\t\t\tmin : Math.ceil(min / microTick) * microTick,\r\n\t\t\tmajorCount = !majorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\"]) ?\r\n\t\t\t\tMath.round((max - majorStart) / majorTick) :\r\n\t\t\t\tMath.floor((max - majorStart) / majorTick)) + 1,\r\n\t\t\tminorCount = !minorTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\"]) ?\r\n\t\t\t\tMath.round((max - minorStart) / minorTick) :\r\n\t\t\t\tMath.floor((max - minorStart) / minorTick)) + 1,\r\n\t\t\tmicroCount = !microTick ? 0 : (kwArgs.useMax && findString(kwArgs.fixUpper, [\"major\", \"minor\", \"micro\"]) ?\r\n\t\t\t\tMath.round((max - microStart) / microTick) :\r\n\t\t\t\tMath.floor((max - microStart) / microTick)) + 1,\r\n\t\t\tminorPerMajor  = minorTick ? Math.round(majorTick / minorTick) : 0,\r\n\t\t\tmicroPerMinor  = microTick ? Math.round(minorTick / microTick) : 0,\r\n\t\t\tmajorPrecision = majorTick ? Math.floor(Math.log(majorTick) / Math.LN10) : 0,\r\n\t\t\tminorPrecision = minorTick ? Math.floor(Math.log(minorTick) / Math.LN10) : 0,\r\n\t\t\tscale = span / (max - min);\r\n\t\tif(!isFinite(scale)){ scale = 1; }\r\n\t\t\r\n\t\treturn {\r\n\t\t\tbounds: {\r\n\t\t\t\tlower:\tlowerBound,\r\n\t\t\t\tupper:\tupperBound,\r\n\t\t\t\tfrom:\tmin,\r\n\t\t\t\tto:\t\tmax,\r\n\t\t\t\tscale:\tscale,\r\n\t\t\t\tspan:\tspan\r\n\t\t\t},\r\n\t\t\tmajor: {\r\n\t\t\t\ttick:\tmajorTick,\r\n\t\t\t\tstart:\tmajorStart,\r\n\t\t\t\tcount:\tmajorCount,\r\n\t\t\t\tprec:\tmajorPrecision\r\n\t\t\t},\r\n\t\t\tminor: {\r\n\t\t\t\ttick:\tminorTick,\r\n\t\t\t\tstart:\tminorStart,\r\n\t\t\t\tcount:\tminorCount,\r\n\t\t\t\tprec:\tminorPrecision\r\n\t\t\t},\r\n\t\t\tmicro: {\r\n\t\t\t\ttick:\tmicroTick,\r\n\t\t\t\tstart:\tmicroStart,\r\n\t\t\t\tcount:\tmicroCount,\r\n\t\t\t\tprec:\t0\r\n\t\t\t},\r\n\t\t\tminorPerMajor:\tminorPerMajor,\r\n\t\t\tmicroPerMinor:\tmicroPerMinor,\r\n\t\t\tscaler:\t\t\tlinear\r\n\t\t};\r\n\t};\r\n\t\r\n\treturn lang.mixin(linear, {\r\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs, /*Number?*/ delta, /*Number?*/ minorDelta){\r\n\t\t\tvar h = {fixUpper: \"none\", fixLower: \"none\", natural: false};\r\n\t\t\tif(kwArgs){\r\n\t\t\t\tif(\"fixUpper\" in kwArgs){ h.fixUpper = String(kwArgs.fixUpper); }\r\n\t\t\t\tif(\"fixLower\" in kwArgs){ h.fixLower = String(kwArgs.fixLower); }\r\n\t\t\t\tif(\"natural\"  in kwArgs){ h.natural  = Boolean(kwArgs.natural); }\r\n\t\t\t}\r\n\t\t\tminorDelta = !minorDelta || minorDelta < deltaLimit ? deltaLimit : minorDelta;\r\n\t\t\t\r\n\t\t\t// update bounds\r\n\t\t\tif(\"min\" in kwArgs){ min = kwArgs.min; }\r\n\t\t\tif(\"max\" in kwArgs){ max = kwArgs.max; }\r\n\t\t\tif(kwArgs.includeZero){\r\n\t\t\t\tif(min > 0){ min = 0; }\r\n\t\t\t\tif(max < 0){ max = 0; }\r\n\t\t\t}\r\n\t\t\th.min = min;\r\n\t\t\th.useMin = true;\r\n\t\t\th.max = max;\r\n\t\t\th.useMax = true;\r\n\t\t\t\r\n\t\t\tif(\"from\" in kwArgs){\r\n\t\t\t\tmin = kwArgs.from;\r\n\t\t\t\th.useMin = false;\r\n\t\t\t}\r\n\t\t\tif(\"to\" in kwArgs){\r\n\t\t\t\tmax = kwArgs.to;\r\n\t\t\t\th.useMax = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// check for erroneous condition\r\n\t\t\tif(max <= min){\r\n\t\t\t\treturn calcTicks(min, max, h, 0, 0, 0, span);\t// Object\r\n\t\t\t}\r\n\t\t\tif(!delta){\r\n\t\t\t\tdelta = max - min;\r\n\t\t\t}\r\n\t\t\tvar mag = Math.floor(Math.log(delta) / Math.LN10),\r\n\t\t\t\tmajor = kwArgs && (\"majorTickStep\" in kwArgs) ? kwArgs.majorTickStep : Math.pow(10, mag),\r\n\t\t\t\tminor = 0, micro = 0, ticks;\r\n\t\t\t\t\r\n\t\t\t// calculate minor ticks\r\n\t\t\tif(kwArgs && (\"minorTickStep\" in kwArgs)){\r\n\t\t\t\tminor = kwArgs.minorTickStep;\r\n\t\t\t}else{\r\n\t\t\t\tdo{\r\n\t\t\t\t\tminor = major / 10;\r\n\t\t\t\t\tif(!h.natural || minor > 0.9){\r\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\r\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminor = major / 5;\r\n\t\t\t\t\tif(!h.natural || minor > 0.9){\r\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\r\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminor = major / 2;\r\n\t\t\t\t\tif(!h.natural || minor > 0.9){\r\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, 0, span);\r\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.minor.tick > minorDelta){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn calcTicks(min, max, h, major, 0, 0, span);\t// Object\r\n\t\t\t\t}while(false);\r\n\t\t\t}\r\n\t\r\n\t\t\t// calculate micro ticks\r\n\t\t\tif(kwArgs && (\"microTickStep\" in kwArgs)){\r\n\t\t\t\tmicro = kwArgs.microTickStep;\r\n\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\r\n\t\t\t}else{\r\n\t\t\t\tdo{\r\n\t\t\t\t\tmicro = minor / 10;\r\n\t\t\t\t\tif(!h.natural || micro > 0.9){\r\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\r\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmicro = minor / 5;\r\n\t\t\t\t\tif(!h.natural || micro > 0.9){\r\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\r\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmicro = minor / 2;\r\n\t\t\t\t\tif(!h.natural || micro > 0.9){\r\n\t\t\t\t\t\tticks = calcTicks(min, max, h, major, minor, micro, span);\r\n\t\t\t\t\t\tif(ticks.bounds.scale * ticks.micro.tick > deltaLimit){ break; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmicro = 0;\r\n\t\t\t\t}while(false);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn micro ? ticks : calcTicks(min, max, h, major, minor, 0, span);\t// Object\r\n\t\t},\r\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\r\n\t\t\tvar step, next, tick,\r\n\t\t\t\tnextMajor = scaler.major.start,\r\n\t\t\t\tnextMinor = scaler.minor.start,\r\n\t\t\t\tnextMicro = scaler.micro.start;\r\n\t\t\tif(kwArgs.microTicks && scaler.micro.tick){\r\n\t\t\t\tstep = scaler.micro.tick, next = nextMicro;\r\n\t\t\t}else if(kwArgs.minorTicks && scaler.minor.tick){\r\n\t\t\t\tstep = scaler.minor.tick, next = nextMinor;\r\n\t\t\t}else if(scaler.major.tick){\r\n\t\t\t\tstep = scaler.major.tick, next = nextMajor;\r\n\t\t\t}else{\r\n\t\t\t\t// no ticks\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// make sure that we have finite bounds\r\n\t\t\tvar revScale = 1 / scaler.bounds.scale;\r\n\t\t\tif(scaler.bounds.to <= scaler.bounds.from || isNaN(revScale) || !isFinite(revScale) ||\r\n\t\t\t\t\tstep <= 0 || isNaN(step) || !isFinite(step)){\r\n\t\t\t\t// no ticks\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// loop over all ticks\r\n\t\t\tvar majorTicks = [], minorTicks = [], microTicks = [];\r\n\t\t\twhile(next <= scaler.bounds.to + revScale){\r\n\t\t\t\tif(Math.abs(nextMajor - next) < step / 2){\r\n\t\t\t\t\t// major tick\r\n\t\t\t\t\ttick = {value: nextMajor};\r\n\t\t\t\t\tif(kwArgs.majorLabels){\r\n\t\t\t\t\t\ttick.label = getLabel(nextMajor, scaler.major.prec, kwArgs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmajorTicks.push(tick);\r\n\t\t\t\t\tnextMajor += scaler.major.tick;\r\n\t\t\t\t\tnextMinor += scaler.minor.tick;\r\n\t\t\t\t\tnextMicro += scaler.micro.tick;\r\n\t\t\t\t}else if(Math.abs(nextMinor - next) < step / 2){\r\n\t\t\t\t\t// minor tick\r\n\t\t\t\t\tif(kwArgs.minorTicks){\r\n\t\t\t\t\t\ttick = {value: nextMinor};\r\n\t\t\t\t\t\tif(kwArgs.minorLabels && (scaler.minMinorStep <= scaler.minor.tick * scaler.bounds.scale)){\r\n\t\t\t\t\t\t\ttick.label = getLabel(nextMinor, scaler.minor.prec, kwArgs);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tminorTicks.push(tick);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextMinor += scaler.minor.tick;\r\n\t\t\t\t\tnextMicro += scaler.micro.tick;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// micro tick\r\n\t\t\t\t\tif(kwArgs.microTicks){\r\n\t\t\t\t\t\tmicroTicks.push({value: nextMicro});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextMicro += scaler.micro.tick;\r\n\t\t\t\t}\r\n\t\t\t\tnext += step;\r\n\t\t\t}\r\n\t\t\treturn {major: majorTicks, minor: minorTicks, micro: microTicks};\t// Object\r\n\t\t},\r\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\r\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\r\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\r\n\t\t},\r\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\r\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\r\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvc2NhbGVyL2xpbmVhci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9zY2FsZXIvbGluZWFyLmpzP2NhZTIiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvbGFuZ1wiLCBcIi4vY29tbW9uXCJdLCBcclxuXHRmdW5jdGlvbihsYW5nLCBjb21tb24pe1xyXG5cdHZhciBsaW5lYXIgPSBsYW5nLmdldE9iamVjdChcImRvam94LmNoYXJ0aW5nLnNjYWxlci5saW5lYXJcIiwgdHJ1ZSk7XHJcblx0XHJcblx0dmFyIGRlbHRhTGltaXQgPSAzLFx0Ly8gcGl4ZWxzXHJcblx0XHRnZXRMYWJlbCA9IGNvbW1vbi5nZXROdW1lcmljTGFiZWw7XHJcblxyXG5cdFx0ZnVuY3Rpb24gZmluZFN0cmluZygvKlN0cmluZyovIHZhbCwgLypBcnJheSovIHRleHQpe1xyXG5cdFx0XHR2YWwgPSB2YWwudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0Zm9yKHZhciBpID0gdGV4dC5sZW5ndGggLSAxOyBpID49IDA7IC0taSl7XHJcblx0XHRcdFx0aWYodmFsID09PSB0ZXh0W2ldKXtcclxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblx0XHJcblx0dmFyIGNhbGNUaWNrcyA9IGZ1bmN0aW9uKG1pbiwgbWF4LCBrd0FyZ3MsIG1ham9yVGljaywgbWlub3JUaWNrLCBtaWNyb1RpY2ssIHNwYW4pe1xyXG5cdFx0a3dBcmdzID0gbGFuZy5kZWxlZ2F0ZShrd0FyZ3MpO1xyXG5cdFx0aWYoIW1ham9yVGljayl7XHJcblx0XHRcdGlmKGt3QXJncy5maXhVcHBlciA9PSBcIm1ham9yXCIpeyBrd0FyZ3MuZml4VXBwZXIgPSBcIm1pbm9yXCI7IH1cclxuXHRcdFx0aWYoa3dBcmdzLmZpeExvd2VyID09IFwibWFqb3JcIil7IGt3QXJncy5maXhMb3dlciA9IFwibWlub3JcIjsgfVxyXG5cdFx0fVxyXG5cdFx0aWYoIW1pbm9yVGljayl7XHJcblx0XHRcdGlmKGt3QXJncy5maXhVcHBlciA9PSBcIm1pbm9yXCIpeyBrd0FyZ3MuZml4VXBwZXIgPSBcIm1pY3JvXCI7IH1cclxuXHRcdFx0aWYoa3dBcmdzLmZpeExvd2VyID09IFwibWlub3JcIil7IGt3QXJncy5maXhMb3dlciA9IFwibWljcm9cIjsgfVxyXG5cdFx0fVxyXG5cdFx0aWYoIW1pY3JvVGljayl7XHJcblx0XHRcdGlmKGt3QXJncy5maXhVcHBlciA9PSBcIm1pY3JvXCIpeyBrd0FyZ3MuZml4VXBwZXIgPSBcIm5vbmVcIjsgfVxyXG5cdFx0XHRpZihrd0FyZ3MuZml4TG93ZXIgPT0gXCJtaWNyb1wiKXsga3dBcmdzLmZpeExvd2VyID0gXCJub25lXCI7IH1cclxuXHRcdH1cclxuXHRcdHZhciBsb3dlckJvdW5kID0gZmluZFN0cmluZyhrd0FyZ3MuZml4TG93ZXIsIFtcIm1ham9yXCJdKSA/XHJcblx0XHRcdFx0TWF0aC5mbG9vcihrd0FyZ3MubWluIC8gbWFqb3JUaWNrKSAqIG1ham9yVGljayA6XHJcblx0XHRcdFx0XHRmaW5kU3RyaW5nKGt3QXJncy5maXhMb3dlciwgW1wibWlub3JcIl0pID9cclxuXHRcdFx0XHRcdFx0TWF0aC5mbG9vcihrd0FyZ3MubWluIC8gbWlub3JUaWNrKSAqIG1pbm9yVGljayA6XHJcblx0XHRcdFx0XHRcdFx0ZmluZFN0cmluZyhrd0FyZ3MuZml4TG93ZXIsIFtcIm1pY3JvXCJdKSA/XHJcblx0XHRcdFx0XHRcdFx0XHRNYXRoLmZsb29yKGt3QXJncy5taW4gLyBtaWNyb1RpY2spICogbWljcm9UaWNrIDoga3dBcmdzLm1pbixcclxuXHRcdFx0dXBwZXJCb3VuZCA9IGZpbmRTdHJpbmcoa3dBcmdzLmZpeFVwcGVyLCBbXCJtYWpvclwiXSkgP1xyXG5cdFx0XHRcdE1hdGguY2VpbChrd0FyZ3MubWF4IC8gbWFqb3JUaWNrKSAqIG1ham9yVGljayA6XHJcblx0XHRcdFx0XHRmaW5kU3RyaW5nKGt3QXJncy5maXhVcHBlciwgW1wibWlub3JcIl0pID9cclxuXHRcdFx0XHRcdFx0TWF0aC5jZWlsKGt3QXJncy5tYXggLyBtaW5vclRpY2spICogbWlub3JUaWNrIDpcclxuXHRcdFx0XHRcdFx0XHRmaW5kU3RyaW5nKGt3QXJncy5maXhVcHBlciwgW1wibWljcm9cIl0pID9cclxuXHRcdFx0XHRcdFx0XHRcdE1hdGguY2VpbChrd0FyZ3MubWF4IC8gbWljcm9UaWNrKSAqIG1pY3JvVGljayA6IGt3QXJncy5tYXg7XHJcblx0XHRcdFx0XHRcdFx0XHRcclxuXHRcdGlmKGt3QXJncy51c2VNaW4peyBtaW4gPSBsb3dlckJvdW5kOyB9XHJcblx0XHRpZihrd0FyZ3MudXNlTWF4KXsgbWF4ID0gdXBwZXJCb3VuZDsgfVxyXG5cdFx0XHJcblx0XHR2YXIgbWFqb3JTdGFydCA9ICghbWFqb3JUaWNrIHx8IGt3QXJncy51c2VNaW4gJiYgZmluZFN0cmluZyhrd0FyZ3MuZml4TG93ZXIsIFtcIm1ham9yXCJdKSkgP1xyXG5cdFx0XHRcdG1pbiA6IE1hdGguY2VpbChtaW4gLyBtYWpvclRpY2spICogbWFqb3JUaWNrLFxyXG5cdFx0XHRtaW5vclN0YXJ0ID0gKCFtaW5vclRpY2sgfHwga3dBcmdzLnVzZU1pbiAmJiBmaW5kU3RyaW5nKGt3QXJncy5maXhMb3dlciwgW1wibWFqb3JcIiwgXCJtaW5vclwiXSkpID9cclxuXHRcdFx0XHRtaW4gOiBNYXRoLmNlaWwobWluIC8gbWlub3JUaWNrKSAqIG1pbm9yVGljayxcclxuXHRcdFx0bWljcm9TdGFydCA9ICghIG1pY3JvVGljayB8fCBrd0FyZ3MudXNlTWluICYmIGZpbmRTdHJpbmcoa3dBcmdzLmZpeExvd2VyLCBbXCJtYWpvclwiLCBcIm1pbm9yXCIsIFwibWljcm9cIl0pKSA/XHJcblx0XHRcdFx0bWluIDogTWF0aC5jZWlsKG1pbiAvIG1pY3JvVGljaykgKiBtaWNyb1RpY2ssXHJcblx0XHRcdG1ham9yQ291bnQgPSAhbWFqb3JUaWNrID8gMCA6IChrd0FyZ3MudXNlTWF4ICYmIGZpbmRTdHJpbmcoa3dBcmdzLmZpeFVwcGVyLCBbXCJtYWpvclwiXSkgP1xyXG5cdFx0XHRcdE1hdGgucm91bmQoKG1heCAtIG1ham9yU3RhcnQpIC8gbWFqb3JUaWNrKSA6XHJcblx0XHRcdFx0TWF0aC5mbG9vcigobWF4IC0gbWFqb3JTdGFydCkgLyBtYWpvclRpY2spKSArIDEsXHJcblx0XHRcdG1pbm9yQ291bnQgPSAhbWlub3JUaWNrID8gMCA6IChrd0FyZ3MudXNlTWF4ICYmIGZpbmRTdHJpbmcoa3dBcmdzLmZpeFVwcGVyLCBbXCJtYWpvclwiLCBcIm1pbm9yXCJdKSA/XHJcblx0XHRcdFx0TWF0aC5yb3VuZCgobWF4IC0gbWlub3JTdGFydCkgLyBtaW5vclRpY2spIDpcclxuXHRcdFx0XHRNYXRoLmZsb29yKChtYXggLSBtaW5vclN0YXJ0KSAvIG1pbm9yVGljaykpICsgMSxcclxuXHRcdFx0bWljcm9Db3VudCA9ICFtaWNyb1RpY2sgPyAwIDogKGt3QXJncy51c2VNYXggJiYgZmluZFN0cmluZyhrd0FyZ3MuZml4VXBwZXIsIFtcIm1ham9yXCIsIFwibWlub3JcIiwgXCJtaWNyb1wiXSkgP1xyXG5cdFx0XHRcdE1hdGgucm91bmQoKG1heCAtIG1pY3JvU3RhcnQpIC8gbWljcm9UaWNrKSA6XHJcblx0XHRcdFx0TWF0aC5mbG9vcigobWF4IC0gbWljcm9TdGFydCkgLyBtaWNyb1RpY2spKSArIDEsXHJcblx0XHRcdG1pbm9yUGVyTWFqb3IgID0gbWlub3JUaWNrID8gTWF0aC5yb3VuZChtYWpvclRpY2sgLyBtaW5vclRpY2spIDogMCxcclxuXHRcdFx0bWljcm9QZXJNaW5vciAgPSBtaWNyb1RpY2sgPyBNYXRoLnJvdW5kKG1pbm9yVGljayAvIG1pY3JvVGljaykgOiAwLFxyXG5cdFx0XHRtYWpvclByZWNpc2lvbiA9IG1ham9yVGljayA/IE1hdGguZmxvb3IoTWF0aC5sb2cobWFqb3JUaWNrKSAvIE1hdGguTE4xMCkgOiAwLFxyXG5cdFx0XHRtaW5vclByZWNpc2lvbiA9IG1pbm9yVGljayA/IE1hdGguZmxvb3IoTWF0aC5sb2cobWlub3JUaWNrKSAvIE1hdGguTE4xMCkgOiAwLFxyXG5cdFx0XHRzY2FsZSA9IHNwYW4gLyAobWF4IC0gbWluKTtcclxuXHRcdGlmKCFpc0Zpbml0ZShzY2FsZSkpeyBzY2FsZSA9IDE7IH1cclxuXHRcdFxyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0Ym91bmRzOiB7XHJcblx0XHRcdFx0bG93ZXI6XHRsb3dlckJvdW5kLFxyXG5cdFx0XHRcdHVwcGVyOlx0dXBwZXJCb3VuZCxcclxuXHRcdFx0XHRmcm9tOlx0bWluLFxyXG5cdFx0XHRcdHRvOlx0XHRtYXgsXHJcblx0XHRcdFx0c2NhbGU6XHRzY2FsZSxcclxuXHRcdFx0XHRzcGFuOlx0c3BhblxyXG5cdFx0XHR9LFxyXG5cdFx0XHRtYWpvcjoge1xyXG5cdFx0XHRcdHRpY2s6XHRtYWpvclRpY2ssXHJcblx0XHRcdFx0c3RhcnQ6XHRtYWpvclN0YXJ0LFxyXG5cdFx0XHRcdGNvdW50Olx0bWFqb3JDb3VudCxcclxuXHRcdFx0XHRwcmVjOlx0bWFqb3JQcmVjaXNpb25cclxuXHRcdFx0fSxcclxuXHRcdFx0bWlub3I6IHtcclxuXHRcdFx0XHR0aWNrOlx0bWlub3JUaWNrLFxyXG5cdFx0XHRcdHN0YXJ0Olx0bWlub3JTdGFydCxcclxuXHRcdFx0XHRjb3VudDpcdG1pbm9yQ291bnQsXHJcblx0XHRcdFx0cHJlYzpcdG1pbm9yUHJlY2lzaW9uXHJcblx0XHRcdH0sXHJcblx0XHRcdG1pY3JvOiB7XHJcblx0XHRcdFx0dGljazpcdG1pY3JvVGljayxcclxuXHRcdFx0XHRzdGFydDpcdG1pY3JvU3RhcnQsXHJcblx0XHRcdFx0Y291bnQ6XHRtaWNyb0NvdW50LFxyXG5cdFx0XHRcdHByZWM6XHQwXHJcblx0XHRcdH0sXHJcblx0XHRcdG1pbm9yUGVyTWFqb3I6XHRtaW5vclBlck1ham9yLFxyXG5cdFx0XHRtaWNyb1Blck1pbm9yOlx0bWljcm9QZXJNaW5vcixcclxuXHRcdFx0c2NhbGVyOlx0XHRcdGxpbmVhclxyXG5cdFx0fTtcclxuXHR9O1xyXG5cdFxyXG5cdHJldHVybiBsYW5nLm1peGluKGxpbmVhciwge1xyXG5cdFx0YnVpbGRTY2FsZXI6IGZ1bmN0aW9uKC8qTnVtYmVyKi8gbWluLCAvKk51bWJlciovIG1heCwgLypOdW1iZXIqLyBzcGFuLCAvKk9iamVjdCovIGt3QXJncywgLypOdW1iZXI/Ki8gZGVsdGEsIC8qTnVtYmVyPyovIG1pbm9yRGVsdGEpe1xyXG5cdFx0XHR2YXIgaCA9IHtmaXhVcHBlcjogXCJub25lXCIsIGZpeExvd2VyOiBcIm5vbmVcIiwgbmF0dXJhbDogZmFsc2V9O1xyXG5cdFx0XHRpZihrd0FyZ3Mpe1xyXG5cdFx0XHRcdGlmKFwiZml4VXBwZXJcIiBpbiBrd0FyZ3MpeyBoLmZpeFVwcGVyID0gU3RyaW5nKGt3QXJncy5maXhVcHBlcik7IH1cclxuXHRcdFx0XHRpZihcImZpeExvd2VyXCIgaW4ga3dBcmdzKXsgaC5maXhMb3dlciA9IFN0cmluZyhrd0FyZ3MuZml4TG93ZXIpOyB9XHJcblx0XHRcdFx0aWYoXCJuYXR1cmFsXCIgIGluIGt3QXJncyl7IGgubmF0dXJhbCAgPSBCb29sZWFuKGt3QXJncy5uYXR1cmFsKTsgfVxyXG5cdFx0XHR9XHJcblx0XHRcdG1pbm9yRGVsdGEgPSAhbWlub3JEZWx0YSB8fCBtaW5vckRlbHRhIDwgZGVsdGFMaW1pdCA/IGRlbHRhTGltaXQgOiBtaW5vckRlbHRhO1xyXG5cdFx0XHRcclxuXHRcdFx0Ly8gdXBkYXRlIGJvdW5kc1xyXG5cdFx0XHRpZihcIm1pblwiIGluIGt3QXJncyl7IG1pbiA9IGt3QXJncy5taW47IH1cclxuXHRcdFx0aWYoXCJtYXhcIiBpbiBrd0FyZ3MpeyBtYXggPSBrd0FyZ3MubWF4OyB9XHJcblx0XHRcdGlmKGt3QXJncy5pbmNsdWRlWmVybyl7XHJcblx0XHRcdFx0aWYobWluID4gMCl7IG1pbiA9IDA7IH1cclxuXHRcdFx0XHRpZihtYXggPCAwKXsgbWF4ID0gMDsgfVxyXG5cdFx0XHR9XHJcblx0XHRcdGgubWluID0gbWluO1xyXG5cdFx0XHRoLnVzZU1pbiA9IHRydWU7XHJcblx0XHRcdGgubWF4ID0gbWF4O1xyXG5cdFx0XHRoLnVzZU1heCA9IHRydWU7XHJcblx0XHRcdFxyXG5cdFx0XHRpZihcImZyb21cIiBpbiBrd0FyZ3Mpe1xyXG5cdFx0XHRcdG1pbiA9IGt3QXJncy5mcm9tO1xyXG5cdFx0XHRcdGgudXNlTWluID0gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYoXCJ0b1wiIGluIGt3QXJncyl7XHJcblx0XHRcdFx0bWF4ID0ga3dBcmdzLnRvO1xyXG5cdFx0XHRcdGgudXNlTWF4ID0gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdFx0XHJcblx0XHRcdC8vIGNoZWNrIGZvciBlcnJvbmVvdXMgY29uZGl0aW9uXHJcblx0XHRcdGlmKG1heCA8PSBtaW4pe1xyXG5cdFx0XHRcdHJldHVybiBjYWxjVGlja3MobWluLCBtYXgsIGgsIDAsIDAsIDAsIHNwYW4pO1x0Ly8gT2JqZWN0XHJcblx0XHRcdH1cclxuXHRcdFx0aWYoIWRlbHRhKXtcclxuXHRcdFx0XHRkZWx0YSA9IG1heCAtIG1pbjtcclxuXHRcdFx0fVxyXG5cdFx0XHR2YXIgbWFnID0gTWF0aC5mbG9vcihNYXRoLmxvZyhkZWx0YSkgLyBNYXRoLkxOMTApLFxyXG5cdFx0XHRcdG1ham9yID0ga3dBcmdzICYmIChcIm1ham9yVGlja1N0ZXBcIiBpbiBrd0FyZ3MpID8ga3dBcmdzLm1ham9yVGlja1N0ZXAgOiBNYXRoLnBvdygxMCwgbWFnKSxcclxuXHRcdFx0XHRtaW5vciA9IDAsIG1pY3JvID0gMCwgdGlja3M7XHJcblx0XHRcdFx0XHJcblx0XHRcdC8vIGNhbGN1bGF0ZSBtaW5vciB0aWNrc1xyXG5cdFx0XHRpZihrd0FyZ3MgJiYgKFwibWlub3JUaWNrU3RlcFwiIGluIGt3QXJncykpe1xyXG5cdFx0XHRcdG1pbm9yID0ga3dBcmdzLm1pbm9yVGlja1N0ZXA7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdGRve1xyXG5cdFx0XHRcdFx0bWlub3IgPSBtYWpvciAvIDEwO1xyXG5cdFx0XHRcdFx0aWYoIWgubmF0dXJhbCB8fCBtaW5vciA+IDAuOSl7XHJcblx0XHRcdFx0XHRcdHRpY2tzID0gY2FsY1RpY2tzKG1pbiwgbWF4LCBoLCBtYWpvciwgbWlub3IsIDAsIHNwYW4pO1xyXG5cdFx0XHRcdFx0XHRpZih0aWNrcy5ib3VuZHMuc2NhbGUgKiB0aWNrcy5taW5vci50aWNrID4gbWlub3JEZWx0YSl7IGJyZWFrOyB9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRtaW5vciA9IG1ham9yIC8gNTtcclxuXHRcdFx0XHRcdGlmKCFoLm5hdHVyYWwgfHwgbWlub3IgPiAwLjkpe1xyXG5cdFx0XHRcdFx0XHR0aWNrcyA9IGNhbGNUaWNrcyhtaW4sIG1heCwgaCwgbWFqb3IsIG1pbm9yLCAwLCBzcGFuKTtcclxuXHRcdFx0XHRcdFx0aWYodGlja3MuYm91bmRzLnNjYWxlICogdGlja3MubWlub3IudGljayA+IG1pbm9yRGVsdGEpeyBicmVhazsgfVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0bWlub3IgPSBtYWpvciAvIDI7XHJcblx0XHRcdFx0XHRpZighaC5uYXR1cmFsIHx8IG1pbm9yID4gMC45KXtcclxuXHRcdFx0XHRcdFx0dGlja3MgPSBjYWxjVGlja3MobWluLCBtYXgsIGgsIG1ham9yLCBtaW5vciwgMCwgc3Bhbik7XHJcblx0XHRcdFx0XHRcdGlmKHRpY2tzLmJvdW5kcy5zY2FsZSAqIHRpY2tzLm1pbm9yLnRpY2sgPiBtaW5vckRlbHRhKXsgYnJlYWs7IH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiBjYWxjVGlja3MobWluLCBtYXgsIGgsIG1ham9yLCAwLCAwLCBzcGFuKTtcdC8vIE9iamVjdFxyXG5cdFx0XHRcdH13aGlsZShmYWxzZSk7XHJcblx0XHRcdH1cclxuXHRcclxuXHRcdFx0Ly8gY2FsY3VsYXRlIG1pY3JvIHRpY2tzXHJcblx0XHRcdGlmKGt3QXJncyAmJiAoXCJtaWNyb1RpY2tTdGVwXCIgaW4ga3dBcmdzKSl7XHJcblx0XHRcdFx0bWljcm8gPSBrd0FyZ3MubWljcm9UaWNrU3RlcDtcclxuXHRcdFx0XHR0aWNrcyA9IGNhbGNUaWNrcyhtaW4sIG1heCwgaCwgbWFqb3IsIG1pbm9yLCBtaWNybywgc3Bhbik7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdGRve1xyXG5cdFx0XHRcdFx0bWljcm8gPSBtaW5vciAvIDEwO1xyXG5cdFx0XHRcdFx0aWYoIWgubmF0dXJhbCB8fCBtaWNybyA+IDAuOSl7XHJcblx0XHRcdFx0XHRcdHRpY2tzID0gY2FsY1RpY2tzKG1pbiwgbWF4LCBoLCBtYWpvciwgbWlub3IsIG1pY3JvLCBzcGFuKTtcclxuXHRcdFx0XHRcdFx0aWYodGlja3MuYm91bmRzLnNjYWxlICogdGlja3MubWljcm8udGljayA+IGRlbHRhTGltaXQpeyBicmVhazsgfVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0bWljcm8gPSBtaW5vciAvIDU7XHJcblx0XHRcdFx0XHRpZighaC5uYXR1cmFsIHx8IG1pY3JvID4gMC45KXtcclxuXHRcdFx0XHRcdFx0dGlja3MgPSBjYWxjVGlja3MobWluLCBtYXgsIGgsIG1ham9yLCBtaW5vciwgbWljcm8sIHNwYW4pO1xyXG5cdFx0XHRcdFx0XHRpZih0aWNrcy5ib3VuZHMuc2NhbGUgKiB0aWNrcy5taWNyby50aWNrID4gZGVsdGFMaW1pdCl7IGJyZWFrOyB9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRtaWNybyA9IG1pbm9yIC8gMjtcclxuXHRcdFx0XHRcdGlmKCFoLm5hdHVyYWwgfHwgbWljcm8gPiAwLjkpe1xyXG5cdFx0XHRcdFx0XHR0aWNrcyA9IGNhbGNUaWNrcyhtaW4sIG1heCwgaCwgbWFqb3IsIG1pbm9yLCBtaWNybywgc3Bhbik7XHJcblx0XHRcdFx0XHRcdGlmKHRpY2tzLmJvdW5kcy5zY2FsZSAqIHRpY2tzLm1pY3JvLnRpY2sgPiBkZWx0YUxpbWl0KXsgYnJlYWs7IH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdG1pY3JvID0gMDtcclxuXHRcdFx0XHR9d2hpbGUoZmFsc2UpO1xyXG5cdFx0XHR9XHJcblx0XHJcblx0XHRcdHJldHVybiBtaWNybyA/IHRpY2tzIDogY2FsY1RpY2tzKG1pbiwgbWF4LCBoLCBtYWpvciwgbWlub3IsIDAsIHNwYW4pO1x0Ly8gT2JqZWN0XHJcblx0XHR9LFxyXG5cdFx0YnVpbGRUaWNrczogZnVuY3Rpb24oLypPYmplY3QqLyBzY2FsZXIsIC8qT2JqZWN0Ki8ga3dBcmdzKXtcclxuXHRcdFx0dmFyIHN0ZXAsIG5leHQsIHRpY2ssXHJcblx0XHRcdFx0bmV4dE1ham9yID0gc2NhbGVyLm1ham9yLnN0YXJ0LFxyXG5cdFx0XHRcdG5leHRNaW5vciA9IHNjYWxlci5taW5vci5zdGFydCxcclxuXHRcdFx0XHRuZXh0TWljcm8gPSBzY2FsZXIubWljcm8uc3RhcnQ7XHJcblx0XHRcdGlmKGt3QXJncy5taWNyb1RpY2tzICYmIHNjYWxlci5taWNyby50aWNrKXtcclxuXHRcdFx0XHRzdGVwID0gc2NhbGVyLm1pY3JvLnRpY2ssIG5leHQgPSBuZXh0TWljcm87XHJcblx0XHRcdH1lbHNlIGlmKGt3QXJncy5taW5vclRpY2tzICYmIHNjYWxlci5taW5vci50aWNrKXtcclxuXHRcdFx0XHRzdGVwID0gc2NhbGVyLm1pbm9yLnRpY2ssIG5leHQgPSBuZXh0TWlub3I7XHJcblx0XHRcdH1lbHNlIGlmKHNjYWxlci5tYWpvci50aWNrKXtcclxuXHRcdFx0XHRzdGVwID0gc2NhbGVyLm1ham9yLnRpY2ssIG5leHQgPSBuZXh0TWFqb3I7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdC8vIG5vIHRpY2tzXHJcblx0XHRcdFx0cmV0dXJuIG51bGw7XHJcblx0XHRcdH1cclxuXHRcdFx0Ly8gbWFrZSBzdXJlIHRoYXQgd2UgaGF2ZSBmaW5pdGUgYm91bmRzXHJcblx0XHRcdHZhciByZXZTY2FsZSA9IDEgLyBzY2FsZXIuYm91bmRzLnNjYWxlO1xyXG5cdFx0XHRpZihzY2FsZXIuYm91bmRzLnRvIDw9IHNjYWxlci5ib3VuZHMuZnJvbSB8fCBpc05hTihyZXZTY2FsZSkgfHwgIWlzRmluaXRlKHJldlNjYWxlKSB8fFxyXG5cdFx0XHRcdFx0c3RlcCA8PSAwIHx8IGlzTmFOKHN0ZXApIHx8ICFpc0Zpbml0ZShzdGVwKSl7XHJcblx0XHRcdFx0Ly8gbm8gdGlja3NcclxuXHRcdFx0XHRyZXR1cm4gbnVsbDtcclxuXHRcdFx0fVxyXG5cdFx0XHQvLyBsb29wIG92ZXIgYWxsIHRpY2tzXHJcblx0XHRcdHZhciBtYWpvclRpY2tzID0gW10sIG1pbm9yVGlja3MgPSBbXSwgbWljcm9UaWNrcyA9IFtdO1xyXG5cdFx0XHR3aGlsZShuZXh0IDw9IHNjYWxlci5ib3VuZHMudG8gKyByZXZTY2FsZSl7XHJcblx0XHRcdFx0aWYoTWF0aC5hYnMobmV4dE1ham9yIC0gbmV4dCkgPCBzdGVwIC8gMil7XHJcblx0XHRcdFx0XHQvLyBtYWpvciB0aWNrXHJcblx0XHRcdFx0XHR0aWNrID0ge3ZhbHVlOiBuZXh0TWFqb3J9O1xyXG5cdFx0XHRcdFx0aWYoa3dBcmdzLm1ham9yTGFiZWxzKXtcclxuXHRcdFx0XHRcdFx0dGljay5sYWJlbCA9IGdldExhYmVsKG5leHRNYWpvciwgc2NhbGVyLm1ham9yLnByZWMsIGt3QXJncyk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRtYWpvclRpY2tzLnB1c2godGljayk7XHJcblx0XHRcdFx0XHRuZXh0TWFqb3IgKz0gc2NhbGVyLm1ham9yLnRpY2s7XHJcblx0XHRcdFx0XHRuZXh0TWlub3IgKz0gc2NhbGVyLm1pbm9yLnRpY2s7XHJcblx0XHRcdFx0XHRuZXh0TWljcm8gKz0gc2NhbGVyLm1pY3JvLnRpY2s7XHJcblx0XHRcdFx0fWVsc2UgaWYoTWF0aC5hYnMobmV4dE1pbm9yIC0gbmV4dCkgPCBzdGVwIC8gMil7XHJcblx0XHRcdFx0XHQvLyBtaW5vciB0aWNrXHJcblx0XHRcdFx0XHRpZihrd0FyZ3MubWlub3JUaWNrcyl7XHJcblx0XHRcdFx0XHRcdHRpY2sgPSB7dmFsdWU6IG5leHRNaW5vcn07XHJcblx0XHRcdFx0XHRcdGlmKGt3QXJncy5taW5vckxhYmVscyAmJiAoc2NhbGVyLm1pbk1pbm9yU3RlcCA8PSBzY2FsZXIubWlub3IudGljayAqIHNjYWxlci5ib3VuZHMuc2NhbGUpKXtcclxuXHRcdFx0XHRcdFx0XHR0aWNrLmxhYmVsID0gZ2V0TGFiZWwobmV4dE1pbm9yLCBzY2FsZXIubWlub3IucHJlYywga3dBcmdzKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRtaW5vclRpY2tzLnB1c2godGljayk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRuZXh0TWlub3IgKz0gc2NhbGVyLm1pbm9yLnRpY2s7XHJcblx0XHRcdFx0XHRuZXh0TWljcm8gKz0gc2NhbGVyLm1pY3JvLnRpY2s7XHJcblx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHQvLyBtaWNybyB0aWNrXHJcblx0XHRcdFx0XHRpZihrd0FyZ3MubWljcm9UaWNrcyl7XHJcblx0XHRcdFx0XHRcdG1pY3JvVGlja3MucHVzaCh7dmFsdWU6IG5leHRNaWNyb30pO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0bmV4dE1pY3JvICs9IHNjYWxlci5taWNyby50aWNrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRuZXh0ICs9IHN0ZXA7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHttYWpvcjogbWFqb3JUaWNrcywgbWlub3I6IG1pbm9yVGlja3MsIG1pY3JvOiBtaWNyb1RpY2tzfTtcdC8vIE9iamVjdFxyXG5cdFx0fSxcclxuXHRcdGdldFRyYW5zZm9ybWVyRnJvbU1vZGVsOiBmdW5jdGlvbigvKk9iamVjdCovIHNjYWxlcil7XHJcblx0XHRcdHZhciBvZmZzZXQgPSBzY2FsZXIuYm91bmRzLmZyb20sIHNjYWxlID0gc2NhbGVyLmJvdW5kcy5zY2FsZTtcclxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHgpeyByZXR1cm4gKHggLSBvZmZzZXQpICogc2NhbGU7IH07XHQvLyBGdW5jdGlvblxyXG5cdFx0fSxcclxuXHRcdGdldFRyYW5zZm9ybWVyRnJvbVBsb3Q6IGZ1bmN0aW9uKC8qT2JqZWN0Ki8gc2NhbGVyKXtcclxuXHRcdFx0dmFyIG9mZnNldCA9IHNjYWxlci5ib3VuZHMuZnJvbSwgc2NhbGUgPSBzY2FsZXIuYm91bmRzLnNjYWxlO1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oeCl7IHJldHVybiB4IC8gc2NhbGUgKyBvZmZzZXQ7IH07XHQvLyBGdW5jdGlvblxyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSw0U0FDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/scaler/linear.js\n");

/***/ }),

/***/ "./node_modules/dojox/charting/scaler/primitive.js":
/*!*********************************************************!*\
  !*** ./node_modules/dojox/charting/scaler/primitive.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang){\r\n\tvar primitive = lang.getObject(\"dojox.charting.scaler.primitive\", true);\r\n\treturn lang.mixin(primitive, {\r\n\t\tbuildScaler: function(/*Number*/ min, /*Number*/ max, /*Number*/ span, /*Object*/ kwArgs){\r\n\t\t\tif(min == max){\r\n\t\t\t\t// artificially extend bounds\r\n\t\t\t\tmin -= 0.5;\r\n\t\t\t\tmax += 0.5;\r\n\t\t\t\t// now the line will be centered\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tbounds: {\r\n\t\t\t\t\tlower: min,\r\n\t\t\t\t\tupper: max,\r\n\t\t\t\t\tfrom:  min,\r\n\t\t\t\t\tto:    max,\r\n\t\t\t\t\tscale: span / (max - min),\r\n\t\t\t\t\tspan:  span\r\n\t\t\t\t},\r\n\t\t\t\tscaler: primitive\r\n\t\t\t};\r\n\t\t},\r\n\t\tbuildTicks: function(/*Object*/ scaler, /*Object*/ kwArgs){\r\n\t\t\treturn {major: [], minor: [], micro: []};\t// Object\r\n\t\t},\r\n\t\tgetTransformerFromModel: function(/*Object*/ scaler){\r\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\r\n\t\t\treturn function(x){ return (x - offset) * scale; };\t// Function\r\n\t\t},\r\n\t\tgetTransformerFromPlot: function(/*Object*/ scaler){\r\n\t\t\tvar offset = scaler.bounds.from, scale = scaler.bounds.scale;\r\n\t\t\treturn function(x){ return x / scale + offset; };\t// Function\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvY2hhcnRpbmcvc2NhbGVyL3ByaW1pdGl2ZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9jaGFydGluZy9zY2FsZXIvcHJpbWl0aXZlLmpzP2QyODMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2UvbGFuZ1wiXSwgXHJcbiAgZnVuY3Rpb24obGFuZyl7XHJcblx0dmFyIHByaW1pdGl2ZSA9IGxhbmcuZ2V0T2JqZWN0KFwiZG9qb3guY2hhcnRpbmcuc2NhbGVyLnByaW1pdGl2ZVwiLCB0cnVlKTtcclxuXHRyZXR1cm4gbGFuZy5taXhpbihwcmltaXRpdmUsIHtcclxuXHRcdGJ1aWxkU2NhbGVyOiBmdW5jdGlvbigvKk51bWJlciovIG1pbiwgLypOdW1iZXIqLyBtYXgsIC8qTnVtYmVyKi8gc3BhbiwgLypPYmplY3QqLyBrd0FyZ3Mpe1xyXG5cdFx0XHRpZihtaW4gPT0gbWF4KXtcclxuXHRcdFx0XHQvLyBhcnRpZmljaWFsbHkgZXh0ZW5kIGJvdW5kc1xyXG5cdFx0XHRcdG1pbiAtPSAwLjU7XHJcblx0XHRcdFx0bWF4ICs9IDAuNTtcclxuXHRcdFx0XHQvLyBub3cgdGhlIGxpbmUgd2lsbCBiZSBjZW50ZXJlZFxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0Ym91bmRzOiB7XHJcblx0XHRcdFx0XHRsb3dlcjogbWluLFxyXG5cdFx0XHRcdFx0dXBwZXI6IG1heCxcclxuXHRcdFx0XHRcdGZyb206ICBtaW4sXHJcblx0XHRcdFx0XHR0bzogICAgbWF4LFxyXG5cdFx0XHRcdFx0c2NhbGU6IHNwYW4gLyAobWF4IC0gbWluKSxcclxuXHRcdFx0XHRcdHNwYW46ICBzcGFuXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRzY2FsZXI6IHByaW1pdGl2ZVxyXG5cdFx0XHR9O1xyXG5cdFx0fSxcclxuXHRcdGJ1aWxkVGlja3M6IGZ1bmN0aW9uKC8qT2JqZWN0Ki8gc2NhbGVyLCAvKk9iamVjdCovIGt3QXJncyl7XHJcblx0XHRcdHJldHVybiB7bWFqb3I6IFtdLCBtaW5vcjogW10sIG1pY3JvOiBbXX07XHQvLyBPYmplY3RcclxuXHRcdH0sXHJcblx0XHRnZXRUcmFuc2Zvcm1lckZyb21Nb2RlbDogZnVuY3Rpb24oLypPYmplY3QqLyBzY2FsZXIpe1xyXG5cdFx0XHR2YXIgb2Zmc2V0ID0gc2NhbGVyLmJvdW5kcy5mcm9tLCBzY2FsZSA9IHNjYWxlci5ib3VuZHMuc2NhbGU7XHJcblx0XHRcdHJldHVybiBmdW5jdGlvbih4KXsgcmV0dXJuICh4IC0gb2Zmc2V0KSAqIHNjYWxlOyB9O1x0Ly8gRnVuY3Rpb25cclxuXHRcdH0sXHJcblx0XHRnZXRUcmFuc2Zvcm1lckZyb21QbG90OiBmdW5jdGlvbigvKk9iamVjdCovIHNjYWxlcil7XHJcblx0XHRcdHZhciBvZmZzZXQgPSBzY2FsZXIuYm91bmRzLmZyb20sIHNjYWxlID0gc2NhbGVyLmJvdW5kcy5zY2FsZTtcclxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKHgpeyByZXR1cm4geCAvIHNjYWxlICsgb2Zmc2V0OyB9O1x0Ly8gRnVuY3Rpb25cclxuXHRcdH1cclxuXHR9KTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEscU5BQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/charting/scaler/primitive.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx.js":
/*!***********************************!*\
  !*** ./node_modules/dojox/gfx.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./gfx/_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! ./gfx/renderer */ \"./node_modules/dojox/gfx/svg.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, gfxBase, renderer){\r\n\t// module:\r\n\t//\t\tdojox/gfx\r\n\t// summary:\r\n\t//\t\tThis the root of the Dojo Graphics package\r\n\tgfxBase.switchTo(renderer);\r\n\treturn gfxBase;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvZ2Z4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2dmeC5qcz8zMDQ5Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2xhbmdcIiwgXCIuL2dmeC9fYmFzZVwiLCBcIi4vZ2Z4L3JlbmRlcmVyIVwiXSwgXHJcbiAgZnVuY3Rpb24obGFuZywgZ2Z4QmFzZSwgcmVuZGVyZXIpe1xyXG5cdC8vIG1vZHVsZTpcclxuXHQvL1x0XHRkb2pveC9nZnhcclxuXHQvLyBzdW1tYXJ5OlxyXG5cdC8vXHRcdFRoaXMgdGhlIHJvb3Qgb2YgdGhlIERvam8gR3JhcGhpY3MgcGFja2FnZVxyXG5cdGdmeEJhc2Uuc3dpdGNoVG8ocmVuZGVyZXIpO1xyXG5cdHJldHVybiBnZnhCYXNlO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxnWEFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/_gfxBidiSupport.js":
/*!***************************************************!*\
  !*** ./node_modules/dojox/gfx/_gfxBidiSupport.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"),__webpack_require__(/*! dojo/_base/sniff */ \"./node_modules/dojo/_base/sniff.js\"), __webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"), __webpack_require__(/*! dojo/_base/html */ \"./node_modules/dojo/_base/html.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"),\r\n\t\t__webpack_require__(/*! ./utils */ \"./node_modules/dojox/gfx/utils.js\"), __webpack_require__(/*! ./shape */ \"./node_modules/dojox/gfx/shape.js\"), __webpack_require__(/*! ./path */ \"./node_modules/dojox/gfx/path.js\"), __webpack_require__(/*! dojox/string/BidiEngine */ \"./node_modules/dojox/string/BidiEngine.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(g, lang, has, dom, html, arr, utils, shapeLib, pathLib, BidiEngine){\r\n\tlang.getObject(\"dojox.gfx._gfxBidiSupport\", true);\r\n\r\n\t/*=====\r\n\t// Prevent changes here from masking the definitions in _base.js from the doc parser\r\n\tvar origG = g;\r\n\tg = {};\r\n\t=====*/\r\n\r\n\tswitch (g.renderer){\r\n\t\tcase 'vml':\r\n\t\t\tg.isVml = true;\r\n\t\t\tbreak;\r\n\t\tcase 'svg':\r\n\t\t\tg.isSvg = true;\r\n\t\t\tif(g.svg.useSvgWeb){\r\n\t\t\t\tg.isSvgWeb = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'silverlight':\r\n\t\t\tg.isSilverlight = true;\r\n\t\t\tbreak;\r\n\t\tcase 'canvas':\r\n\t\tcase 'canvasWithEvents':\r\n\t\t\tg.isCanvas = true;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tvar bidi_const = {\r\n\t\tLRM : '\\u200E',\r\n\t\tLRE : '\\u202A',\r\n\t\tPDF : '\\u202C',\r\n\t\tRLM : '\\u200f',\r\n\t\tRLE : '\\u202B'\r\n\t};\r\n\r\n\t/*===== g = origG; =====*/\r\n\r\n\t// the object that performs text transformations.\r\n\tvar bidiEngine = new BidiEngine();\r\n\r\n\tlang.extend(g.shape.Surface, {\r\n\t\t// textDir: String\r\n\t\t//\t\tWill be used as default for Text/TextPath/Group objects that created by this surface\r\n\t\t//\t\tand textDir wasn't directly specified for them, though the bidi support was loaded.\r\n\t\t//\t\tCan be set in two ways:\r\n\t\t//\r\n\t\t//\t\t1. When the surface is created and textDir value passed to it as fourth\r\n\t\t//\t\tparameter.\r\n\t\t//\t\t2. Using the setTextDir(String) function, when this function is used the value\r\n\t\t//\t\tof textDir propagates to all of it's children and the children of children (for Groups) etc.\r\n\t\ttextDir: \"\",\r\n\r\n\t\tsetTextDir: function(/*String*/newTextDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed for propagation and change of textDir.\r\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\r\n\t\t\tsetTextDir(this, newTextDir);\r\n\t\t},\r\n\r\n\t\tgetTextDir: function(){\r\n\t\t\treturn this.textDir;\r\n\t\t}\r\n\t});\r\n\r\n\tlang.extend(g.Group, {                          \r\n\t\t// textDir: String\r\n\t\t//\t\tWill be used for inheritance, or as default for text objects\r\n\t\t//\t\tthat textDir wasn't directly specified for them but the bidi support was required.\r\n\t\ttextDir: \"\",\r\n\r\n\t\tsetTextDir: function(/*String*/newTextDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed for propagation and change of textDir.\r\n\t\t\t//\t\tnewTextDir will be forced as textDir for all of it's children (Group/Text/TextPath).\r\n\t\t\tsetTextDir(this, newTextDir);\r\n\t\t},\r\n\r\n\t\tgetTextDir: function(){\r\n\t\t\treturn this.textDir;\r\n\t\t}\t\r\n\t});\r\n\t\r\n\tlang.extend(g.Text, {  \r\n\t\t// summary:\r\n\t\t//\t\tOverrides some of dojox/gfx.Text properties, and adds some\r\n\t\t//\t\tfor bidi support.\r\n\t\t\r\n\t\t// textDir: String\r\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\r\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\r\n\t\t//\r\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\r\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\r\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\r\n\t\ttextDir: \"\",\r\n\r\n\t\tformatText: function (/*String*/ text, /*String*/ textDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\r\n\t\t\t// text:\t\r\n\t\t\t//\t\tthe string for manipulation, by default return value.\r\n\t\t\t// textDir:\t\r\n\t\t\t//\t\tText direction.\r\n\t\t\t//\t\tCan be:\r\n\t\t\t//\r\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\r\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\r\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\r\n\t\t\t//\t\tWas tested in:\r\n\t\t\t//\r\n\t\t\t//\t\tRenderers (browser for testing):\r\n\t\t\t//\r\n\t\t\t//\t\t- canvas (FF, Chrome, Safari),\r\n\t\t\t//\t\t- vml (IE),\r\n\t\t\t//\t\t- svg (FF, Chrome, Safari, Opera),\r\n\t\t\t//\t\t- silverlight (IE, Chrome, Safari, Opera),\r\n\t\t\t//\t\t- svgWeb(FF, Chrome, Safari, Opera, IE).\r\n\t\t\t//\r\n\t\t\t//\t\tBrowsers [browser version that was tested]:\r\n\t\t\t//\r\n\t\t\t//\t\t- IE [6,7,8], FF [3.6],\r\n\t\t\t//\t\t- Chrome (latest for March 2011),\r\n\t\t\t//\t\t- Safari [5.0.3],\r\n\t\t\t//\t\t- Opera [11.01].\r\n\r\n\t\t\tif(textDir && text && text.length > 1){\r\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\r\n\t\r\n\t\t\t\tif(targetDir == \"auto\"){\r\n\t\t\t\t\t//is auto by default\r\n\t\t\t\t\tif(g.isVml){\r\n\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isVml){\r\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t\tif(targetDir != sourceDir){\r\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isSvgWeb){\r\n\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isSilverlight){\r\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRNNN\",\"VLYNN\") : bidiEngine.bidiTransform(text,\"ILNNN\",\"VLYNN\");\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isCanvas){\r\n\t\t\t\t\treturn (targetDir == \"rtl\") ? bidi_const.RLE + text + bidi_const.PDF : bidi_const.LRE + text + bidi_const.PDF;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif(g.isSvg){\r\n\t\t\t\t\tif(has(\"ff\") < 4){\r\n\t\t\t\t\t\treturn (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn bidi_const.LRM + (targetDir == \"rtl\" ? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t},\t\r\n\r\n\t\tbidiPreprocess: function(newShape){     \r\n\t\t\treturn newShape;\r\n\t\t}\r\n\t});\r\n\r\n\tlang.extend(g.TextPath, {\r\n\t\t// textDir: String\r\n\t\t//\t\tUsed for displaying bidi scripts in right layout.\r\n\t\t//\t\tDefines the base direction of text that displayed, can have 3 values:\r\n\t\t//\r\n\t\t//\t\t1. \"ltr\" - base direction is left to right.\r\n\t\t//\t\t2. \"rtl\" - base direction is right to left.\r\n\t\t//\t\t3. \"auto\" - base direction is contextual (defined by first strong character).\r\n\t\ttextDir: \"\",\r\n\r\n\t\tformatText: function (/*String*/text, /*String*/textDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tApplies the right transform on text, according to renderer.\r\n\t\t\t// text:\r\n\t\t\t//\t\tthe string for manipulation, by default return value.\r\n\t\t\t// textDir:\r\n\t\t\t//\t\ttext direction direction.\r\n\t\t\t//\t\tCan be:\r\n\t\t\t//\r\n\t\t\t//\t\t1. \"ltr\" - for left to right layout.\r\n\t\t\t//\t\t2. \"rtl\" - for right to left layout\r\n\t\t\t//\t\t3. \"auto\" - for contextual layout: the first strong letter decides the direction.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds the right transformation that should be applied on the text, according to renderer.\r\n\t\t\t//\t\tWas tested in:\r\n\t\t\t//\r\n\t\t\t//\t\tRenderers:\r\n\t\t\t//\t\tcanvas (FF, Chrome, Safari), vml (IE), svg (FF, Chrome, Safari, Opera), silverlight (IE8), svgWeb(FF, Chrome, Safari, Opera, IE).\r\n\t\t\t//\r\n\t\t\t//\t\tBrowsers:\r\n\t\t\t//\t\tIE [6,7,8], FF [3.6], Chrome (latest for February 2011), Safari [5.0.3], Opera [11.01].\r\n\r\n\t\t\tif(textDir && text && text.length > 1){\r\n\t\t\t\tvar sourceDir = \"ltr\", targetDir = textDir;\r\n\r\n\t\t\t\tif(targetDir == \"auto\"){\r\n\t\t\t\t\t//is auto by default\r\n\t\t\t\t\tif(g.isVml){\r\n\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(g.isVml){\r\n\t\t\t\t\tsourceDir = bidiEngine.checkContextual(text);\r\n\t\t\t\t\tif(targetDir != sourceDir){\r\n\t\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\t\treturn !bidiEngine.hasBidiChar(text) ? bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\") : bidi_const.RLM + bidi_const.RLM + text;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treturn bidi_const.LRM + text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\tif(g.isSvgWeb){\r\n\t\t\t\t\tif(targetDir == \"rtl\"){\r\n\t\t\t\t\t\treturn bidiEngine.bidiTransform(text,\"IRNNN\",\"ILNNN\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn text;\r\n\t\t\t\t}\r\n\t\t\t\t//unlike the g.Text that is rendered in logical layout for Bidi scripts.\r\n\t\t\t\t//for g.TextPath in svg always visual -> bidi script is unreadable (except Opera and FF start from version 4)\r\n\t\t\t\tif(g.isSvg){\r\n\t\t\t\t\tif(has(\"opera\") || has(\"ff\") >= 4){\r\n\t\t\t\t\t\ttext = bidi_const.LRM + (targetDir == \"rtl\"? bidi_const.RLE : bidi_const.LRE) + text + bidi_const.PDF;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttext = (targetDir == \"rtl\") ? bidiEngine.bidiTransform(text,\"IRYNN\",\"VLNNN\") : bidiEngine.bidiTransform(text,\"ILYNN\",\"VLNNN\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t}\t\r\n\t\t\treturn text;\r\n\t\t},\r\n\t\tbidiPreprocess: function(newText){\r\n\t\t\tif(newText && (typeof newText == \"string\")){\r\n\t\t\t\tthis.origText = newText;\r\n\t\t\t\tnewText = this.formatText(newText,this.textDir);\r\n\t\t\t}\r\n\t\t\treturn newText;\r\n\t\t}\r\n\t});\t\r\n\t\t\r\n\tvar extendMethod = function(shape, method, before, after){\r\n\t\t// summary:\r\n\t\t//\t\tSome helper function. Used for extending methods of shape.\r\n\t\t// shape: Object\r\n\t\t//\t\tThe shape we overriding it's method.\r\n\t\t// method: String\r\n\t\t//\t\tThe method that is extended, the original method is called before or after\r\n\t\t//\t\tfunctions that passed to extendMethod.\r\n\t\t// before: function\r\n\t\t//\t\tIf defined this function will be executed before the original method.\r\n\t\t// after: function\r\n\t\t//\t\tIf defined this function will be executed after the original method.\r\n\t\tvar old = shape.prototype[method];\r\n\t\tshape.prototype[method] = \r\n\t\t\tfunction(){\r\n\t\t\t\tvar rBefore;\r\n\t\t\t\tif (before){\r\n\t\t\t\t\trBefore = before.apply(this, arguments);\r\n\t\t\t\t}\r\n\t\t\t\tvar r = old.call(this, rBefore);\r\n\t\t\t\tif (after){\r\n\t\t\t\t\tr = after.call(this, r, arguments);\r\n\t\t\t\t}\r\n\t\t\t\treturn r;\r\n\t\t\t};\r\n\t};\r\n\r\n\tvar bidiPreprocess = function(newText){\r\n\t\tif (newText){  \r\n\t\t\tif (newText.textDir){\r\n\t\t\t\tnewText.textDir = validateTextDir(newText.textDir);\r\n\t\t\t}\r\n\t\t\tif (newText.text && (newText.text instanceof Array)){\r\n\t\t\t\tnewText.text = newText.text.join(\",\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(newText && (newText.text != undefined || newText.textDir) && (this.textDir != newText.textDir || newText.text != this.origText)){\r\n\t\t\t// store the original text. \r\n\t\t\tthis.origText = (newText.text != undefined) ? newText.text : this.origText;\r\n\t\t\tif(newText.textDir){\r\n\t\t\t\tthis.textDir = newText.textDir;\r\n\t\t\t}\r\n\t\t\tnewText.text = this.formatText(this.origText,this.textDir);\r\n\t\t}\r\n\t\treturn this.bidiPreprocess(newText);\r\n\r\n\t};\r\n\r\n\t// Instead of adding bidiPreprocess to all renders one by one\r\n\t// use the extendMethod, at first there's a need for bidi transformation \r\n\t// on text then call to original setShape.\r\n\textendMethod(g.Text,\"setShape\", bidiPreprocess, null);\r\n\textendMethod(g.TextPath,\"setText\", bidiPreprocess, null);\r\n\t\r\n\tvar restoreText = function(origObj){\r\n\t\tvar obj = lang.clone(origObj);\r\n\t\tif (obj && this.origText){\r\n\t\t\tobj.text = this.origText;\r\n\t\t}\r\n\t\treturn obj;\r\n\t};\r\n\r\n\t// Instead of adding restoreText to all renders one by one\r\n\t// use the extendMethod, at first get the shape by calling the original getShape,\r\n\t// than resrore original text (without the text transformations).\r\n\textendMethod(g.Text, \"getShape\", null, restoreText);\r\n\textendMethod(g.TextPath, \"getText\", null, restoreText);\r\n\r\n\tvar groupTextDir = function(group, args){\r\n\t\tvar textDir;\r\n\t\tif (args && args[0]){\r\n\t\t\ttextDir = validateTextDir(args[0]);\r\n\t\t}\r\n\t\tgroup.setTextDir(textDir ? textDir : this.textDir);\r\n\t\treturn group;\t// dojox/gfx.Group\r\n\t};\r\n\r\n\t// In creation of Group there's a need to update it's textDir,\r\n\t// so instead of doing it in renders one by one (vml vs others)\r\n\t// use the extendMethod, at first the original createGroup is applied, the\r\n\t// groupTextDir which is setts Group's textDir as it's father's or if was defined\r\n\t// by user by this value.\r\n\textendMethod(g.Surface, \"createGroup\", null, groupTextDir);\r\n\textendMethod(g.Group, \"createGroup\", null, groupTextDir);\r\n\r\n\tvar textDirPreprocess =  function(text){\r\n\t\t// inherit from surface / group  if textDir is defined there\r\n\t\tif(text){\r\n\t\t\tvar textDir = text.textDir ? validateTextDir(text.textDir) : this.textDir;\r\n\t\t\tif(textDir){\r\n\t\t\t\ttext.textDir = textDir;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn text;\r\n\t};\r\n\r\n\t// In creation there's a need to some preprocess,\r\n\t// so instead of doing it in renders one by one (vml vs others)\r\n\t// use the extendMethod, at first the textDirPreprocess function handles the input\r\n\t// then the original createXXXXXX is applied.\r\n\textendMethod(g.Surface,\"createText\", textDirPreprocess, null);\r\n\textendMethod(g.Surface,\"createTextPath\", textDirPreprocess, null);\r\n\textendMethod(g.Group,\"createText\", textDirPreprocess, null);\r\n\textendMethod(g.Group,\"createTextPath\", textDirPreprocess, null);\r\n\r\n\t/*=====\r\n\t// don't mask definition of original createSurface() function from doc parser\r\n\tg = {};\r\n\t=====*/\r\n\r\n\tg.createSurface = function(parentNode, width, height, textDir) {\r\n\t\tvar s = g[g.renderer].createSurface(parentNode, width, height);\r\n\t\tvar tDir = validateTextDir(textDir);\r\n\t\t\r\n\t\tif(g.isSvgWeb){\r\n\t\t\ts.textDir = tDir ? tDir : html.style(dom.byId(parentNode),\"direction\");\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\t// if textDir was defined use it, else get default value.\r\n\t\t//s.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\r\n\t\tif(g.isVml || g.isSvg || g.isCanvas){\r\n\t\t\ts.textDir = tDir ? tDir : html.style(s.rawNode,\"direction\");\r\n\t\t}\r\n\t\tif(g.isSilverlight){\r\n\t\t\t// allow this once rawNode will be able for the silverlight\r\n\t\t\t//s.textDir = tDir ? tDir : dojo.style(s.rawNode,\"direction\");\r\n\t\t\ts.textDir = tDir ? tDir : html.style(s._nodes[1],\"direction\");\r\n\t\t}\r\n\t\t\r\n\t\treturn s;\r\n\t};\r\n\t/*===== g = origG; =====*/\r\n\r\n\t// some helper functions\r\n\t\r\n\tfunction setTextDir(/*Object*/ obj, /*String*/ newTextDir){\r\n\t\tvar tDir = validateTextDir(newTextDir);\r\n\t\tif (tDir){\r\n\t\t\tg.utils.forEach(obj,function(e){\r\n\t\t\t\tif(e instanceof g.Surface || e instanceof g.Group){\r\n\t\t\t\t\te.textDir = tDir;\r\n\t\t\t\t}\t\t\r\n\t\t\t\tif(e instanceof g.Text){\r\n\t\t\t\t\te.setShape({textDir: tDir});\r\n\t\t\t\t}\r\n\t\t\t\tif(e instanceof g.TextPath){\r\n\t\t\t\t\te.setText({textDir: tDir})\r\n\t\t\t\t}\r\n\t\t\t}, obj);\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tfunction validateTextDir(textDir){\r\n\t\tvar validValues = [\"ltr\",\"rtl\",\"auto\"]; \r\n\t\tif (textDir){\r\n\t\t\ttextDir = textDir.toLowerCase();\r\n\t\t\tif (arr.indexOf(validValues, textDir) < 0){\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn textDir;\r\n\t}\r\n\r\n\treturn g; // return gfx api augmented with bidi support\t\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/_gfxBidiSupport.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/fx.js":
/*!**************************************!*\
  !*** ./node_modules/dojox/gfx/fx.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! ./matrix */ \"./node_modules/dojox/gfx/matrix.js\"), __webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/fx */ \"./node_modules/dojo/_base/fx.js\"), __webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), __webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, g, m, Color, arr, fx, Hub, has){\r\n\tvar fxg = g.fx = {};\r\n\r\n\t// Generic interpolators. Should they be moved to dojox.fx?\r\n\r\n\tfunction InterpolNumber(start, end){\r\n\t\tthis.start = start, this.end = end;\r\n\t}\r\n\tInterpolNumber.prototype.getValue = function(r){\r\n\t\treturn (this.end - this.start) * r + this.start;\r\n\t};\r\n\r\n\tfunction InterpolUnit(start, end, units){\r\n\t\tthis.start = start, this.end = end;\r\n\t\tthis.units = units;\r\n\t}\r\n\tInterpolUnit.prototype.getValue = function(r){\r\n\t\treturn (this.end - this.start) * r + this.start + this.units;\r\n\t};\r\n\r\n\tfunction InterpolColor(start, end){\r\n\t\tthis.start = start, this.end = end;\r\n\t\tthis.temp = new Color();\r\n\t}\r\n\tInterpolColor.prototype.getValue = function(r){\r\n\t\treturn Color.blendColors(this.start, this.end, r, this.temp);\r\n\t};\r\n\r\n\tfunction InterpolValues(values){\r\n\t\tthis.values = values;\r\n\t\tthis.length = values.length;\r\n\t}\r\n\tInterpolValues.prototype.getValue = function(r){\r\n\t\treturn this.values[Math.min(Math.floor(r * this.length), this.length - 1)];\r\n\t};\r\n\r\n\tfunction InterpolObject(values, def){\r\n\t\tthis.values = values;\r\n\t\tthis.def = def ? def : {};\r\n\t}\r\n\tInterpolObject.prototype.getValue = function(r){\r\n\t\tvar ret = lang.clone(this.def);\r\n\t\tfor(var i in this.values){\r\n\t\t\tret[i] = this.values[i].getValue(r);\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tfunction InterpolTransform(stack, original){\r\n\t\tthis.stack = stack;\r\n\t\tthis.original = original;\r\n\t}\r\n\tInterpolTransform.prototype.getValue = function(r){\r\n\t\tvar ret = [];\r\n\t\tarr.forEach(this.stack, function(t){\r\n\t\t\tif(t instanceof m.Matrix2D){\r\n\t\t\t\tret.push(t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(t.name == \"original\" && this.original){\r\n\t\t\t\tret.push(this.original);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n \t\t\t// Adding support for custom matrices\r\n \t\t\tif(t.name == \"matrix\"){\r\n \t\t\t\tif((t.start instanceof m.Matrix2D) && (t.end instanceof m.Matrix2D)){\r\n \t\t\t\t\tvar transfMatrix = new m.Matrix2D();\r\n \t\t\t\t\tfor(var p in t.start) {\r\n \t\t\t\t\t\ttransfMatrix[p] = (t.end[p] - t.start[p])*r + t.start[p];\r\n \t\t\t\t\t}\r\n \t\t\t\t\tret.push(transfMatrix);\r\n \t\t\t\t}\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n\t\t\tif(!(t.name in m)){ return; }\r\n\t\t\tvar f = m[t.name];\r\n\t\t\tif(typeof f != \"function\"){\r\n\t\t\t\t// constant\r\n\t\t\t\tret.push(f);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar val = arr.map(t.start, function(v, i){\r\n\t\t\t\t\t\t\treturn (t.end[i] - v) * r + v;\r\n\t\t\t\t\t\t}),\r\n\t\t\t\tmatrix = f.apply(m, val);\r\n\t\t\tif(matrix instanceof m.Matrix2D){\r\n\t\t\t\tret.push(matrix);\r\n\t\t\t}\r\n\t\t}, this);\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tvar transparent = new Color(0, 0, 0, 0);\r\n\r\n\tfunction getColorInterpol(prop, obj, name, def){\r\n\t\tif(prop.values){\r\n\t\t\treturn new InterpolValues(prop.values);\r\n\t\t}\r\n\t\tvar value, start, end;\r\n\t\tif(prop.start){\r\n\t\t\tstart = g.normalizeColor(prop.start);\r\n\t\t}else{\r\n\t\t\tstart = value = obj ? (name ? obj[name] : obj) : def;\r\n\t\t}\r\n\t\tif(prop.end){\r\n\t\t\tend = g.normalizeColor(prop.end);\r\n\t\t}else{\r\n\t\t\tif(!value){\r\n\t\t\t\tvalue = obj ? (name ? obj[name] : obj) : def;\r\n\t\t\t}\r\n\t\t\tend = value;\r\n\t\t}\r\n\t\treturn new InterpolColor(start, end);\r\n\t}\r\n\r\n\tfunction getNumberInterpol(prop, obj, name, def){\r\n\t\tif(prop.values){\r\n\t\t\treturn new InterpolValues(prop.values);\r\n\t\t}\r\n\t\tvar value, start, end;\r\n\t\tif(prop.start){\r\n\t\t\tstart = prop.start;\r\n\t\t}else{\r\n\t\t\tstart = value = obj ? obj[name] : def;\r\n\t\t}\r\n\t\tif(prop.end){\r\n\t\t\tend = prop.end;\r\n\t\t}else{\r\n\t\t\tif(typeof value != \"number\"){\r\n\t\t\t\tvalue = obj ? obj[name] : def;\r\n\t\t\t}\r\n\t\t\tend = value;\r\n\t\t}\r\n\t\treturn new InterpolNumber(start, end);\r\n\t}\r\n\r\n\tfxg.animateStroke = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation which will change stroke properties over time.\r\n\t\t// args:\r\n\t\t//\t\tan object defining the animation setting.\r\n\t\t// example:\r\n\t\t//\t|\tfxg.animateStroke{{\r\n\t\t//\t|\t\tshape: shape,\r\n\t\t//\t|\t\tduration: 500,\r\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"},\r\n\t\t//\t|\t\twidth: {end: 15},\r\n\t\t//\t|\t\tjoin:  {values: [\"miter\", \"bevel\", \"round\"]}\r\n\t\t//\t|\t}).play();\r\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\r\n\t\tvar anim = new fx.Animation(args), shape = args.shape, stroke;\r\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\r\n\t\t\tstroke = shape.getStroke();\r\n\t\t\tvar prop = args.color, values = {}, value, start, end;\r\n\t\t\tif(prop){\r\n\t\t\t\tvalues.color = getColorInterpol(prop, stroke, \"color\", transparent);\r\n\t\t\t}\r\n\t\t\tprop = args.style;\r\n\t\t\tif(prop && prop.values){\r\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\r\n\t\t\t}\r\n\t\t\tprop = args.width;\r\n\t\t\tif(prop){\r\n\t\t\t\tvalues.width = getNumberInterpol(prop, stroke, \"width\", 1);\r\n\t\t\t}\r\n\t\t\tprop = args.cap;\r\n\t\t\tif(prop && prop.values){\r\n\t\t\t\tvalues.cap = new InterpolValues(prop.values);\r\n\t\t\t}\r\n\t\t\tprop = args.join;\r\n\t\t\tif(prop){\r\n\t\t\t\tif(prop.values){\r\n\t\t\t\t\tvalues.join = new InterpolValues(prop.values);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tstart = prop.start ? prop.start : (stroke && stroke.join || 0);\r\n\t\t\t\t\tend = prop.end ? prop.end : (stroke && stroke.join || 0);\r\n\t\t\t\t\tif(typeof start == \"number\" && typeof end == \"number\"){\r\n\t\t\t\t\t\tvalues.join = new InterpolNumber(start, end);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.curve = new InterpolObject(values, stroke);\r\n\t\t});\r\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setStroke\");\r\n\t\treturn anim; // dojo.Animation\r\n\t};\r\n\r\n\tfxg.animateFill = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation which will change fill color over time.\r\n\t\t//\t\tOnly solid fill color is supported at the moment\r\n\t\t// args:\r\n\t\t//\t\tan object defining the animation setting.\r\n\t\t// example:\r\n\t\t//\t|\tgfx.animateFill{{\r\n\t\t//\t|\t\tshape: shape,\r\n\t\t//\t|\t\tduration: 500,\r\n\t\t//\t|\t\tcolor: {start: \"red\", end: \"green\"}\r\n\t\t//\t|\t}).play();\r\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\r\n\t\tvar anim = new fx.Animation(args), shape = args.shape, fill;\r\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\r\n\t\t\tfill = shape.getFill();\r\n\t\t\tvar prop = args.color, values = {};\r\n\t\t\tif(prop){\r\n\t\t\t\tthis.curve = getColorInterpol(prop, fill, \"\", transparent);\r\n\t\t\t}\r\n\t\t});\r\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFill\");\r\n\t\treturn anim; // dojo.Animation\r\n\t};\r\n\r\n\tfxg.animateFont = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation which will change font properties over time.\r\n\t\t// args:\r\n\t\t//\t\tan object defining the animation setting.\r\n\t\t// example:\r\n\t\t//\t|\tgfx.animateFont{{\r\n\t\t//\t|\t\tshape: shape,\r\n\t\t//\t|\t\tduration: 500,\r\n\t\t//\t|\t\tvariant: {values: [\"normal\", \"small-caps\"]},\r\n\t\t//\t|\t\tsize:  {end: 10, units: \"pt\"}\r\n\t\t//\t|\t}).play();\r\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\r\n\t\tvar anim = new fx.Animation(args), shape = args.shape, font;\r\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\r\n\t\t\tfont = shape.getFont();\r\n\t\t\tvar prop = args.style, values = {}, value, start, end;\r\n\t\t\tif(prop && prop.values){\r\n\t\t\t\tvalues.style = new InterpolValues(prop.values);\r\n\t\t\t}\r\n\t\t\tprop = args.variant;\r\n\t\t\tif(prop && prop.values){\r\n\t\t\t\tvalues.variant = new InterpolValues(prop.values);\r\n\t\t\t}\r\n\t\t\tprop = args.weight;\r\n\t\t\tif(prop && prop.values){\r\n\t\t\t\tvalues.weight = new InterpolValues(prop.values);\r\n\t\t\t}\r\n\t\t\tprop = args.family;\r\n\t\t\tif(prop && prop.values){\r\n\t\t\t\tvalues.family = new InterpolValues(prop.values);\r\n\t\t\t}\r\n\t\t\tprop = args.size;\r\n\t\t\tif(prop && prop.units){\r\n\t\t\t\tstart = parseFloat(prop.start ? prop.start : (shape.font && shape.font.size || \"0\"));\r\n\t\t\t\tend = parseFloat(prop.end ? prop.end : (shape.font && shape.font.size || \"0\"));\r\n\t\t\t\tvalues.size = new InterpolUnit(start, end, prop.units);\r\n\t\t\t}\r\n\t\t\tthis.curve = new InterpolObject(values, font);\r\n\t\t});\r\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setFont\");\r\n\t\treturn anim; // dojo.Animation\r\n\t};\r\n\r\n\tfxg.animateTransform = function(/*Object*/ args){\r\n\t\t// summary:\r\n\t\t//\t\tReturns an animation which will change transformation over time.\r\n\t\t// args:\r\n\t\t//\t\tan object defining the animation setting.\r\n\t\t// example:\r\n\t\t//\t|\tgfx.animateTransform{{\r\n\t\t//\t|\t\tshape: shape,\r\n\t\t//\t|\t\tduration: 500,\r\n\t\t//\t|\t\ttransform: [\r\n\t\t//\t|\t\t\t{name: \"translate\", start: [0, 0], end: [200, 200]},\r\n\t\t//\t|\t\t\t{name: \"original\"}\r\n\t\t//\t|\t\t]\r\n\t\t//\t|\t}).play();\r\n\t\tif(!args.easing){ args.easing = fx._defaultEasing; }\r\n\t\tvar anim = new fx.Animation(args), shape = args.shape, original;\r\n\t\tHub.connect(anim, \"beforeBegin\", anim, function(){\r\n\t\t\toriginal = shape.getTransform();\r\n\t\t\tthis.curve = new InterpolTransform(args.transform, original);\r\n\t\t});\r\n\t\tHub.connect(anim, \"onAnimate\", shape, \"setTransform\");\r\n\t\tif(g.renderer === \"svg\" && (has(\"ie\") >= 9 || has(\"ff\"))){\r\n\t\t\t// fix http://bugs.dojotoolkit.org/ticket/16879\r\n\t\t\tvar handlers = [\r\n\t\t\t\t\tHub.connect(anim, \"onBegin\", anim, function(){\r\n\t\t\t\t\t\tvar parent = shape.getParent();\r\n\t\t\t\t\t\twhile(parent && parent.getParent){\r\n\t\t\t\t\t\t\tparent = parent.getParent();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(parent){\r\n\t\t\t\t\t\t\tshape.__svgContainer = parent.rawNode.parentNode;\r\n\t\t\t\t\t\t\tshape.__svgRoot = parent.rawNode;\r\n\t\t\t\t\t\t\tif(shape.__svgRoot && shape.__svgRoot.getAttribute){\r\n\t\t\t\t\t\t\t\tshape.__svgWidth = parseInt(shape.__svgRoot.getAttribute(\"width\"), 10);\r\n\t\t\t\t\t\t\t\tif(isNaN(shape.__svgWidth)){\r\n\t\t\t\t\t\t\t\t\tdelete shape.__svgWidth;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tHub.connect(anim, \"onAnimate\", anim, function(){\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tif(shape.__svgContainer){\r\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\r\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = \"visible\";\r\n\t\t\t\t\t\t\t\tvar pokeNode = shape.__svgContainer.offsetHeight;\r\n\t\t\t\t\t\t\t\tshape.__svgContainer.style.visibility = ov;\r\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\r\n\t\t\t\t\t\t\t\tif(!isNaN(width)){\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width  - 0.000005);\r\n\t\t\t\t\t\t\t\t\t\tshape.__svgRoot.setAttribute(\"width\", width);\r\n\t\t\t\t\t\t\t\t\t}catch(ignore){}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}catch(e){}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tHub.connect(anim, \"onEnd\", anim, function(){\r\n\t\t\t\t\t\tarr.forEach(handlers, Hub.disconnect);\r\n\t\t\t\t\t\tif(shape.__svgContainer){\r\n\t\t\t\t\t\t\tvar sn = shape.__svgContainer;\r\n\t\t\t\t\t\t\tif(sn.getAttribute(\"__gotVis\") == null){\r\n\t\t\t\t\t\t\t\tsn.setAttribute(\"__gotVis\", true);\r\n\t\t\t\t\t\t\t\tvar ov = shape.__svgContainer.style.visibility;\r\n\t\t\t\t\t\t\t\tvar root = shape.__svgRoot;\r\n\t\t\t\t\t\t\t\tvar width = shape.__svgWidth;\r\n\t\t\t\t\t\t\t\tsn.style.visibility = \"visible\";\r\n\t\t\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\tsn.style.visibility = ov;\r\n\t\t\t\t\t\t\t\t\t\tsn.removeAttribute(\"__gotVis\");\r\n\t\t\t\t\t\t\t\t\t\tsn = null;\r\n\t\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\t\tif(!isNaN(width)){\r\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width - 0.000005);\r\n\t\t\t\t\t\t\t\t\t\t\t\troot.setAttribute(\"width\", width);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}catch(ignore){}\r\n\t\t\t\t\t\t\t\t\t}catch(e){}\r\n\t\t\t\t\t\t\t\t},100);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete shape.__svgContainer;\r\n\t\t\t\t\t\tdelete shape.__svgRoot;\r\n\t\t\t\t\t\tdelete shape.__svgWidth;\r\n\t\t\t\t\t})\r\n\t\t\t\t];\r\n\t\t}\r\n\t\treturn anim; // dojo.Animation\r\n\t};\r\n\t\r\n\treturn fxg;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/fx.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/gradutils.js":
/*!*********************************************!*\
  !*** ./node_modules/dojox/gfx/gradutils.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Various generic utilities to deal with a linear gradient\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./matrix */ \"./node_modules/dojox/gfx/matrix.js\"), __webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(g, lang, m, Color){\r\n  \r\n\tvar gradutils = g.gradutils = {};\r\n\r\n\tfunction findColor(o, c){\r\n\t\tif(o <= 0){\r\n\t\t\treturn c[0].color;\r\n\t\t}\r\n\t\tvar len = c.length;\r\n\t\tif(o >= 1){\r\n\t\t\treturn c[len - 1].color;\r\n\t\t}\r\n\t\t//TODO: use binary search\r\n\t\tfor(var i = 0; i < len; ++i){\r\n\t\t\tvar stop = c[i];\r\n\t\t\tif(stop.offset >= o){\r\n\t\t\t\tif(i){\r\n\t\t\t\t\tvar prev = c[i - 1];\r\n\t\t\t\t\treturn Color.blendColors(new Color(prev.color), new Color(stop.color),\r\n\t\t\t\t\t\t(o - prev.offset) / (stop.offset - prev.offset));\r\n\t\t\t\t}\r\n\t\t\t\treturn stop.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c[len - 1].color;\r\n\t}\r\n\r\n\tgradutils.getColor = function(fill, pt){\r\n\t\t// summary:\r\n\t\t//\t\tsample a color from a gradient using a point\r\n\t\t// fill: Object\r\n\t\t//\t\tfill object\r\n\t\t// pt: dojox/gfx.Point\r\n\t\t//\t\tpoint where to sample a color\r\n\t\tvar o;\r\n\t\tif(fill){\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\t\tvar angle = Math.atan2(fill.y2 - fill.y1, fill.x2 - fill.x1),\r\n\t\t\t\t\t\trotation = m.rotate(-angle),\r\n\t\t\t\t\t\tprojection = m.project(fill.x2 - fill.x1, fill.y2 - fill.y1),\r\n\t\t\t\t\t\tp = m.multiplyPoint(projection, pt),\r\n\t\t\t\t\t\tpf1 = m.multiplyPoint(projection, fill.x1, fill.y1),\r\n\t\t\t\t\t\tpf2 = m.multiplyPoint(projection, fill.x2, fill.y2),\r\n\t\t\t\t\t\tscale = m.multiplyPoint(rotation, pf2.x - pf1.x, pf2.y - pf1.y).x;\r\n\t\t\t\t\to = m.multiplyPoint(rotation, p.x - pf1.x, p.y - pf1.y).x / scale;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tvar dx = pt.x - fill.cx, dy = pt.y - fill.cy;\r\n\t\t\t\t\to = Math.sqrt(dx * dx + dy * dy) / fill.r;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn findColor(o, fill.colors);\t// dojo/_base/Color\r\n\t\t}\r\n\t\t// simple color\r\n\t\treturn new Color(fill || [0, 0, 0, 0]);\t// dojo/_base/Color\r\n\t};\r\n\r\n\tgradutils.reverse = function(fill){\r\n\t\t// summary:\r\n\t\t//\t\treverses a gradient\r\n\t\t// fill: Object\r\n\t\t//\t\tfill object\r\n\t\tif(fill){\r\n\t\t\tswitch(fill.type){\r\n\t\t\t\tcase \"linear\":\r\n\t\t\t\tcase \"radial\":\r\n\t\t\t\t\tfill = lang.delegate(fill);\r\n\t\t\t\t\tif(fill.colors){\r\n\t\t\t\t\t\tvar c = fill.colors, l = c.length, i = 0, stop,\r\n\t\t\t\t\t\t\tn = fill.colors = new Array(c.length);\r\n\t\t\t\t\t\tfor(; i < l; ++i){\r\n\t\t\t\t\t\t\tstop = c[i];\r\n\t\t\t\t\t\t\tn[i] = {\r\n\t\t\t\t\t\t\t\toffset: 1 - stop.offset,\r\n\t\t\t\t\t\t\t\tcolor:  stop.color\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tn.sort(function(a, b){ return a.offset - b.offset; });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fill;\t// Object\r\n\t};\r\n\r\n\treturn gradutils;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvZ2Z4L2dyYWR1dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9nZngvZ3JhZHV0aWxzLmpzP2FjZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVmFyaW91cyBnZW5lcmljIHV0aWxpdGllcyB0byBkZWFsIHdpdGggYSBsaW5lYXIgZ3JhZGllbnRcclxuXHJcbmRlZmluZShbXCIuL19iYXNlXCIsIFwiZG9qby9fYmFzZS9sYW5nXCIsIFwiLi9tYXRyaXhcIiwgXCJkb2pvL19iYXNlL0NvbG9yXCJdLCBcclxuICBmdW5jdGlvbihnLCBsYW5nLCBtLCBDb2xvcil7XHJcbiAgXHJcblx0dmFyIGdyYWR1dGlscyA9IGcuZ3JhZHV0aWxzID0ge307XHJcblxyXG5cdGZ1bmN0aW9uIGZpbmRDb2xvcihvLCBjKXtcclxuXHRcdGlmKG8gPD0gMCl7XHJcblx0XHRcdHJldHVybiBjWzBdLmNvbG9yO1xyXG5cdFx0fVxyXG5cdFx0dmFyIGxlbiA9IGMubGVuZ3RoO1xyXG5cdFx0aWYobyA+PSAxKXtcclxuXHRcdFx0cmV0dXJuIGNbbGVuIC0gMV0uY29sb3I7XHJcblx0XHR9XHJcblx0XHQvL1RPRE86IHVzZSBiaW5hcnkgc2VhcmNoXHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpe1xyXG5cdFx0XHR2YXIgc3RvcCA9IGNbaV07XHJcblx0XHRcdGlmKHN0b3Aub2Zmc2V0ID49IG8pe1xyXG5cdFx0XHRcdGlmKGkpe1xyXG5cdFx0XHRcdFx0dmFyIHByZXYgPSBjW2kgLSAxXTtcclxuXHRcdFx0XHRcdHJldHVybiBDb2xvci5ibGVuZENvbG9ycyhuZXcgQ29sb3IocHJldi5jb2xvciksIG5ldyBDb2xvcihzdG9wLmNvbG9yKSxcclxuXHRcdFx0XHRcdFx0KG8gLSBwcmV2Lm9mZnNldCkgLyAoc3RvcC5vZmZzZXQgLSBwcmV2Lm9mZnNldCkpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRyZXR1cm4gc3RvcC5jb2xvcjtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIGNbbGVuIC0gMV0uY29sb3I7XHJcblx0fVxyXG5cclxuXHRncmFkdXRpbHMuZ2V0Q29sb3IgPSBmdW5jdGlvbihmaWxsLCBwdCl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0c2FtcGxlIGEgY29sb3IgZnJvbSBhIGdyYWRpZW50IHVzaW5nIGEgcG9pbnRcclxuXHRcdC8vIGZpbGw6IE9iamVjdFxyXG5cdFx0Ly9cdFx0ZmlsbCBvYmplY3RcclxuXHRcdC8vIHB0OiBkb2pveC9nZnguUG9pbnRcclxuXHRcdC8vXHRcdHBvaW50IHdoZXJlIHRvIHNhbXBsZSBhIGNvbG9yXHJcblx0XHR2YXIgbztcclxuXHRcdGlmKGZpbGwpe1xyXG5cdFx0XHRzd2l0Y2goZmlsbC50eXBlKXtcclxuXHRcdFx0XHRjYXNlIFwibGluZWFyXCI6XHJcblx0XHRcdFx0XHR2YXIgYW5nbGUgPSBNYXRoLmF0YW4yKGZpbGwueTIgLSBmaWxsLnkxLCBmaWxsLngyIC0gZmlsbC54MSksXHJcblx0XHRcdFx0XHRcdHJvdGF0aW9uID0gbS5yb3RhdGUoLWFuZ2xlKSxcclxuXHRcdFx0XHRcdFx0cHJvamVjdGlvbiA9IG0ucHJvamVjdChmaWxsLngyIC0gZmlsbC54MSwgZmlsbC55MiAtIGZpbGwueTEpLFxyXG5cdFx0XHRcdFx0XHRwID0gbS5tdWx0aXBseVBvaW50KHByb2plY3Rpb24sIHB0KSxcclxuXHRcdFx0XHRcdFx0cGYxID0gbS5tdWx0aXBseVBvaW50KHByb2plY3Rpb24sIGZpbGwueDEsIGZpbGwueTEpLFxyXG5cdFx0XHRcdFx0XHRwZjIgPSBtLm11bHRpcGx5UG9pbnQocHJvamVjdGlvbiwgZmlsbC54MiwgZmlsbC55MiksXHJcblx0XHRcdFx0XHRcdHNjYWxlID0gbS5tdWx0aXBseVBvaW50KHJvdGF0aW9uLCBwZjIueCAtIHBmMS54LCBwZjIueSAtIHBmMS55KS54O1xyXG5cdFx0XHRcdFx0byA9IG0ubXVsdGlwbHlQb2ludChyb3RhdGlvbiwgcC54IC0gcGYxLngsIHAueSAtIHBmMS55KS54IC8gc2NhbGU7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlIFwicmFkaWFsXCI6XHJcblx0XHRcdFx0XHR2YXIgZHggPSBwdC54IC0gZmlsbC5jeCwgZHkgPSBwdC55IC0gZmlsbC5jeTtcclxuXHRcdFx0XHRcdG8gPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpIC8gZmlsbC5yO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGZpbmRDb2xvcihvLCBmaWxsLmNvbG9ycyk7XHQvLyBkb2pvL19iYXNlL0NvbG9yXHJcblx0XHR9XHJcblx0XHQvLyBzaW1wbGUgY29sb3JcclxuXHRcdHJldHVybiBuZXcgQ29sb3IoZmlsbCB8fCBbMCwgMCwgMCwgMF0pO1x0Ly8gZG9qby9fYmFzZS9Db2xvclxyXG5cdH07XHJcblxyXG5cdGdyYWR1dGlscy5yZXZlcnNlID0gZnVuY3Rpb24oZmlsbCl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0cmV2ZXJzZXMgYSBncmFkaWVudFxyXG5cdFx0Ly8gZmlsbDogT2JqZWN0XHJcblx0XHQvL1x0XHRmaWxsIG9iamVjdFxyXG5cdFx0aWYoZmlsbCl7XHJcblx0XHRcdHN3aXRjaChmaWxsLnR5cGUpe1xyXG5cdFx0XHRcdGNhc2UgXCJsaW5lYXJcIjpcclxuXHRcdFx0XHRjYXNlIFwicmFkaWFsXCI6XHJcblx0XHRcdFx0XHRmaWxsID0gbGFuZy5kZWxlZ2F0ZShmaWxsKTtcclxuXHRcdFx0XHRcdGlmKGZpbGwuY29sb3JzKXtcclxuXHRcdFx0XHRcdFx0dmFyIGMgPSBmaWxsLmNvbG9ycywgbCA9IGMubGVuZ3RoLCBpID0gMCwgc3RvcCxcclxuXHRcdFx0XHRcdFx0XHRuID0gZmlsbC5jb2xvcnMgPSBuZXcgQXJyYXkoYy5sZW5ndGgpO1xyXG5cdFx0XHRcdFx0XHRmb3IoOyBpIDwgbDsgKytpKXtcclxuXHRcdFx0XHRcdFx0XHRzdG9wID0gY1tpXTtcclxuXHRcdFx0XHRcdFx0XHRuW2ldID0ge1xyXG5cdFx0XHRcdFx0XHRcdFx0b2Zmc2V0OiAxIC0gc3RvcC5vZmZzZXQsXHJcblx0XHRcdFx0XHRcdFx0XHRjb2xvcjogIHN0b3AuY29sb3JcclxuXHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdG4uc29ydChmdW5jdGlvbihhLCBiKXsgcmV0dXJuIGEub2Zmc2V0IC0gYi5vZmZzZXQ7IH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBmaWxsO1x0Ly8gT2JqZWN0XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIGdyYWR1dGlscztcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLDRYQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/gradutils.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/path.js":
/*!****************************************!*\
  !*** ./node_modules/dojox/gfx/path.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"),__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./matrix */ \"./node_modules/dojox/gfx/matrix.js\"), __webpack_require__(/*! ./shape */ \"./node_modules/dojox/gfx/shape.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(g, lang, declare, matrix, shapeLib){\r\n\r\n\t// module:\r\n\t//\t\tdojox/gfx/path\r\n\r\n\tvar Path = declare(\"dojox.gfx.path.Path\", shapeLib.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generalized path shape\r\n\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta path constructor\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM node to be used by this path object\r\n\t\t\tthis.shape = lang.clone(g.defaultPath);\r\n\t\t\tthis.segments = [];\r\n\t\t\tthis.tbbox = null;\r\n\t\t\tthis.absolute = true;\r\n\t\t\tthis.last = {};\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\tthis.segmented = false;\r\n\t\t},\r\n\r\n\t\t// mode manipulations\r\n\t\tsetAbsoluteMode: function(mode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets an absolute or relative mode for path points\r\n\t\t\t// mode: Boolean\r\n\t\t\t//\t\ttrue/false or \"absolute\"/\"relative\" to specify the mode\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tthis.absolute = typeof mode == \"string\" ? (mode == \"absolute\") : mode;\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tgetAbsoluteMode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns a current value of the absolute mode\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\treturn this.absolute; // Boolean\r\n\t\t},\r\n\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box {x, y, width, height} or null\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\treturn (this.bbox && (\"l\" in this.bbox)) ? {x: this.bbox.l, y: this.bbox.t, width: this.bbox.r - this.bbox.l, height: this.bbox.b - this.bbox.t} : null; // dojox/gfx.Rectangle\r\n\t\t},\r\n\r\n\t\t_getRealBBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of four points or null\r\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tif(this.tbbox){\r\n\t\t\t\treturn this.tbbox;\t// Array\r\n\t\t\t}\r\n\t\t\tvar bbox = this.bbox, matrix = this._getRealMatrix();\r\n\t\t\tthis.bbox = null;\r\n\t\t\tfor(var i = 0, len = this.segments.length; i < len; ++i){\r\n\t\t\t\tthis._updateWithSegment(this.segments[i], matrix);\r\n\t\t\t}\r\n\t\t\tvar t = this.bbox;\r\n\t\t\tthis.bbox = bbox;\r\n\t\t\tthis.tbbox = t ? [\r\n\t\t\t\t{x: t.l, y: t.t},\r\n\t\t\t\t{x: t.r, y: t.t},\r\n\t\t\t\t{x: t.r, y: t.b},\r\n\t\t\t\t{x: t.l, y: t.b}\r\n\t\t\t] : null;\r\n\t\t\treturn this.tbbox;\t// Array\r\n\t\t},\r\n\r\n\t\tgetLastPosition: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the last point in the path, or null\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\treturn \"x\" in this.last ? this.last : null; // Object\r\n\t\t},\r\n\r\n\t\t_applyTransform: function(){\r\n\t\t\tthis.tbbox = null;\r\n\t\t\treturn this.inherited(arguments);\r\n\t\t},\r\n\r\n\t\t// segment interpretation\r\n\t\t_updateBBox: function(x, y, m){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new point\r\n\t\t\t// x: Number\r\n\t\t\t//\t\tan x coordinate\r\n\t\t\t// y: Number\r\n\t\t\t//\t\ta y coordinate\r\n\r\n\t\t\tif(m){\r\n\t\t\t\tvar t = matrix.multiplyPoint(m, x, y);\r\n\t\t\t\tx = t.x;\r\n\t\t\t\ty = t.y;\r\n\t\t\t}\r\n\r\n\t\t\t// we use {l, b, r, t} representation of a bbox\r\n\t\t\tif(this.bbox && (\"l\" in this.bbox)){\r\n\t\t\t\tif(this.bbox.l > x) this.bbox.l = x;\r\n\t\t\t\tif(this.bbox.r < x) this.bbox.r = x;\r\n\t\t\t\tif(this.bbox.t > y) this.bbox.t = y;\r\n\t\t\t\tif(this.bbox.b < y) this.bbox.b = y;\r\n\t\t\t}else{\r\n\t\t\t\tthis.bbox = {l: x, b: y, r: x, t: y};\r\n\t\t\t}\r\n\t\t},\r\n\t\t_updateWithSegment: function(segment, matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tvar n = segment.args, l = n.length, i;\r\n\t\t\t// update internal variables: bbox, absolute, last\r\n\t\t\tswitch(segment.action){\r\n\t\t\t\tcase \"M\":\r\n\t\t\t\tcase \"L\":\r\n\t\t\t\tcase \"C\":\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\tcase \"Q\":\r\n\t\t\t\tcase \"T\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\r\n\t\t\t\t\t\tthis._updateBBox(n[i], n[i + 1], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.x = n[l - 2];\r\n\t\t\t\t\tthis.last.y = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(n[i], this.last.y, matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.x = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"V\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x, n[i], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.y = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"m\":\r\n\t\t\t\t\tvar start = 0;\r\n\t\t\t\t\tif(!(\"x\" in this.last)){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x = n[0], this.last.y = n[1], matrix);\r\n\t\t\t\t\t\tstart = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i = start; i < l; i += 2){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"l\":\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 2){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y += n[i + 1], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"h\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i], this.last.y, matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"v\":\r\n\t\t\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x, this.last.y += n[i], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"c\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 6){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i + 2], this.last.y + n[i + 3], matrix);\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 4], this.last.y += n[i + 5], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\tcase \"q\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 4){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x + n[i], this.last.y + n[i + 1], matrix);\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 2], this.last.y += n[i + 3], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"A\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\r\n\t\t\t\t\t\tthis._updateBBox(n[i + 5], n[i + 6], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.last.x = n[l - 2];\r\n\t\t\t\t\tthis.last.y = n[l - 1];\r\n\t\t\t\t\tthis.absolute = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\tfor(i = 0; i < l; i += 7){\r\n\t\t\t\t\t\tthis._updateBBox(this.last.x += n[i + 5], this.last.y += n[i + 6], matrix);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.absolute = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// add an SVG path segment\r\n\t\t\tvar path = [segment.action];\r\n\t\t\tfor(i = 0; i < l; ++i){\r\n\t\t\t\tpath.push(g.formatNumber(n[i], true));\r\n\t\t\t}\r\n\t\t\tif(typeof this.shape.path == \"string\"){\r\n\t\t\t\tthis.shape.path += path.join(\"\");\r\n\t\t\t}else{\r\n\t\t\t\tfor(i = 0, l = path.length; i < l; ++i){\r\n\t\t\t\t\tthis.shape.path.push(path[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// a dictionary, which maps segment type codes to a number of their arguments\r\n\t\t_validSegments: {m: 2, l: 2, h: 1, v: 1, c: 6, s: 4, q: 4, t: 2, a: 7, z: 0},\r\n\r\n\t\t_pushSegment: function(action, args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadds a segment\r\n\t\t\t// action: String\r\n\t\t\t//\t\tvalid SVG code for a segment's type\r\n\t\t\t// args: Array\r\n\t\t\t//\t\ta list of parameters for this segment\r\n\t\t\tthis.tbbox = null;\r\n\t\t\tvar group = this._validSegments[action.toLowerCase()], segment;\r\n\t\t\tif(typeof group == \"number\"){\r\n\t\t\t\tif(group){\r\n\t\t\t\t\tif(args.length >= group){\r\n\t\t\t\t\t\tsegment = {action: action, args: args.slice(0, args.length - args.length % group)};\r\n\t\t\t\t\t\tthis.segments.push(segment);\r\n\t\t\t\t\t\tthis._updateWithSegment(segment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsegment = {action: action, args: []};\r\n\t\t\t\t\tthis.segments.push(segment);\r\n\t\t\t\t\tthis._updateWithSegment(segment);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_collectArgs: function(array, args){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tconverts an array of arguments to plain numeric values\r\n\t\t\t// array: Array\r\n\t\t\t//\t\tan output argument (array of numbers)\r\n\t\t\t// args: Array\r\n\t\t\t//\t\tan input argument (can be values of Boolean, Number, dojox/gfx.Point, or an embedded array of them)\r\n\t\t\tfor(var i = 0; i < args.length; ++i){\r\n\t\t\t\tvar t = args[i];\r\n\t\t\t\tif(typeof t == \"boolean\"){\r\n\t\t\t\t\tarray.push(t ? 1 : 0);\r\n\t\t\t\t}else if(typeof t == \"number\"){\r\n\t\t\t\t\tarray.push(t);\r\n\t\t\t\t}else if(t instanceof Array){\r\n\t\t\t\t\tthis._collectArgs(array, t);\r\n\t\t\t\t}else if(\"x\" in t && \"y\" in t){\r\n\t\t\t\t\tarray.push(t.x, t.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// segments\r\n\t\tmoveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a move segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"M\" : \"m\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tlineTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a line segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"L\" : \"l\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\thLineTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a horizontal line segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"H\" : \"h\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tvLineTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a vertical line segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"V\" : \"v\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tcurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"C\" : \"c\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tsmoothCurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a smooth curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"S\" : \"s\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tqCurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a quadratic curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"Q\" : \"q\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tqSmoothCurveTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a quadratic smooth curve segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"T\" : \"t\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tarcTo: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms an elliptic arc segment\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tvar args = [];\r\n\t\t\tthis._collectArgs(args, arguments);\r\n\t\t\tthis._pushSegment(this.absolute ? \"A\" : \"a\", args);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\t\tclosePath: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcloses a path\r\n\t\t\tthis._confirmSegmented();\r\n\t\t\tthis._pushSegment(\"Z\", []);\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\r\n\t\t_confirmSegmented: function() {\r\n\t\t\tif (!this.segmented) {\r\n\t\t\t\tvar path = this.shape.path;\r\n\t\t\t\t// switch to non-updating version of path building\r\n\t\t\t\tthis.shape.path = [];\r\n\t\t\t\tthis._setPath(path);\r\n\t\t\t\t// switch back to the string path\r\n\t\t\t\tthis.shape.path = this.shape.path.join(\"\");\r\n\t\t\t\t// become segmented\r\n\t\t\t\tthis.segmented = true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// setShape\r\n\t\t_setPath: function(path){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using an SVG path string\r\n\t\t\t// path: String\r\n\t\t\t//\t\tan SVG path string\r\n\t\t\tvar p = lang.isArray(path) ? path : path.match(g.pathSvgRegExp);\r\n\t\t\tthis.segments = [];\r\n\t\t\tthis.absolute = true;\r\n\t\t\tthis.bbox = {};\r\n\t\t\tthis.last = {};\r\n\t\t\tif(!p) return;\r\n\t\t\t// create segments\r\n\t\t\tvar action = \"\",\t// current action\r\n\t\t\t\targs = [],\t\t// current arguments\r\n\t\t\t\tl = p.length;\r\n\t\t\tfor(var i = 0; i < l; ++i){\r\n\t\t\t\tvar t = p[i], x = parseFloat(t);\r\n\t\t\t\tif(isNaN(x)){\r\n\t\t\t\t\tif(action){\r\n\t\t\t\t\t\tthis._pushSegment(action, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t\targs = [];\r\n\t\t\t\t\taction = t;\r\n\t\t\t\t}else{\r\n\t\t\t\t\targs.push(x);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._pushSegment(action, args);\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments, [typeof newShape == \"string\" ? {path: newShape} : newShape]);\r\n\r\n\t\t\tthis.segmented = false;\r\n\t\t\tthis.segments = [];\r\n\t\t\tif(!g.lazyPathSegmentation){\r\n\t\t\t\tthis._confirmSegmented();\r\n\t\t\t}\r\n\t\t\treturn this; // self\r\n\t\t},\r\n\r\n\t\t// useful constant for descendants\r\n\t\t_2PI: Math.PI * 2\r\n\t});\r\n\r\n\tvar TextPath = declare(\"dojox.gfx.path.TextPath\", Path, {\r\n\t\t// summary:\r\n\t\t//\t\ta generalized TextPath shape\r\n\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta TextPath shape constructor\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM node to be used by this TextPath object\r\n\t\t\tif(!(\"text\" in this)){\r\n\t\t\t\tthis.text = lang.clone(g.defaultTextPath);\r\n\t\t\t}\r\n\t\t\tif(!(\"fontStyle\" in this)){\r\n\t\t\t\tthis.fontStyle = lang.clone(g.defaultFont);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetText: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the current text object or null\r\n\t\t\treturn this.text;\t// Object\r\n\t\t},\r\n\t\tsetText: function(newText){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a text to be drawn along the path\r\n\t\t\tthis.text = g.makeParameters(this.text,\r\n\t\t\t\ttypeof newText == \"string\" ? {text: newText} : newText);\r\n\t\t\tthis._setText();\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the current font object or null\r\n\t\t\treturn this.fontStyle;\t// Object\r\n\t\t},\r\n\t\tsetFont: function(newFont){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a font for text\r\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ?\r\n\t\t\t\tg.splitFontString(newFont) :\r\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\r\n\t\t\tthis._setFont();\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\r\n\t/*=====\r\n\tg.Path = Path;\r\n\tg.TextPath = TextPath;\r\n\t=====*/\r\n\r\n\treturn g.path = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module contains the core graphics Path API.\r\n\t\t//\t\tPath command format follows the W3C SVG 1.0 Path api.\r\n\r\n\t\tPath: Path,\r\n\t\tTextPath: TextPath\r\n\t};\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/path.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/shape.js":
/*!*****************************************!*\
  !*** ./node_modules/dojox/gfx/shape.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! dojo/_base/sniff */ \"./node_modules/dojo/_base/sniff.js\"),\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"), __webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"), __webpack_require__(/*! ./matrix */ \"./node_modules/dojox/gfx/matrix.js\") ], __WEBPACK_AMD_DEFINE_RESULT__ = (function(g, lang, declare, kernel, has, on, arr, domConstruct, Color, matrixLib){\r\n\t\r\n\tvar isChrome = !!has(\"chrome\");\r\n    \r\n\tfunction removeElementAt(arr, index) {\r\n\t\tif (!isChrome) {\r\n\t\t\treturn arr.splice(index, 1);\r\n\t\t}\r\n\t\t\r\n\t\t// Ref:\r\n\t\t// https://gamealchemist.wordpress.com/2013/05/01/lets-get-those-javascript-arrays-to-work-fast/\r\n\t\tvar len = arr.length;\r\n\t\t\r\n\t\tif (!len) { \r\n\t\t\treturn; \r\n\t\t}\r\n\t\t\r\n\t\twhile (index < len) {\r\n\t\t\tarr[index] = arr[index + 1];\r\n\t\t\tindex++\r\n\t\t}\r\n\t\t\r\n\t\tarr.length--;\r\n\t}\r\n\r\n\tvar shape = g.shape = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module contains the core graphics Shape API.\r\n\t\t//\t\tDifferent graphics renderer implementation modules (svg, canvas, vml, silverlight, etc.) extend this\r\n\t\t//\t\tbasic api to provide renderer-specific implementations for each shape.\r\n\t};\r\n\r\n\tshape.Shape = declare(\"dojox.gfx.shape.Shape\", null, {\r\n\t\t// summary:\r\n\t\t//\t\ta Shape object, which knows how to apply\r\n\t\t//\t\tgraphical attributes and transformations\r\n\t\r\n\t\tconstructor: function(){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\tunderlying graphics-renderer-specific implementation object (if applicable)\r\n\t\t\tthis.rawNode = null;\r\n\r\n\t\t\t// shape: Object\r\n\t\t\t//\t\tan abstract shape object\r\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\r\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\r\n\t\t\t//\t\tdojox/gfx.defaultRect,\r\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\r\n\t\t\t//\t\tdojox/gfx.defaultCircle,\r\n\t\t\t//\t\tdojox/gfx.defaultLine,\r\n\t\t\t//\t\tor dojox/gfx.defaultImage)\r\n\t\t\tthis.shape = null;\r\n\t\r\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta transformation matrix\r\n\t\t\tthis.matrix = null;\r\n\t\r\n\t\t\t// fillStyle: dojox/gfx.Fill\r\n\t\t\t//\t\ta fill object\r\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultPattern,\r\n\t\t\t//\t\tor dojo/Color)\r\n\t\t\tthis.fillStyle = null;\r\n\t\r\n\t\t\t// strokeStyle: dojox/gfx.Stroke\r\n\t\t\t//\t\ta stroke object\r\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\r\n\t\t\tthis.strokeStyle = null;\r\n\t\r\n\t\t\t// bbox: dojox/gfx.Rectangle\r\n\t\t\t//\t\ta bounding box of this shape\r\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\r\n\t\t\tthis.bbox = null;\r\n\t\r\n\t\t\t// virtual group structure\r\n\t\r\n\t\t\t// parent: Object\r\n\t\t\t//\t\ta parent or null\r\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\r\n\t\t\t//\t\tor dojox/gfx.Group)\r\n\t\t\tthis.parent = null;\r\n\t\r\n\t\t\t// parentMatrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta transformation matrix inherited from the parent\r\n\t\t\tthis.parentMatrix = null;\r\n\r\n\t\t\tif(has(\"gfxRegistry\")){\r\n\t\t\t\tvar uid = shape.register(this);\r\n\t\t\t\tthis.getUID = function(){\r\n\t\t\t\t\treturn uid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\r\n\t\t\t//\t\tthe instance is considered destroyed and should not be used anymore.\r\n\t\t\tif(has(\"gfxRegistry\")){\r\n\t\t\t\tshape.dispose(this);\r\n\t\t\t}\r\n\t\t\tif(this.rawNode && \"__gfxObject__\" in this.rawNode){\r\n\t\t\t\tthis.rawNode.__gfxObject__ = null;\r\n\t\t\t}\r\n\t\t\tthis.rawNode = null;\r\n\t\t},\r\n\t\r\n\t\t// trivial getters\r\n\t\r\n\t\tgetNode: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDifferent graphics rendering subsystems implement shapes in different ways.  This\r\n\t\t\t//\t\tmethod provides access to the underlying graphics subsystem object.  Clients calling this\r\n\t\t\t//\t\tmethod and using the return value must be careful not to try sharing or using the underlying node\r\n\t\t\t//\t\tin a general way across renderer implementation.\r\n\t\t\t//\t\tReturns the underlying graphics Node, or null if no underlying graphics node is used by this shape.\r\n\t\t\treturn this.rawNode; // Node\r\n\t\t},\r\n\t\tgetShape: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the current Shape object or null\r\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\r\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\r\n\t\t\t//\t\tdojox/gfx.defaultRect,\r\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\r\n\t\t\t//\t\tdojox/gfx.defaultCircle,\r\n\t\t\t//\t\tdojox/gfx.defaultLine,\r\n\t\t\t//\t\tor dojox/gfx.defaultImage)\r\n\t\t\treturn this.shape; // Object\r\n\t\t},\r\n\t\tgetTransform: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current transformation matrix applied to this Shape or null\r\n\t\t\treturn this.matrix;\t// dojox/gfx/matrix.Matrix2D\r\n\t\t},\r\n\t\tgetFill: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current fill object or null\r\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultPattern,\r\n\t\t\t//\t\tor dojo/Color)\r\n\t\t\treturn this.fillStyle;\t// Object\r\n\t\t},\r\n\t\tgetStroke: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the current stroke object or null\r\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\r\n\t\t\treturn this.strokeStyle;\t// Object\r\n\t\t},\r\n\t\tgetParent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the parent Shape, Group or null if this Shape is unparented.\r\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\r\n\t\t\t//\t\tor dojox/gfx.Group)\r\n\t\t\treturn this.parent;\t// Object\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape or null if a BoundingBox cannot be\r\n\t\t\t//\t\tcalculated for the shape on the current renderer or for shapes with no geometric area (points).\r\n\t\t\t//\t\tA bounding box is a rectangular geometric region\r\n\t\t\t//\t\tdefining the X and Y extent of the shape.\r\n\t\t\t//\t\t(see dojox/gfx.defaultRect)\r\n\t\t\t//\t\tNote that this method returns a direct reference to the attribute of this instance. Therefore you should\r\n\t\t\t//\t\tnot modify its value directly but clone it instead.\r\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\r\n\t\t},\r\n\t\tgetTransformedBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of four points or null\r\n\t\t\t//\t\tfour points represent four corners of the untransformed bounding box\r\n\t\t\tvar b = this.getBoundingBox();\r\n\t\t\tif(!b){\r\n\t\t\t\treturn null;\t// null\r\n\t\t\t}\r\n\t\t\tvar m = this._getRealMatrix(),\r\n\t\t\t\tgm = matrixLib;\r\n\t\t\treturn [\t// Array\r\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y),\r\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y),\r\n\t\t\t\t\tgm.multiplyPoint(m, b.x + b.width, b.y + b.height),\r\n\t\t\t\t\tgm.multiplyPoint(m, b.x, b.y + b.height)\r\n\t\t\t\t];\r\n\t\t},\r\n\t\tgetEventSource: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns a Node, which is used as\r\n\t\t\t//\t\ta source of events for this shape\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\treturn this.rawNode;\t// Node\r\n\t\t},\r\n\t\r\n\t\t// empty settings\r\n\t\t\r\n\t\tsetClip: function(clip){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the clipping area of this shape.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThe clipping area defines the shape area that will be effectively visible. Everything that\r\n\t\t\t//\t\twould be drawn outside of the clipping area will not be rendered.\r\n\t\t\t//\t\tThe possible clipping area types are rectangle, ellipse, polyline and path, but all are not\r\n\t\t\t//\t\tsupported by all the renderers. vml only supports rectangle clipping, while the gfx silverlight renderer does not\r\n\t\t\t//\t\tsupport path clipping.\r\n\t\t\t//\t\tThe clip parameter defines the clipping area geometry, and should be an object with the following properties:\r\n\t\t\t//\r\n\t\t\t//\t\t- {x:Number, y:Number, width:Number, height:Number} for rectangular clip\r\n\t\t\t//\t\t- {cx:Number, cy:Number, rx:Number, ry:Number} for ellipse clip\r\n\t\t\t//\t\t- {points:Array} for polyline clip\r\n\t\t\t//\t\t- {d:String} for a path clip.\r\n\t\t\t//\r\n\t\t\t//\t\tThe clip geometry coordinates are expressed in the coordinate system used to draw the shape. In other\r\n\t\t\t//\t\twords, the clipping area is defined in the shape parent coordinate system and the shape transform is automatically applied.\r\n\t\t\t// example:\r\n\t\t\t//\t\tThe following example shows how to clip a gfx image with all the possible clip geometry: a rectangle,\r\n\t\t\t//\t\tan ellipse, a circle (using the ellipse geometry), a polyline and a path:\r\n\t\t\t//\r\n\t\t\t//\t|\tsurface.createImage({src:img, width:200,height:200}).setClip({x:10,y:10,width:50,height:50});\r\n\t\t\t//\t|\tsurface.createImage({src:img, x:100,y:50,width:200,height:200}).setClip({cx:200,cy:100,rx:20,ry:30});\r\n\t\t\t//\t|\tsurface.createImage({src:img, x:0,y:350,width:200,height:200}).setClip({cx:100,cy:425,rx:60,ry:60});\r\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:0,width:200,height:200}).setClip({points:[350,0,450,50,380,130,300,110]});\r\n\t\t\t//\t|\tsurface.createImage({src:img, x:300,y:350,width:200,height:200}).setClip({d:\"M 350,350 C314,414 317,557 373,450.0000 z\"});\r\n\r\n\t\t\t// clip: Object\r\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\tthis.clip = clip;\r\n\t\t},\r\n\t\t\r\n\t\tgetClip: function(){\r\n\t\t\treturn this.clip;\r\n\t\t},\r\n\t\r\n\t\tsetShape: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a shape object\r\n\t\t\t//\t\t(the default implementation simply ignores it)\r\n\t\t\t// shape: Object\r\n\t\t\t//\t\ta shape object\r\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\r\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\r\n\t\t\t//\t\tdojox/gfx.defaultRect,\r\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\r\n\t\t\t//\t\tdojox/gfx.defaultCircle,\r\n\t\t\t//\t\tdojox/gfx.defaultLine,\r\n\t\t\t//\t\tor dojox/gfx.defaultImage)\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\tthis.shape = g.makeParameters(this.shape, shape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tsetFill: function(fill){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a fill object\r\n\t\t\t//\t\t(the default implementation simply ignores it)\r\n\t\t\t// fill: Object\r\n\t\t\t//\t\ta fill object\r\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultPattern,\r\n\t\t\t//\t\tor dojo/_base/Color)\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\tif(!fill){\r\n\t\t\t\t// don't fill\r\n\t\t\t\tthis.fillStyle = null;\r\n\t\t\t\treturn this;\t// self\r\n\t\t\t}\r\n\t\t\tvar f = null;\r\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\r\n\t\t\t\t// gradient or pattern\r\n\t\t\t\tswitch(fill.type){\r\n\t\t\t\t\tcase \"linear\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"radial\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultPattern, fill);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// color object\r\n\t\t\t\tf = g.normalizeColor(fill);\r\n\t\t\t}\r\n\t\t\tthis.fillStyle = f;\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tsetStroke: function(stroke){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a stroke object\r\n\t\t\t//\t\t(the default implementation simply ignores it)\r\n\t\t\t// stroke: Object\r\n\t\t\t//\t\ta stroke object\r\n\t\t\t//\t\t(see dojox/gfx.defaultStroke)\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\tif(!stroke){\r\n\t\t\t\t// don't stroke\r\n\t\t\t\tthis.strokeStyle = null;\r\n\t\t\t\treturn this;\t// self\r\n\t\t\t}\r\n\t\t\t// normalize the stroke\r\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof Color){\r\n\t\t\t\tstroke = {color: stroke};\r\n\t\t\t}\r\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\r\n\t\t\ts.color = g.normalizeColor(s.color);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tsetTransform: function(matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a transformation matrix\r\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta matrix or a matrix-like object\r\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\tthis.matrix = matrixLib.clone(matrix ? matrixLib.normalize(matrix) : matrixLib.identity);\r\n\t\t\treturn this._applyTransform();\t// self\r\n\t\t},\r\n\t\r\n\t\t_applyTransform: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tphysically sets a matrix\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\r\n\t\t// z-index\r\n\t\r\n\t\tmoveToFront: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes\r\n\t\t\tvar p = this.getParent();\r\n\t\t\tif(p){\r\n\t\t\t\tp._moveChildToFront(this);\r\n\t\t\t\tthis._moveToFront();\t// execute renderer-specific action\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tmoveToBack: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes\r\n\t\t\tvar p = this.getParent();\r\n\t\t\tif(p){\r\n\t\t\t\tp._moveChildToBack(this);\r\n\t\t\t\tthis._moveToBack();\t// execute renderer-specific action\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_moveToFront: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t},\r\n\t\t_moveToBack: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trenderer-specific hook, see dojox/gfx/shape.Shape.moveToFront()\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t},\r\n\t\r\n\t\t// apply left & right transformation\r\n\t\r\n\t\tapplyRightTransform: function(matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmultiplies the existing matrix with an argument on right side\r\n\t\t\t//\t\t(this.matrix * matrix)\r\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta matrix or a matrix-like object\r\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\r\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\r\n\t\t},\r\n\t\tapplyLeftTransform: function(matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmultiplies the existing matrix with an argument on left side\r\n\t\t\t//\t\t(matrix * this.matrix)\r\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta matrix or a matrix-like object\r\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\r\n\t\t\treturn matrix ? this.setTransform([matrix, this.matrix]) : this;\t// self\r\n\t\t},\r\n\t\tapplyTransform: function(matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ta shortcut for dojox/gfx/shape.Shape.applyRightTransform\r\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta matrix or a matrix-like object\r\n\t\t\t//\t\t(see an argument of dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\tconstructor for a list of acceptable arguments)\r\n\t\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;\t// self\r\n\t\t},\r\n\t\r\n\t\t// virtual group methods\r\n\t\r\n\t\tremoveShape: function(silently){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremoves the shape from its parent's list of shapes\r\n\t\t\t// silently: Boolean\r\n\t\t\t//\t\tif true, do not redraw a picture yet\r\n\t\t\tif(this.parent){\r\n\t\t\t\tthis.parent.remove(this, silently);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_setParent: function(parent, matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a parent\r\n\t\t\t// parent: Object\r\n\t\t\t//\t\ta parent or null\r\n\t\t\t//\t\t(see dojox/gfx/shape.Surface,\r\n\t\t\t//\t\tor dojox/gfx.Group)\r\n\t\t\t// matrix: dojox/gfx/matrix.Matrix2D\r\n\t\t\t//\t\ta 2D matrix or a matrix-like object\r\n\t\t\tthis.parent = parent;\r\n\t\t\treturn this._updateParentMatrix(matrix);\t// self\r\n\t\t},\r\n\t\t_updateParentMatrix: function(matrix){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the parent matrix with new matrix\r\n\t\t\t// matrix: dojox/gfx/Matrix2D\r\n\t\t\t//\t\ta 2D matrix or a matrix-like object\r\n\t\t\tthis.parentMatrix = matrix ? matrixLib.clone(matrix) : null;\r\n\t\t\treturn this._applyTransform();\t// self\r\n\t\t},\r\n\t\t_getRealMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the cumulative ('real') transformation matrix\r\n\t\t\t//\t\tby combining the shape's matrix with its parent's matrix\r\n\t\t\tvar m = this.matrix;\r\n\t\t\tvar p = this.parent;\r\n\t\t\twhile(p){\r\n\t\t\t\tif(p.matrix){\r\n\t\t\t\t\tm = matrixLib.multiply(p.matrix, m);\r\n\t\t\t\t}\r\n\t\t\t\tp = p.parent;\r\n\t\t\t}\r\n\t\t\treturn m;\t// dojox/gfx/matrix.Matrix2D\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape._eventsProcessing = {\r\n\t\ton: function(type, listener){\r\n\t\t\t//\tsummary:\r\n\t\t\t//\t\tConnects an event to this shape.\r\n\r\n\t\t\treturn on(this.getEventSource(), type, shape.fixCallback(this, g.fixTarget, listener));\r\n\t\t},\r\n\r\n\t\tconnect: function(name, object, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tconnects a handler to an event on this shape\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\t// redirect to fixCallback to normalize events and add the gfxTarget to the event. The latter\r\n\t\t\t// is done by dojox/gfx.fixTarget which is defined by each renderer\r\n\t\t\tif(name.substring(0, 2) == \"on\"){\r\n\t\t\t\tname = name.substring(2);\r\n\t\t\t}\r\n\t\t\treturn this.on(name, method ? lang.hitch(object, method) : object);\r\n\t\t},\r\n\r\n\t\tdisconnect: function(token){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tconnects a handler by token from an event on this shape\r\n\t\t\t\r\n\t\t\t// COULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\r\n\t\t\treturn token.remove();\r\n\t\t}\r\n\t};\r\n\t\r\n\tshape.fixCallback = function(gfxElement, fixFunction, scope, method){\r\n\t\t// summary:\r\n\t\t//\t\tWraps the callback to allow for tests and event normalization\r\n\t\t//\t\tbefore it gets invoked. This is where 'fixTarget' is invoked.\r\n\t\t// tags:\r\n\t\t//      private\r\n\t\t// gfxElement: Object\r\n\t\t//\t\tThe GFX object that triggers the action (ex.:\r\n\t\t//\t\tdojox/gfx.Surface and dojox/gfx/shape.Shape). A new event property\r\n\t\t//\t\t'gfxTarget' is added to the event to reference this object.\r\n\t\t//\t\tfor easy manipulation of GFX objects by the event handlers.\r\n\t\t// fixFunction: Function\r\n\t\t//\t\tThe function that implements the logic to set the 'gfxTarget'\r\n\t\t//\t\tproperty to the event. It should be 'dojox/gfx.fixTarget' for\r\n\t\t//\t\tmost of the cases\r\n\t\t// scope: Object\r\n\t\t//\t\tOptional. The scope to be used when invoking 'method'. If\r\n\t\t//\t\tomitted, a global scope is used.\r\n\t\t// method: Function|String\r\n\t\t//\t\tThe original callback to be invoked.\r\n\t\tif(!method){\r\n\t\t\tmethod = scope;\r\n\t\t\tscope = null;\r\n\t\t}\r\n\t\tif(lang.isString(method)){\r\n\t\t\tscope = scope || kernel.global;\r\n\t\t\tif(!scope[method]){ throw(['dojox.gfx.shape.fixCallback: scope[\"', method, '\"] is null (scope=\"', scope, '\")'].join('')); }\r\n\t\t\treturn function(e){  \r\n\t\t\t\treturn fixFunction(e,gfxElement) ? scope[method].apply(scope, arguments || []) : undefined; }; // Function\r\n\t\t}\r\n\t\treturn !scope \r\n\t\t\t? function(e){ \r\n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments) : undefined; } \r\n\t\t\t: function(e){ \r\n\t\t\t\treturn fixFunction(e,gfxElement) ? method.apply(scope, arguments || []) : undefined; }; // Function\r\n\t};\r\n\tlang.extend(shape.Shape, shape._eventsProcessing);\r\n\t\r\n\tshape.Container = {\r\n\t\t// summary:\r\n\t\t//\t\ta container of shapes, which can be used\r\n\t\t//\t\tas a foundation for renderer-specific groups, or as a way\r\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\r\n\t\r\n\t\t_init: function() {\r\n\t\t\t// children: Array\r\n\t\t\t//\t\ta list of children\r\n\t\t\tthis.children = [];\r\n\t\t\tthis._batch = 0;\r\n\t\t},\r\n\t\r\n\t\t// group management\r\n\t\r\n\t\topenBatch: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\r\n\t\t\t//\t\tthe batch instead of appending to the container directly.\r\n\t\t\t// description:\r\n\t\t\t//\t\tBecause the canvas renderer has no DOM hierarchy, the canvas implementation differs\r\n\t\t\t//\t\tsuch that it suspends the repaint requests for this container until the current batch is closed by a call to closeBatch().\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tcloseBatch: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsubmits the current batch, append all pending child shapes to DOM\r\n\t\t\t// description:\r\n\t\t\t//\t\tOn canvas, this method flushes the pending redraws queue.\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tadd: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadds a shape to the list\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tthe shape to add to the list\r\n\t\t\tvar oldParent = shape.getParent();\r\n\t\t\tif(oldParent){\r\n\t\t\t\toldParent.remove(shape, true);\r\n\t\t\t}\r\n\t\t\tthis.children.push(shape);\r\n\t\t\treturn shape._setParent(this, this._getRealMatrix());\t// self\r\n\t\t},\r\n\t\tremove: function(shape, silently){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremoves a shape from the list\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tthe shape to remove\r\n\t\t\t// silently: Boolean\r\n\t\t\t//\t\tif true, do not redraw a picture yet\r\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\r\n\t\t\t\tif(this.children[i] == shape){\r\n\t\t\t\t\tif(silently){\r\n\t\t\t\t\t\t// skip for now\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tshape.parent = null;\r\n\t\t\t\t\t\tshape.parentMatrix = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tremoveElementAt(this.children, i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tclear: function(/*Boolean?*/ destroy){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremoves all shapes from a group/surface.\r\n\t\t\t// destroy: Boolean\r\n\t\t\t//\t\tIndicates whether the children should be destroyed. Optional.\r\n\t\t\tvar shape;\r\n\t\t\tfor(var i = 0; i < this.children.length;++i){\r\n\t\t\t\tshape = this.children[i];\r\n\t\t\t\tshape.parent = null;\r\n\t\t\t\tshape.parentMatrix = null;\r\n\t\t\t\tif(destroy){\r\n\t\t\t\t\tshape.destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.children = [];\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the bounding box Rectangle for this shape.\r\n\t\t\tif(this.children){\r\n\t\t\t\t// if this is a composite shape, then sum up all the children\r\n\t\t\t\tvar result = null;\r\n\t\t\t\tarr.forEach(this.children, function(shape){\r\n\t\t\t\t\tvar bb = shape.getBoundingBox();\r\n\t\t\t\t\tif(bb){\r\n\t\t\t\t\t\tvar ct = shape.getTransform();\r\n\t\t\t\t\t\tif(ct){\r\n\t\t\t\t\t\t\tbb = matrixLib.multiplyRectangle(ct, bb);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(result){\r\n\t\t\t\t\t\t\t// merge two bbox \r\n\t\t\t\t\t\t\tresult.x = Math.min(result.x, bb.x);\r\n\t\t\t\t\t\t\tresult.y = Math.min(result.y, bb.y);\r\n\t\t\t\t\t\t\tresult.endX = Math.max(result.endX, bb.x + bb.width);\r\n\t\t\t\t\t\t\tresult.endY = Math.max(result.endY, bb.y + bb.height);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// first bbox \r\n\t\t\t\t\t\t\tresult = {\r\n\t\t\t\t\t\t\t\tx: bb.x,\r\n\t\t\t\t\t\t\t\ty: bb.y,\r\n\t\t\t\t\t\t\t\tendX: bb.x + bb.width,\r\n\t\t\t\t\t\t\t\tendY: bb.y + bb.height\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif(result){\r\n\t\t\t\t\tresult.width = result.endX - result.x;\r\n\t\t\t\t\tresult.height = result.endY - result.y;\r\n\t\t\t\t}\r\n\t\t\t\treturn result; // dojox/gfx.Rectangle\r\n\t\t\t}\r\n\t\t\t// unknown/empty bounding box, subclass shall override this impl \r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t// moving child nodes\r\n\t\t_moveChildToFront: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to front of the list of shapes\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tone of the child shapes to move to the front\r\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\r\n\t\t\t\tif(this.children[i] == shape){\r\n\t\t\t\t\tremoveElementAt(this.children, i);\r\n\t\t\t\t\tthis.children.push(shape);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_moveChildToBack: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to back of the list of shapes\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tone of the child shapes to move to the front\r\n\t\t\tfor(var i = 0; i < this.children.length; ++i){\r\n\t\t\t\tif(this.children[i] == shape){\r\n\t\t\t\t\tremoveElementAt(this.children, i);\r\n\t\t\t\t\tthis.children.unshift(shape);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t};\r\n\r\n\tshape.Surface = declare(\"dojox.gfx.shape.Surface\", null, {\r\n\t\t// summary:\r\n\t\t//\t\ta surface object to be used for drawings\r\n\t\tconstructor: function(){\r\n\t\t\t// underlying node\r\n\t\t\tthis.rawNode = null;\r\n\t\t\t// the parent node\r\n\t\t\tthis._parent = null;\r\n\t\t\t// the list of DOM nodes to be deleted in the case of destruction\r\n\t\t\tthis._nodes = [];\r\n\t\t\t// the list of events to be detached in the case of destruction\r\n\t\t\tthis._events = [];\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdestroy all relevant external resources and release all\r\n\t\t\t//\t\texternal references to make this object garbage-collectible\r\n\t\t\tarr.forEach(this._nodes, domConstruct.destroy);\r\n\t\t\tthis._nodes = [];\r\n\t\t\tarr.forEach(this._events, function(h){ if(h){ h.remove(); } });\r\n\t\t\tthis._events = [];\r\n\t\t\tthis.rawNode = null;\t// recycle it in _nodes, if it needs to be recycled\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\twhile(this._parent.lastChild){\r\n\t\t\t\t\tdomConstruct.destroy(this._parent.lastChild);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis._parent.innerHTML = \"\";\r\n\t\t\t}\r\n\t\t\tthis._parent = null;\r\n\t\t},\r\n\t\tgetEventSource: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns a node, which can be used to attach event listeners\r\n\t\t\treturn this.rawNode; // Node\r\n\t\t},\r\n\t\t_getRealMatrix: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\talways returns the identity matrix\r\n\t\t\treturn null;\t// dojox/gfx/Matrix2D\r\n\t\t},\r\n\t\t/*=====\r\n\t\t setDimensions: function(width, height){\r\n\t\t\t // summary:\r\n\t\t\t //\t\tsets the width and height of the rawNode\r\n\t\t\t // width: String\r\n\t\t\t //\t\twidth of surface, e.g., \"100px\"\r\n\t\t\t // height: String\r\n\t\t\t //\t\theight of surface, e.g., \"100px\"\r\n\t\t\t return this;\t// self\r\n\t\t },\r\n\t\t getDimensions: function(){\r\n\t\t\t // summary:\r\n\t\t\t //     gets current width and height in pixels\r\n\t\t\t // returns: Object\r\n\t\t\t //     object with properties \"width\" and \"height\"\r\n\t\t },\r\n\t\t =====*/\r\n\t\tisLoaded: true,\r\n\t\tonLoad: function(/*dojox/gfx/shape.Surface*/ surface){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tlocal event, fired once when the surface is created\r\n\t\t\t//\t\tasynchronously, used only when isLoaded is false, required\r\n\t\t\t//\t\tonly for Silverlight.\r\n\t\t},\r\n\t\twhenLoaded: function(/*Object|Null*/ context, /*Function|String*/ method){\r\n\t\t\tvar f = lang.hitch(context, method);\r\n\t\t\tif(this.isLoaded){\r\n\t\t\t\tf(this);\r\n\t\t\t}else{\r\n\t\t\t\ton.once(this, \"load\", function(surface){\r\n\t\t\t\t\tf(surface);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tlang.extend(shape.Surface, shape._eventsProcessing);\r\n\r\n\t/*=====\r\n\tg.Point = declare(\"dojox/gfx.Point\", null, {\r\n\t\t// summary:\r\n\t\t//\t\t2D point for drawings - {x, y}\r\n\t\t// description:\r\n\t\t//\t\tDo not use this object directly!\r\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2}.\r\n\t});\r\n\r\n\tg.Rectangle = declare(\"dojox.gfx.Rectangle\", null, {\r\n\t\t// summary:\r\n\t\t//\t\trectangle - {x, y, width, height}\r\n\t\t// description:\r\n\t\t//\t\tDo not use this object directly!\r\n\t\t//\t\tUse the naked object instead: {x: 1, y: 2, width: 100, height: 200}.\r\n\t});\r\n\t =====*/\r\n\r\n\r\n\tshape.Rect = declare(\"dojox.gfx.shape.Rect\", shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic rectangle\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\tThe underlying graphics system object (typically a DOM Node)\r\n\t\t\tthis.shape = g.getDefault(\"Rect\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box (its shape in this case)\r\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Ellipse = declare(\"dojox.gfx.shape.Ellipse\", shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic ellipse\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM Node\r\n\t\t\tthis.shape = g.getDefault(\"Ellipse\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box\r\n\t\t\tif(!this.bbox){\r\n\t\t\t\tvar shape = this.shape;\r\n\t\t\t\tthis.bbox = {x: shape.cx - shape.rx, y: shape.cy - shape.ry,\r\n\t\t\t\t\twidth: 2 * shape.rx, height: 2 * shape.ry};\r\n\t\t\t}\r\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Circle = declare(\"dojox.gfx.shape.Circle\", shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic circle\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM Node\r\n\t\t\tthis.shape = g.getDefault(\"Circle\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box\r\n\t\t\tif(!this.bbox){\r\n\t\t\t\tvar shape = this.shape;\r\n\t\t\t\tthis.bbox = {x: shape.cx - shape.r, y: shape.cy - shape.r,\r\n\t\t\t\t\twidth: 2 * shape.r, height: 2 * shape.r};\r\n\t\t\t}\r\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Line = declare(\"dojox.gfx.shape.Line\", shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic line (do not instantiate it directly)\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM Node\r\n\t\t\tthis.shape = g.getDefault(\"Line\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box\r\n\t\t\tif(!this.bbox){\r\n\t\t\t\tvar shape = this.shape;\r\n\t\t\t\tthis.bbox = {\r\n\t\t\t\t\tx:\t\tMath.min(shape.x1, shape.x2),\r\n\t\t\t\t\ty:\t\tMath.min(shape.y1, shape.y2),\r\n\t\t\t\t\twidth:\tMath.abs(shape.x2 - shape.x1),\r\n\t\t\t\t\theight:\tMath.abs(shape.y2 - shape.y1)\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Polyline = declare(\"dojox.gfx.shape.Polyline\", shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic polyline/polygon (do not instantiate it directly)\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM Node\r\n\t\t\tthis.shape = g.getDefault(\"Polyline\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tsetShape: function(points, closed){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a polyline/polygon shape object\r\n\t\t\t// points: Object|Array\r\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\r\n\t\t\t// closed: Boolean\r\n\t\t\t//\t\tclose the polyline to make a polygon\r\n\t\t\tif(points && points instanceof Array){\r\n\t\t\t\tthis.inherited(arguments, [{points: points}]);\r\n\t\t\t\tif(closed && this.shape.points.length){\r\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.inherited(arguments, [points]);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_normalizePoints: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tnormalize points to array of {x:number, y:number}\r\n\t\t\tvar p = this.shape.points, l = p && p.length;\r\n\t\t\tif(l && typeof p[0] == \"number\"){\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tfor(var i = 0; i < l; i += 2){\r\n\t\t\t\t\tpoints.push({x: p[i], y: p[i + 1]});\r\n\t\t\t\t}\r\n\t\t\t\tthis.shape.points = points;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box\r\n\t\t\tif(!this.bbox && this.shape.points.length){\r\n\t\t\t\tvar p = this.shape.points;\r\n\t\t\t\tvar l = p.length;\r\n\t\t\t\tvar t = p[0];\r\n\t\t\t\tvar bbox = {l: t.x, t: t.y, r: t.x, b: t.y};\r\n\t\t\t\tfor(var i = 1; i < l; ++i){\r\n\t\t\t\t\tt = p[i];\r\n\t\t\t\t\tif(bbox.l > t.x) bbox.l = t.x;\r\n\t\t\t\t\tif(bbox.r < t.x) bbox.r = t.x;\r\n\t\t\t\t\tif(bbox.t > t.y) bbox.t = t.y;\r\n\t\t\t\t\tif(bbox.b < t.y) bbox.b = t.y;\r\n\t\t\t\t}\r\n\t\t\t\tthis.bbox = {\r\n\t\t\t\t\tx:\t\tbbox.l,\r\n\t\t\t\t\ty:\t\tbbox.t,\r\n\t\t\t\t\twidth:\tbbox.r - bbox.l,\r\n\t\t\t\t\theight:\tbbox.b - bbox.t\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn this.bbox;\t// dojox/gfx.Rectangle\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Image = declare(\"dojox.gfx.shape.Image\", shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic image (do not instantiate it directly)\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM Node\r\n\t\t\tthis.shape = g.getDefault(\"Image\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the bounding box (its shape in this case)\r\n\t\t\treturn this.shape;\t// dojox/gfx.Rectangle\r\n\t\t},\r\n\t\tsetStroke: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tignore setting a stroke style\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tsetFill: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tignore setting a fill style\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Text = declare(shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta generic text (do not instantiate it directly)\r\n\t\tconstructor: function(rawNode){\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\ta DOM Node\r\n\t\t\tthis.fontStyle = null;\r\n\t\t\tthis.shape = g.getDefault(\"Text\");\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t},\r\n\t\tgetFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns the current font object or null\r\n\t\t\treturn this.fontStyle;\t// Object\r\n\t\t},\r\n\t\tsetFont: function(newFont){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a font for text\r\n\t\t\t// newFont: Object\r\n\t\t\t//\t\ta font object (see dojox/gfx.defaultFont) or a font string\r\n\t\t\tthis.fontStyle = typeof newFont == \"string\" ? g.splitFontString(newFont) :\r\n\t\t\t\tg.makeParameters(g.defaultFont, newFont);\r\n\t\t\tthis._setFont();\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\tvar bbox = null, s = this.getShape();\r\n\t\t\tif(s.text){\r\n\t\t\t\tbbox = g._base._computeTextBoundingBox(this);\r\n\t\t\t}\r\n\t\t\treturn bbox;\r\n\t\t}\r\n\t});\r\n\t\r\n\tshape.Creator = {\r\n\t\t// summary:\r\n\t\t//\t\tshape creators\r\n\t\tcreateShape: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a shape object based on its type; it is meant to be used\r\n\t\t\t//\t\tby group-like objects\r\n\t\t\t// shape: Object\r\n\t\t\t//\t\ta shape descriptor object\r\n\t\t\t// returns: dojox/gfx/shape.Shape | Null\r\n\t\t\t//      a fully instantiated surface-specific Shape object\r\n\t\t\tswitch(shape.type){\r\n\t\t\t\tcase g.defaultPath.type:\t\treturn this.createPath(shape);\r\n\t\t\t\tcase g.defaultRect.type:\t\treturn this.createRect(shape);\r\n\t\t\t\tcase g.defaultCircle.type:\t    return this.createCircle(shape);\r\n\t\t\t\tcase g.defaultEllipse.type:\t    return this.createEllipse(shape);\r\n\t\t\t\tcase g.defaultLine.type:\t\treturn this.createLine(shape);\r\n\t\t\t\tcase g.defaultPolyline.type:\treturn this.createPolyline(shape);\r\n\t\t\t\tcase g.defaultImage.type:\t\treturn this.createImage(shape);\r\n\t\t\t\tcase g.defaultText.type:\t\treturn this.createText(shape);\r\n\t\t\t\tcase g.defaultTextPath.type:\treturn this.createTextPath(shape);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tcreateGroup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a group shape\r\n\t\t\treturn this.createObject(g.Group);\t// dojox/gfx/Group\r\n\t\t},\r\n\t\tcreateRect: function(rect){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a rectangle shape\r\n\t\t\t// rect: Object\r\n\t\t\t//\t\ta path object (see dojox/gfx.defaultRect)\r\n\t\t\treturn this.createObject(g.Rect, rect);\t// dojox/gfx/shape.Rect\r\n\t\t},\r\n\t\tcreateEllipse: function(ellipse){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates an ellipse shape\r\n\t\t\t// ellipse: Object\r\n\t\t\t//\t\tan ellipse object (see dojox/gfx.defaultEllipse)\r\n\t\t\treturn this.createObject(g.Ellipse, ellipse);\t// dojox/gfx/shape.Ellipse\r\n\t\t},\r\n\t\tcreateCircle: function(circle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a circle shape\r\n\t\t\t// circle: Object\r\n\t\t\t//\t\ta circle object (see dojox/gfx.defaultCircle)\r\n\t\t\treturn this.createObject(g.Circle, circle);\t// dojox/gfx/shape.Circle\r\n\t\t},\r\n\t\tcreateLine: function(line){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a line shape\r\n\t\t\t// line: Object\r\n\t\t\t//\t\ta line object (see dojox/gfx.defaultLine)\r\n\t\t\treturn this.createObject(g.Line, line);\t// dojox/gfx/shape.Line\r\n\t\t},\r\n\t\tcreatePolyline: function(points){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a polyline/polygon shape\r\n\t\t\t// points: Object\r\n\t\t\t//\t\ta points object (see dojox/gfx.defaultPolyline)\r\n\t\t\t//\t\tor an Array of points\r\n\t\t\treturn this.createObject(g.Polyline, points);\t// dojox/gfx/shape.Polyline\r\n\t\t},\r\n\t\tcreateImage: function(image){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a image shape\r\n\t\t\t// image: Object\r\n\t\t\t//\t\tan image object (see dojox/gfx.defaultImage)\r\n\t\t\treturn this.createObject(g.Image, image);\t// dojox/gfx/shape.Image\r\n\t\t},\r\n\t\tcreateText: function(text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a text shape\r\n\t\t\t// text: Object\r\n\t\t\t//\t\ta text object (see dojox/gfx.defaultText)\r\n\t\t\treturn this.createObject(g.Text, text);\t// dojox/gfx/shape.Text\r\n\t\t},\r\n\t\tcreatePath: function(path){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a path shape\r\n\t\t\t// path: Object\r\n\t\t\t//\t\ta path object (see dojox/gfx.defaultPath)\r\n\t\t\treturn this.createObject(g.Path, path);\t// dojox/gfx/shape.Path\r\n\t\t},\r\n\t\tcreateTextPath: function(text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a text shape\r\n\t\t\t// text: Object\r\n\t\t\t//\t\ta textpath object (see dojox/gfx.defaultTextPath)\r\n\t\t\treturn this.createObject(g.TextPath, {}).setText(text);\t// dojox/gfx/shape.TextPath\r\n\t\t},\r\n\t\tcreateObject: function(shapeType, rawShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates an instance of the passed shapeType class\r\n\t\t\t// shapeType: Function\r\n\t\t\t//\t\ta class constructor to create an instance of\r\n\t\t\t// rawShape: Object \r\n\t\t\t//\t\tproperties to be passed in to the classes 'setShape' method\r\n\t\r\n\t\t\t// SHOULD BE RE-IMPLEMENTED BY THE RENDERER!\r\n\t\t\treturn null;\t// dojox/gfx/shape.Shape\r\n\t\t}\r\n\t};\r\n\t\r\n\t/*=====\r\n\t lang.extend(shape.Surface, shape.Container);\r\n\t lang.extend(shape.Surface, shape.Creator);\r\n\r\n\t g.Group = declare(shape.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta group shape, which can be used\r\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\r\n\t});\r\n\tlang.extend(g.Group, shape.Container);\r\n\tlang.extend(g.Group, shape.Creator);\r\n\r\n\tg.Rect     = shape.Rect;\r\n\tg.Circle   = shape.Circle;\r\n\tg.Ellipse  = shape.Ellipse;\r\n\tg.Line     = shape.Line;\r\n\tg.Polyline = shape.Polyline;\r\n\tg.Text     = shape.Text;\r\n\tg.Surface  = shape.Surface;\r\n\t=====*/\r\n\r\n\treturn shape;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/shape.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/svg.js":
/*!***************************************!*\
  !*** ./node_modules/dojox/gfx/svg.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/sniff */ \"./node_modules/dojo/_base/sniff.js\"), __webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), __webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"),\r\n  __webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! dojo/dom-attr */ \"./node_modules/dojo/dom-attr.js\"), __webpack_require__(/*! dojo/_base/Color */ \"./node_modules/dojo/_base/Color.js\"), __webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! ./shape */ \"./node_modules/dojox/gfx/shape.js\"), __webpack_require__(/*! ./path */ \"./node_modules/dojox/gfx/path.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, has, win, dom, declare, arr, domGeom, domAttr, Color, g, gs, pathLib){\r\n\r\n\tvar svg = g.svg = {\r\n\t\t// summary:\r\n\t\t//\t\tThis the graphics rendering bridge for browsers compliant with W3C SVG1.0.\r\n\t\t//\t\tThis is the preferred renderer to use for interactive and accessible graphics.\r\n\t};\r\n\tsvg.useSvgWeb = (typeof window.svgweb != \"undefined\");\r\n\r\n\t// Need to detect iOS in order to workaround bug when\r\n\t// touching nodes with text\r\n\tvar uagent = navigator.userAgent,\r\n\t\tsafMobile = has(\"ios\"),\r\n\t\tandroid = has(\"android\"),\r\n\t\ttextRenderingFix = has(\"chrome\") || (android && android>=4) ? \"auto\" : \"optimizeLegibility\";// #16099, #16461\r\n\r\n\tfunction _createElementNS(ns, nodeType){\r\n\t\t// summary:\r\n\t\t//\t\tInternal helper to deal with creating elements that\r\n\t\t//\t\tare namespaced.  Mainly to get SVG markup output\r\n\t\t//\t\tworking on IE.\r\n\t\tif(win.doc.createElementNS){\r\n\t\t\treturn win.doc.createElementNS(ns,nodeType);\r\n\t\t}else{\r\n\t\t\treturn win.doc.createElement(nodeType);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction _setAttributeNS(node, ns, attr, value){\r\n\t\tif(node.setAttributeNS){\r\n\t\t\treturn node.setAttributeNS(ns, attr, value);\r\n\t\t}else{\r\n\t\t\treturn node.setAttribute(attr, value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _createTextNode(text){\r\n\t\tif(svg.useSvgWeb){\r\n\t\t\treturn win.doc.createTextNode(text, true);\r\n\t\t}else{\r\n\t\t\treturn win.doc.createTextNode(text);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _createFragment(){\r\n\t\tif(svg.useSvgWeb){\r\n\t\t\treturn win.doc.createDocumentFragment(true);\r\n\t\t}else{\r\n\t\t\treturn win.doc.createDocumentFragment();\r\n\t\t}\r\n\t}\r\n\r\n\tsvg.xmlns = {\r\n\t\txlink: \"http://www.w3.org/1999/xlink\",\r\n\t\tsvg:   \"http://www.w3.org/2000/svg\"\r\n\t};\r\n\r\n\tsvg.getRef = function(name){\r\n\t\t// summary:\r\n\t\t//\t\tlooks up a node by its external name\r\n\t\t// name: String\r\n\t\t//\t\tan SVG external reference\r\n\t\t// returns:\r\n\t\t//      returns a DOM Node specified by the name argument or null\r\n\t\tif(!name || name == \"none\") return null;\r\n\t\tif(name.match(/^url\\(#.+\\)$/)){\r\n\t\t\treturn dom.byId(name.slice(5, -1));\t// Node\r\n\t\t}\r\n\t\t// alternative representation of a reference\r\n\t\tif(name.match(/^#dojoUnique\\d+$/)){\r\n\t\t\t// we assume here that a reference was generated by dojox/gfx\r\n\t\t\treturn dom.byId(name.slice(1));\t// Node\r\n\t\t}\r\n\t\treturn null;\t// Node\r\n\t};\r\n\r\n\tsvg.dasharray = {\r\n\t\tsolid:\t\t\t\t\"none\",\r\n\t\tshortdash:\t\t\t[4, 1],\r\n\t\tshortdot:\t\t\t[1, 1],\r\n\t\tshortdashdot:\t\t[4, 1, 1, 1],\r\n\t\tshortdashdotdot:\t[4, 1, 1, 1, 1, 1],\r\n\t\tdot:\t\t\t\t[1, 3],\r\n\t\tdash:\t\t\t\t[4, 3],\r\n\t\tlongdash:\t\t\t[8, 3],\r\n\t\tdashdot:\t\t\t[4, 3, 1, 3],\r\n\t\tlongdashdot:\t\t[8, 3, 1, 3],\r\n\t\tlongdashdotdot:\t\t[8, 3, 1, 3, 1, 3]\r\n\t};\r\n\r\n\tvar clipCount = 0;\r\n\r\n\tsvg.Shape = declare(\"dojox.gfx.svg.Shape\", gs.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\tSVG-specific implementation of dojox/gfx/shape.Shape methods\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tif(this.fillStyle && \"type\" in this.fillStyle){\r\n\t\t\t\tvar fill = this.rawNode.getAttribute(\"fill\"),\r\n\t\t\t\t\tref  = svg.getRef(fill);\r\n\t\t\t\tif(ref){\r\n\t\t\t\t\tref.parentNode.removeChild(ref);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.clip){\r\n\t\t\t\tvar clipPathProp = this.rawNode.getAttribute(\"clip-path\");\r\n\t\t\t\tif(clipPathProp){\r\n\t\t\t\t\tvar clipNode = dom.byId(clipPathProp.match(/gfx_clip[\\d]+/)[0]);\r\n\t\t\t\t\tif(clipNode){ clipNode.parentNode.removeChild(clipNode); }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgs.Shape.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\tsetFill: function(fill){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a fill object (SVG)\r\n\t\t\t// fill: Object\r\n\t\t\t//\t\ta fill object\r\n\t\t\t//\t\t(see dojox/gfx.defaultLinearGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultRadialGradient,\r\n\t\t\t//\t\tdojox/gfx.defaultPattern,\r\n\t\t\t//\t\tor dojo/_base/Color)\r\n\r\n\t\t\tif(!fill){\r\n\t\t\t\t// don't fill\r\n\t\t\t\tthis.fillStyle = null;\r\n\t\t\t\tthis.rawNode.setAttribute(\"fill\", \"none\");\r\n\t\t\t\tthis.rawNode.setAttribute(\"fill-opacity\", 0);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar f;\r\n\t\t\t// FIXME: slightly magical. We're using the outer scope's \"f\", but setting it later\r\n\t\t\tvar setter = function(x){\r\n\t\t\t\t\t// we assume that we're executing in the scope of the node to mutate\r\n\t\t\t\t\tthis.setAttribute(x, f[x].toFixed(8));\r\n\t\t\t\t};\r\n\t\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\r\n\t\t\t\t// gradient\r\n\t\t\t\tswitch(fill.type){\r\n\t\t\t\t\tcase \"linear\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultLinearGradient, fill);\r\n\t\t\t\t\t\tvar gradient = this._setFillObject(f, \"linearGradient\");\r\n\t\t\t\t\t\tarr.forEach([\"x1\", \"y1\", \"x2\", \"y2\"], setter, gradient);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"radial\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultRadialGradient, fill);\r\n\t\t\t\t\t\tvar grad = this._setFillObject(f, \"radialGradient\");\r\n\t\t\t\t\t\tarr.forEach([\"cx\", \"cy\", \"r\"], setter, grad);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"pattern\":\r\n\t\t\t\t\t\tf = g.makeParameters(g.defaultPattern, fill);\r\n\t\t\t\t\t\tvar pattern = this._setFillObject(f, \"pattern\");\r\n\t\t\t\t\t\tarr.forEach([\"x\", \"y\", \"width\", \"height\"], setter, pattern);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.fillStyle = f;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t// color object\r\n\t\t\tf = g.normalizeColor(fill);\r\n\t\t\tthis.fillStyle = f;\r\n\t\t\tthis.rawNode.setAttribute(\"fill\", f.toCss());\r\n\t\t\tthis.rawNode.setAttribute(\"fill-opacity\", f.a);\r\n\t\t\tthis.rawNode.setAttribute(\"fill-rule\", \"evenodd\");\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\tsetStroke: function(stroke){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a stroke object (SVG)\r\n\t\t\t// stroke: Object\r\n\t\t\t//\t\ta stroke object (see dojox/gfx.defaultStroke)\r\n\r\n\t\t\tvar rn = this.rawNode;\r\n\t\t\tif(!stroke){\r\n\t\t\t\t// don't stroke\r\n\t\t\t\tthis.strokeStyle = null;\r\n\t\t\t\trn.setAttribute(\"stroke\", \"none\");\r\n\t\t\t\trn.setAttribute(\"stroke-opacity\", 0);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\t// normalize the stroke\r\n\t\t\tif(typeof stroke == \"string\" || lang.isArray(stroke) || stroke instanceof Color){\r\n\t\t\t\tstroke = { color: stroke };\r\n\t\t\t}\r\n\t\t\tvar s = this.strokeStyle = g.makeParameters(g.defaultStroke, stroke);\r\n\t\t\ts.color = g.normalizeColor(s.color);\r\n\t\t\t// generate attributes\r\n\t\t\tif(s){\r\n\t\t\t\tvar w = s.width < 0 ? 0 : s.width;\r\n\t\t\t\trn.setAttribute(\"stroke\", s.color.toCss());\r\n\t\t\t\trn.setAttribute(\"stroke-opacity\", s.color.a);\r\n\t\t\t\trn.setAttribute(\"stroke-width\",   w);\r\n\t\t\t\trn.setAttribute(\"stroke-linecap\", s.cap);\r\n\t\t\t\tif(typeof s.join == \"number\"){\r\n\t\t\t\t\trn.setAttribute(\"stroke-linejoin\",   \"miter\");\r\n\t\t\t\t\trn.setAttribute(\"stroke-miterlimit\", s.join);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trn.setAttribute(\"stroke-linejoin\",   s.join);\r\n\t\t\t\t}\r\n\t\t\t\tvar da = s.style.toLowerCase();\r\n\t\t\t\tif(da in svg.dasharray){\r\n\t\t\t\t\tda = svg.dasharray[da];\r\n\t\t\t\t}\r\n\t\t\t\tif(da instanceof Array){\r\n\t\t\t\t\tda = lang._toArray(da);\r\n\t\t\t\t\tvar i;\r\n\t\t\t\t\tfor(i = 0; i < da.length; ++i){\r\n\t\t\t\t\t\tda[i] *= w;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(s.cap != \"butt\"){\r\n\t\t\t\t\t\tfor(i = 0; i < da.length; i += 2){\r\n\t\t\t\t\t\t\tda[i] -= w;\r\n\t\t\t\t\t\t\tif(da[i] < 1){ da[i] = 1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 1; i < da.length; i += 2){\r\n\t\t\t\t\t\t\tda[i] += w;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tda = da.join(\",\");\r\n\t\t\t\t}\r\n\t\t\t\trn.setAttribute(\"stroke-dasharray\", da);\r\n\t\t\t\trn.setAttribute(\"dojoGfxStrokeStyle\", s.style);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\t_getParentSurface: function(){\r\n\t\t\tvar surface = this.parent;\r\n\t\t\tfor(; surface && !(surface instanceof g.Surface); surface = surface.parent);\r\n\t\t\treturn surface;\r\n\t\t},\r\n\r\n\t\t_setFillObject: function(f, nodeType){\r\n\t\t\tvar svgns = svg.xmlns.svg;\r\n\t\t\tthis.fillStyle = f;\r\n\t\t\tvar surface = this._getParentSurface(),\r\n\t\t\t\tdefs = surface.defNode,\r\n\t\t\t\tfill = this.rawNode.getAttribute(\"fill\"),\r\n\t\t\t\tref  = svg.getRef(fill);\r\n\t\t\tif(ref){\r\n\t\t\t\tfill = ref;\r\n\t\t\t\tif(fill.tagName.toLowerCase() != nodeType.toLowerCase()){\r\n\t\t\t\t\tvar id = fill.id;\r\n\t\t\t\t\tfill.parentNode.removeChild(fill);\r\n\t\t\t\t\tfill = _createElementNS(svgns, nodeType);\r\n\t\t\t\t\tfill.setAttribute(\"id\", id);\r\n\t\t\t\t\tdefs.appendChild(fill);\r\n\t\t\t\t}else{\r\n\t\t\t\t\twhile(fill.childNodes.length){\r\n\t\t\t\t\t\tfill.removeChild(fill.lastChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfill = _createElementNS(svgns, nodeType);\r\n\t\t\t\tfill.setAttribute(\"id\", g._base._getUniqueId());\r\n\t\t\t\tdefs.appendChild(fill);\r\n\t\t\t}\r\n\t\t\tif(nodeType == \"pattern\"){\r\n\t\t\t\tfill.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\r\n\t\t\t\tvar img = _createElementNS(svgns, \"image\");\r\n\t\t\t\timg.setAttribute(\"x\", 0);\r\n\t\t\t\timg.setAttribute(\"y\", 0);\r\n\t\t\t\timg.setAttribute(\"width\",  (f.width < 0 ? 0 : f.width).toFixed(8));\r\n\t\t\t\timg.setAttribute(\"height\", (f.height < 0 ? 0 : f.height).toFixed(8));\r\n\t\t\t\t_setAttributeNS(img, svg.xmlns.xlink, \"xlink:href\", f.src);\r\n\t\t\t\tfill.appendChild(img);\r\n\t\t\t}else{\r\n\t\t\t\tfill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\r\n\t\t\t\tfor(var i = 0; i < f.colors.length; ++i){\r\n\t\t\t\t\tvar c = f.colors[i], t = _createElementNS(svgns, \"stop\"),\r\n\t\t\t\t\t\tcc = c.color = g.normalizeColor(c.color);\r\n\t\t\t\t\tt.setAttribute(\"offset\",       c.offset.toFixed(8));\r\n\t\t\t\t\tt.setAttribute(\"stop-color\",   cc.toCss());\r\n\t\t\t\t\tt.setAttribute(\"stop-opacity\", cc.a);\r\n\t\t\t\t\tfill.appendChild(t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.rawNode.setAttribute(\"fill\", \"url(#\" + fill.getAttribute(\"id\") +\")\");\r\n\t\t\tthis.rawNode.removeAttribute(\"fill-opacity\");\r\n\t\t\tthis.rawNode.setAttribute(\"fill-rule\", \"evenodd\");\r\n\t\t\treturn fill;\r\n\t\t},\r\n\r\n\t\t_applyTransform: function() {\r\n\t\t\tvar matrix = this.matrix;\r\n\t\t\tif(matrix){\r\n\t\t\t\tvar tm = this.matrix;\r\n\t\t\t\tthis.rawNode.setAttribute(\"transform\", \"matrix(\" +\r\n\t\t\t\t\ttm.xx.toFixed(8) + \",\" + tm.yx.toFixed(8) + \",\" +\r\n\t\t\t\t\ttm.xy.toFixed(8) + \",\" + tm.yy.toFixed(8) + \",\" +\r\n\t\t\t\t\ttm.dx.toFixed(8) + \",\" + tm.dy.toFixed(8) + \")\");\r\n\t\t\t}else{\r\n\t\t\t\tthis.rawNode.removeAttribute(\"transform\");\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tassigns and clears the underlying node that will represent this\r\n\t\t\t//\t\tshape. Once set, transforms, gradients, etc, can be applied.\r\n\t\t\t//\t\t(no fill & stroke by default)\r\n\t\t\tvar r = this.rawNode = rawNode;\r\n\t\t\tif(this.shape.type!=\"image\"){\r\n\t\t\t\tr.setAttribute(\"fill\", \"none\");\r\n\t\t\t}\r\n\t\t\tr.setAttribute(\"fill-opacity\", 0);\r\n\t\t\tr.setAttribute(\"stroke\", \"none\");\r\n\t\t\tr.setAttribute(\"stroke-opacity\", 0);\r\n\t\t\tr.setAttribute(\"stroke-width\", 1);\r\n\t\t\tr.setAttribute(\"stroke-linecap\", \"butt\");\r\n\t\t\tr.setAttribute(\"stroke-linejoin\", \"miter\");\r\n\t\t\tr.setAttribute(\"stroke-miterlimit\", 4);\r\n\t\t\t// Bind GFX object with SVG node for ease of retrieval - that is to\r\n\t\t\t// save code/performance to keep this association elsewhere\r\n\t\t\tr.__gfxObject__ = this;\r\n\t\t},\r\n\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta shape object\r\n\t\t\t//\t\t(see dojox/gfx.defaultPath,\r\n\t\t\t//\t\tdojox/gfx.defaultPolyline,\r\n\t\t\t//\t\tdojox/gfx.defaultRect,\r\n\t\t\t//\t\tdojox/gfx.defaultEllipse,\r\n\t\t\t//\t\tdojox/gfx.defaultCircle,\r\n\t\t\t//\t\tdojox/gfx.defaultLine,\r\n\t\t\t//\t\tor dojox/gfx.defaultImage)\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tfor(var i in this.shape){\r\n\t\t\t\tif(i != \"type\"){\r\n\t\t\t\t\tvar v = this.shape[i];\r\n\t\t\t\t\tif(i === \"width\" || i === \"height\"){\r\n\t\t\t\t\t\tv = v < 0 ? 0 : v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.rawNode.setAttribute(i, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.bbox = null;\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\r\n\t\t// move family\r\n\r\n\t\t_moveToFront: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to front of its parent's list of shapes (SVG)\r\n\t\t\tthis.rawNode.parentNode.appendChild(this.rawNode);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_moveToBack: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tmoves a shape to back of its parent's list of shapes (SVG)\r\n\t\t\tthis.rawNode.parentNode.insertBefore(this.rawNode, this.rawNode.parentNode.firstChild);\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tsetClip: function(clip){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the clipping area of this shape.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method overrides the dojox/gfx/shape.Shape.setClip() method.\r\n\t\t\t// clip: Object\r\n\t\t\t//\t\tan object that defines the clipping geometry, or null to remove clip.\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tvar clipType = clip ? \"width\" in clip ? \"rect\" : \r\n\t\t\t\t\t\t\t\"cx\" in clip ? \"ellipse\" : \r\n\t\t\t\t\t\t\t\"points\" in clip ? \"polyline\" : \"d\" in clip ? \"path\" : null : null;\r\n\t\t\tif(clip && !clipType){\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tif(clipType === \"polyline\"){\r\n\t\t\t\tclip = lang.clone(clip);\r\n\t\t\t\tclip.points = clip.points.join(\",\");\r\n\t\t\t}\r\n\t\t\tvar clipNode, clipShape,\r\n\t\t\t\tclipPathProp = domAttr.get(this.rawNode, \"clip-path\");\r\n\t\t\tif(clipPathProp){\r\n\t\t\t\tclipNode = dom.byId(clipPathProp.match(/gfx_clip[\\d]+/)[0]);\r\n\t\t\t\tif(clipNode){ // may be null if not in the DOM anymore\r\n\t\t\t\t\tclipNode.removeChild(clipNode.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(clip){\r\n\t\t\t\tif(clipNode){\r\n\t\t\t\t\tclipShape = _createElementNS(svg.xmlns.svg, clipType);\r\n\t\t\t\t\tclipNode.appendChild(clipShape);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar idIndex = ++clipCount;\r\n\t\t\t\t\tvar clipId = \"gfx_clip\" + idIndex;\r\n\t\t\t\t\tvar clipUrl = \"url(#\" + clipId + \")\";\r\n\t\t\t\t\tthis.rawNode.setAttribute(\"clip-path\", clipUrl);\r\n\t\t\t\t\tclipNode = _createElementNS(svg.xmlns.svg, \"clipPath\");\r\n\t\t\t\t\tclipShape = _createElementNS(svg.xmlns.svg, clipType);\r\n\t\t\t\t\tclipNode.appendChild(clipShape);\r\n\t\t\t\t\tthis.rawNode.parentNode.insertBefore(clipNode, this.rawNode);\r\n\t\t\t\t\tdomAttr.set(clipNode, \"id\", clipId);\r\n\t\t\t\t}\r\n\t\t\t\tdomAttr.set(clipShape, clip);\r\n\t\t\t}else{\r\n\t\t\t\t//remove clip-path\r\n\t\t\t\tthis.rawNode.removeAttribute(\"clip-path\");\r\n\t\t\t\tif(clipNode){\r\n\t\t\t\t\tclipNode.parentNode.removeChild(clipNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t_removeClipNode: function(){\r\n\t\t\tvar clipNode, clipPathProp = domAttr.get(this.rawNode, \"clip-path\");\r\n\t\t\tif(clipPathProp){\r\n\t\t\t\tclipNode = dom.byId(clipPathProp.match(/gfx_clip[\\d]+/)[0]);\r\n\t\t\t\tif(clipNode){\r\n\t\t\t\t\tclipNode.parentNode.removeChild(clipNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn clipNode;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tsvg.Group = declare(\"dojox.gfx.svg.Group\", svg.Shape, {\r\n\t\t// summary:\r\n\t\t//\t\ta group shape (SVG), which can be used\r\n\t\t//\t\tto logically group shapes (e.g, to propagate matricies)\r\n\t\tconstructor: function(){\r\n\t\t\tgs.Container._init.call(this);\r\n\t\t},\r\n\t\tsetRawNode: function(rawNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a raw SVG node to be used by this shape\r\n\t\t\t// rawNode: Node\r\n\t\t\t//\t\tan SVG node\r\n\t\t\tthis.rawNode = rawNode;\r\n\t\t\t// Bind GFX object with SVG node for ease of retrieval - that is to\r\n\t\t\t// save code/performance to keep this association elsewhere\r\n\t\t\tthis.rawNode.__gfxObject__ = this;\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReleases all internal resources owned by this shape. Once this method has been called,\r\n\t\t\t//\t\tthe instance is considered disposed and should not be used anymore.\r\n\t\t\tthis.clear(true);\r\n\t\t\t// avoid this.inherited\r\n\t\t\tsvg.Shape.prototype.destroy.apply(this, arguments);\r\n\t\t}\r\n\t});\r\n\tsvg.Group.nodeType = \"g\";\r\n\r\n\tsvg.Rect = declare(\"dojox.gfx.svg.Rect\", [svg.Shape, gs.Rect], {\r\n\t\t// summary:\r\n\t\t//\t\ta rectangle shape (SVG)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a rectangle shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta rectangle shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tfor(var i in this.shape){\r\n\t\t\t\tif(i != \"type\" && i != \"r\"){\r\n\t\t\t\t\tvar v = this.shape[i];\r\n\t\t\t\t\tif(i === \"width\" || i === \"height\"){\r\n\t\t\t\t\t\tv = v < 0 ? 0 : v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.rawNode.setAttribute(i, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this.shape.r != null){\r\n\t\t\t\tthis.rawNode.setAttribute(\"ry\", this.shape.r);\r\n\t\t\t\tthis.rawNode.setAttribute(\"rx\", this.shape.r);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Rect.nodeType = \"rect\";\r\n\r\n\tsvg.Ellipse = declare(\"dojox.gfx.svg.Ellipse\", [svg.Shape, gs.Ellipse], {});\r\n\tsvg.Ellipse.nodeType = \"ellipse\";\r\n\r\n\tsvg.Circle = declare(\"dojox.gfx.svg.Circle\", [svg.Shape, gs.Circle], {});\r\n\tsvg.Circle.nodeType = \"circle\";\r\n\r\n\tsvg.Line = declare(\"dojox.gfx.svg.Line\", [svg.Shape, gs.Line], {});\r\n\tsvg.Line.nodeType = \"line\";\r\n\r\n\tsvg.Polyline = declare(\"dojox.gfx.svg.Polyline\", [svg.Shape, gs.Polyline], {\r\n\t\t// summary:\r\n\t\t//\t\ta polyline/polygon shape (SVG)\r\n\t\tsetShape: function(points, closed){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a polyline/polygon shape object (SVG)\r\n\t\t\t// points: Object|Array\r\n\t\t\t//\t\ta polyline/polygon shape object, or an array of points\r\n\t\t\tif(points && points instanceof Array){\r\n\t\t\t\tthis.shape = g.makeParameters(this.shape, { points: points });\r\n\t\t\t\tif(closed && this.shape.points.length){\r\n\t\t\t\t\tthis.shape.points.push(this.shape.points[0]);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.shape = g.makeParameters(this.shape, points);\r\n\t\t\t}\r\n\t\t\tthis.bbox = null;\r\n\t\t\tthis._normalizePoints();\r\n\t\t\tvar attr = [], p = this.shape.points;\r\n\t\t\tfor(var i = 0; i < p.length; ++i){\r\n\t\t\t\tattr.push(p[i].x.toFixed(8), p[i].y.toFixed(8));\r\n\t\t\t}\r\n\t\t\tthis.rawNode.setAttribute(\"points\", attr.join(\" \"));\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Polyline.nodeType = \"polyline\";\r\n\r\n\tsvg.Image = declare(\"dojox.gfx.svg.Image\", [svg.Shape, gs.Image], {\r\n\t\t// summary:\r\n\t\t//\t\tan image (SVG)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets an image shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan image shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar rawNode = this.rawNode;\r\n\t\t\tfor(var i in this.shape){\r\n\t\t\t\tif(i != \"type\" && i != \"src\"){\r\n\t\t\t\t\tvar v = this.shape[i];\r\n\t\t\t\t\tif(i === \"width\" || i === \"height\"){\r\n\t\t\t\t\t\tv = v < 0 ? 0 : v;\r\n\t\t\t\t\t}\r\n\t\t\t\t\trawNode.setAttribute(i, v);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trawNode.setAttribute(\"preserveAspectRatio\", \"none\");\r\n\t\t\t_setAttributeNS(rawNode, svg.xmlns.xlink, \"xlink:href\", this.shape.src);\r\n\t\t\t// Bind GFX object with SVG node for ease of retrieval - that is to\r\n\t\t\t// save code/performance to keep this association elsewhere\r\n\t\t\trawNode.__gfxObject__ = this;\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Image.nodeType = \"image\";\r\n\r\n\tsvg.Text = declare(\"dojox.gfx.svg.Text\", [svg.Shape, gs.Text], {\r\n\t\t// summary:\r\n\t\t//\t\tan anchored text (SVG)\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a text shape object (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\ta text shape object\r\n\t\t\tthis.shape = g.makeParameters(this.shape, newShape);\r\n\t\t\tthis.bbox = null;\r\n\t\t\tvar r = this.rawNode, s = this.shape;\r\n\t\t\tr.setAttribute(\"x\", s.x);\r\n\t\t\tr.setAttribute(\"y\", s.y);\r\n\t\t\tr.setAttribute(\"text-anchor\", s.align);\r\n\t\t\tr.setAttribute(\"text-decoration\", s.decoration);\r\n\t\t\tr.setAttribute(\"rotate\", s.rotated ? 90 : 0);\r\n\t\t\tr.setAttribute(\"kerning\", s.kerning ? \"auto\" : 0);\r\n\t\t\tr.setAttribute(\"text-rendering\", textRenderingFix);\r\n\r\n\t\t\t// update the text content\r\n\t\t\tif(r.firstChild){\r\n\t\t\t\tr.firstChild.nodeValue = s.text;\r\n\t\t\t}else{\r\n\t\t\t\tr.appendChild(_createTextNode(s.text));\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetTextWidth: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tget the text width in pixels\r\n\t\t\tvar rawNode = this.rawNode,\r\n\t\t\t\toldParent = rawNode.parentNode,\r\n\t\t\t\t_measurementNode = rawNode.cloneNode(true);\r\n\t\t\t_measurementNode.style.visibility = \"hidden\";\r\n\r\n\t\t\t// solution to the \"orphan issue\" in FF\r\n\t\t\tvar _width = 0, _text = _measurementNode.firstChild.nodeValue;\r\n\t\t\toldParent.appendChild(_measurementNode);\r\n\r\n\t\t\t// solution to the \"orphan issue\" in Opera\r\n\t\t\t// (nodeValue == \"\" hangs firefox)\r\n\t\t\tif(_text!=\"\"){\r\n\t\t\t\twhile(!_width){\r\n//Yang: work around svgweb bug 417 -- http://code.google.com/p/svgweb/issues/detail?id=417\r\nif (_measurementNode.getBBox)\r\n\t\t\t\t\t_width = parseInt(_measurementNode.getBBox().width);\r\nelse\r\n\t_width = 68;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\toldParent.removeChild(_measurementNode);\r\n\t\t\treturn _width;\r\n\t\t},\r\n\t\tgetBoundingBox: function(){\r\n\t\t\tvar s = this.getShape(), bbox = null;\r\n\t\t\tif(s.text){\r\n\t\t\t\t// try/catch the FF native getBBox error.\r\n\t\t\t\ttry {\r\n\t\t\t\t\tbbox = this.rawNode.getBBox();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// under FF when the node is orphan (all other browsers return a 0ed bbox.\r\n\t\t\t\t\tbbox = {x:0, y:0, width:0, height:0};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn bbox;\r\n\t\t}\r\n\t});\r\n\tsvg.Text.nodeType = \"text\";\r\n\r\n\tsvg.Path = declare(\"dojox.gfx.svg.Path\", [svg.Shape, pathLib.Path], {\r\n\t\t// summary:\r\n\t\t//\t\ta path shape (SVG)\r\n\t\t_updateWithSegment: function(segment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(typeof(this.shape.path) == \"string\"){\r\n\t\t\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tif(this.shape.path){\r\n\t\t\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\r\n\t\t\t}else{\r\n\t\t\t\tthis.rawNode.removeAttribute(\"d\");\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t}\r\n\t});\r\n\tsvg.Path.nodeType = \"path\";\r\n\r\n\tsvg.TextPath = declare(\"dojox.gfx.svg.TextPath\", [svg.Shape, pathLib.TextPath], {\r\n\t\t// summary:\r\n\t\t//\t\ta textpath shape (SVG)\r\n\t\t_updateWithSegment: function(segment){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tupdates the bounding box of path with new segment\r\n\t\t\t// segment: Object\r\n\t\t\t//\t\ta segment\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setTextPath();\r\n\t\t},\r\n\t\tsetShape: function(newShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tforms a path using a shape (SVG)\r\n\t\t\t// newShape: Object\r\n\t\t\t//\t\tan SVG path string or a path object (see dojox/gfx.defaultPath)\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tthis._setTextPath();\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\t_setTextPath: function(){\r\n\t\t\tif(typeof this.shape.path != \"string\"){ return; }\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\tif(!r.firstChild){\r\n\t\t\t\tvar tp = _createElementNS(svg.xmlns.svg, \"textPath\"),\r\n\t\t\t\t\ttx = _createTextNode(\"\");\r\n\t\t\t\ttp.appendChild(tx);\r\n\t\t\t\tr.appendChild(tp);\r\n\t\t\t}\r\n\t\t\tvar ref  = r.firstChild.getAttributeNS(svg.xmlns.xlink, \"href\"),\r\n\t\t\t\tpath = ref && svg.getRef(ref);\r\n\t\t\tif(!path){\r\n\t\t\t\tvar surface = this._getParentSurface();\r\n\t\t\t\tif(surface){\r\n\t\t\t\t\tvar defs = surface.defNode;\r\n\t\t\t\t\tpath = _createElementNS(svg.xmlns.svg, \"path\");\r\n\t\t\t\t\tvar id = g._base._getUniqueId();\r\n\t\t\t\t\tpath.setAttribute(\"id\", id);\r\n\t\t\t\t\tdefs.appendChild(path);\r\n\t\t\t\t\t_setAttributeNS(r.firstChild, svg.xmlns.xlink, \"xlink:href\", \"#\" + id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(path){\r\n\t\t\t\tpath.setAttribute(\"d\", this.shape.path);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_setText: function(){\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\tif(!r.firstChild){\r\n\t\t\t\tvar tp = _createElementNS(svg.xmlns.svg, \"textPath\"),\r\n\t\t\t\t\ttx = _createTextNode(\"\");\r\n\t\t\t\ttp.appendChild(tx);\r\n\t\t\t\tr.appendChild(tp);\r\n\t\t\t}\r\n\t\t\tr = r.firstChild;\r\n\t\t\tvar t = this.text;\r\n\t\t\tr.setAttribute(\"alignment-baseline\", \"middle\");\r\n\t\t\tswitch(t.align){\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tr.setAttribute(\"text-anchor\", \"middle\");\r\n\t\t\t\t\tr.setAttribute(\"startOffset\", \"50%\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"end\":\r\n\t\t\t\t\tr.setAttribute(\"text-anchor\", \"end\");\r\n\t\t\t\t\tr.setAttribute(\"startOffset\", \"100%\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tr.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\tr.setAttribute(\"startOffset\", \"0%\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t//r.parentNode.setAttribute(\"alignment-baseline\", \"central\");\r\n\t\t\t//r.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\tr.setAttribute(\"baseline-shift\", \"0.5ex\");\r\n\t\t\tr.setAttribute(\"text-decoration\", t.decoration);\r\n\t\t\tr.setAttribute(\"rotate\", t.rotated ? 90 : 0);\r\n\t\t\tr.setAttribute(\"kerning\", t.kerning ? \"auto\" : 0);\r\n\t\t\tr.firstChild.data = t.text;\r\n\t\t}\r\n\t});\r\n\tsvg.TextPath.nodeType = \"text\";\r\n\r\n\t// Fix for setDimension bug:\r\n\t// http://bugs.dojotoolkit.org/ticket/16100\r\n\t// (https://code.google.com/p/chromium/issues/detail?id=162628)\r\n\tvar hasSvgSetAttributeBug = (function(){ var matches = /WebKit\\/(\\d*)/.exec(uagent); return matches ? matches[1] : 0})() > 534;\r\n\r\n\tsvg.Surface = declare(\"dojox.gfx.svg.Surface\", gs.Surface, {\r\n\t\t// summary:\r\n\t\t//\t\ta surface object to be used for drawings (SVG)\r\n\t\tconstructor: function(){\r\n\t\t\tgs.Container._init.call(this);\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// no need to call svg.Container.clear to remove the children raw\r\n\t\t\t// nodes since the surface raw node will be removed. So, only dispose at gfx level\t\r\n\t\t\tgs.Container.clear.call(this, true); \r\n\t\t\tthis.defNode = null;\t// release the external reference\r\n\t\t\tthis.inherited(arguments);\r\n\t\t},\r\n\t\tsetDimensions: function(width, height){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets the width and height of the rawNode\r\n\t\t\t// width: String\r\n\t\t\t//\t\twidth of surface, e.g., \"100px\"\r\n\t\t\t// height: String\r\n\t\t\t//\t\theight of surface, e.g., \"100px\"\r\n\t\t\tif(!this.rawNode){ return this; }\r\n\t\t\tvar w = width < 0 ? 0 : width,\r\n\t\t\t\th = height < 0 ? 0 : height;\r\n\t\t\tthis.rawNode.setAttribute(\"width\",  w);\r\n\t\t\tthis.rawNode.setAttribute(\"height\", h);\r\n\t\t\tif(hasSvgSetAttributeBug){\r\n\t\t\t\tthis.rawNode.style.width =  w;\r\n\t\t\t\tthis.rawNode.style.height =  h;\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tgetDimensions: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an object with properties \"width\" and \"height\"\r\n\t\t\tvar t = this.rawNode ? {\r\n\t\t\t\twidth:  g.normalizedLength(this.rawNode.getAttribute(\"width\")),\r\n\t\t\t\theight: g.normalizedLength(this.rawNode.getAttribute(\"height\"))} : null;\r\n\t\t\treturn t;\t// Object\r\n\t\t}\r\n\t});\r\n\r\n\tsvg.createSurface = function(parentNode, width, height){\r\n\t\t// summary:\r\n\t\t//\t\tcreates a surface (SVG)\r\n\t\t// parentNode: Node\r\n\t\t//\t\ta parent node\r\n\t\t// width: String|Number\r\n\t\t//\t\twidth of surface, e.g., \"100px\" or 100\r\n\t\t// height: String|Number\r\n\t\t//\t\theight of surface, e.g., \"100px\" or 100\r\n\t\t// returns: dojox/gfx/shape.Surface\r\n\t\t//     newly created surface\r\n\r\n\t\tvar s = new svg.Surface();\r\n\t\ts.rawNode = _createElementNS(svg.xmlns.svg, \"svg\");\r\n\t\ts.rawNode.setAttribute(\"overflow\", \"hidden\");\r\n\t\tif(width){\r\n\t\t\ts.rawNode.setAttribute(\"width\",  width < 0 ? 0 : width);\r\n\t\t}\r\n\t\tif(height){\r\n\t\t\ts.rawNode.setAttribute(\"height\", height < 0 ? 0 : height);\r\n\t\t}\r\n\r\n\t\tvar defNode = _createElementNS(svg.xmlns.svg, \"defs\");\r\n\t\ts.rawNode.appendChild(defNode);\r\n\t\ts.defNode = defNode;\r\n\r\n\t\ts._parent = dom.byId(parentNode);\r\n\t\ts._parent.appendChild(s.rawNode);\r\n\r\n\t\tg._base._fixMsTouchAction(s);\r\n\r\n\t\treturn s;\t// dojox/gfx.Surface\r\n\t};\r\n\r\n\t// Extenders\r\n\r\n\tvar Font = {\r\n\t\t_setFont: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsets a font object (SVG)\r\n\t\t\tvar f = this.fontStyle;\r\n\t\t\t// next line doesn't work in Firefox 2 or Opera 9\r\n\t\t\t//this.rawNode.setAttribute(\"font\", dojox.gfx.makeFontString(this.fontStyle));\r\n\t\t\tthis.rawNode.setAttribute(\"font-style\", f.style);\r\n\t\t\tthis.rawNode.setAttribute(\"font-variant\", f.variant);\r\n\t\t\tthis.rawNode.setAttribute(\"font-weight\", f.weight);\r\n\t\t\tthis.rawNode.setAttribute(\"font-size\", f.size);\r\n\t\t\tthis.rawNode.setAttribute(\"font-family\", f.family);\r\n\t\t}\r\n\t};\r\n\r\n\tvar C = gs.Container;\r\n\tvar Container = svg.Container = {\r\n\t\topenBatch: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tstarts a new batch, subsequent new child shapes will be held in\r\n\t\t\t//\t\tthe batch instead of appending to the container directly\r\n\t\t\tif(!this._batch){\r\n\t\t\t\tthis.fragment = _createFragment();\r\n\t\t\t}\r\n\t\t\t++this._batch;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tcloseBatch: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tsubmits the current batch, append all pending child shapes to DOM\r\n\t\t\tthis._batch = this._batch > 0 ? --this._batch : 0;\r\n\t\t\tif (this.fragment && !this._batch) {\r\n\t\t\t\tthis.rawNode.appendChild(this.fragment);\r\n\t\t\t\tdelete this.fragment;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\tadd: function(shape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tadds a shape to a group/surface\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tan VML shape object\r\n\t\t\tif(this != shape.getParent()){\r\n\t\t\t\tif (this.fragment) {\r\n\t\t\t\t\tthis.fragment.appendChild(shape.rawNode);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.rawNode.appendChild(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tC.add.apply(this, arguments);\r\n\t\t\t\t// update clipnode with new parent\r\n\t\t\t\tshape.setClip(shape.clip);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tremove: function(shape, silently){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremove a shape from a group/surface\r\n\t\t\t// shape: dojox/gfx/shape.Shape\r\n\t\t\t//\t\tan VML shape object\r\n\t\t\t// silently: Boolean?\r\n\t\t\t//\t\tif true, regenerate a picture\r\n\t\t\tif(this == shape.getParent()){\r\n\t\t\t\tif(this.rawNode == shape.rawNode.parentNode){\r\n\t\t\t\t\tthis.rawNode.removeChild(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.fragment && this.fragment == shape.rawNode.parentNode){\r\n\t\t\t\t\tthis.fragment.removeChild(shape.rawNode);\r\n\t\t\t\t}\r\n\t\t\t\t// remove clip node from parent \r\n\t\t\t\tshape._removeClipNode();\r\n\t\t\t\tC.remove.apply(this, arguments);\r\n\t\t\t}\r\n\t\t\treturn this;\t// self\r\n\t\t},\r\n\t\tclear: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tremoves all shapes from a group/surface\r\n\t\t\tvar r = this.rawNode;\r\n\t\t\twhile(r.lastChild){\r\n\t\t\t\tr.removeChild(r.lastChild);\r\n\t\t\t}\r\n\t\t\tvar defNode = this.defNode;\r\n\t\t\tif(defNode){\r\n\t\t\t\twhile(defNode.lastChild){\r\n\t\t\t\t\tdefNode.removeChild(defNode.lastChild);\r\n\t\t\t\t}\r\n\t\t\t\tr.appendChild(defNode);\r\n\t\t\t}\r\n\t\t\treturn C.clear.apply(this, arguments);\r\n\t\t},\r\n\t\tgetBoundingBox: C.getBoundingBox,\r\n\t\t_moveChildToFront: C._moveChildToFront,\r\n\t\t_moveChildToBack:  C._moveChildToBack\r\n\t};\r\n\r\n\tvar Creator = svg.Creator = {\r\n\t\t// summary:\r\n\t\t//\t\tSVG shape creators\r\n\t\tcreateObject: function(shapeType, rawShape){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates an instance of the passed shapeType class\r\n\t\t\t// shapeType: Function\r\n\t\t\t//\t\ta class constructor to create an instance of\r\n\t\t\t// rawShape: Object\r\n\t\t\t//\t\tproperties to be passed in to the classes \"setShape\" method\r\n\t\t\tif(!this.rawNode){ return null; }\r\n\t\t\tvar shape = new shapeType(),\r\n\t\t\t\tnode = _createElementNS(svg.xmlns.svg, shapeType.nodeType);\r\n\r\n\t\t\tshape.setRawNode(node);\r\n\t\t\tshape.setShape(rawShape);\r\n\t\t\t// rawNode.appendChild() will be done inside this.add(shape) below\r\n\t\t\tthis.add(shape);\r\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\r\n\t\t}\r\n\t};\r\n\r\n\tlang.extend(svg.Text, Font);\r\n\tlang.extend(svg.TextPath, Font);\r\n\r\n\tlang.extend(svg.Group, Container);\r\n\tlang.extend(svg.Group, gs.Creator);\r\n\tlang.extend(svg.Group, Creator);\r\n\r\n\tlang.extend(svg.Surface, Container);\r\n\tlang.extend(svg.Surface, gs.Creator);\r\n\tlang.extend(svg.Surface, Creator);\r\n\r\n\t// Mouse/Touch event\r\n\tsvg.fixTarget = function(event, gfxElement) {\r\n\t\t// summary:\r\n\t\t//\t\tAdds the gfxElement to event.gfxTarget if none exists. This new\r\n\t\t//\t\tproperty will carry the GFX element associated with this event.\r\n\t\t// event: Object\r\n\t\t//\t\tThe current input event (MouseEvent or TouchEvent)\r\n\t\t// gfxElement: Object\r\n\t\t//\t\tThe GFX target element\r\n\t\tif (!event.gfxTarget) {\r\n\t\t\tif (safMobile && event.target.wholeText) {\r\n\t\t\t\t// Workaround iOS bug when touching text nodes\r\n\t\t\t\tevent.gfxTarget = event.target.parentElement.__gfxObject__;\r\n\t\t\t} else {\r\n\t\t\t\tevent.gfxTarget = event.target.__gfxObject__;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t// some specific override for svgweb + flash\r\n\tif(svg.useSvgWeb){\r\n\t\t// override createSurface()\r\n\t\tsvg.createSurface = function(parentNode, width, height){\r\n\t\t\tvar s = new svg.Surface();\r\n\t\t\t\r\n\t\t\twidth = width < 0 ? 0 : width;\r\n\t\t\theight = height < 0 ? 0 : height;\r\n\r\n\t\t\t// ensure width / height\r\n\t\t\tif(!width || !height){\r\n\t\t\t\tvar pos = domGeom.position(parentNode);\r\n\t\t\t\twidth  = width  || pos.w;\r\n\t\t\t\theight = height || pos.h;\r\n\t\t\t}\r\n\r\n\t\t\t// ensure id\r\n\t\t\tparentNode = dom.byId(parentNode);\r\n\t\t\tvar id = parentNode.id ? parentNode.id+'_svgweb' : g._base._getUniqueId();\r\n\r\n\t\t\t// create dynamic svg root\r\n\t\t\tvar mockSvg = _createElementNS(svg.xmlns.svg, 'svg');\r\n\t\t\tmockSvg.id = id;\r\n\t\t\tmockSvg.setAttribute('width', width);\r\n\t\t\tmockSvg.setAttribute('height', height);\r\n\t\t\tsvgweb.appendChild(mockSvg, parentNode);\r\n\r\n\t\t\t// notice: any call to the raw node before flash init will fail.\r\n\t\t\tmockSvg.addEventListener('SVGLoad', function(){\r\n\t\t\t\t// become loaded\r\n\t\t\t\ts.rawNode = this;\r\n\t\t\t\ts.isLoaded = true;\r\n\r\n\t\t\t\t// init defs\r\n\t\t\t\tvar defNode = _createElementNS(svg.xmlns.svg, \"defs\");\r\n\t\t\t\ts.rawNode.appendChild(defNode);\r\n\t\t\t\ts.defNode = defNode;\r\n\r\n\t\t\t\t// notify application\r\n\t\t\t\tif (s.onLoad)\r\n\t\t\t\t\ts.onLoad(s);\r\n\t\t\t}, false);\r\n\r\n\t\t\t// flash not loaded yet\r\n\t\t\ts.isLoaded = false;\r\n\t\t\treturn s;\r\n\t\t};\r\n\r\n\t\t// override Surface.destroy()\r\n\t\tsvg.Surface.extend({\r\n\t\t\tdestroy: function(){\r\n\t\t\t\tvar mockSvg = this.rawNode;\r\n\t\t\t\tsvgweb.removeChild(mockSvg, mockSvg.parentNode);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// override connect() & disconnect() for Shape & Surface event processing\r\n\t\tvar _eventsProcessing = {\r\n\t\t\tconnect: function(name, object, method){\r\n\t\t\t\t// connect events using the mock addEventListener() provided by svgweb\r\n\t\t\t\tif (name.substring(0, 2)==='on') { name = name.substring(2); }\r\n\t\t\t\tif (arguments.length == 2) {\r\n\t\t\t\t\tmethod = object;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmethod = lang.hitch(object, method);\r\n\t\t\t\t}\r\n\t\t\t\tthis.getEventSource().addEventListener(name, method, false);\r\n\t\t\t\treturn [this, name, method];\r\n\t\t\t},\r\n\t\t\tdisconnect: function(token){\r\n\t\t\t\t// disconnect events using the mock removeEventListener() provided by svgweb\r\n\t\t\t\tthis.getEventSource().removeEventListener(token[1], token[2], false);\r\n\t\t\t\tdelete token[0];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlang.extend(svg.Shape, _eventsProcessing);\r\n\t\tlang.extend(svg.Surface, _eventsProcessing);\r\n\t}\r\n\r\n\treturn svg;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/svg.js\n");

/***/ }),

/***/ "./node_modules/dojox/gfx/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/dojox/gfx/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"),__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"),__webpack_require__(/*! ./_base */ \"./node_modules/dojox/gfx/_base.js\"), __webpack_require__(/*! dojo/_base/html */ \"./node_modules/dojo/_base/html.js\"),__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), __webpack_require__(/*! dojo/_base/json */ \"./node_modules/dojo/_base/json.js\"), \r\n\t__webpack_require__(/*! dojo/_base/Deferred */ \"./node_modules/dojo/_base/Deferred.js\"), __webpack_require__(/*! dojo/_base/sniff */ \"./node_modules/dojo/_base/sniff.js\"), __webpack_require__.dj.c(module.i),__webpack_require__(/*! dojo/_base/config */ \"./node_modules/dojo/_base/config.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(kernel, lang, g, html, arr, win, jsonLib, Deferred, has, require, config){\r\n\tvar gu = g.utils = {};\r\n\r\n\tlang.mixin(gu, {\r\n\t\tforEach: function(\r\n\t\t\t/*dojox/gfx/shape.Surface|dojox/gfx/shape.Shape*/ object,\r\n\t\t\t/*Function|String|Array*/ f, /*Object?*/ o\r\n\t\t){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTakes a shape or a surface and applies a function \"f\" to in the context of \"o\"\r\n\t\t\t//\t\t(or global, if missing). If \"shape\" was a surface or a group, it applies the same\r\n\t\t\t//\t\tfunction to all children recursively effectively visiting all shapes of the underlying scene graph.\r\n\t\t\t// object:\r\n\t\t\t//\t\tThe gfx container to iterate.\r\n\t\t\t// f:\r\n\t\t\t//\t\tThe function to apply.\r\n\t\t\t// o:\r\n\t\t\t//\t\tThe scope.\r\n\t\t\to = o || kernel.global;\r\n\t\t\tf.call(o, object);\r\n\t\t\tif(object instanceof g.Surface || object instanceof g.Group){\r\n\t\t\t\tarr.forEach(object.children, function(shape){\r\n\t\t\t\t\tgu.forEach(shape, f, o);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tserialize: function(object){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTakes a shape or a surface and returns an object, which describes underlying shapes.\r\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe container to serialize.\r\n\r\n\t\t\tvar t = {}, v, isSurface = object instanceof g.Surface;\r\n\t\t\tif(isSurface || object instanceof g.Group){\r\n\t\t\t\tt.children = arr.map(object.children, gu.serialize);\r\n\t\t\t\tif(isSurface){\r\n\t\t\t\t\treturn t.children;\t// Array\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tt.shape = object.getShape();\r\n\t\t\t}\r\n\t\t\tif(object.getTransform){\r\n\t\t\t\tv = object.getTransform();\r\n\t\t\t\tif(v){ t.transform = v; }\r\n\t\t\t}\r\n\t\t\tif(object.getStroke){\r\n\t\t\t\tv = object.getStroke();\r\n\t\t\t\tif(v){ t.stroke = v; }\r\n\t\t\t}\r\n\t\t\tif(object.getFill){\r\n\t\t\t\tv = object.getFill();\r\n\t\t\t\tif(v){ t.fill = v; }\r\n\t\t\t}\r\n\t\t\tif(object.getFont){\r\n\t\t\t\tv = object.getFont();\r\n\t\t\t\tif(v){ t.font = v; }\r\n\t\t\t}\r\n\t\t\treturn t;\t// Object\r\n\t\t},\r\n\r\n\t\ttoJson: function(object, prettyPrint){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWorks just like serialize() but returns a JSON string. If prettyPrint is true, the string is pretty-printed to make it more human-readable.\r\n\t\t\t// object: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe container to serialize.\r\n\t\t\t// prettyPrint: Boolean?\r\n\t\t\t//\t\tIndicates whether the output string should be formatted.\r\n\t\t\t// returns: String\r\n\t\t\t\r\n\t\t\treturn jsonLib.toJson(gu.serialize(object), prettyPrint);\t// String\r\n\t\t},\r\n\r\n\t\tdeserialize: function(parent, object){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTakes a surface or a shape and populates it with an object produced by serialize().\r\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe destination container for the deserialized shapes.\r\n\t\t\t// object: dojox/gfx/shape.Shape|Array\r\n\t\t\t//\t\tThe shapes to deserialize.\r\n\r\n\t\t\tif(object instanceof Array){\r\n\t\t\t\treturn arr.map(object, lang.hitch(null, gu.deserialize, parent));\t// Array\r\n\t\t\t}\r\n\t\t\tvar shape = (\"shape\" in object) ? parent.createShape(object.shape) : parent.createGroup();\r\n\t\t\tif(\"transform\" in object){\r\n\t\t\t\tshape.setTransform(object.transform);\r\n\t\t\t}\r\n\t\t\tif(\"stroke\" in object){\r\n\t\t\t\tshape.setStroke(object.stroke);\r\n\t\t\t}\r\n\t\t\tif(\"fill\" in object){\r\n\t\t\t\tshape.setFill(object.fill);\r\n\t\t\t}\r\n\t\t\tif(\"font\" in object){\r\n\t\t\t\tshape.setFont(object.font);\r\n\t\t\t}\r\n\t\t\tif(\"children\" in object){\r\n\t\t\t\tarr.forEach(object.children, lang.hitch(null, gu.deserialize, shape));\r\n\t\t\t}\r\n\t\t\treturn shape;\t// dojox/gfx/shape.Shape\r\n\t\t},\r\n\r\n\t\tfromJson: function(parent, json){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWorks just like deserialize() but takes a JSON representation of the object.\r\n\t\t\t// parent: dojox/gfx/shape.Surface|dojox/gfx/shape.Shape\r\n\t\t\t//\t\tThe destination container for the deserialized shapes.\r\n\t\t\t// json: String\r\n\t\t\t//\t\tThe shapes to deserialize.\r\n\r\n\t\t\treturn gu.deserialize(parent, jsonLib.fromJson(json));\t// Array|dojox/gfx/shape.Shape\r\n\t\t},\r\n\r\n\t\ttoSvg: function(/*dojox/gfx/shape.Surface*/surface){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFunction to serialize a GFX surface to SVG text.  The value of this output\r\n\t\t\t//\t\tis that there are numerous serverside parser libraries that can render\r\n\t\t\t//\t\tSVG into images in various formats.  This provides a way that GFX objects\r\n\t\t\t//\t\tcan be captured in a known format and sent serverside for serialization\r\n\t\t\t//\t\tinto an image.\r\n\t\t\t// surface:\r\n\t\t\t//\t\tThe GFX surface to serialize.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tDeferred object that will be called when SVG serialization is complete.\r\n\t\t\r\n\t\t\t//Since the init and even surface creation can be async, we need to\r\n\t\t\t//return a deferred that will be called when content has serialized.\r\n\t\t\tvar deferred = new Deferred();\r\n\t\t\r\n\t\t\tif(g.renderer === \"svg\"){\r\n\t\t\t\t//If we're already in SVG mode, this is easy and quick.\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvar svg = gu._cleanSvg(gu._innerXML(surface.rawNode));\r\n\t\t\t\t\tdeferred.callback(svg);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tdeferred.errback(e);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t//Okay, now we have to get creative with hidden iframes and the like to\r\n\t\t\t\t//serialize SVG.\r\n\t\t\t\tif (!gu._initSvgSerializerDeferred) {\r\n\t\t\t\t\tgu._initSvgSerializer();\r\n\t\t\t\t}\r\n\t\t\t\tvar jsonForm = gu.toJson(surface);\r\n\t\t\t\tvar serializer = function(){\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tvar sDim = surface.getDimensions();\r\n\t\t\t\t\t\tvar width = sDim.width;\r\n\t\t\t\t\t\tvar\theight = sDim.height;\r\n\r\n\t\t\t\t\t\t//Create an attach point in the iframe for the contents.\r\n\t\t\t\t\t\tvar node = gu._gfxSvgProxy.document.createElement(\"div\");\r\n\t\t\t\t\t\tgu._gfxSvgProxy.document.body.appendChild(node);\r\n\t\t\t\t\t\t//Set the node scaling.\r\n\t\t\t\t\t\twin.withDoc(gu._gfxSvgProxy.document, function() {\r\n\t\t\t\t\t\t\thtml.style(node, \"width\", width);\r\n\t\t\t\t\t\t\thtml.style(node, \"height\", height);\r\n\t\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\t\t//Create temp surface to render object to and render.\r\n\t\t\t\t\t\tvar ts = gu._gfxSvgProxy[dojox._scopeName].gfx.createSurface(node, width, height);\r\n\r\n\t\t\t\t\t\t//It's apparently possible that a suface creation is async, so we need to use\r\n\t\t\t\t\t\t//the whenLoaded function.  Probably not needed for SVG, but making it common\r\n\t\t\t\t\t\tvar draw = function(surface) {\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy[dojox._scopeName].gfx.utils.fromJson(surface, jsonForm);\r\n\r\n\t\t\t\t\t\t\t\t//Get contents and remove temp surface.\r\n\t\t\t\t\t\t\t\tvar svg = gu._cleanSvg(node.innerHTML);\r\n\t\t\t\t\t\t\t\tsurface.clear();\r\n\t\t\t\t\t\t\t\tsurface.destroy();\r\n\t\t\t\t\t\t\t\tgu._gfxSvgProxy.document.body.removeChild(node);\r\n\t\t\t\t\t\t\t\tdeferred.callback(svg);\r\n\t\t\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t\t\tdeferred.errback(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tts.whenLoaded(null,draw);\r\n\t\t\t\t\t }catch (ex) {\r\n\t\t\t\t\t\tdeferred.errback(ex);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\t//See if we can call it directly or pass it to the deferred to be\r\n\t\t\t\t//called on initialization.\r\n\t\t\t\tif(gu._initSvgSerializerDeferred.fired > 0){\r\n\t\t\t\t\tserializer();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tgu._initSvgSerializerDeferred.addCallback(serializer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn deferred; //dojo.Deferred that will be called when serialization finishes.\r\n\t\t},\r\n\r\n\t\t//iFrame document used for handling SVG serialization.\r\n\t\t_gfxSvgProxy: null,\r\n\r\n\t\t//Serializer loaded.\r\n\t\t_initSvgSerializerDeferred: null,\r\n\r\n\t\t_svgSerializerInitialized: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to call when the serializer init completed.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tgu._initSvgSerializerDeferred.callback(true);\r\n\t\t},\r\n\r\n\t\t_initSvgSerializer: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function to initialize the hidden iframe where SVG rendering\r\n\t\t\t//\t\twill occur.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(!gu._initSvgSerializerDeferred){\r\n\t\t\t\tgu._initSvgSerializerDeferred = new Deferred();\r\n\t\t\t\tvar f = win.doc.createElement(\"iframe\");\r\n\t\t\t\thtml.style(f, {\r\n\t\t\t\t\tdisplay: \"none\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\twidth: \"1em\",\r\n\t\t\t\t\theight: \"1em\",\r\n\t\t\t\t\ttop: \"-10000px\"\r\n\t\t\t\t});\r\n\t\t\t\tvar intv;\r\n\t\t\t\tif(has(\"ie\")){\r\n\t\t\t\t\tf.onreadystatechange = function(){\r\n\t\t\t\t\t\tif(f.contentWindow.document.readyState == \"complete\"){\r\n\t\t\t\t\t\t\tf.onreadystatechange = function() {};\r\n\t\t\t\t\t\t\tintv = setInterval(function() {\r\n\t\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\r\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\r\n\t\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\r\n\t\t\t\t\t\t\t\t\tclearInterval(intv);\r\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\r\n\t\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\tf.onload = function(){\r\n\t\t\t\t\t\tf.onload = function() {};\r\n\t\t\t\t\t\tintv = setInterval(function() {\r\n\t\t\t\t\t\t\tif(f.contentWindow[kernel.scopeMap[\"dojo\"][1]._scopeName] &&\r\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx &&\r\n\t\t\t\t\t\t\t   f.contentWindow[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils){\r\n\t\t\t\t\t\t\t\tclearInterval(intv);\r\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._gfxSvgProxy = f.contentWindow;\r\n\t\t\t\t\t\t\t\tf.contentWindow.parent[kernel.scopeMap[\"dojox\"][1]._scopeName].gfx.utils._svgSerializerInitialized();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t//We have to load the GFX SVG proxy frame.  Default is to use the one packaged in dojox.\r\n\t\t\t\tvar uri = (config[\"dojoxGfxSvgProxyFrameUrl\"]||require.toUrl(\"dojox/gfx/resources/gfxSvgProxyFrame.html\"));\r\n\t\t\t\tf.setAttribute(\"src\", uri.toString());\r\n\t\t\t\twin.body().appendChild(f);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_innerXML: function(/*Node*/node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tImplementation of MS's innerXML function, borrowed from dojox.xml.parser.\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node from which to generate the XML text representation.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(node.innerXML){\r\n\t\t\t\treturn node.innerXML;\t//String\r\n\t\t\t}else if(node.xml){\r\n\t\t\t\treturn node.xml;\t\t//String\r\n\t\t\t}else if(typeof XMLSerializer != \"undefined\"){\r\n\t\t\t\treturn (new XMLSerializer()).serializeToString(node);\t//String\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t_cleanSvg: function(svg) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tInternal function that cleans up artifacts in extracted SVG content.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tif(svg){\r\n\t\t\t\t//Make sure the namespace is set.\r\n\t\t\t\tif(svg.indexOf(\"xmlns=\\\"http://www.w3.org/2000/svg\\\"\") == -1){\r\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\r\n\t\t\t\t\tsvg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + svg;\r\n\t\t\t\t}\r\n\t\t\t\t//Same for xmlns:xlink (missing in Chrome and Safari)\r\n\t\t\t\tif(svg.indexOf(\"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\") == -1){\r\n\t\t\t\t\tsvg = svg.substring(4, svg.length);\r\n\t\t\t\t\tsvg = \"<svg xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\" + svg;\r\n\t\t\t\t}\r\n\t\t\t\t//and add namespace to href attribute if not done yet \r\n\t\t\t\t//(FF 5+ adds xlink:href but not the xmlns def)\r\n\t\t\t\tif(svg.indexOf(\"xlink:href\") === -1){\r\n\t\t\t\t\tsvg = svg.replace(/href\\s*=/g, \"xlink:href=\");\r\n\t\t\t\t}\r\n\t\t\t\t// in IE, <image are serialized as <img>\r\n\t\t\t\tsvg = svg.replace(/<img\\b([^>]*)>/gi,\"<image $1 />\");\r\n\t\t\t\t//Do some other cleanup, like stripping out the\r\n\t\t\t\t//dojoGfx attributes and quoting ids.\r\n\t\t\t\tsvg = svg.replace(/\\bdojoGfx\\w*\\s*=\\s*(['\"])\\w*\\1/g, \"\");\r\n\t\t\t\tsvg = svg.replace(/\\b__gfxObject__\\s*=\\s*(['\"])\\w*\\1/g, \"\");\r\n\t\t\t\tsvg = svg.replace(/[=]([^\"']+?)(\\s|>)/g,'=\"$1\"$2');\r\n\t\t\t\t\r\n\t\t\t\t// Undefined strokes (IE 8 seralization weirdness) should be removed to  \r\n\t\t\t\t// allow default.  'undefined' is not a valid value. \r\n\t\t\t\tsvg = svg.replace(/\\bstroke-opacity\\w*\\s*=\\s*(['\"])undefined\\1/g, \"\"); \t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn svg;  //Cleaned SVG text.\r\n\t\t}\r\n\t});\r\n\r\n\treturn gu;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/gfx/utils.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional.js":
/*!***********************************************!*\
  !*** ./node_modules/dojox/lang/functional.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./functional/lambda */ \"./node_modules/dojox/lang/functional/lambda.js\"), __webpack_require__(/*! ./functional/array */ \"./node_modules/dojox/lang/functional/array.js\"), __webpack_require__(/*! ./functional/object */ \"./node_modules/dojox/lang/functional/object.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(df){\r\n\treturn df;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvbGFuZy9mdW5jdGlvbmFsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2xhbmcvZnVuY3Rpb25hbC5qcz85YTBiIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCIuL2Z1bmN0aW9uYWwvbGFtYmRhXCIsIFwiLi9mdW5jdGlvbmFsL2FycmF5XCIsIFwiLi9mdW5jdGlvbmFsL29iamVjdFwiXSwgZnVuY3Rpb24oZGYpe1xyXG5cdHJldHVybiBkZjtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional/array.js":
/*!*****************************************************!*\
  !*** ./node_modules/dojox/lang/functional/array.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! ./lambda */ \"./node_modules/dojox/lang/functional/lambda.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(kernel, lang, arr, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- array-processing functions similar to standard JS functions\r\n\r\n// Notes:\r\n//\t- this module provides JS standard methods similar to high-level functions in dojo/_base/array.js:\r\n//\t\tforEach, map, filter, every, some\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- operate on dense arrays\r\n//\t- take a string as the array argument\r\n//\t- take an iterator objects as the array argument\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\r\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\r\n\t\tfilter: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new array with all elements that pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = [], v, i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\r\n\t\t\t\t\tv = a[i];\r\n\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\r\n\t\t\t\t}\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext();){\r\n\t\t\t\t\tv = a.next();\r\n\t\t\t\t\tif(f.call(o, v, i++, a)){ t.push(v); }\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tv = a[i];\r\n\t\t\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tforEach: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\texecutes a provided function once per array element.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; f.call(o, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext(); f.call(o, a.next(), i++, a));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tf.call(o, a[i], i, a);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn o;\t// Object\r\n\t\t},\r\n\t\tmap: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new array with the results of calling\r\n\t\t\t//\t\ta provided function on every element in this array.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t, n, i;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tt = new Array(n = a.length);\r\n\t\t\t\tfor(i = 0; i < n; t[i] = f.call(o, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tt = [];\r\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(f.call(o, a.next(), i++, a)));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tt = [];\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tt.push(f.call(o, a[i], i, a));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tevery: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttests whether all elements in the array pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\r\n\t\t\t\t\tif(!f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext();){\r\n\t\t\t\t\tif(!f.call(o, a.next(), i++, a)){\r\n\t\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(!f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\t// Boolean\r\n\t\t},\r\n\t\tsome: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttests whether some element in the array passes the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; ++i){\r\n\t\t\t\t\tif(f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext();){\r\n\t\t\t\t\tif(f.call(o, a.next(), i++, a)){\r\n\t\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(f.call(o, a[i], i, a)){\r\n\t\t\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t// Boolean\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn df;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional/array.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional/fold.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/lang/functional/fold.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! ./lambda */ \"./node_modules/dojox/lang/functional/lambda.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, arr, kernel, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- \"fold\" family of functions\r\n\r\n// Notes:\r\n//\t- missing high-level functions are provided with the compatible API:\r\n//\t\tfoldl, foldl1, foldr, foldr1\r\n//\t- missing JS standard functions are provided with the compatible API:\r\n//\t\treduce, reduceRight\r\n//\t- the fold's counterpart: unfold\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- operate on dense arrays\r\n//\t- take a string as the array argument\r\n//\t- take an iterator objects as the array argument (only foldl, foldl1, and reduce)\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// classic reduce-class functions\r\n\t\tfoldl: function(/*Array|String|Object*/ a, /*Function*/ f, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t\t//\t\tto right using a seed value as a starting point; returns the final\r\n\t\t\t//\t\tvalue.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tfor(i = 0, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tfor(i = 0; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn z;\t// Object\r\n\t\t},\r\n\t\tfoldl1: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t\t//\t\tto right; returns the final value.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar z, i, n;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tz = a[0];\r\n\t\t\t\tfor(i = 1, n = a.length; i < n; z = f.call(o, z, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tif(a.hasNext()){\r\n\t\t\t\t\tz = a.next();\r\n\t\t\t\t\tfor(i = 1; a.hasNext(); z = f.call(o, z, a.next(), i++, a));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tvar first = true;\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(first){\r\n\t\t\t\t\t\t\tz = a[i];\r\n\t\t\t\t\t\t\tfirst = false;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tz = f.call(o, z, a[i], i, a);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn z;\t// Object\r\n\t\t},\r\n\t\tfoldr: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\r\n\t\t\t//\t\tto left using a seed value as a starting point; returns the final\r\n\t\t\t//\t\tvalue.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tfor(var i = a.length; i > 0; --i, z = f.call(o, z, a[i], i, a));\r\n\t\t\treturn z;\t// Object\r\n\t\t},\r\n\t\tfoldr1: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\r\n\t\t\t//\t\tto left; returns the final value.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar n = a.length, z = a[n - 1], i = n - 1;\r\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a));\r\n\t\t\treturn z;\t// Object\r\n\t\t},\r\n\t\t// JS 1.8 standard array functions, which can take a lambda as a parameter.\r\n\t\treduce: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapply a function simultaneously against two values of the array\r\n\t\t\t//\t\t(from left-to-right) as to reduce it to a single value.\r\n\t\t\treturn arguments.length < 3 ? df.foldl1(a, f) : df.foldl(a, f, z);\t// Object\r\n\t\t},\r\n\t\treduceRight: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ z){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tapply a function simultaneously against two values of the array\r\n\t\t\t//\t\t(from right-to-left) as to reduce it to a single value.\r\n\t\t\treturn arguments.length < 3 ? df.foldr1(a, f) : df.foldr(a, f, z);\t// Object\r\n\t\t},\r\n\t\t// the fold's counterpart: unfold\r\n\t\tunfold: function(/*Function|String|Array*/ pr, /*Function|String|Array*/ f,\r\n\t\t\t\t\t\t/*Function|String|Array*/ g, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tbuilds an array by unfolding a value\r\n\t\t\to = o || kernel.global; f = df.lambda(f); g = df.lambda(g); pr = df.lambda(pr);\r\n\t\t\tvar t = [];\r\n\t\t\tfor(; !pr.call(o, z); t.push(f.call(o, z)), z = g.call(o, z));\r\n\t\t\treturn t;\t// Array\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional/fold.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional/lambda.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/lang/functional/lambda.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../.. */ \"./node_modules/dojox/main.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojox, lang, arr){\r\n\tvar df = lang.getObject(\"lang.functional\", true, dojox);\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- anonymous functions built from the string\r\n\r\n// Acknowledgements:\r\n//\t- lambda() is based on work by Oliver Steele\r\n//\t\t(http://osteele.com/sources/javascript/functional/functional.js)\r\n//\t\twhich was published under MIT License\r\n\r\n// Notes:\r\n//\t- lambda() produces functions, which after the compilation step are\r\n//\t\tas fast as regular JS functions (at least theoretically).\r\n\r\n// Lambda input values:\r\n//\t- returns functions unchanged\r\n//\t- converts strings to functions\r\n//\t- converts arrays to a functional composition\r\n\r\n\tvar lcache = {};\r\n\r\n\t// split() is augmented on IE6 to ensure the uniform behavior\r\n\tvar split = \"ab\".split(/a*/).length > 1 ? String.prototype.split :\r\n\t\t\tfunction(sep){\r\n\t\t\t\t var r = this.split.call(this, sep),\r\n\t\t\t\t\t m = sep.exec(this);\r\n\t\t\t\t if(m && m.index == 0){ r.unshift(\"\"); }\r\n\t\t\t\t return r;\r\n\t\t\t};\r\n\t\t\t\r\n\tvar lambda = function(/*String*/ s){\r\n\t\tvar args = [], sects = split.call(s, /\\s*->\\s*/m);\r\n\t\tif(sects.length > 1){\r\n\t\t\twhile(sects.length){\r\n\t\t\t\ts = sects.pop();\r\n\t\t\t\targs = sects.pop().split(/\\s*,\\s*|\\s+/m);\r\n\t\t\t\tif(sects.length){ sects.push(\"(function(\" + args.join(\", \") + \"){ return (\" + s + \"); })\"); }\r\n\t\t\t}\r\n\t\t}else if(s.match(/\\b_\\b/)){\r\n\t\t\targs = [\"_\"];\r\n\t\t}else{\r\n\t\t\tvar l = s.match(/^\\s*(?:[+*\\/%&|\\^\\.=<>]|!=)/m),\r\n\t\t\t\tr = s.match(/[+\\-*\\/%&|\\^\\.=<>!]\\s*$/m);\r\n\t\t\tif(l || r){\r\n\t\t\t\tif(l){\r\n\t\t\t\t\targs.push(\"$1\");\r\n\t\t\t\t\ts = \"$1\" + s;\r\n\t\t\t\t}\r\n\t\t\t\tif(r){\r\n\t\t\t\t\targs.push(\"$2\");\r\n\t\t\t\t\ts = s + \"$2\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// the point of the long regex below is to exclude all well-known\r\n\t\t\t\t// lower-case words from the list of potential arguments\r\n\t\t\t\tvar vars = s.\r\n\t\t\t\t\treplace(/(?:\\b[A-Z]|\\.[a-zA-Z_$])[a-zA-Z_$\\d]*|[a-zA-Z_$][a-zA-Z_$\\d]*:|this|true|false|null|undefined|typeof|instanceof|in|delete|new|void|arguments|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape|dojo|dijit|dojox|window|document|'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"/g, \"\").\r\n\t\t\t\t\tmatch(/([a-z_$][a-z_$\\d]*)/gi) || [], t = {};\r\n\t\t\t\tarr.forEach(vars, function(v){\r\n\t\t\t\t\tif(!t.hasOwnProperty(v)){\r\n\t\t\t\t\t\targs.push(v);\r\n\t\t\t\t\t\tt[v] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {args: args, body: s};\t// Object\r\n\t};\r\n\r\n\tvar compose = function(/*Array*/ a){\r\n\t\treturn a.length ?\r\n\t\t\t\t\tfunction(){\r\n\t\t\t\t\t\tvar i = a.length - 1, x = df.lambda(a[i]).apply(this, arguments);\r\n\t\t\t\t\t\tfor(--i; i >= 0; --i){ x = df.lambda(a[i]).call(this, x); }\r\n\t\t\t\t\t\treturn x;\r\n\t\t\t\t\t}\r\n\t\t\t\t:\r\n\t\t\t\t\t// identity\r\n\t\t\t\t\tfunction(x){ return x; };\r\n\t};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// lambda\r\n\t\trawLambda: function(/*String*/ s){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\r\n\t\t\t//\t\treturns an object describing the function; functions are\r\n\t\t\t//\t\tpassed through unmodified.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method is to normalize a functional representation (a\r\n\t\t\t//\t\ttext snippet) to an object that contains an array of\r\n\t\t\t//\t\targuments, and a body , which is used to calculate the\r\n\t\t\t//\t\treturning value.\r\n\t\t\treturn lambda(s);\t// Object\r\n\t\t},\r\n\t\tbuildLambda: function(/*String*/ s){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tbuilds a function from a snippet, returns a string, which\r\n\t\t\t//\t\trepresents the function.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method returns a textual representation of a function\r\n\t\t\t//\t\tbuilt from the snippet. It is meant to be evaled in the\r\n\t\t\t//\t\tproper context, so local variables can be pulled from the\r\n\t\t\t//\t\tenvironment.\r\n\t\t\tvar l = lambda(s);\r\n\t\t\treturn \"function(\" + l.args.join(\",\") + \"){return (\" + l.body + \");}\";\t// String\r\n\t\t},\r\n\t\tlambda: function(/*Function|String|Array*/ s){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tbuilds a function from a snippet, or array (composing),\r\n\t\t\t//\t\treturns a function object; functions are passed through\r\n\t\t\t//\t\tunmodified.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis method is used to normalize a functional\r\n\t\t\t//\t\trepresentation (a text snippet, an array, or a function) to\r\n\t\t\t//\t\ta function object.\r\n\t\t\tif(typeof s == \"function\"){ return s; }\r\n\t\t\tif(s instanceof Array){ return compose(s); }\r\n\t\t\tif(lcache.hasOwnProperty(s)){ return lcache[s]; }\r\n\t\t\tvar l = lambda(s);\r\n\t\t\treturn lcache[s] = new Function(l.args, \"return (\" + l.body + \");\");\t// Function\r\n\t\t},\r\n\t\tclearLambdaCache: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tclears internal cache of lambdas\r\n\t\t\tlcache = {};\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn df;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional/lambda.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional/object.js":
/*!******************************************************!*\
  !*** ./node_modules/dojox/lang/functional/object.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./lambda */ \"./node_modules/dojox/lang/functional/lambda.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(kernel, lang, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- object/dictionary helpers\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- skip all attributes that are present in the empty object\r\n//\t\t(IE and/or 3rd-party libraries).\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// object helpers\r\n\t\tkeys: function(/*Object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of all keys in the object\r\n\t\t\tvar t = [];\r\n\t\t\tfor(var i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tt.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn\tt; // Array\r\n\t\t},\r\n\t\tvalues: function(/*Object*/ obj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\treturns an array of all values in the object\r\n\t\t\tvar t = [];\r\n\t\t\tfor(var i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tt.push(obj[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn\tt; // Array\r\n\t\t},\r\n\t\tfilterIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates new object with all attributes that pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = {}, v, i;\r\n\t\t\tfor(i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tv = obj[i];\r\n\t\t\t\t\tif(f.call(o, v, i, obj)){ t[i] = v; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Object\r\n\t\t},\r\n\t\tforIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\titerates over all object attributes.\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tfor(var i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tf.call(o, obj[i], i, obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn o;\t// Object\r\n\t\t},\r\n\t\tmapIn: function(/*Object*/ obj, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates new object with the results of calling\r\n\t\t\t//\t\ta provided function on every attribute in this object.\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = {}, i;\r\n\t\t\tfor(i in obj){\r\n\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\tt[i] = f.call(o, obj[i], i, obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Object\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn df;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvbGFuZy9mdW5jdGlvbmFsL29iamVjdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9sYW5nL2Z1bmN0aW9uYWwvb2JqZWN0LmpzPzFjZTciXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2Uva2VybmVsXCIsIFwiZG9qby9fYmFzZS9sYW5nXCIsIFwiLi9sYW1iZGFcIl0sIGZ1bmN0aW9uKGtlcm5lbCwgbGFuZywgZGYpe1xyXG5cclxuLy8gVGhpcyBtb2R1bGUgYWRkcyBoaWdoLWxldmVsIGZ1bmN0aW9ucyBhbmQgcmVsYXRlZCBjb25zdHJ1Y3RzOlxyXG4vL1x0LSBvYmplY3QvZGljdGlvbmFyeSBoZWxwZXJzXHJcblxyXG4vLyBEZWZpbmVkIG1ldGhvZHM6XHJcbi8vXHQtIHRha2UgYW55IHZhbGlkIGxhbWJkYSBhcmd1bWVudCBhcyB0aGUgZnVuY3Rpb25hbCBhcmd1bWVudFxyXG4vL1x0LSBza2lwIGFsbCBhdHRyaWJ1dGVzIHRoYXQgYXJlIHByZXNlbnQgaW4gdGhlIGVtcHR5IG9iamVjdFxyXG4vL1x0XHQoSUUgYW5kL29yIDNyZC1wYXJ0eSBsaWJyYXJpZXMpLlxyXG5cclxuXHR2YXIgZW1wdHkgPSB7fTtcclxuXHJcblx0bGFuZy5taXhpbihkZiwge1xyXG5cdFx0Ly8gb2JqZWN0IGhlbHBlcnNcclxuXHRcdGtleXM6IGZ1bmN0aW9uKC8qT2JqZWN0Ki8gb2JqKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0cmV0dXJucyBhbiBhcnJheSBvZiBhbGwga2V5cyBpbiB0aGUgb2JqZWN0XHJcblx0XHRcdHZhciB0ID0gW107XHJcblx0XHRcdGZvcih2YXIgaSBpbiBvYmope1xyXG5cdFx0XHRcdGlmKCEoaSBpbiBlbXB0eSkpe1xyXG5cdFx0XHRcdFx0dC5wdXNoKGkpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm5cdHQ7IC8vIEFycmF5XHJcblx0XHR9LFxyXG5cdFx0dmFsdWVzOiBmdW5jdGlvbigvKk9iamVjdCovIG9iail7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdHJldHVybnMgYW4gYXJyYXkgb2YgYWxsIHZhbHVlcyBpbiB0aGUgb2JqZWN0XHJcblx0XHRcdHZhciB0ID0gW107XHJcblx0XHRcdGZvcih2YXIgaSBpbiBvYmope1xyXG5cdFx0XHRcdGlmKCEoaSBpbiBlbXB0eSkpe1xyXG5cdFx0XHRcdFx0dC5wdXNoKG9ialtpXSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVyblx0dDsgLy8gQXJyYXlcclxuXHRcdH0sXHJcblx0XHRmaWx0ZXJJbjogZnVuY3Rpb24oLypPYmplY3QqLyBvYmosIC8qRnVuY3Rpb258U3RyaW5nfEFycmF5Ki8gZiwgLypPYmplY3Q/Ki8gbyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdGNyZWF0ZXMgbmV3IG9iamVjdCB3aXRoIGFsbCBhdHRyaWJ1dGVzIHRoYXQgcGFzcyB0aGUgdGVzdFxyXG5cdFx0XHQvL1x0XHRpbXBsZW1lbnRlZCBieSB0aGUgcHJvdmlkZWQgZnVuY3Rpb24uXHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdHZhciB0ID0ge30sIHYsIGk7XHJcblx0XHRcdGZvcihpIGluIG9iail7XHJcblx0XHRcdFx0aWYoIShpIGluIGVtcHR5KSl7XHJcblx0XHRcdFx0XHR2ID0gb2JqW2ldO1xyXG5cdFx0XHRcdFx0aWYoZi5jYWxsKG8sIHYsIGksIG9iaikpeyB0W2ldID0gdjsgfVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdDtcdC8vIE9iamVjdFxyXG5cdFx0fSxcclxuXHRcdGZvckluOiBmdW5jdGlvbigvKk9iamVjdCovIG9iaiwgLypGdW5jdGlvbnxTdHJpbmd8QXJyYXkqLyBmLCAvKk9iamVjdD8qLyBvKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0aXRlcmF0ZXMgb3ZlciBhbGwgb2JqZWN0IGF0dHJpYnV0ZXMuXHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdGZvcih2YXIgaSBpbiBvYmope1xyXG5cdFx0XHRcdGlmKCEoaSBpbiBlbXB0eSkpe1xyXG5cdFx0XHRcdFx0Zi5jYWxsKG8sIG9ialtpXSwgaSwgb2JqKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIG87XHQvLyBPYmplY3RcclxuXHRcdH0sXHJcblx0XHRtYXBJbjogZnVuY3Rpb24oLypPYmplY3QqLyBvYmosIC8qRnVuY3Rpb258U3RyaW5nfEFycmF5Ki8gZiwgLypPYmplY3Q/Ki8gbyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdGNyZWF0ZXMgbmV3IG9iamVjdCB3aXRoIHRoZSByZXN1bHRzIG9mIGNhbGxpbmdcclxuXHRcdFx0Ly9cdFx0YSBwcm92aWRlZCBmdW5jdGlvbiBvbiBldmVyeSBhdHRyaWJ1dGUgaW4gdGhpcyBvYmplY3QuXHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdHZhciB0ID0ge30sIGk7XHJcblx0XHRcdGZvcihpIGluIG9iail7XHJcblx0XHRcdFx0aWYoIShpIGluIGVtcHR5KSl7XHJcblx0XHRcdFx0XHR0W2ldID0gZi5jYWxsKG8sIG9ialtpXSwgaSwgb2JqKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHQ7XHQvLyBPYmplY3RcclxuXHRcdH1cclxuXHR9KTtcclxuXHRcclxuXHRyZXR1cm4gZGY7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional/object.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional/reversed.js":
/*!********************************************************!*\
  !*** ./node_modules/dojox/lang/functional/reversed.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\") ,__webpack_require__(/*! ./lambda */ \"./node_modules/dojox/lang/functional/lambda.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, kernel, df){\r\n// This module adds high-level functions and related constructs:\r\n//\t- reversed versions of array-processing functions similar to standard JS functions\r\n\r\n// Notes:\r\n//\t- this module provides reversed versions of standard array-processing functions:\r\n//\t\tforEachRev, mapRev, filterRev\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- operate on dense arrays\r\n//\t- take a string as the array argument\r\n\r\n\tlang.mixin(df, {\r\n\t\t// JS 1.6 standard array functions, which can take a lambda as a parameter.\r\n\t\t// Consider using dojo._base.array functions, if you don't need the lambda support.\r\n\t\tfilterRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new array with all elements that pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t = [], v, i = a.length - 1;\r\n\t\t\tfor(; i >= 0; --i){\r\n\t\t\t\tv = a[i];\r\n\t\t\t\tif(f.call(o, v, i, a)){ t.push(v); }\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tforEachRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\texecutes a provided function once per array element.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tfor(var i = a.length - 1; i >= 0; f.call(o, a[i], i, a), --i);\r\n\t\t},\r\n\t\tmapRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tcreates a new array with the results of calling\r\n\t\t\t//\t\ta provided function on every element in this array.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar n = a.length, t = new Array(n), i = n - 1, j = 0;\r\n\t\t\tfor(; i >= 0; t[j++] = f.call(o, a[i], i, a), --i);\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\teveryRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttests whether all elements in the array pass the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\r\n\t\t\t\tif(!f.call(o, a[i], i, a)){\r\n\t\t\t\t\treturn false;\t// Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\t// Boolean\r\n\t\t},\r\n\t\tsomeRev: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\ttests whether some element in the array passes the test\r\n\t\t\t//\t\timplemented by the provided function.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tfor(var i = a.length - 1; i >= 0; --i){\r\n\t\t\t\tif(f.call(o, a[i], i, a)){\r\n\t\t\t\t\treturn true;\t// Boolean\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\t// Boolean\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn df;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvbGFuZy9mdW5jdGlvbmFsL3JldmVyc2VkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam94L2xhbmcvZnVuY3Rpb25hbC9yZXZlcnNlZC5qcz9iNWQ2Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCJkb2pvL19iYXNlL2xhbmdcIiwgXCJkb2pvL19iYXNlL2tlcm5lbFwiICxcIi4vbGFtYmRhXCJdLFxyXG5cdGZ1bmN0aW9uKGxhbmcsIGtlcm5lbCwgZGYpe1xyXG4vLyBUaGlzIG1vZHVsZSBhZGRzIGhpZ2gtbGV2ZWwgZnVuY3Rpb25zIGFuZCByZWxhdGVkIGNvbnN0cnVjdHM6XHJcbi8vXHQtIHJldmVyc2VkIHZlcnNpb25zIG9mIGFycmF5LXByb2Nlc3NpbmcgZnVuY3Rpb25zIHNpbWlsYXIgdG8gc3RhbmRhcmQgSlMgZnVuY3Rpb25zXHJcblxyXG4vLyBOb3RlczpcclxuLy9cdC0gdGhpcyBtb2R1bGUgcHJvdmlkZXMgcmV2ZXJzZWQgdmVyc2lvbnMgb2Ygc3RhbmRhcmQgYXJyYXktcHJvY2Vzc2luZyBmdW5jdGlvbnM6XHJcbi8vXHRcdGZvckVhY2hSZXYsIG1hcFJldiwgZmlsdGVyUmV2XHJcblxyXG4vLyBEZWZpbmVkIG1ldGhvZHM6XHJcbi8vXHQtIHRha2UgYW55IHZhbGlkIGxhbWJkYSBhcmd1bWVudCBhcyB0aGUgZnVuY3Rpb25hbCBhcmd1bWVudFxyXG4vL1x0LSBvcGVyYXRlIG9uIGRlbnNlIGFycmF5c1xyXG4vL1x0LSB0YWtlIGEgc3RyaW5nIGFzIHRoZSBhcnJheSBhcmd1bWVudFxyXG5cclxuXHRsYW5nLm1peGluKGRmLCB7XHJcblx0XHQvLyBKUyAxLjYgc3RhbmRhcmQgYXJyYXkgZnVuY3Rpb25zLCB3aGljaCBjYW4gdGFrZSBhIGxhbWJkYSBhcyBhIHBhcmFtZXRlci5cclxuXHRcdC8vIENvbnNpZGVyIHVzaW5nIGRvam8uX2Jhc2UuYXJyYXkgZnVuY3Rpb25zLCBpZiB5b3UgZG9uJ3QgbmVlZCB0aGUgbGFtYmRhIHN1cHBvcnQuXHJcblx0XHRmaWx0ZXJSZXY6IGZ1bmN0aW9uKC8qQXJyYXl8U3RyaW5nKi8gYSwgLypGdW5jdGlvbnxTdHJpbmd8QXJyYXkqLyBmLCAvKk9iamVjdD8qLyBvKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Y3JlYXRlcyBhIG5ldyBhcnJheSB3aXRoIGFsbCBlbGVtZW50cyB0aGF0IHBhc3MgdGhlIHRlc3RcclxuXHRcdFx0Ly9cdFx0aW1wbGVtZW50ZWQgYnkgdGhlIHByb3ZpZGVkIGZ1bmN0aW9uLlxyXG5cdFx0XHRpZih0eXBlb2YgYSA9PSBcInN0cmluZ1wiKXsgYSA9IGEuc3BsaXQoXCJcIik7IH1cclxuXHRcdFx0byA9IG8gfHwga2VybmVsLmdsb2JhbDsgZiA9IGRmLmxhbWJkYShmKTtcclxuXHRcdFx0dmFyIHQgPSBbXSwgdiwgaSA9IGEubGVuZ3RoIC0gMTtcclxuXHRcdFx0Zm9yKDsgaSA+PSAwOyAtLWkpe1xyXG5cdFx0XHRcdHYgPSBhW2ldO1xyXG5cdFx0XHRcdGlmKGYuY2FsbChvLCB2LCBpLCBhKSl7IHQucHVzaCh2KTsgfVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0O1x0Ly8gQXJyYXlcclxuXHRcdH0sXHJcblx0XHRmb3JFYWNoUmV2OiBmdW5jdGlvbigvKkFycmF5fFN0cmluZyovIGEsIC8qRnVuY3Rpb258U3RyaW5nfEFycmF5Ki8gZiwgLypPYmplY3Q/Ki8gbyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdGV4ZWN1dGVzIGEgcHJvdmlkZWQgZnVuY3Rpb24gb25jZSBwZXIgYXJyYXkgZWxlbWVudC5cclxuXHRcdFx0aWYodHlwZW9mIGEgPT0gXCJzdHJpbmdcIil7IGEgPSBhLnNwbGl0KFwiXCIpOyB9XHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdGZvcih2YXIgaSA9IGEubGVuZ3RoIC0gMTsgaSA+PSAwOyBmLmNhbGwobywgYVtpXSwgaSwgYSksIC0taSk7XHJcblx0XHR9LFxyXG5cdFx0bWFwUmV2OiBmdW5jdGlvbigvKkFycmF5fFN0cmluZyovIGEsIC8qRnVuY3Rpb258U3RyaW5nfEFycmF5Ki8gZiwgLypPYmplY3Q/Ki8gbyl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdGNyZWF0ZXMgYSBuZXcgYXJyYXkgd2l0aCB0aGUgcmVzdWx0cyBvZiBjYWxsaW5nXHJcblx0XHRcdC8vXHRcdGEgcHJvdmlkZWQgZnVuY3Rpb24gb24gZXZlcnkgZWxlbWVudCBpbiB0aGlzIGFycmF5LlxyXG5cdFx0XHRpZih0eXBlb2YgYSA9PSBcInN0cmluZ1wiKXsgYSA9IGEuc3BsaXQoXCJcIik7IH1cclxuXHRcdFx0byA9IG8gfHwga2VybmVsLmdsb2JhbDsgZiA9IGRmLmxhbWJkYShmKTtcclxuXHRcdFx0dmFyIG4gPSBhLmxlbmd0aCwgdCA9IG5ldyBBcnJheShuKSwgaSA9IG4gLSAxLCBqID0gMDtcclxuXHRcdFx0Zm9yKDsgaSA+PSAwOyB0W2orK10gPSBmLmNhbGwobywgYVtpXSwgaSwgYSksIC0taSk7XHJcblx0XHRcdHJldHVybiB0O1x0Ly8gQXJyYXlcclxuXHRcdH0sXHJcblx0XHRldmVyeVJldjogZnVuY3Rpb24oLypBcnJheXxTdHJpbmcqLyBhLCAvKkZ1bmN0aW9ufFN0cmluZ3xBcnJheSovIGYsIC8qT2JqZWN0PyovIG8pe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHR0ZXN0cyB3aGV0aGVyIGFsbCBlbGVtZW50cyBpbiB0aGUgYXJyYXkgcGFzcyB0aGUgdGVzdFxyXG5cdFx0XHQvL1x0XHRpbXBsZW1lbnRlZCBieSB0aGUgcHJvdmlkZWQgZnVuY3Rpb24uXHJcblx0XHRcdGlmKHR5cGVvZiBhID09IFwic3RyaW5nXCIpeyBhID0gYS5zcGxpdChcIlwiKTsgfVxyXG5cdFx0XHRvID0gbyB8fCBrZXJuZWwuZ2xvYmFsOyBmID0gZGYubGFtYmRhKGYpO1xyXG5cdFx0XHRmb3IodmFyIGkgPSBhLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKXtcclxuXHRcdFx0XHRpZighZi5jYWxsKG8sIGFbaV0sIGksIGEpKXtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcdC8vIEJvb2xlYW5cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRydWU7XHQvLyBCb29sZWFuXHJcblx0XHR9LFxyXG5cdFx0c29tZVJldjogZnVuY3Rpb24oLypBcnJheXxTdHJpbmcqLyBhLCAvKkZ1bmN0aW9ufFN0cmluZ3xBcnJheSovIGYsIC8qT2JqZWN0PyovIG8pe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHR0ZXN0cyB3aGV0aGVyIHNvbWUgZWxlbWVudCBpbiB0aGUgYXJyYXkgcGFzc2VzIHRoZSB0ZXN0XHJcblx0XHRcdC8vXHRcdGltcGxlbWVudGVkIGJ5IHRoZSBwcm92aWRlZCBmdW5jdGlvbi5cclxuXHRcdFx0aWYodHlwZW9mIGEgPT0gXCJzdHJpbmdcIil7IGEgPSBhLnNwbGl0KFwiXCIpOyB9XHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdGZvcih2YXIgaSA9IGEubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpe1xyXG5cdFx0XHRcdGlmKGYuY2FsbChvLCBhW2ldLCBpLCBhKSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcdC8vIEJvb2xlYW5cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGZhbHNlO1x0Ly8gQm9vbGVhblxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdFxyXG5cdHJldHVybiBkZjtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsaVlBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional/reversed.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/functional/scan.js":
/*!****************************************************!*\
  !*** ./node_modules/dojox/lang/functional/scan.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./lambda */ \"./node_modules/dojox/lang/functional/lambda.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(kernel, lang, df){\r\n\r\n// This module adds high-level functions and related constructs:\r\n//\t- \"scan\" family of functions\r\n\r\n// Notes:\r\n//\t- missing high-level functions are provided with the compatible API:\r\n//\t\tscanl, scanl1, scanr, scanr1\r\n\r\n// Defined methods:\r\n//\t- take any valid lambda argument as the functional argument\r\n//\t- operate on dense arrays\r\n//\t- take a string as the array argument\r\n//\t- take an iterator objects as the array argument (only scanl, and scanl1)\r\n\r\n\tvar empty = {};\r\n\r\n\tlang.mixin(df, {\r\n\t\t// classic reduce-class functions\r\n\t\tscanl: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t\t//\t\tto right using a seed value as a starting point; returns an array\r\n\t\t\t//\t\tof values produced by foldl() at that point.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t, n, i;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tt = new Array((n = a.length) + 1);\r\n\t\t\t\tt[0] = z;\r\n\t\t\t\tfor(i = 0; i < n; z = f.call(o, z, a[i], i, a), t[++i] = z);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tt = [z];\r\n\t\t\t\tfor(i = 0; a.hasNext(); t.push(z = f.call(o, z, a.next(), i++, a)));\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tt = [z];\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tt.push(z = f.call(o, z, a[i], i, a));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tscanl1: function(/*Array|String|Object*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from left\r\n\t\t\t//\t\tto right; returns an array of values produced by foldl1() at that\r\n\t\t\t//\t\tpoint.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar t, n, z, first = true;\r\n\t\t\tif(lang.isArray(a)){\r\n\t\t\t\t// array\r\n\t\t\t\tt = new Array(n = a.length);\r\n\t\t\t\tt[0] = z = a[0];\r\n\t\t\t\tfor(var i = 1; i < n; t[i] = z = f.call(o, z, a[i], i, a), ++i);\r\n\t\t\t}else if(typeof a.hasNext == \"function\" && typeof a.next == \"function\"){\r\n\t\t\t\t// iterator\r\n\t\t\t\tif(a.hasNext()){\r\n\t\t\t\t\tt = [z = a.next()];\r\n\t\t\t\t\tfor(i = 1; a.hasNext(); t.push(z = f.call(o, z, a.next(), i++, a)));\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// object/dictionary\r\n\t\t\t\tfor(i in a){\r\n\t\t\t\t\tif(!(i in empty)){\r\n\t\t\t\t\t\tif(first){\r\n\t\t\t\t\t\t\tt = [z = a[i]];\r\n\t\t\t\t\t\t\tfirst = false;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tt.push(z = f.call(o, z, a[i], i, a));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tscanr: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object*/ z, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\r\n\t\t\t//\t\tto left using a seed value as a starting point; returns an array\r\n\t\t\t//\t\tof values produced by foldr() at that point.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar n = a.length, t = new Array(n + 1), i = n;\r\n\t\t\tt[n] = z;\r\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a), t[i] = z);\r\n\t\t\treturn t;\t// Array\r\n\t\t},\r\n\t\tscanr1: function(/*Array|String*/ a, /*Function|String|Array*/ f, /*Object?*/ o){\r\n\t\t\t// summary:\r\n\t\t\t//\t\trepeatedly applies a binary function to an array from right\r\n\t\t\t//\t\tto left; returns an array of values produced by foldr1() at that\r\n\t\t\t//\t\tpoint.\r\n\t\t\tif(typeof a == \"string\"){ a = a.split(\"\"); }\r\n\t\t\to = o || kernel.global; f = df.lambda(f);\r\n\t\t\tvar n = a.length, t = new Array(n), z = a[n - 1], i = n - 1;\r\n\t\t\tt[i] = z;\r\n\t\t\tfor(; i > 0; --i, z = f.call(o, z, a[i], i, a), t[i] = z);\r\n\t\t\treturn t;\t// Array\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvbGFuZy9mdW5jdGlvbmFsL3NjYW4uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9qb3gvbGFuZy9mdW5jdGlvbmFsL3NjYW4uanM/MjY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9fYmFzZS9rZXJuZWxcIiwgXCJkb2pvL19iYXNlL2xhbmdcIiwgXCIuL2xhbWJkYVwiXSwgZnVuY3Rpb24oa2VybmVsLCBsYW5nLCBkZil7XHJcblxyXG4vLyBUaGlzIG1vZHVsZSBhZGRzIGhpZ2gtbGV2ZWwgZnVuY3Rpb25zIGFuZCByZWxhdGVkIGNvbnN0cnVjdHM6XHJcbi8vXHQtIFwic2NhblwiIGZhbWlseSBvZiBmdW5jdGlvbnNcclxuXHJcbi8vIE5vdGVzOlxyXG4vL1x0LSBtaXNzaW5nIGhpZ2gtbGV2ZWwgZnVuY3Rpb25zIGFyZSBwcm92aWRlZCB3aXRoIHRoZSBjb21wYXRpYmxlIEFQSTpcclxuLy9cdFx0c2NhbmwsIHNjYW5sMSwgc2NhbnIsIHNjYW5yMVxyXG5cclxuLy8gRGVmaW5lZCBtZXRob2RzOlxyXG4vL1x0LSB0YWtlIGFueSB2YWxpZCBsYW1iZGEgYXJndW1lbnQgYXMgdGhlIGZ1bmN0aW9uYWwgYXJndW1lbnRcclxuLy9cdC0gb3BlcmF0ZSBvbiBkZW5zZSBhcnJheXNcclxuLy9cdC0gdGFrZSBhIHN0cmluZyBhcyB0aGUgYXJyYXkgYXJndW1lbnRcclxuLy9cdC0gdGFrZSBhbiBpdGVyYXRvciBvYmplY3RzIGFzIHRoZSBhcnJheSBhcmd1bWVudCAob25seSBzY2FubCwgYW5kIHNjYW5sMSlcclxuXHJcblx0dmFyIGVtcHR5ID0ge307XHJcblxyXG5cdGxhbmcubWl4aW4oZGYsIHtcclxuXHRcdC8vIGNsYXNzaWMgcmVkdWNlLWNsYXNzIGZ1bmN0aW9uc1xyXG5cdFx0c2Nhbmw6IGZ1bmN0aW9uKC8qQXJyYXl8U3RyaW5nfE9iamVjdCovIGEsIC8qRnVuY3Rpb258U3RyaW5nfEFycmF5Ki8gZiwgLypPYmplY3QqLyB6LCAvKk9iamVjdD8qLyBvKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0cmVwZWF0ZWRseSBhcHBsaWVzIGEgYmluYXJ5IGZ1bmN0aW9uIHRvIGFuIGFycmF5IGZyb20gbGVmdFxyXG5cdFx0XHQvL1x0XHR0byByaWdodCB1c2luZyBhIHNlZWQgdmFsdWUgYXMgYSBzdGFydGluZyBwb2ludDsgcmV0dXJucyBhbiBhcnJheVxyXG5cdFx0XHQvL1x0XHRvZiB2YWx1ZXMgcHJvZHVjZWQgYnkgZm9sZGwoKSBhdCB0aGF0IHBvaW50LlxyXG5cdFx0XHRpZih0eXBlb2YgYSA9PSBcInN0cmluZ1wiKXsgYSA9IGEuc3BsaXQoXCJcIik7IH1cclxuXHRcdFx0byA9IG8gfHwga2VybmVsLmdsb2JhbDsgZiA9IGRmLmxhbWJkYShmKTtcclxuXHRcdFx0dmFyIHQsIG4sIGk7XHJcblx0XHRcdGlmKGxhbmcuaXNBcnJheShhKSl7XHJcblx0XHRcdFx0Ly8gYXJyYXlcclxuXHRcdFx0XHR0ID0gbmV3IEFycmF5KChuID0gYS5sZW5ndGgpICsgMSk7XHJcblx0XHRcdFx0dFswXSA9IHo7XHJcblx0XHRcdFx0Zm9yKGkgPSAwOyBpIDwgbjsgeiA9IGYuY2FsbChvLCB6LCBhW2ldLCBpLCBhKSwgdFsrK2ldID0geik7XHJcblx0XHRcdH1lbHNlIGlmKHR5cGVvZiBhLmhhc05leHQgPT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBhLm5leHQgPT0gXCJmdW5jdGlvblwiKXtcclxuXHRcdFx0XHQvLyBpdGVyYXRvclxyXG5cdFx0XHRcdHQgPSBbel07XHJcblx0XHRcdFx0Zm9yKGkgPSAwOyBhLmhhc05leHQoKTsgdC5wdXNoKHogPSBmLmNhbGwobywgeiwgYS5uZXh0KCksIGkrKywgYSkpKTtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0Ly8gb2JqZWN0L2RpY3Rpb25hcnlcclxuXHRcdFx0XHR0ID0gW3pdO1xyXG5cdFx0XHRcdGZvcihpIGluIGEpe1xyXG5cdFx0XHRcdFx0aWYoIShpIGluIGVtcHR5KSl7XHJcblx0XHRcdFx0XHRcdHQucHVzaCh6ID0gZi5jYWxsKG8sIHosIGFbaV0sIGksIGEpKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHQ7XHQvLyBBcnJheVxyXG5cdFx0fSxcclxuXHRcdHNjYW5sMTogZnVuY3Rpb24oLypBcnJheXxTdHJpbmd8T2JqZWN0Ki8gYSwgLypGdW5jdGlvbnxTdHJpbmd8QXJyYXkqLyBmLCAvKk9iamVjdD8qLyBvKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0cmVwZWF0ZWRseSBhcHBsaWVzIGEgYmluYXJ5IGZ1bmN0aW9uIHRvIGFuIGFycmF5IGZyb20gbGVmdFxyXG5cdFx0XHQvL1x0XHR0byByaWdodDsgcmV0dXJucyBhbiBhcnJheSBvZiB2YWx1ZXMgcHJvZHVjZWQgYnkgZm9sZGwxKCkgYXQgdGhhdFxyXG5cdFx0XHQvL1x0XHRwb2ludC5cclxuXHRcdFx0aWYodHlwZW9mIGEgPT0gXCJzdHJpbmdcIil7IGEgPSBhLnNwbGl0KFwiXCIpOyB9XHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdHZhciB0LCBuLCB6LCBmaXJzdCA9IHRydWU7XHJcblx0XHRcdGlmKGxhbmcuaXNBcnJheShhKSl7XHJcblx0XHRcdFx0Ly8gYXJyYXlcclxuXHRcdFx0XHR0ID0gbmV3IEFycmF5KG4gPSBhLmxlbmd0aCk7XHJcblx0XHRcdFx0dFswXSA9IHogPSBhWzBdO1xyXG5cdFx0XHRcdGZvcih2YXIgaSA9IDE7IGkgPCBuOyB0W2ldID0geiA9IGYuY2FsbChvLCB6LCBhW2ldLCBpLCBhKSwgKytpKTtcclxuXHRcdFx0fWVsc2UgaWYodHlwZW9mIGEuaGFzTmV4dCA9PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGEubmV4dCA9PSBcImZ1bmN0aW9uXCIpe1xyXG5cdFx0XHRcdC8vIGl0ZXJhdG9yXHJcblx0XHRcdFx0aWYoYS5oYXNOZXh0KCkpe1xyXG5cdFx0XHRcdFx0dCA9IFt6ID0gYS5uZXh0KCldO1xyXG5cdFx0XHRcdFx0Zm9yKGkgPSAxOyBhLmhhc05leHQoKTsgdC5wdXNoKHogPSBmLmNhbGwobywgeiwgYS5uZXh0KCksIGkrKywgYSkpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdC8vIG9iamVjdC9kaWN0aW9uYXJ5XHJcblx0XHRcdFx0Zm9yKGkgaW4gYSl7XHJcblx0XHRcdFx0XHRpZighKGkgaW4gZW1wdHkpKXtcclxuXHRcdFx0XHRcdFx0aWYoZmlyc3Qpe1xyXG5cdFx0XHRcdFx0XHRcdHQgPSBbeiA9IGFbaV1dO1xyXG5cdFx0XHRcdFx0XHRcdGZpcnN0ID0gZmFsc2U7XHJcblx0XHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHRcdHQucHVzaCh6ID0gZi5jYWxsKG8sIHosIGFbaV0sIGksIGEpKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdDtcdC8vIEFycmF5XHJcblx0XHR9LFxyXG5cdFx0c2NhbnI6IGZ1bmN0aW9uKC8qQXJyYXl8U3RyaW5nKi8gYSwgLypGdW5jdGlvbnxTdHJpbmd8QXJyYXkqLyBmLCAvKk9iamVjdCovIHosIC8qT2JqZWN0PyovIG8pe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRyZXBlYXRlZGx5IGFwcGxpZXMgYSBiaW5hcnkgZnVuY3Rpb24gdG8gYW4gYXJyYXkgZnJvbSByaWdodFxyXG5cdFx0XHQvL1x0XHR0byBsZWZ0IHVzaW5nIGEgc2VlZCB2YWx1ZSBhcyBhIHN0YXJ0aW5nIHBvaW50OyByZXR1cm5zIGFuIGFycmF5XHJcblx0XHRcdC8vXHRcdG9mIHZhbHVlcyBwcm9kdWNlZCBieSBmb2xkcigpIGF0IHRoYXQgcG9pbnQuXHJcblx0XHRcdGlmKHR5cGVvZiBhID09IFwic3RyaW5nXCIpeyBhID0gYS5zcGxpdChcIlwiKTsgfVxyXG5cdFx0XHRvID0gbyB8fCBrZXJuZWwuZ2xvYmFsOyBmID0gZGYubGFtYmRhKGYpO1xyXG5cdFx0XHR2YXIgbiA9IGEubGVuZ3RoLCB0ID0gbmV3IEFycmF5KG4gKyAxKSwgaSA9IG47XHJcblx0XHRcdHRbbl0gPSB6O1xyXG5cdFx0XHRmb3IoOyBpID4gMDsgLS1pLCB6ID0gZi5jYWxsKG8sIHosIGFbaV0sIGksIGEpLCB0W2ldID0geik7XHJcblx0XHRcdHJldHVybiB0O1x0Ly8gQXJyYXlcclxuXHRcdH0sXHJcblx0XHRzY2FucjE6IGZ1bmN0aW9uKC8qQXJyYXl8U3RyaW5nKi8gYSwgLypGdW5jdGlvbnxTdHJpbmd8QXJyYXkqLyBmLCAvKk9iamVjdD8qLyBvKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0cmVwZWF0ZWRseSBhcHBsaWVzIGEgYmluYXJ5IGZ1bmN0aW9uIHRvIGFuIGFycmF5IGZyb20gcmlnaHRcclxuXHRcdFx0Ly9cdFx0dG8gbGVmdDsgcmV0dXJucyBhbiBhcnJheSBvZiB2YWx1ZXMgcHJvZHVjZWQgYnkgZm9sZHIxKCkgYXQgdGhhdFxyXG5cdFx0XHQvL1x0XHRwb2ludC5cclxuXHRcdFx0aWYodHlwZW9mIGEgPT0gXCJzdHJpbmdcIil7IGEgPSBhLnNwbGl0KFwiXCIpOyB9XHJcblx0XHRcdG8gPSBvIHx8IGtlcm5lbC5nbG9iYWw7IGYgPSBkZi5sYW1iZGEoZik7XHJcblx0XHRcdHZhciBuID0gYS5sZW5ndGgsIHQgPSBuZXcgQXJyYXkobiksIHogPSBhW24gLSAxXSwgaSA9IG4gLSAxO1xyXG5cdFx0XHR0W2ldID0gejtcclxuXHRcdFx0Zm9yKDsgaSA+IDA7IC0taSwgeiA9IGYuY2FsbChvLCB6LCBhW2ldLCBpLCBhKSwgdFtpXSA9IHopO1xyXG5cdFx0XHRyZXR1cm4gdDtcdC8vIEFycmF5XHJcblx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/functional/scan.js\n");

/***/ }),

/***/ "./node_modules/dojox/lang/utils.js":
/*!******************************************!*\
  !*** ./node_modules/dojox/lang/utils.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! .. */ \"./node_modules/dojox/main.js\"), __webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojox, lang){\r\n\tvar du = lang.getObject(\"lang.utils\", true, dojox);\r\n\t\r\n\tvar empty = {}, opts = Object.prototype.toString;\r\n\r\n\tvar clone = function(o){\r\n\t\tif(o){\r\n\t\t\tswitch(opts.call(o)){\r\n\t\t\t\tcase \"[object Array]\":\r\n\t\t\t\t\treturn o.slice(0);\r\n\t\t\t\tcase \"[object Object]\":\r\n\t\t\t\t\treturn lang.delegate(o);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn o;\r\n\t}\r\n\t\r\n\tlang.mixin(du, {\r\n\t\tcoerceType: function(target, source){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCoerces one object to the type of another.\r\n\t\t\t// target: Object\r\n\t\t\t//\t\tobject, which typeof result is used to coerce \"source\" object.\r\n\t\t\t// source: Object\r\n\t\t\t//\t\tobject, which will be forced to change type.\r\n\t\t\tswitch(typeof target){\r\n\t\t\t\tcase \"number\":\treturn Number(eval(\"(\" + source + \")\"));\r\n\t\t\t\tcase \"string\":\treturn String(source);\r\n\t\t\t\tcase \"boolean\":\treturn Boolean(eval(\"(\" + source + \")\"));\r\n\t\t\t}\r\n\t\t\treturn eval(\"(\" + source + \")\");\r\n\t\t},\r\n\t\t\r\n\t\tupdateWithObject: function(target, source, conv){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\r\n\t\t\t// target: Object\r\n\t\t\t//\t\tthe \"target\" object to be updated\r\n\t\t\t// source: Object\r\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\r\n\t\t\t// conv: Boolean?\r\n\t\t\t//\t\tforce conversion to the original type\r\n\t\t\tif(!source){ return target; }\r\n\t\t\tfor(var x in target){\r\n\t\t\t\tif(x in source && !(x in empty)){\r\n\t\t\t\t\tvar t = target[x];\r\n\t\t\t\t\tif(t && typeof t == \"object\"){\r\n\t\t\t\t\t\tdu.updateWithObject(t, source[x], conv);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\ttarget[x] = conv ? du.coerceType(t, source[x]) : clone(source[x]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn target;\t// Object\r\n\t\t},\r\n\t\r\n\t\tupdateWithPattern: function(target, source, pattern, conv){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUpdates an existing object in place with properties from an \"source\" object.\r\n\t\t\t// target: Object\r\n\t\t\t//\t\tthe \"target\" object to be updated\r\n\t\t\t// source: Object\r\n\t\t\t//\t\tthe \"source\" object, whose properties will be used to source the existed object.\r\n\t\t\t// pattern: Object\r\n\t\t\t//\t\tobject, whose properties will be used to pull values from the \"source\"\r\n\t\t\t// conv: Boolean?\r\n\t\t\t//\t\tforce conversion to the original type\r\n\t\t\tif(!source || !pattern){ return target; }\r\n\t\t\tfor(var x in pattern){\r\n\t\t\t\tif(x in source && !(x in empty)){\r\n\t\t\t\t\ttarget[x] = conv ? du.coerceType(pattern[x], source[x]) : clone(source[x]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn target;\t// Object\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function(object, mixin){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMerge two objects structurally, mixin properties will override object's properties.\r\n\t\t\t// object: Object\r\n\t\t\t//\t\toriginal object.\r\n\t\t\t// mixin: Object\r\n\t\t\t//\t\tadditional object, which properties will override object's properties.\r\n\t\t\tif(mixin){\r\n\t\t\t\tvar otype = opts.call(object), mtype = opts.call(mixin), t, i, l, m;\r\n\t\t\t\tswitch(mtype){\r\n\t\t\t\t\tcase \"[object Array]\":\r\n\t\t\t\t\t\tif(mtype == otype){\r\n\t\t\t\t\t\t\tt = new Array(Math.max(object.length, mixin.length));\r\n\t\t\t\t\t\t\tfor(i = 0, l = t.length; i < l; ++i){\r\n\t\t\t\t\t\t\t\tt[i] = du.merge(object[i], mixin[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn t;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn mixin.slice(0);\r\n\t\t\t\t\tcase \"[object Object]\":\r\n\t\t\t\t\t\tif(mtype == otype && object){\r\n\t\t\t\t\t\t\tt = lang.delegate(object);\r\n\t\t\t\t\t\t\tfor(i in mixin){\r\n\t\t\t\t\t\t\t\tif(i in object){\r\n\t\t\t\t\t\t\t\t\tl = object[i];\r\n\t\t\t\t\t\t\t\t\tm = mixin[i];\r\n\t\t\t\t\t\t\t\t\tif(m !== l){\r\n\t\t\t\t\t\t\t\t\t\tt[i] = du.merge(l, m);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tt[i] = lang.clone(mixin[i]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn t;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn lang.clone(mixin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn mixin;\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn du;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvbGFuZy91dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9sYW5nL3V0aWxzLmpzP2U0NDAiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcIi4uXCIsIFwiZG9qby9fYmFzZS9sYW5nXCJdLCBcclxuICBmdW5jdGlvbihkb2pveCwgbGFuZyl7XHJcblx0dmFyIGR1ID0gbGFuZy5nZXRPYmplY3QoXCJsYW5nLnV0aWxzXCIsIHRydWUsIGRvam94KTtcclxuXHRcclxuXHR2YXIgZW1wdHkgPSB7fSwgb3B0cyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XHJcblxyXG5cdHZhciBjbG9uZSA9IGZ1bmN0aW9uKG8pe1xyXG5cdFx0aWYobyl7XHJcblx0XHRcdHN3aXRjaChvcHRzLmNhbGwobykpe1xyXG5cdFx0XHRcdGNhc2UgXCJbb2JqZWN0IEFycmF5XVwiOlxyXG5cdFx0XHRcdFx0cmV0dXJuIG8uc2xpY2UoMCk7XHJcblx0XHRcdFx0Y2FzZSBcIltvYmplY3QgT2JqZWN0XVwiOlxyXG5cdFx0XHRcdFx0cmV0dXJuIGxhbmcuZGVsZWdhdGUobyk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBvO1xyXG5cdH1cclxuXHRcclxuXHRsYW5nLm1peGluKGR1LCB7XHJcblx0XHRjb2VyY2VUeXBlOiBmdW5jdGlvbih0YXJnZXQsIHNvdXJjZSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENvZXJjZXMgb25lIG9iamVjdCB0byB0aGUgdHlwZSBvZiBhbm90aGVyLlxyXG5cdFx0XHQvLyB0YXJnZXQ6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRvYmplY3QsIHdoaWNoIHR5cGVvZiByZXN1bHQgaXMgdXNlZCB0byBjb2VyY2UgXCJzb3VyY2VcIiBvYmplY3QuXHJcblx0XHRcdC8vIHNvdXJjZTogT2JqZWN0XHJcblx0XHRcdC8vXHRcdG9iamVjdCwgd2hpY2ggd2lsbCBiZSBmb3JjZWQgdG8gY2hhbmdlIHR5cGUuXHJcblx0XHRcdHN3aXRjaCh0eXBlb2YgdGFyZ2V0KXtcclxuXHRcdFx0XHRjYXNlIFwibnVtYmVyXCI6XHRyZXR1cm4gTnVtYmVyKGV2YWwoXCIoXCIgKyBzb3VyY2UgKyBcIilcIikpO1xyXG5cdFx0XHRcdGNhc2UgXCJzdHJpbmdcIjpcdHJldHVybiBTdHJpbmcoc291cmNlKTtcclxuXHRcdFx0XHRjYXNlIFwiYm9vbGVhblwiOlx0cmV0dXJuIEJvb2xlYW4oZXZhbChcIihcIiArIHNvdXJjZSArIFwiKVwiKSk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGV2YWwoXCIoXCIgKyBzb3VyY2UgKyBcIilcIik7XHJcblx0XHR9LFxyXG5cdFx0XHJcblx0XHR1cGRhdGVXaXRoT2JqZWN0OiBmdW5jdGlvbih0YXJnZXQsIHNvdXJjZSwgY29udil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFVwZGF0ZXMgYW4gZXhpc3Rpbmcgb2JqZWN0IGluIHBsYWNlIHdpdGggcHJvcGVydGllcyBmcm9tIGFuIFwic291cmNlXCIgb2JqZWN0LlxyXG5cdFx0XHQvLyB0YXJnZXQ6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHR0aGUgXCJ0YXJnZXRcIiBvYmplY3QgdG8gYmUgdXBkYXRlZFxyXG5cdFx0XHQvLyBzb3VyY2U6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHR0aGUgXCJzb3VyY2VcIiBvYmplY3QsIHdob3NlIHByb3BlcnRpZXMgd2lsbCBiZSB1c2VkIHRvIHNvdXJjZSB0aGUgZXhpc3RlZCBvYmplY3QuXHJcblx0XHRcdC8vIGNvbnY6IEJvb2xlYW4/XHJcblx0XHRcdC8vXHRcdGZvcmNlIGNvbnZlcnNpb24gdG8gdGhlIG9yaWdpbmFsIHR5cGVcclxuXHRcdFx0aWYoIXNvdXJjZSl7IHJldHVybiB0YXJnZXQ7IH1cclxuXHRcdFx0Zm9yKHZhciB4IGluIHRhcmdldCl7XHJcblx0XHRcdFx0aWYoeCBpbiBzb3VyY2UgJiYgISh4IGluIGVtcHR5KSl7XHJcblx0XHRcdFx0XHR2YXIgdCA9IHRhcmdldFt4XTtcclxuXHRcdFx0XHRcdGlmKHQgJiYgdHlwZW9mIHQgPT0gXCJvYmplY3RcIil7XHJcblx0XHRcdFx0XHRcdGR1LnVwZGF0ZVdpdGhPYmplY3QodCwgc291cmNlW3hdLCBjb252KTtcclxuXHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHR0YXJnZXRbeF0gPSBjb252ID8gZHUuY29lcmNlVHlwZSh0LCBzb3VyY2VbeF0pIDogY2xvbmUoc291cmNlW3hdKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRhcmdldDtcdC8vIE9iamVjdFxyXG5cdFx0fSxcclxuXHRcclxuXHRcdHVwZGF0ZVdpdGhQYXR0ZXJuOiBmdW5jdGlvbih0YXJnZXQsIHNvdXJjZSwgcGF0dGVybiwgY29udil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFVwZGF0ZXMgYW4gZXhpc3Rpbmcgb2JqZWN0IGluIHBsYWNlIHdpdGggcHJvcGVydGllcyBmcm9tIGFuIFwic291cmNlXCIgb2JqZWN0LlxyXG5cdFx0XHQvLyB0YXJnZXQ6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHR0aGUgXCJ0YXJnZXRcIiBvYmplY3QgdG8gYmUgdXBkYXRlZFxyXG5cdFx0XHQvLyBzb3VyY2U6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHR0aGUgXCJzb3VyY2VcIiBvYmplY3QsIHdob3NlIHByb3BlcnRpZXMgd2lsbCBiZSB1c2VkIHRvIHNvdXJjZSB0aGUgZXhpc3RlZCBvYmplY3QuXHJcblx0XHRcdC8vIHBhdHRlcm46IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRvYmplY3QsIHdob3NlIHByb3BlcnRpZXMgd2lsbCBiZSB1c2VkIHRvIHB1bGwgdmFsdWVzIGZyb20gdGhlIFwic291cmNlXCJcclxuXHRcdFx0Ly8gY29udjogQm9vbGVhbj9cclxuXHRcdFx0Ly9cdFx0Zm9yY2UgY29udmVyc2lvbiB0byB0aGUgb3JpZ2luYWwgdHlwZVxyXG5cdFx0XHRpZighc291cmNlIHx8ICFwYXR0ZXJuKXsgcmV0dXJuIHRhcmdldDsgfVxyXG5cdFx0XHRmb3IodmFyIHggaW4gcGF0dGVybil7XHJcblx0XHRcdFx0aWYoeCBpbiBzb3VyY2UgJiYgISh4IGluIGVtcHR5KSl7XHJcblx0XHRcdFx0XHR0YXJnZXRbeF0gPSBjb252ID8gZHUuY29lcmNlVHlwZShwYXR0ZXJuW3hdLCBzb3VyY2VbeF0pIDogY2xvbmUoc291cmNlW3hdKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRhcmdldDtcdC8vIE9iamVjdFxyXG5cdFx0fSxcclxuXHRcdFxyXG5cdFx0bWVyZ2U6IGZ1bmN0aW9uKG9iamVjdCwgbWl4aW4pe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRNZXJnZSB0d28gb2JqZWN0cyBzdHJ1Y3R1cmFsbHksIG1peGluIHByb3BlcnRpZXMgd2lsbCBvdmVycmlkZSBvYmplY3QncyBwcm9wZXJ0aWVzLlxyXG5cdFx0XHQvLyBvYmplY3Q6IE9iamVjdFxyXG5cdFx0XHQvL1x0XHRvcmlnaW5hbCBvYmplY3QuXHJcblx0XHRcdC8vIG1peGluOiBPYmplY3RcclxuXHRcdFx0Ly9cdFx0YWRkaXRpb25hbCBvYmplY3QsIHdoaWNoIHByb3BlcnRpZXMgd2lsbCBvdmVycmlkZSBvYmplY3QncyBwcm9wZXJ0aWVzLlxyXG5cdFx0XHRpZihtaXhpbil7XHJcblx0XHRcdFx0dmFyIG90eXBlID0gb3B0cy5jYWxsKG9iamVjdCksIG10eXBlID0gb3B0cy5jYWxsKG1peGluKSwgdCwgaSwgbCwgbTtcclxuXHRcdFx0XHRzd2l0Y2gobXR5cGUpe1xyXG5cdFx0XHRcdFx0Y2FzZSBcIltvYmplY3QgQXJyYXldXCI6XHJcblx0XHRcdFx0XHRcdGlmKG10eXBlID09IG90eXBlKXtcclxuXHRcdFx0XHRcdFx0XHR0ID0gbmV3IEFycmF5KE1hdGgubWF4KG9iamVjdC5sZW5ndGgsIG1peGluLmxlbmd0aCkpO1xyXG5cdFx0XHRcdFx0XHRcdGZvcihpID0gMCwgbCA9IHQubGVuZ3RoOyBpIDwgbDsgKytpKXtcclxuXHRcdFx0XHRcdFx0XHRcdHRbaV0gPSBkdS5tZXJnZShvYmplY3RbaV0sIG1peGluW2ldKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHQ7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0cmV0dXJuIG1peGluLnNsaWNlKDApO1xyXG5cdFx0XHRcdFx0Y2FzZSBcIltvYmplY3QgT2JqZWN0XVwiOlxyXG5cdFx0XHRcdFx0XHRpZihtdHlwZSA9PSBvdHlwZSAmJiBvYmplY3Qpe1xyXG5cdFx0XHRcdFx0XHRcdHQgPSBsYW5nLmRlbGVnYXRlKG9iamVjdCk7XHJcblx0XHRcdFx0XHRcdFx0Zm9yKGkgaW4gbWl4aW4pe1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYoaSBpbiBvYmplY3Qpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRsID0gb2JqZWN0W2ldO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRtID0gbWl4aW5baV07XHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmKG0gIT09IGwpe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRbaV0gPSBkdS5tZXJnZShsLCBtKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHRbaV0gPSBsYW5nLmNsb25lKG1peGluW2ldKTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHQ7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0cmV0dXJuIGxhbmcuY2xvbmUobWl4aW4pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWl4aW47XHJcblx0XHR9XHJcblx0fSk7XHJcblx0XHJcblx0cmV0dXJuIGR1O1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxvUkFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojox/lang/utils.js\n");

/***/ }),

/***/ "./node_modules/dojox/main.js":
/*!************************************!*\
  !*** ./node_modules/dojox/main.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo) {\r\n\t// module:\r\n\t//\t\tdojox/main\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tThe dojox package main module; dojox package is somewhat unusual in that the main module currently just provides an empty object.\r\n\t\t//\t\tApps should require modules from the dojox packages directly, rather than loading this module.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dojo.dojox;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qb3gvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pveC9tYWluLmpzPzEwMTMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcImRvam8vX2Jhc2Uva2VybmVsXCJdLCBmdW5jdGlvbihkb2pvKSB7XHJcblx0Ly8gbW9kdWxlOlxyXG5cdC8vXHRcdGRvam94L21haW5cclxuXHJcblx0Lyo9PT09PVxyXG5cdHJldHVybiB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0VGhlIGRvam94IHBhY2thZ2UgbWFpbiBtb2R1bGU7IGRvam94IHBhY2thZ2UgaXMgc29tZXdoYXQgdW51c3VhbCBpbiB0aGF0IHRoZSBtYWluIG1vZHVsZSBjdXJyZW50bHkganVzdCBwcm92aWRlcyBhbiBlbXB0eSBvYmplY3QuXHJcblx0XHQvL1x0XHRBcHBzIHNob3VsZCByZXF1aXJlIG1vZHVsZXMgZnJvbSB0aGUgZG9qb3ggcGFja2FnZXMgZGlyZWN0bHksIHJhdGhlciB0aGFuIGxvYWRpbmcgdGhpcyBtb2R1bGUuXHJcblx0fTtcclxuXHQ9PT09PSovXHJcblxyXG5cdHJldHVybiBkb2pvLmRvam94O1xyXG59KTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojox/main.js\n");

/***/ })

}]);
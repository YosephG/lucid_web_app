(function(){
(this||window)["webpackJsonp"].registerAbsMids({
	'dijit/BackgroundIframe':"./node_modules/dijit/BackgroundIframe.js",
	'dijit/Destroyable':"./node_modules/dijit/Destroyable.js",
	'dijit/Tooltip':"./node_modules/dijit/Tooltip.js",
	'dijit/Viewport':"./node_modules/dijit/Viewport.js",
	'dijit/_AttachMixin':"./node_modules/dijit/_AttachMixin.js",
	'dijit/_BidiMixin':"./node_modules/dijit/_BidiMixin.js",
	'dijit/_FocusMixin':"./node_modules/dijit/_FocusMixin.js",
	'dijit/_OnDijitClickMixin':"./node_modules/dijit/_OnDijitClickMixin.js",
	'dijit/_TemplatedMixin':"./node_modules/dijit/_TemplatedMixin.js",
	'dijit/_Widget':"./node_modules/dijit/_Widget.js",
	'dijit/_WidgetBase':"./node_modules/dijit/_WidgetBase.js",
	'dijit/_base/manager':"./node_modules/dijit/_base/manager.js",
	'dijit/a11y':"./node_modules/dijit/a11y.js",
	'dijit/a11yclick':"./node_modules/dijit/a11yclick.js",
	'dijit/focus':"./node_modules/dijit/focus.js",
	'dijit/hccss':"./node_modules/dijit/hccss.js",
	'dijit/main':"./node_modules/dijit/main.js",
	'dijit/place':"./node_modules/dijit/place.js",
	'dijit/registry':"./node_modules/dijit/registry.js",
	'dojo/text!dijit/templates/Tooltip.html':"./node_modules/dojo-webpack-plugin/loaders/dojo/text/index.js!./node_modules/dijit/templates/Tooltip.html",
	'dojo/cache':"./node_modules/dojo/cache.js",
	'dojo/hccss':"./node_modules/dojo/hccss.js",
	'dojo/request':"./node_modules/dojo/request.js",
	'dojo/text':"./node_modules/dojo/text.js",
	'dojo/touch':"./node_modules/dojo/touch.js",
	'dojo/uacss':"./node_modules/dojo/uacss.js",
	'dojo/window':"./node_modules/dojo/window.js"
})
})(),(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[42],{

/***/ "./node_modules/dijit/BackgroundIframe.js":
/*!************************************************!*\
  !*** ./node_modules/dijit/BackgroundIframe.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__.dj.c(module.i),\t\t\t// require.toUrl\r\n\t__webpack_require__(/*! ./main */ \"./node_modules/dijit/main.js\"),\t// to export dijit.BackgroundIframe\r\n\t__webpack_require__(/*! dojo/_base/config */ \"./node_modules/dojo/_base/config.js\"),\r\n\t__webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"), // domConstruct.create\r\n\t__webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"), // domStyle.set\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.extend lang.hitch\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\") // has(\"ie\"), has(\"trident\"), has(\"quirks\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require, dijit, config, domConstruct, domStyle, lang, on, has){\r\n\r\n\t// module:\r\n\t//\t\tdijit/BackgroundIFrame\r\n\r\n\t// Flag for whether to create background iframe behind popups like Menus and Dialog.\r\n\t// A background iframe is useful to prevent problems with popups appearing behind applets/pdf files,\r\n\t// and is also useful on older versions of IE (IE6 and IE7) to prevent the \"bleed through select\" problem.\r\n\t// By default, it's enabled for IE6-11, excluding Windows Phone 8.\r\n\t// TODO: For 2.0, make this false by default.  Also, possibly move definition to has.js so that this module can be\r\n\t// conditionally required via  dojo/has!bgIfame?dijit/BackgroundIframe\r\n\thas.add(\"config-bgIframe\",\r\n    \t(has(\"ie\") || has(\"trident\")) && !/IEMobile\\/10\\.0/.test(navigator.userAgent)); // No iframe on WP8, to match 1.9 behavior\r\n\r\n\tvar _frames = new function(){\r\n\t\t// summary:\r\n\t\t//\t\tcache of iframes\r\n\r\n\t\tvar queue = [];\r\n\r\n\t\tthis.pop = function(){\r\n\t\t\tvar iframe;\r\n\t\t\tif(queue.length){\r\n\t\t\t\tiframe = queue.pop();\r\n\t\t\t\tiframe.style.display=\"\";\r\n\t\t\t}else{\r\n\t\t\t\t// transparency needed for DialogUnderlay and for tooltips on IE (to see screen near connector)\r\n\t\t\t\tif(has(\"ie\") < 9){\r\n\t\t\t\t\tvar burl = config[\"dojoBlankHtmlUrl\"] || require.toUrl(\"dojo/resources/blank.html\") || \"javascript:\\\"\\\"\";\r\n\t\t\t\t\tvar html=\"<iframe src='\" + burl + \"' role='presentation'\"\r\n\t\t\t\t\t\t+ \" style='position: absolute; left: 0px; top: 0px;\"\r\n\t\t\t\t\t\t+ \"z-index: -1; filter:Alpha(Opacity=\\\"0\\\");'>\";\r\n\t\t\t\t\tiframe = document.createElement(html);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tiframe = domConstruct.create(\"iframe\");\r\n\t\t\t\t\tiframe.src = 'javascript:\"\"';\r\n\t\t\t\t\tiframe.className = \"dijitBackgroundIframe\";\r\n\t\t\t\t\tiframe.setAttribute(\"role\", \"presentation\");\r\n\t\t\t\t\tdomStyle.set(iframe, \"opacity\", 0.1);\r\n\t\t\t\t}\r\n\t\t\t\tiframe.tabIndex = -1; // Magic to prevent iframe from getting focus on tab keypress - as style didn't work.\r\n\t\t\t}\r\n\t\t\treturn iframe;\r\n\t\t};\r\n\r\n\t\tthis.push = function(iframe){\r\n\t\t\tiframe.style.display=\"none\";\r\n\t\t\tqueue.push(iframe);\r\n\t\t}\r\n\t}();\r\n\r\n\r\n\tdijit.BackgroundIframe = function(/*DomNode*/ node){\r\n\t\t// summary:\r\n\t\t//\t\tFor IE/FF z-index shenanigans. id attribute is required.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tnew dijit.BackgroundIframe(node).\r\n\t\t//\r\n\t\t//\t\tMakes a background iframe as a child of node, that fills\r\n\t\t//\t\tarea (and position) of node\r\n\r\n\t\tif(!node.id){ throw new Error(\"no id\"); }\r\n\t\tif(has(\"config-bgIframe\")){\r\n\t\t\tvar iframe = (this.iframe = _frames.pop());\r\n\t\t\tnode.appendChild(iframe);\r\n\t\t\tif(has(\"ie\")<7 || has(\"quirks\")){\r\n\t\t\t\tthis.resize(node);\r\n\t\t\t\tthis._conn = on(node, 'resize', lang.hitch(this, \"resize\", node));\r\n\t\t\t}else{\r\n\t\t\t\tdomStyle.set(iframe, {\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: '100%'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tlang.extend(dijit.BackgroundIframe, {\r\n\t\tresize: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tResize the iframe so it's the same size as node.\r\n\t\t\t//\t\tNeeded on IE6 and IE/quirks because height:100% doesn't work right.\r\n\t\t\tif(this.iframe){\r\n\t\t\t\tdomStyle.set(this.iframe, {\r\n\t\t\t\t\twidth: node.offsetWidth + 'px',\r\n\t\t\t\t\theight: node.offsetHeight + 'px'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdestroy: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tdestroy the iframe\r\n\t\t\tif(this._conn){\r\n\t\t\t\tthis._conn.remove();\r\n\t\t\t\tthis._conn = null;\r\n\t\t\t}\r\n\t\t\tif(this.iframe){\r\n\t\t\t\tthis.iframe.parentNode.removeChild(this.iframe);\r\n\t\t\t\t_frames.push(this.iframe);\r\n\t\t\t\tdelete this.iframe;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn dijit.BackgroundIframe;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvQmFja2dyb3VuZElmcmFtZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kaWppdC9CYWNrZ3JvdW5kSWZyYW1lLmpzP2NkZGEiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcclxuXHRcInJlcXVpcmVcIixcdFx0XHQvLyByZXF1aXJlLnRvVXJsXHJcblx0XCIuL21haW5cIixcdC8vIHRvIGV4cG9ydCBkaWppdC5CYWNrZ3JvdW5kSWZyYW1lXHJcblx0XCJkb2pvL19iYXNlL2NvbmZpZ1wiLFxyXG5cdFwiZG9qby9kb20tY29uc3RydWN0XCIsIC8vIGRvbUNvbnN0cnVjdC5jcmVhdGVcclxuXHRcImRvam8vZG9tLXN0eWxlXCIsIC8vIGRvbVN0eWxlLnNldFxyXG5cdFwiZG9qby9fYmFzZS9sYW5nXCIsIC8vIGxhbmcuZXh0ZW5kIGxhbmcuaGl0Y2hcclxuXHRcImRvam8vb25cIixcclxuXHRcImRvam8vc25pZmZcIiAvLyBoYXMoXCJpZVwiKSwgaGFzKFwidHJpZGVudFwiKSwgaGFzKFwicXVpcmtzXCIpXHJcbl0sIGZ1bmN0aW9uKHJlcXVpcmUsIGRpaml0LCBjb25maWcsIGRvbUNvbnN0cnVjdCwgZG9tU3R5bGUsIGxhbmcsIG9uLCBoYXMpe1xyXG5cclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZGlqaXQvQmFja2dyb3VuZElGcmFtZVxyXG5cclxuXHQvLyBGbGFnIGZvciB3aGV0aGVyIHRvIGNyZWF0ZSBiYWNrZ3JvdW5kIGlmcmFtZSBiZWhpbmQgcG9wdXBzIGxpa2UgTWVudXMgYW5kIERpYWxvZy5cclxuXHQvLyBBIGJhY2tncm91bmQgaWZyYW1lIGlzIHVzZWZ1bCB0byBwcmV2ZW50IHByb2JsZW1zIHdpdGggcG9wdXBzIGFwcGVhcmluZyBiZWhpbmQgYXBwbGV0cy9wZGYgZmlsZXMsXHJcblx0Ly8gYW5kIGlzIGFsc28gdXNlZnVsIG9uIG9sZGVyIHZlcnNpb25zIG9mIElFIChJRTYgYW5kIElFNykgdG8gcHJldmVudCB0aGUgXCJibGVlZCB0aHJvdWdoIHNlbGVjdFwiIHByb2JsZW0uXHJcblx0Ly8gQnkgZGVmYXVsdCwgaXQncyBlbmFibGVkIGZvciBJRTYtMTEsIGV4Y2x1ZGluZyBXaW5kb3dzIFBob25lIDguXHJcblx0Ly8gVE9ETzogRm9yIDIuMCwgbWFrZSB0aGlzIGZhbHNlIGJ5IGRlZmF1bHQuICBBbHNvLCBwb3NzaWJseSBtb3ZlIGRlZmluaXRpb24gdG8gaGFzLmpzIHNvIHRoYXQgdGhpcyBtb2R1bGUgY2FuIGJlXHJcblx0Ly8gY29uZGl0aW9uYWxseSByZXF1aXJlZCB2aWEgIGRvam8vaGFzIWJnSWZhbWU/ZGlqaXQvQmFja2dyb3VuZElmcmFtZVxyXG5cdGhhcy5hZGQoXCJjb25maWctYmdJZnJhbWVcIixcclxuICAgIFx0KGhhcyhcImllXCIpIHx8IGhhcyhcInRyaWRlbnRcIikpICYmICEvSUVNb2JpbGVcXC8xMFxcLjAvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpOyAvLyBObyBpZnJhbWUgb24gV1A4LCB0byBtYXRjaCAxLjkgYmVoYXZpb3JcclxuXHJcblx0dmFyIF9mcmFtZXMgPSBuZXcgZnVuY3Rpb24oKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRjYWNoZSBvZiBpZnJhbWVzXHJcblxyXG5cdFx0dmFyIHF1ZXVlID0gW107XHJcblxyXG5cdFx0dGhpcy5wb3AgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHR2YXIgaWZyYW1lO1xyXG5cdFx0XHRpZihxdWV1ZS5sZW5ndGgpe1xyXG5cdFx0XHRcdGlmcmFtZSA9IHF1ZXVlLnBvcCgpO1xyXG5cdFx0XHRcdGlmcmFtZS5zdHlsZS5kaXNwbGF5PVwiXCI7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdC8vIHRyYW5zcGFyZW5jeSBuZWVkZWQgZm9yIERpYWxvZ1VuZGVybGF5IGFuZCBmb3IgdG9vbHRpcHMgb24gSUUgKHRvIHNlZSBzY3JlZW4gbmVhciBjb25uZWN0b3IpXHJcblx0XHRcdFx0aWYoaGFzKFwiaWVcIikgPCA5KXtcclxuXHRcdFx0XHRcdHZhciBidXJsID0gY29uZmlnW1wiZG9qb0JsYW5rSHRtbFVybFwiXSB8fCByZXF1aXJlLnRvVXJsKFwiZG9qby9yZXNvdXJjZXMvYmxhbmsuaHRtbFwiKSB8fCBcImphdmFzY3JpcHQ6XFxcIlxcXCJcIjtcclxuXHRcdFx0XHRcdHZhciBodG1sPVwiPGlmcmFtZSBzcmM9J1wiICsgYnVybCArIFwiJyByb2xlPSdwcmVzZW50YXRpb24nXCJcclxuXHRcdFx0XHRcdFx0KyBcIiBzdHlsZT0ncG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAwcHg7IHRvcDogMHB4O1wiXHJcblx0XHRcdFx0XHRcdCsgXCJ6LWluZGV4OiAtMTsgZmlsdGVyOkFscGhhKE9wYWNpdHk9XFxcIjBcXFwiKTsnPlwiO1xyXG5cdFx0XHRcdFx0aWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChodG1sKTtcclxuXHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdGlmcmFtZSA9IGRvbUNvbnN0cnVjdC5jcmVhdGUoXCJpZnJhbWVcIik7XHJcblx0XHRcdFx0XHRpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6XCJcIic7XHJcblx0XHRcdFx0XHRpZnJhbWUuY2xhc3NOYW1lID0gXCJkaWppdEJhY2tncm91bmRJZnJhbWVcIjtcclxuXHRcdFx0XHRcdGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJyb2xlXCIsIFwicHJlc2VudGF0aW9uXCIpO1xyXG5cdFx0XHRcdFx0ZG9tU3R5bGUuc2V0KGlmcmFtZSwgXCJvcGFjaXR5XCIsIDAuMSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmcmFtZS50YWJJbmRleCA9IC0xOyAvLyBNYWdpYyB0byBwcmV2ZW50IGlmcmFtZSBmcm9tIGdldHRpbmcgZm9jdXMgb24gdGFiIGtleXByZXNzIC0gYXMgc3R5bGUgZGlkbid0IHdvcmsuXHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGlmcmFtZTtcclxuXHRcdH07XHJcblxyXG5cdFx0dGhpcy5wdXNoID0gZnVuY3Rpb24oaWZyYW1lKXtcclxuXHRcdFx0aWZyYW1lLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7XHJcblx0XHRcdHF1ZXVlLnB1c2goaWZyYW1lKTtcclxuXHRcdH1cclxuXHR9KCk7XHJcblxyXG5cclxuXHRkaWppdC5CYWNrZ3JvdW5kSWZyYW1lID0gZnVuY3Rpb24oLypEb21Ob2RlKi8gbm9kZSl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0Rm9yIElFL0ZGIHotaW5kZXggc2hlbmFuaWdhbnMuIGlkIGF0dHJpYnV0ZSBpcyByZXF1aXJlZC5cclxuXHRcdC8vXHJcblx0XHQvLyBkZXNjcmlwdGlvbjpcclxuXHRcdC8vXHRcdG5ldyBkaWppdC5CYWNrZ3JvdW5kSWZyYW1lKG5vZGUpLlxyXG5cdFx0Ly9cclxuXHRcdC8vXHRcdE1ha2VzIGEgYmFja2dyb3VuZCBpZnJhbWUgYXMgYSBjaGlsZCBvZiBub2RlLCB0aGF0IGZpbGxzXHJcblx0XHQvL1x0XHRhcmVhIChhbmQgcG9zaXRpb24pIG9mIG5vZGVcclxuXHJcblx0XHRpZighbm9kZS5pZCl7IHRocm93IG5ldyBFcnJvcihcIm5vIGlkXCIpOyB9XHJcblx0XHRpZihoYXMoXCJjb25maWctYmdJZnJhbWVcIikpe1xyXG5cdFx0XHR2YXIgaWZyYW1lID0gKHRoaXMuaWZyYW1lID0gX2ZyYW1lcy5wb3AoKSk7XHJcblx0XHRcdG5vZGUuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcclxuXHRcdFx0aWYoaGFzKFwiaWVcIik8NyB8fCBoYXMoXCJxdWlya3NcIikpe1xyXG5cdFx0XHRcdHRoaXMucmVzaXplKG5vZGUpO1xyXG5cdFx0XHRcdHRoaXMuX2Nvbm4gPSBvbihub2RlLCAncmVzaXplJywgbGFuZy5oaXRjaCh0aGlzLCBcInJlc2l6ZVwiLCBub2RlKSk7XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdGRvbVN0eWxlLnNldChpZnJhbWUsIHtcclxuXHRcdFx0XHRcdHdpZHRoOiAnMTAwJScsXHJcblx0XHRcdFx0XHRoZWlnaHQ6ICcxMDAlJ1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0bGFuZy5leHRlbmQoZGlqaXQuQmFja2dyb3VuZElmcmFtZSwge1xyXG5cdFx0cmVzaXplOiBmdW5jdGlvbihub2RlKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UmVzaXplIHRoZSBpZnJhbWUgc28gaXQncyB0aGUgc2FtZSBzaXplIGFzIG5vZGUuXHJcblx0XHRcdC8vXHRcdE5lZWRlZCBvbiBJRTYgYW5kIElFL3F1aXJrcyBiZWNhdXNlIGhlaWdodDoxMDAlIGRvZXNuJ3Qgd29yayByaWdodC5cclxuXHRcdFx0aWYodGhpcy5pZnJhbWUpe1xyXG5cdFx0XHRcdGRvbVN0eWxlLnNldCh0aGlzLmlmcmFtZSwge1xyXG5cdFx0XHRcdFx0d2lkdGg6IG5vZGUub2Zmc2V0V2lkdGggKyAncHgnLFxyXG5cdFx0XHRcdFx0aGVpZ2h0OiBub2RlLm9mZnNldEhlaWdodCArICdweCdcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdGRlc3Ryb3k6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdGRlc3Ryb3kgdGhlIGlmcmFtZVxyXG5cdFx0XHRpZih0aGlzLl9jb25uKXtcclxuXHRcdFx0XHR0aGlzLl9jb25uLnJlbW92ZSgpO1xyXG5cdFx0XHRcdHRoaXMuX2Nvbm4gPSBudWxsO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKHRoaXMuaWZyYW1lKXtcclxuXHRcdFx0XHR0aGlzLmlmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuaWZyYW1lKTtcclxuXHRcdFx0XHRfZnJhbWVzLnB1c2godGhpcy5pZnJhbWUpO1xyXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmlmcmFtZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4gZGlqaXQuQmFja2dyb3VuZElmcmFtZTtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dijit/BackgroundIframe.js\n");

/***/ }),

/***/ "./node_modules/dijit/Destroyable.js":
/*!*******************************************!*\
  !*** ./node_modules/dijit/Destroyable.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach array.map\r\n\t__webpack_require__(/*! dojo/aspect */ \"./node_modules/dojo/aspect.js\"),\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, aspect, declare){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Destroyable\r\n\r\n\treturn declare(\"dijit.Destroyable\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to track handles and release them when instance is destroyed.\r\n\t\t// description:\r\n\t\t//\t\tCall this.own(...) on list of handles (returned from dojo/aspect, dojo/on,\r\n\t\t//\t\tdojo/Stateful::watch, or any class (including widgets) with a destroyRecursive() or destroy() method.\r\n\t\t//\t\tThen call destroy() later to destroy this instance and release the resources.\r\n\r\n\t\tdestroy: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this class, releasing any resources registered via own().\r\n\t\t\tthis._destroyed = true;\r\n\t\t},\r\n\r\n\t\town: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTrack specified handles and remove/destroy them when this instance is destroyed, unless they were\r\n\t\t\t//\t\talready removed/destroyed manually.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\t// returns:\r\n\t\t\t//\t\tThe array of specified handles, so you can do for example:\r\n\t\t\t//\t|\t\tvar handle = this.own(on(...))[0];\r\n\r\n\t\t\tvar cleanupMethods = [\r\n\t\t\t\t\"destroyRecursive\",\r\n\t\t\t\t\"destroy\",\r\n\t\t\t\t\"remove\"\r\n\t\t\t];\r\n\r\n\t\t\tarray.forEach(arguments, function(handle){\r\n\t\t\t\t// When this.destroy() is called, destroy handle.  Since I'm using aspect.before(),\r\n\t\t\t\t// the handle will be destroyed before a subclass's destroy() method starts running, before it calls\r\n\t\t\t\t// this.inherited() or even if it doesn't call this.inherited() at all.  If that's an issue, make an\r\n\t\t\t\t// onDestroy() method and connect to that instead.\r\n\t\t\t\tvar destroyMethodName;\r\n\t\t\t\tvar odh = aspect.before(this, \"destroy\", function (preserveDom){\r\n\t\t\t\t\thandle[destroyMethodName](preserveDom);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Callback for when handle is manually destroyed.\r\n\t\t\t\tvar hdhs = [];\r\n\t\t\t\tfunction onManualDestroy(){\r\n\t\t\t\t\todh.remove();\r\n\t\t\t\t\tarray.forEach(hdhs, function(hdh){\r\n\t\t\t\t\t\thdh.remove();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Setup listeners for manual destroy of handle.\r\n\t\t\t\t// Also computes destroyMethodName, used in listener above.\r\n\t\t\t\tif(handle.then){\r\n\t\t\t\t\t// Special path for Promises.  Detect when Promise is resolved, rejected, or\r\n\t\t\t\t\t// canceled (nb: cancelling a Promise causes it to be rejected).\r\n\t\t\t\t\tdestroyMethodName = \"cancel\";\r\n\t\t\t\t\thandle.then(onManualDestroy, onManualDestroy);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Path for other handles.  Just use AOP to detect when handle is manually destroyed.\r\n\t\t\t\t\tarray.forEach(cleanupMethods, function(cleanupMethod){\r\n\t\t\t\t\t\tif(typeof handle[cleanupMethod] === \"function\"){\r\n\t\t\t\t\t\t\tif(!destroyMethodName){\r\n\t\t\t\t\t\t\t\t// Use first matching method name in above listener (prefer destroyRecursive() to destroy())\r\n\t\t\t\t\t\t\t\tdestroyMethodName = cleanupMethod;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\thdhs.push(aspect.after(handle, cleanupMethod, onManualDestroy, true));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn arguments;\t\t// handle\r\n\t\t}\r\n\t});\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvRGVzdHJveWFibGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGlqaXQvRGVzdHJveWFibGUuanM/MTE2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xyXG5cdFwiZG9qby9fYmFzZS9hcnJheVwiLCAvLyBhcnJheS5mb3JFYWNoIGFycmF5Lm1hcFxyXG5cdFwiZG9qby9hc3BlY3RcIixcclxuXHRcImRvam8vX2Jhc2UvZGVjbGFyZVwiXHJcbl0sIGZ1bmN0aW9uKGFycmF5LCBhc3BlY3QsIGRlY2xhcmUpe1xyXG5cclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZGlqaXQvRGVzdHJveWFibGVcclxuXHJcblx0cmV0dXJuIGRlY2xhcmUoXCJkaWppdC5EZXN0cm95YWJsZVwiLCBudWxsLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0TWl4aW4gdG8gdHJhY2sgaGFuZGxlcyBhbmQgcmVsZWFzZSB0aGVtIHdoZW4gaW5zdGFuY2UgaXMgZGVzdHJveWVkLlxyXG5cdFx0Ly8gZGVzY3JpcHRpb246XHJcblx0XHQvL1x0XHRDYWxsIHRoaXMub3duKC4uLikgb24gbGlzdCBvZiBoYW5kbGVzIChyZXR1cm5lZCBmcm9tIGRvam8vYXNwZWN0LCBkb2pvL29uLFxyXG5cdFx0Ly9cdFx0ZG9qby9TdGF0ZWZ1bDo6d2F0Y2gsIG9yIGFueSBjbGFzcyAoaW5jbHVkaW5nIHdpZGdldHMpIHdpdGggYSBkZXN0cm95UmVjdXJzaXZlKCkgb3IgZGVzdHJveSgpIG1ldGhvZC5cclxuXHRcdC8vXHRcdFRoZW4gY2FsbCBkZXN0cm95KCkgbGF0ZXIgdG8gZGVzdHJveSB0aGlzIGluc3RhbmNlIGFuZCByZWxlYXNlIHRoZSByZXNvdXJjZXMuXHJcblxyXG5cdFx0ZGVzdHJveTogZnVuY3Rpb24oLypCb29sZWFuKi8gcHJlc2VydmVEb20pe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHREZXN0cm95IHRoaXMgY2xhc3MsIHJlbGVhc2luZyBhbnkgcmVzb3VyY2VzIHJlZ2lzdGVyZWQgdmlhIG93bigpLlxyXG5cdFx0XHR0aGlzLl9kZXN0cm95ZWQgPSB0cnVlO1xyXG5cdFx0fSxcclxuXHJcblx0XHRvd246IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFRyYWNrIHNwZWNpZmllZCBoYW5kbGVzIGFuZCByZW1vdmUvZGVzdHJveSB0aGVtIHdoZW4gdGhpcyBpbnN0YW5jZSBpcyBkZXN0cm95ZWQsIHVubGVzcyB0aGV5IHdlcmVcclxuXHRcdFx0Ly9cdFx0YWxyZWFkeSByZW1vdmVkL2Rlc3Ryb3llZCBtYW51YWxseS5cclxuXHRcdFx0Ly8gdGFnczpcclxuXHRcdFx0Ly9cdFx0cHJvdGVjdGVkXHJcblx0XHRcdC8vIHJldHVybnM6XHJcblx0XHRcdC8vXHRcdFRoZSBhcnJheSBvZiBzcGVjaWZpZWQgaGFuZGxlcywgc28geW91IGNhbiBkbyBmb3IgZXhhbXBsZTpcclxuXHRcdFx0Ly9cdHxcdFx0dmFyIGhhbmRsZSA9IHRoaXMub3duKG9uKC4uLikpWzBdO1xyXG5cclxuXHRcdFx0dmFyIGNsZWFudXBNZXRob2RzID0gW1xyXG5cdFx0XHRcdFwiZGVzdHJveVJlY3Vyc2l2ZVwiLFxyXG5cdFx0XHRcdFwiZGVzdHJveVwiLFxyXG5cdFx0XHRcdFwicmVtb3ZlXCJcclxuXHRcdFx0XTtcclxuXHJcblx0XHRcdGFycmF5LmZvckVhY2goYXJndW1lbnRzLCBmdW5jdGlvbihoYW5kbGUpe1xyXG5cdFx0XHRcdC8vIFdoZW4gdGhpcy5kZXN0cm95KCkgaXMgY2FsbGVkLCBkZXN0cm95IGhhbmRsZS4gIFNpbmNlIEknbSB1c2luZyBhc3BlY3QuYmVmb3JlKCksXHJcblx0XHRcdFx0Ly8gdGhlIGhhbmRsZSB3aWxsIGJlIGRlc3Ryb3llZCBiZWZvcmUgYSBzdWJjbGFzcydzIGRlc3Ryb3koKSBtZXRob2Qgc3RhcnRzIHJ1bm5pbmcsIGJlZm9yZSBpdCBjYWxsc1xyXG5cdFx0XHRcdC8vIHRoaXMuaW5oZXJpdGVkKCkgb3IgZXZlbiBpZiBpdCBkb2Vzbid0IGNhbGwgdGhpcy5pbmhlcml0ZWQoKSBhdCBhbGwuICBJZiB0aGF0J3MgYW4gaXNzdWUsIG1ha2UgYW5cclxuXHRcdFx0XHQvLyBvbkRlc3Ryb3koKSBtZXRob2QgYW5kIGNvbm5lY3QgdG8gdGhhdCBpbnN0ZWFkLlxyXG5cdFx0XHRcdHZhciBkZXN0cm95TWV0aG9kTmFtZTtcclxuXHRcdFx0XHR2YXIgb2RoID0gYXNwZWN0LmJlZm9yZSh0aGlzLCBcImRlc3Ryb3lcIiwgZnVuY3Rpb24gKHByZXNlcnZlRG9tKXtcclxuXHRcdFx0XHRcdGhhbmRsZVtkZXN0cm95TWV0aG9kTmFtZV0ocHJlc2VydmVEb20pO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHQvLyBDYWxsYmFjayBmb3Igd2hlbiBoYW5kbGUgaXMgbWFudWFsbHkgZGVzdHJveWVkLlxyXG5cdFx0XHRcdHZhciBoZGhzID0gW107XHJcblx0XHRcdFx0ZnVuY3Rpb24gb25NYW51YWxEZXN0cm95KCl7XHJcblx0XHRcdFx0XHRvZGgucmVtb3ZlKCk7XHJcblx0XHRcdFx0XHRhcnJheS5mb3JFYWNoKGhkaHMsIGZ1bmN0aW9uKGhkaCl7XHJcblx0XHRcdFx0XHRcdGhkaC5yZW1vdmUoKTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gU2V0dXAgbGlzdGVuZXJzIGZvciBtYW51YWwgZGVzdHJveSBvZiBoYW5kbGUuXHJcblx0XHRcdFx0Ly8gQWxzbyBjb21wdXRlcyBkZXN0cm95TWV0aG9kTmFtZSwgdXNlZCBpbiBsaXN0ZW5lciBhYm92ZS5cclxuXHRcdFx0XHRpZihoYW5kbGUudGhlbil7XHJcblx0XHRcdFx0XHQvLyBTcGVjaWFsIHBhdGggZm9yIFByb21pc2VzLiAgRGV0ZWN0IHdoZW4gUHJvbWlzZSBpcyByZXNvbHZlZCwgcmVqZWN0ZWQsIG9yXHJcblx0XHRcdFx0XHQvLyBjYW5jZWxlZCAobmI6IGNhbmNlbGxpbmcgYSBQcm9taXNlIGNhdXNlcyBpdCB0byBiZSByZWplY3RlZCkuXHJcblx0XHRcdFx0XHRkZXN0cm95TWV0aG9kTmFtZSA9IFwiY2FuY2VsXCI7XHJcblx0XHRcdFx0XHRoYW5kbGUudGhlbihvbk1hbnVhbERlc3Ryb3ksIG9uTWFudWFsRGVzdHJveSk7XHJcblx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHQvLyBQYXRoIGZvciBvdGhlciBoYW5kbGVzLiAgSnVzdCB1c2UgQU9QIHRvIGRldGVjdCB3aGVuIGhhbmRsZSBpcyBtYW51YWxseSBkZXN0cm95ZWQuXHJcblx0XHRcdFx0XHRhcnJheS5mb3JFYWNoKGNsZWFudXBNZXRob2RzLCBmdW5jdGlvbihjbGVhbnVwTWV0aG9kKXtcclxuXHRcdFx0XHRcdFx0aWYodHlwZW9mIGhhbmRsZVtjbGVhbnVwTWV0aG9kXSA9PT0gXCJmdW5jdGlvblwiKXtcclxuXHRcdFx0XHRcdFx0XHRpZighZGVzdHJveU1ldGhvZE5hbWUpe1xyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gVXNlIGZpcnN0IG1hdGNoaW5nIG1ldGhvZCBuYW1lIGluIGFib3ZlIGxpc3RlbmVyIChwcmVmZXIgZGVzdHJveVJlY3Vyc2l2ZSgpIHRvIGRlc3Ryb3koKSlcclxuXHRcdFx0XHRcdFx0XHRcdGRlc3Ryb3lNZXRob2ROYW1lID0gY2xlYW51cE1ldGhvZDtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0aGRocy5wdXNoKGFzcGVjdC5hZnRlcihoYW5kbGUsIGNsZWFudXBNZXRob2QsIG9uTWFudWFsRGVzdHJveSwgdHJ1ZSkpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIHRoaXMpO1xyXG5cclxuXHRcdFx0cmV0dXJuIGFyZ3VtZW50cztcdFx0Ly8gaGFuZGxlXHJcblx0XHR9XHJcblx0fSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dijit/Destroyable.js\n");

/***/ }),

/***/ "./node_modules/dijit/Tooltip.js":
/*!***************************************!*\
  !*** ./node_modules/dijit/Tooltip.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach array.indexOf array.map\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/_base/fx */ \"./node_modules/dojo/_base/fx.js\"), // fx.fadeIn fx.fadeOut\r\n\t__webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"), // dom.byId\r\n\t__webpack_require__(/*! dojo/dom-class */ \"./node_modules/dojo/dom-class.js\"), // domClass.add\r\n\t__webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), // domGeometry.position\r\n\t__webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"), // domStyle.set, domStyle.get\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.hitch lang.isArrayLike\r\n\t__webpack_require__(/*! dojo/mouse */ \"./node_modules/dojo/mouse.js\"),\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"), // has(\"ie\"), has(\"trident\")\r\n\t__webpack_require__(/*! ./_base/manager */ \"./node_modules/dijit/_base/manager.js\"),\t// manager.defaultDuration\r\n\t__webpack_require__(/*! ./place */ \"./node_modules/dijit/place.js\"),\r\n\t__webpack_require__(/*! ./_Widget */ \"./node_modules/dijit/_Widget.js\"),\r\n\t__webpack_require__(/*! ./_TemplatedMixin */ \"./node_modules/dijit/_TemplatedMixin.js\"),\r\n\t__webpack_require__(/*! ./BackgroundIframe */ \"./node_modules/dijit/BackgroundIframe.js\"),\r\n\t__webpack_require__(/*! dojo/text!./templates/Tooltip.html */ \"./node_modules/dojo-webpack-plugin/loaders/dojo/text/index.js!./node_modules/dijit/templates/Tooltip.html\"),\r\n\t__webpack_require__(/*! ./main */ \"./node_modules/dijit/main.js\")\t\t// sets dijit.showTooltip etc. for back-compat\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, declare, fx, dom, domClass, domGeometry, domStyle, lang, mouse, on, has,\r\n\t\t\tmanager, place, _Widget, _TemplatedMixin, BackgroundIframe, template, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Tooltip\r\n\r\n\r\n\t// TODO: Tooltip should really share more positioning code with TooltipDialog, like:\r\n\t//\t\t- the orient() method\r\n\t//\t\t- the connector positioning code in show()\r\n\t//\t\t- the dijitTooltip[Dialog] class\r\n\t//\r\n\t// The problem is that Tooltip's implementation supplies it's own <iframe> and interacts directly\r\n\t// with dijit/place, rather than going through dijit/popup like TooltipDialog and other popups (ex: Menu).\r\n\r\n\tvar MasterTooltip = declare(\"dijit._MasterTooltip\", [_Widget, _TemplatedMixin], {\r\n\t\t// summary:\r\n\t\t//\t\tInternal widget that holds the actual tooltip markup,\r\n\t\t//\t\twhich occurs once per page.\r\n\t\t//\t\tCalled by Tooltip widgets which are just containers to hold\r\n\t\t//\t\tthe markup\r\n\t\t// tags:\r\n\t\t//\t\tprotected\r\n\r\n\t\t// duration: Integer\r\n\t\t//\t\tMilliseconds to fade in/fade out\r\n\t\tduration: manager.defaultDuration,\r\n\r\n\t\ttemplateString: template,\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\tthis.ownerDocumentBody.appendChild(this.domNode);\r\n\r\n\t\t\tthis.bgIframe = new BackgroundIframe(this.domNode);\r\n\r\n\t\t\t// Setup fade-in and fade-out functions.\r\n\t\t\tthis.fadeIn = fx.fadeIn({ node: this.domNode, duration: this.duration, onEnd: lang.hitch(this, \"_onShow\") });\r\n\t\t\tthis.fadeOut = fx.fadeOut({ node: this.domNode, duration: this.duration, onEnd: lang.hitch(this, \"_onHide\") });\r\n\t\t},\r\n\r\n\t\tshow: function(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay tooltip w/specified contents to right of specified node\r\n\t\t\t//\t\t(To left if there's no space on the right, or if rtl == true)\r\n\t\t\t// innerHTML: String\r\n\t\t\t//\t\tContents of the tooltip\r\n\t\t\t// aroundNode: DomNode|dijit/place.__Rectangle\r\n\t\t\t//\t\tSpecifies that tooltip should be next to this node / area\r\n\t\t\t// position: String[]?\r\n\t\t\t//\t\tList of positions to try to position tooltip (ex: [\"right\", \"above\"])\r\n\t\t\t// rtl: Boolean?\r\n\t\t\t//\t\tCorresponds to `WidgetBase.dir` attribute, where false means \"ltr\" and true\r\n\t\t\t//\t\tmeans \"rtl\"; specifies GUI direction, not text direction.\r\n\t\t\t// textDir: String?\r\n\t\t\t//\t\tCorresponds to `WidgetBase.textdir` attribute; specifies direction of text.\r\n\t\t\t// onMouseEnter: Function?\r\n\t\t\t//\t\tCallback function for mouse enter on tooltip\r\n\t\t\t// onMouseLeave: Function?\r\n\t\t\t//\t\tCallback function for mouse leave on tooltip\r\n\r\n\t\t\tif(this.aroundNode && this.aroundNode === aroundNode && this.containerNode.innerHTML == innerHTML){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.fadeOut.status() == \"playing\"){\r\n\t\t\t\t// previous tooltip is being hidden; wait until the hide completes then show new one\r\n\t\t\t\tthis._onDeck=arguments;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.containerNode.innerHTML=innerHTML;\r\n\r\n\t\t\tif(textDir){\r\n\t\t\t\tthis.set(\"textDir\", textDir);\r\n\t\t\t}\r\n\r\n\t\t\tthis.containerNode.align = rtl? \"right\" : \"left\"; //fix the text alignment\r\n\r\n\t\t\tvar pos = place.around(this.domNode, aroundNode,\r\n\t\t\t\tposition && position.length ? position : Tooltip.defaultPosition, !rtl, lang.hitch(this, \"orient\"));\r\n\r\n\t\t\t// Position the tooltip connector for middle alignment.\r\n\t\t\t// This could not have been done in orient() since the tooltip wasn't positioned at that time.\r\n\t\t\tvar aroundNodeCoords = pos.aroundNodePos;\r\n\t\t\tif(pos.corner.charAt(0) == 'M' && pos.aroundCorner.charAt(0) == 'M'){\r\n\t\t\t\tthis.connectorNode.style.top = aroundNodeCoords.y + ((aroundNodeCoords.h - this.connectorNode.offsetHeight) >> 1) - pos.y + \"px\";\r\n\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t}else if(pos.corner.charAt(1) == 'M' && pos.aroundCorner.charAt(1) == 'M'){\r\n\t\t\t\tthis.connectorNode.style.left = aroundNodeCoords.x + ((aroundNodeCoords.w - this.connectorNode.offsetWidth) >> 1) - pos.x + \"px\";\r\n\t\t\t}else{\r\n\t\t\t\t// Not *-centered, but just above/below/after/before\r\n\t\t\t\tthis.connectorNode.style.left = \"\";\r\n\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// show it\r\n\t\t\tdomStyle.set(this.domNode, \"opacity\", 0);\r\n\t\t\tthis.fadeIn.play();\r\n\t\t\tthis.isShowingNow = true;\r\n\t\t\tthis.aroundNode = aroundNode;\r\n\r\n\t\t\tthis.onMouseEnter = onMouseEnter || noop;\r\n\t\t\tthis.onMouseLeave = onMouseLeave || noop;\r\n\t\t},\r\n\r\n\t\torient: function(/*DomNode*/ node, /*String*/ aroundCorner, /*String*/ tooltipCorner, /*Object*/ spaceAvailable, /*Object*/ aroundNodeCoords){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPrivate function to set CSS for tooltip node based on which position it's in.\r\n\t\t\t//\t\tThis is called by the dijit popup code.   It will also reduce the tooltip's\r\n\t\t\t//\t\twidth to whatever width is available\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.connectorNode.style.top = \"\"; //reset to default\r\n\r\n\t\t\tvar heightAvailable = spaceAvailable.h,\r\n\t\t\t\twidthAvailable = spaceAvailable.w;\r\n\r\n\t\t\tnode.className = \"dijitTooltip \" +\r\n\t\t\t\t{\r\n\t\t\t\t\t\"MR-ML\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"ML-MR\": \"dijitTooltipLeft\",\r\n\t\t\t\t\t\"TM-BM\": \"dijitTooltipAbove\",\r\n\t\t\t\t\t\"BM-TM\": \"dijitTooltipBelow\",\r\n\t\t\t\t\t\"BL-TL\": \"dijitTooltipBelow dijitTooltipABLeft\",\r\n\t\t\t\t\t\"TL-BL\": \"dijitTooltipAbove dijitTooltipABLeft\",\r\n\t\t\t\t\t\"BR-TR\": \"dijitTooltipBelow dijitTooltipABRight\",\r\n\t\t\t\t\t\"TR-BR\": \"dijitTooltipAbove dijitTooltipABRight\",\r\n\t\t\t\t\t\"BR-BL\": \"dijitTooltipRight\",\r\n\t\t\t\t\t\"BL-BR\": \"dijitTooltipLeft\"\r\n\t\t\t\t}[aroundCorner + \"-\" + tooltipCorner];\r\n\r\n\t\t\t// reset width; it may have been set by orient() on a previous tooltip show()\r\n\t\t\tthis.domNode.style.width = \"auto\";\r\n\r\n\t\t\t// Reduce tooltip's width to the amount of width available, so that it doesn't overflow screen.\r\n\t\t\t// Note that sometimes widthAvailable is negative, but we guard against setting style.width to a\r\n\t\t\t// negative number since that causes an exception on IE.\r\n\t\t\tvar size = domGeometry.position(this.domNode);\r\n\t\t\tif(has(\"ie\") || has(\"trident\")){\r\n\t\t\t\t// workaround strange IE bug where setting width to offsetWidth causes words to wrap\r\n\t\t\t\tsize.w += 2;\r\n\t\t\t}\r\n\r\n\t\t\tvar width = Math.min((Math.max(widthAvailable,1)), size.w);\r\n\r\n\t\t\tdomGeometry.setMarginBox(this.domNode, {w: width});\r\n\r\n\t\t\t// Reposition the tooltip connector.\r\n\t\t\tif(tooltipCorner.charAt(0) == 'B' && aroundCorner.charAt(0) == 'B'){\r\n\t\t\t\tvar bb = domGeometry.position(node);\r\n\t\t\t\tvar tooltipConnectorHeight = this.connectorNode.offsetHeight;\r\n\t\t\t\tif(bb.h > heightAvailable){\r\n\t\t\t\t\t// The tooltip starts at the top of the page and will extend past the aroundNode\r\n\t\t\t\t\tvar aroundNodePlacement = heightAvailable - ((aroundNodeCoords.h + tooltipConnectorHeight) >> 1);\r\n\t\t\t\t\tthis.connectorNode.style.top = aroundNodePlacement + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.bottom = \"\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// Align center of connector with center of aroundNode, except don't let bottom\r\n\t\t\t\t\t// of connector extend below bottom of tooltip content, or top of connector\r\n\t\t\t\t\t// extend past top of tooltip content\r\n\t\t\t\t\tthis.connectorNode.style.bottom = Math.min(\r\n\t\t\t\t\t\tMath.max(aroundNodeCoords.h/2 - tooltipConnectorHeight/2, 0),\r\n\t\t\t\t\t\tbb.h - tooltipConnectorHeight) + \"px\";\r\n\t\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t// reset the tooltip back to the defaults\r\n\t\t\t\tthis.connectorNode.style.top = \"\";\r\n\t\t\t\tthis.connectorNode.style.bottom = \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.max(0, size.w - widthAvailable);\r\n\t\t},\r\n\r\n\t\t_onShow: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at end of fade-in operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tif(has(\"ie\")){\r\n\t\t\t\t// the arrow won't show up on a node w/an opacity filter\r\n\t\t\t\tthis.domNode.style.filter=\"\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thide: function(aroundNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the tooltip\r\n\r\n\t\t\tif(this._onDeck && this._onDeck[1] == aroundNode){\r\n\t\t\t\t// this hide request is for a show() that hasn't even started yet;\r\n\t\t\t\t// just cancel the pending show()\r\n\t\t\t\tthis._onDeck=null;\r\n\t\t\t}else if(this.aroundNode === aroundNode){\r\n\t\t\t\t// this hide request is for the currently displayed tooltip\r\n\t\t\t\tthis.fadeIn.stop();\r\n\t\t\t\tthis.isShowingNow = false;\r\n\t\t\t\tthis.aroundNode = null;\r\n\t\t\t\tthis.fadeOut.play();\r\n\t\t\t}else{\r\n\t\t\t\t// just ignore the call, it's for a tooltip that has already been erased\r\n\t\t\t}\r\n\r\n\t\t\tthis.onMouseEnter = this.onMouseLeave = noop;\r\n\t\t},\r\n\r\n\t\t_onHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled at end of fade-out operation\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.domNode.style.cssText=\"\";\t// to position offscreen again\r\n\t\t\tthis.containerNode.innerHTML=\"\";\r\n\t\t\tif(this._onDeck){\r\n\t\t\t\t// a show request has been queued up; do it now\r\n\t\t\t\tthis.show.apply(this, this._onDeck);\r\n\t\t\t\tthis._onDeck=null;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\tMasterTooltip.extend({\r\n\t\t\t_setAutoTextDir: function(/*Object*/node){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tResolve \"auto\" text direction for children nodes\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tthis.applyTextDir(node);\r\n\t\t\t\tarray.forEach(node.children, function(child){ this._setAutoTextDir(child); }, this);\r\n\t\t\t},\r\n\r\n\t\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t\t// summary:\r\n\t\t\t\t//\t\tSetter for textDir.\r\n\t\t\t\t// description:\r\n\t\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t\t//\t\tset('textDir', value)\r\n\t\t\t\t// tags:\r\n\t\t\t\t//\t\tprivate\r\n\r\n\t\t\t\tthis._set(\"textDir\", textDir);\r\n\r\n\t\t\t\tif (textDir == \"auto\"){\r\n\t\t\t\t\tthis._setAutoTextDir(this.containerNode);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.containerNode.dir = this.textDir;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tdijit.showTooltip = function(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to display tooltip w/specified contents in specified position.\r\n\t\t//\t\tSee description of dijit/Tooltip.defaultPosition for details on position parameter.\r\n\t\t//\t\tIf position is not specified then dijit/Tooltip.defaultPosition is used.\r\n\t\t// innerHTML: String\r\n\t\t//\t\tContents of the tooltip\r\n\t\t// aroundNode: place.__Rectangle\r\n\t\t//\t\tSpecifies that tooltip should be next to this node / area\r\n\t\t// position: String[]?\r\n\t\t//\t\tList of positions to try to position tooltip (ex: [\"right\", \"above\"])\r\n\t\t// rtl: Boolean?\r\n\t\t//\t\tCorresponds to `WidgetBase.dir` attribute, where false means \"ltr\" and true\r\n\t\t//\t\tmeans \"rtl\"; specifies GUI direction, not text direction.\r\n\t\t// textDir: String?\r\n\t\t//\t\tCorresponds to `WidgetBase.textdir` attribute; specifies direction of text.\r\n\t\t// onMouseEnter: Function?\r\n\t\t//\t\tCallback function for mouse over on tooltip\r\n\t\t// onMouseLeave: Function?\r\n\t\t//\t\tCallback function for mouse leave on tooltip\r\n\r\n\t\t// After/before don't work, but for back-compat convert them to the working after-centered, before-centered.\r\n\t\t// Possibly remove this in 2.0.   Alternately, get before/after to work.\r\n\t\tif(position){\r\n\t\t\tposition = array.map(position, function(val){\r\n\t\t\t\treturn {after: \"after-centered\", before: \"before-centered\"}[val] || val;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(!Tooltip._masterTT){ dijit._masterTT = Tooltip._masterTT = new MasterTooltip(); }\r\n\t\treturn Tooltip._masterTT.show(innerHTML, aroundNode, position, rtl, textDir, onMouseEnter, onMouseLeave);\r\n\t};\r\n\r\n\tdijit.hideTooltip = function(aroundNode){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to hide the tooltip displayed via showTooltip()\r\n\t\treturn Tooltip._masterTT && Tooltip._masterTT.hide(aroundNode);\r\n\t};\r\n\r\n\t// Possible states for a tooltip, see Tooltip.state property for definitions\r\n\tvar DORMANT = \"DORMANT\",\r\n\t\tSHOW_TIMER = \"SHOW TIMER\",\r\n\t\tSHOWING = \"SHOWING\",\r\n\t\tHIDE_TIMER = \"HIDE TIMER\";\r\n\r\n\tfunction noop(){}\r\n\r\n\tvar Tooltip = declare(\"dijit.Tooltip\", _Widget, {\r\n\t\t// summary:\r\n\t\t//\t\tPops up a tooltip (a help message) when you hover over a node.\r\n\t\t//\t\tAlso provides static show() and hide() methods that can be used without instantiating a dijit/Tooltip.\r\n\r\n\t\t// label: String\r\n\t\t//\t\tHTML to display in the tooltip.\r\n\t\t//\t\tSpecified as innerHTML when creating the widget from markup.\r\n\t\tlabel: \"\",\r\n\r\n\t\t// showDelay: Integer\r\n\t\t//\t\tNumber of milliseconds to wait after hovering over/focusing on the object, before\r\n\t\t//\t\tthe tooltip is displayed.\r\n\t\tshowDelay: 400,\r\n\r\n\t\t// hideDelay: Integer\r\n\t\t//\t\tNumber of milliseconds to wait after unhovering the object, before\r\n\t\t//\t\tthe tooltip is hidden.  Note that blurring an object hides the tooltip immediately.\r\n\t\thideDelay: 400,\r\n\r\n\t\t// connectId: String|String[]|DomNode|DomNode[]\r\n\t\t//\t\tId of domNode(s) to attach the tooltip to.\r\n\t\t//\t\tWhen user hovers over specified dom node(s), the tooltip will appear.\r\n\t\tconnectId: [],\r\n\r\n\t\t// position: String[]\r\n\t\t//\t\tSee description of `dijit/Tooltip.defaultPosition` for details on position parameter.\r\n\t\tposition: [],\r\n\r\n\t\t// selector: String?\r\n\t\t//\t\tCSS expression to apply this Tooltip to descendants of connectIds, rather than to\r\n\t\t//\t\tthe nodes specified by connectIds themselves.    Useful for applying a Tooltip to\r\n\t\t//\t\ta range of rows in a table, tree, etc.   Use in conjunction with getContent() parameter.\r\n\t\t//\t\tEx: connectId: myTable, selector: \"tr\", getContent: function(node){ return ...; }\r\n\t\t//\r\n\t\t//\t\tThe application must require() an appropriate level of dojo/query to handle the selector.\r\n\t\tselector: \"\",\r\n\r\n\t\t// TODO: in 2.0 remove support for multiple connectIds.   selector gives the same effect.\r\n\t\t// So, change connectId to a \"\", remove addTarget()/removeTarget(), etc.\r\n\r\n\t\t_setConnectIdAttr: function(/*String|String[]|DomNode|DomNode[]*/ newId){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConnect to specified node(s)\r\n\r\n\t\t\t// Remove connections to old nodes (if there are any)\r\n\t\t\tarray.forEach(this._connections || [], function(nested){\r\n\t\t\t\tarray.forEach(nested, function(handle){ handle.remove(); });\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Make array of id's to connect to, excluding entries for nodes that don't exist yet, see startup()\r\n\t\t\tthis._connectIds = array.filter(lang.isArrayLike(newId) ? newId : (newId ? [newId] : []),\r\n\t\t\t\t\tfunction(id){ return dom.byId(id, this.ownerDocument); }, this);\r\n\r\n\t\t\t// Make connections\r\n\t\t\tthis._connections = array.map(this._connectIds, function(id){\r\n\t\t\t\tvar node = dom.byId(id, this.ownerDocument),\r\n\t\t\t\t\tselector = this.selector,\r\n\t\t\t\t\tdelegatedEvent = selector ?\r\n\t\t\t\t\t\tfunction(eventType){ return on.selector(selector, eventType); } :\r\n\t\t\t\t\t\tfunction(eventType){ return eventType; },\r\n\t\t\t\t\tself = this;\r\n\t\t\t\treturn [\r\n\t\t\t\t\ton(node, delegatedEvent(mouse.enter), function(){\r\n\t\t\t\t\t\tself._onHover(this);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(node, delegatedEvent(\"focusin\"), function(){\r\n\t\t\t\t\t\tself._onHover(this);\r\n\t\t\t\t\t}),\r\n\t\t\t\t\ton(node, delegatedEvent(mouse.leave), lang.hitch(self, \"_onUnHover\")),\r\n\t\t\t\t\ton(node, delegatedEvent(\"focusout\"), lang.hitch(self, \"set\", \"state\", DORMANT))\r\n\t\t\t\t];\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._set(\"connectId\", newId);\r\n\t\t},\r\n\r\n\t\taddTarget: function(/*DomNode|String*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach tooltip to specified node if it's not already connected\r\n\r\n\t\t\t// TODO: remove in 2.0 and just use set(\"connectId\", ...) interface\r\n\r\n\t\t\tvar id = node.id || node;\r\n\t\t\tif(array.indexOf(this._connectIds, id) == -1){\r\n\t\t\t\tthis.set(\"connectId\", this._connectIds.concat(id));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveTarget: function(/*DomNode|String*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach tooltip from specified node\r\n\r\n\t\t\t// TODO: remove in 2.0 and just use set(\"connectId\", ...) interface\r\n\r\n\t\t\tvar id = node.id || node,\t// map from DOMNode back to plain id string\r\n\t\t\t\tidx = array.indexOf(this._connectIds, id);\r\n\t\t\tif(idx >= 0){\r\n\t\t\t\t// remove id (modifies original this._connectIds but that's OK in this case)\r\n\t\t\t\tthis._connectIds.splice(idx, 1);\r\n\t\t\t\tthis.set(\"connectId\", this._connectIds);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\t\t\tdomClass.add(this.domNode,\"dijitTooltipData\");\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// If this tooltip was created in a template, or for some other reason the specified connectId[s]\r\n\t\t\t// didn't exist during the widget's initialization, then connect now.\r\n\t\t\tvar ids = this.connectId;\r\n\t\t\tarray.forEach(lang.isArrayLike(ids) ? ids : [ids], this.addTarget, this);\r\n\t\t},\r\n\r\n\t\tgetContent: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUser overridable function that return the text to display in the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\textension\r\n\t\t\treturn this.label || this.domNode.innerHTML;\r\n\t\t},\r\n\r\n\t\t// state: [private readonly] String\r\n\t\t//\t\tOne of:\r\n\t\t//\r\n\t\t//\t\t- DORMANT: tooltip not SHOWING\r\n\t\t//\t\t- SHOW TIMER: tooltip not SHOWING but timer set to show it\r\n\t\t//\t\t- SHOWING: tooltip displayed\r\n\t\t//\t\t- HIDE TIMER: tooltip displayed, but timer set to hide it\r\n\t\tstate: DORMANT,\r\n\t\t_setStateAttr: function(val){\r\n\t\t\tif(this.state == val ||\r\n\t\t\t\t(val == SHOW_TIMER && this.state == SHOWING) ||\r\n\t\t\t\t(val == HIDE_TIMER && this.state == DORMANT)){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(this._hideTimer){\r\n\t\t\t\tthis._hideTimer.remove();\r\n\t\t\t\tdelete this._hideTimer;\r\n\t\t\t}\r\n\t\t\tif(this._showTimer){\r\n\t\t\t\tthis._showTimer.remove();\r\n\t\t\t\tdelete this._showTimer;\r\n\t\t\t}\r\n\r\n\t\t\tswitch(val){\r\n\t\t\t\tcase DORMANT:\r\n\t\t\t\t\tif(this._connectNode){\r\n\t\t\t\t\t\tTooltip.hide(this._connectNode);\r\n\t\t\t\t\t\tdelete this._connectNode;\r\n\t\t\t\t\t\tthis.onHide();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SHOW_TIMER:\t // set timer to show tooltip\r\n\t\t\t\t\t// should only get here from a DORMANT state, i.e. tooltip can't be already SHOWING\r\n\t\t\t\t\tif(this.state != SHOWING){\r\n\t\t\t\t\t\tthis._showTimer = this.defer(function(){ this.set(\"state\", SHOWING); }, this.showDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SHOWING:\t\t// show tooltip and clear timers\r\n\t\t\t\t\tvar content = this.getContent(this._connectNode);\r\n\t\t\t\t\tif(!content){\r\n\t\t\t\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Show tooltip and setup callbacks for mouseenter/mouseleave of tooltip itself\r\n\t\t\t\t\tTooltip.show(content, this._connectNode, this.position, !this.isLeftToRight(), this.textDir,\r\n\t\t\t\t\t\tlang.hitch(this, \"set\", \"state\", SHOWING), lang.hitch(this, \"set\", \"state\", HIDE_TIMER));\r\n\r\n\t\t\t\t\tthis.onShow(this._connectNode, this.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase HIDE_TIMER:\t// set timer set to hide tooltip\r\n\t\t\t\t\tthis._hideTimer = this.defer(function(){ this.set(\"state\", DORMANT); }, this.hideDelay);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"state\", val);\r\n\t\t},\r\n\r\n\t\t_onHover: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDespite the name of this method, it actually handles both hover and focus\r\n\t\t\t//\t\tevents on the target node, setting a timer to show the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif(this._connectNode && target != this._connectNode){\r\n\t\t\t\t// Tooltip is displaying for another node\r\n\t\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\t}\r\n\t\t\tthis._connectNode = target;\t\t// _connectNode means \"tooltip currently displayed for this node\"\r\n\r\n\t\t\tthis.set(\"state\", SHOW_TIMER);\t// no-op if show-timer already set, or if already showing\r\n\t\t},\r\n\r\n\t\t_onUnHover: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHandles mouseleave event on the target node, hiding the tooltip.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", HIDE_TIMER);\t\t// no-op if already dormant, or if hide-timer already set\r\n\t\t},\r\n\r\n\t\t// open() and close() aren't used anymore, except from the _BidiSupport/misc/Tooltip test.\r\n\t\t// Should probably remove for 2.0, but leaving for now.\r\n\t\topen: function(/*DomNode*/ target){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDisplay the tooltip; usually not called directly.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t\tthis._connectNode = target;\t\t// _connectNode means \"tooltip currently displayed for this node\"\r\n\t\t\tthis.set(\"state\", SHOWING);\r\n\t\t},\r\n\r\n\t\tclose: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHide the tooltip or cancel timer for show of tooltip\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\t\t},\r\n\r\n\t\tonShow: function(/*===== target, position =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the tooltip is shown\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonHide: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the tooltip is hidden\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tdestroy: function(){\r\n\t\t\tthis.set(\"state\", DORMANT);\r\n\r\n\t\t\t// Remove connections manually since they aren't registered to be removed by _WidgetBase\r\n\t\t\tarray.forEach(this._connections || [], function(nested){\r\n\t\t\t\tarray.forEach(nested, function(handle){ handle.remove(); });\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\tTooltip._MasterTooltip = MasterTooltip;\t\t// for monkey patching\r\n\tTooltip.show = dijit.showTooltip;\t\t// export function through module return value\r\n\tTooltip.hide = dijit.hideTooltip;\t\t// export function through module return value\r\n\r\n\tTooltip.defaultPosition = [\"after-centered\", \"before-centered\"];\r\n\r\n\t/*=====\r\n\tlang.mixin(Tooltip, {\r\n\t\t // defaultPosition: String[]\r\n\t\t //\t\tThis variable controls the position of tooltips, if the position is not specified to\r\n\t\t //\t\tthe Tooltip widget or *TextBox widget itself.  It's an array of strings with the values\r\n\t\t //\t\tpossible for `dijit/place.around()`.   The recommended values are:\r\n\t\t //\r\n\t\t //\t\t- before-centered: centers tooltip to the left of the anchor node/widget, or to the right\r\n\t\t //\t\t  in the case of RTL scripts like Hebrew and Arabic\r\n\t\t //\t\t- after-centered: centers tooltip to the right of the anchor node/widget, or to the left\r\n\t\t //\t\t  in the case of RTL scripts like Hebrew and Arabic\r\n\t\t //\t\t- above-centered: tooltip is centered above anchor node\r\n\t\t //\t\t- below-centered: tooltip is centered above anchor node\r\n\t\t //\r\n\t\t //\t\tThe list is positions is tried, in order, until a position is found where the tooltip fits\r\n\t\t //\t\twithin the viewport.\r\n\t\t //\r\n\t\t //\t\tBe careful setting this parameter.  A value of \"above-centered\" may work fine until the user scrolls\r\n\t\t //\t\tthe screen so that there's no room above the target node.   Nodes with drop downs, like\r\n\t\t //\t\tDropDownButton or FilteringSelect, are especially problematic, in that you need to be sure\r\n\t\t //\t\tthat the drop down and tooltip don't overlap, even when the viewport is scrolled so that there\r\n\t\t //\t\tis only room below (or above) the target node, but not both.\r\n\t });\r\n\t=====*/\r\n\treturn Tooltip;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/Tooltip.js\n");

/***/ }),

/***/ "./node_modules/dijit/Viewport.js":
/*!****************************************!*\
  !*** ./node_modules/dijit/Viewport.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/Evented */ \"./node_modules/dojo/Evented.js\"),\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/domReady */ \"./node_modules/dojo/domReady.js\"),\r\n\t__webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"),\t// has(\"ie\"), has(\"ios\")\r\n\t__webpack_require__(/*! dojo/window */ \"./node_modules/dojo/window.js\") // getBox()\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(Evented, on, domReady, has, winUtils){\r\n\r\n\t// module:\r\n\t//\t\tdijit/Viewport\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tUtility singleton to watch for viewport resizes, avoiding duplicate notifications\r\n\t\t//\t\twhich can lead to infinite loops.\r\n\t\t// description:\r\n\t\t//\t\tUsage: Viewport.on(\"resize\", myCallback).\r\n\t\t//\r\n\t\t//\t\tmyCallback() is called without arguments in case it's _WidgetBase.resize(),\r\n\t\t//\t\twhich would interpret the argument as the size to make the widget.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar Viewport = new Evented();\r\n\r\n\tvar focusedNode;\r\n\r\n\tdomReady(function(){\r\n\t\tvar oldBox = winUtils.getBox();\r\n\t\tViewport._rlh = on(window, \"resize\", function(){\r\n\t\t\tvar newBox = winUtils.getBox();\r\n\t\t\tif(oldBox.h == newBox.h && oldBox.w == newBox.w){ return; }\r\n\t\t\toldBox = newBox;\r\n\t\t\tViewport.emit(\"resize\");\r\n\t\t});\r\n\r\n\t\t// Also catch zoom changes on IE8, since they don't naturally generate resize events\r\n\t\tif(has(\"ie\") == 8){\r\n\t\t\tvar deviceXDPI = screen.deviceXDPI;\r\n\t\t\tsetInterval(function(){\r\n\t\t\t\tif(screen.deviceXDPI != deviceXDPI){\r\n\t\t\t\t\tdeviceXDPI = screen.deviceXDPI;\r\n\t\t\t\t\tViewport.emit(\"resize\");\r\n\t\t\t\t}\r\n\t\t\t}, 500);\r\n\t\t}\r\n\r\n\t\t// On iOS, keep track of the focused node so we can guess when the keyboard is/isn't being displayed.\r\n\t\tif(has(\"ios\")){\r\n\t\t\ton(document, \"focusin\", function(evt){\r\n\t\t\t\tfocusedNode = evt.target;\r\n\t\t\t});\r\n\t\t\ton(document, \"focusout\", function(evt){\r\n\t\t\t\tfocusedNode = null;\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tViewport.getEffectiveBox = function(/*Document*/ doc){\r\n\t\t// summary:\r\n\t\t//\t\tGet the size of the viewport, or on mobile devices, the part of the viewport not obscured by the\r\n\t\t//\t\tvirtual keyboard.\r\n\r\n\t\tvar box = winUtils.getBox(doc);\r\n\r\n\t\t// Account for iOS virtual keyboard, if it's being shown.  Unfortunately no direct way to check or measure.\r\n\t\tvar tag = focusedNode && focusedNode.tagName && focusedNode.tagName.toLowerCase();\r\n\t\tif(has(\"ios\") && focusedNode && !focusedNode.readOnly && (tag == \"textarea\" || (tag == \"input\" &&\r\n\t\t\t/^(color|email|number|password|search|tel|text|url)$/.test(focusedNode.type)))){\r\n\r\n\t\t\t// Box represents the size of the viewport.  Some of the viewport is likely covered by the keyboard.\r\n\t\t\t// Estimate height of visible viewport assuming viewport goes to bottom of screen, but is covered by keyboard.\r\n\t\t\tbox.h *= (orientation == 0 || orientation == 180 ? 0.66 : 0.40);\r\n\r\n\t\t\t// Above measurement will be inaccurate if viewport was scrolled up so far that it ends before the bottom\r\n\t\t\t// of the screen.   In this case, keyboard isn't covering as much of the viewport as we thought.\r\n\t\t\t// We know the visible size is at least the distance from the top of the viewport to the focused node.\r\n\t\t\tvar rect = focusedNode.getBoundingClientRect();\r\n\t\t\tbox.h = Math.max(box.h, rect.top + rect.height);\r\n\t\t}\r\n\r\n\t\treturn box;\r\n\t};\r\n\r\n\treturn Viewport;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvVmlld3BvcnQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGlqaXQvVmlld3BvcnQuanM/NTJkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xyXG5cdFwiZG9qby9FdmVudGVkXCIsXHJcblx0XCJkb2pvL29uXCIsXHJcblx0XCJkb2pvL2RvbVJlYWR5XCIsXHJcblx0XCJkb2pvL3NuaWZmXCIsXHQvLyBoYXMoXCJpZVwiKSwgaGFzKFwiaW9zXCIpXHJcblx0XCJkb2pvL3dpbmRvd1wiIC8vIGdldEJveCgpXHJcbl0sIGZ1bmN0aW9uKEV2ZW50ZWQsIG9uLCBkb21SZWFkeSwgaGFzLCB3aW5VdGlscyl7XHJcblxyXG5cdC8vIG1vZHVsZTpcclxuXHQvL1x0XHRkaWppdC9WaWV3cG9ydFxyXG5cclxuXHQvKj09PT09XHJcblx0cmV0dXJuIHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRVdGlsaXR5IHNpbmdsZXRvbiB0byB3YXRjaCBmb3Igdmlld3BvcnQgcmVzaXplcywgYXZvaWRpbmcgZHVwbGljYXRlIG5vdGlmaWNhdGlvbnNcclxuXHRcdC8vXHRcdHdoaWNoIGNhbiBsZWFkIHRvIGluZmluaXRlIGxvb3BzLlxyXG5cdFx0Ly8gZGVzY3JpcHRpb246XHJcblx0XHQvL1x0XHRVc2FnZTogVmlld3BvcnQub24oXCJyZXNpemVcIiwgbXlDYWxsYmFjaykuXHJcblx0XHQvL1xyXG5cdFx0Ly9cdFx0bXlDYWxsYmFjaygpIGlzIGNhbGxlZCB3aXRob3V0IGFyZ3VtZW50cyBpbiBjYXNlIGl0J3MgX1dpZGdldEJhc2UucmVzaXplKCksXHJcblx0XHQvL1x0XHR3aGljaCB3b3VsZCBpbnRlcnByZXQgdGhlIGFyZ3VtZW50IGFzIHRoZSBzaXplIHRvIG1ha2UgdGhlIHdpZGdldC5cclxuXHR9O1xyXG5cdD09PT09Ki9cclxuXHJcblx0dmFyIFZpZXdwb3J0ID0gbmV3IEV2ZW50ZWQoKTtcclxuXHJcblx0dmFyIGZvY3VzZWROb2RlO1xyXG5cclxuXHRkb21SZWFkeShmdW5jdGlvbigpe1xyXG5cdFx0dmFyIG9sZEJveCA9IHdpblV0aWxzLmdldEJveCgpO1xyXG5cdFx0Vmlld3BvcnQuX3JsaCA9IG9uKHdpbmRvdywgXCJyZXNpemVcIiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0dmFyIG5ld0JveCA9IHdpblV0aWxzLmdldEJveCgpO1xyXG5cdFx0XHRpZihvbGRCb3guaCA9PSBuZXdCb3guaCAmJiBvbGRCb3gudyA9PSBuZXdCb3gudyl7IHJldHVybjsgfVxyXG5cdFx0XHRvbGRCb3ggPSBuZXdCb3g7XHJcblx0XHRcdFZpZXdwb3J0LmVtaXQoXCJyZXNpemVcIik7XHJcblx0XHR9KTtcclxuXHJcblx0XHQvLyBBbHNvIGNhdGNoIHpvb20gY2hhbmdlcyBvbiBJRTgsIHNpbmNlIHRoZXkgZG9uJ3QgbmF0dXJhbGx5IGdlbmVyYXRlIHJlc2l6ZSBldmVudHNcclxuXHRcdGlmKGhhcyhcImllXCIpID09IDgpe1xyXG5cdFx0XHR2YXIgZGV2aWNlWERQSSA9IHNjcmVlbi5kZXZpY2VYRFBJO1xyXG5cdFx0XHRzZXRJbnRlcnZhbChmdW5jdGlvbigpe1xyXG5cdFx0XHRcdGlmKHNjcmVlbi5kZXZpY2VYRFBJICE9IGRldmljZVhEUEkpe1xyXG5cdFx0XHRcdFx0ZGV2aWNlWERQSSA9IHNjcmVlbi5kZXZpY2VYRFBJO1xyXG5cdFx0XHRcdFx0Vmlld3BvcnQuZW1pdChcInJlc2l6ZVwiKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sIDUwMCk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gT24gaU9TLCBrZWVwIHRyYWNrIG9mIHRoZSBmb2N1c2VkIG5vZGUgc28gd2UgY2FuIGd1ZXNzIHdoZW4gdGhlIGtleWJvYXJkIGlzL2lzbid0IGJlaW5nIGRpc3BsYXllZC5cclxuXHRcdGlmKGhhcyhcImlvc1wiKSl7XHJcblx0XHRcdG9uKGRvY3VtZW50LCBcImZvY3VzaW5cIiwgZnVuY3Rpb24oZXZ0KXtcclxuXHRcdFx0XHRmb2N1c2VkTm9kZSA9IGV2dC50YXJnZXQ7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRvbihkb2N1bWVudCwgXCJmb2N1c291dFwiLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdGZvY3VzZWROb2RlID0gbnVsbDtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdFZpZXdwb3J0LmdldEVmZmVjdGl2ZUJveCA9IGZ1bmN0aW9uKC8qRG9jdW1lbnQqLyBkb2Mpe1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdEdldCB0aGUgc2l6ZSBvZiB0aGUgdmlld3BvcnQsIG9yIG9uIG1vYmlsZSBkZXZpY2VzLCB0aGUgcGFydCBvZiB0aGUgdmlld3BvcnQgbm90IG9ic2N1cmVkIGJ5IHRoZVxyXG5cdFx0Ly9cdFx0dmlydHVhbCBrZXlib2FyZC5cclxuXHJcblx0XHR2YXIgYm94ID0gd2luVXRpbHMuZ2V0Qm94KGRvYyk7XHJcblxyXG5cdFx0Ly8gQWNjb3VudCBmb3IgaU9TIHZpcnR1YWwga2V5Ym9hcmQsIGlmIGl0J3MgYmVpbmcgc2hvd24uICBVbmZvcnR1bmF0ZWx5IG5vIGRpcmVjdCB3YXkgdG8gY2hlY2sgb3IgbWVhc3VyZS5cclxuXHRcdHZhciB0YWcgPSBmb2N1c2VkTm9kZSAmJiBmb2N1c2VkTm9kZS50YWdOYW1lICYmIGZvY3VzZWROb2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcclxuXHRcdGlmKGhhcyhcImlvc1wiKSAmJiBmb2N1c2VkTm9kZSAmJiAhZm9jdXNlZE5vZGUucmVhZE9ubHkgJiYgKHRhZyA9PSBcInRleHRhcmVhXCIgfHwgKHRhZyA9PSBcImlucHV0XCIgJiZcclxuXHRcdFx0L14oY29sb3J8ZW1haWx8bnVtYmVyfHBhc3N3b3JkfHNlYXJjaHx0ZWx8dGV4dHx1cmwpJC8udGVzdChmb2N1c2VkTm9kZS50eXBlKSkpKXtcclxuXHJcblx0XHRcdC8vIEJveCByZXByZXNlbnRzIHRoZSBzaXplIG9mIHRoZSB2aWV3cG9ydC4gIFNvbWUgb2YgdGhlIHZpZXdwb3J0IGlzIGxpa2VseSBjb3ZlcmVkIGJ5IHRoZSBrZXlib2FyZC5cclxuXHRcdFx0Ly8gRXN0aW1hdGUgaGVpZ2h0IG9mIHZpc2libGUgdmlld3BvcnQgYXNzdW1pbmcgdmlld3BvcnQgZ29lcyB0byBib3R0b20gb2Ygc2NyZWVuLCBidXQgaXMgY292ZXJlZCBieSBrZXlib2FyZC5cclxuXHRcdFx0Ym94LmggKj0gKG9yaWVudGF0aW9uID09IDAgfHwgb3JpZW50YXRpb24gPT0gMTgwID8gMC42NiA6IDAuNDApO1xyXG5cclxuXHRcdFx0Ly8gQWJvdmUgbWVhc3VyZW1lbnQgd2lsbCBiZSBpbmFjY3VyYXRlIGlmIHZpZXdwb3J0IHdhcyBzY3JvbGxlZCB1cCBzbyBmYXIgdGhhdCBpdCBlbmRzIGJlZm9yZSB0aGUgYm90dG9tXHJcblx0XHRcdC8vIG9mIHRoZSBzY3JlZW4uICAgSW4gdGhpcyBjYXNlLCBrZXlib2FyZCBpc24ndCBjb3ZlcmluZyBhcyBtdWNoIG9mIHRoZSB2aWV3cG9ydCBhcyB3ZSB0aG91Z2h0LlxyXG5cdFx0XHQvLyBXZSBrbm93IHRoZSB2aXNpYmxlIHNpemUgaXMgYXQgbGVhc3QgdGhlIGRpc3RhbmNlIGZyb20gdGhlIHRvcCBvZiB0aGUgdmlld3BvcnQgdG8gdGhlIGZvY3VzZWQgbm9kZS5cclxuXHRcdFx0dmFyIHJlY3QgPSBmb2N1c2VkTm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHRcdFx0Ym94LmggPSBNYXRoLm1heChib3guaCwgcmVjdC50b3AgKyByZWN0LmhlaWdodCk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGJveDtcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gVmlld3BvcnQ7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dijit/Viewport.js\n");

/***/ }),

/***/ "./node_modules/dijit/_AttachMixin.js":
/*!********************************************!*\
  !*** ./node_modules/dijit/_AttachMixin.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__.dj.c(module.i),\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach\r\n\t__webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"),\t// remove for 2.0\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.getObject\r\n\t__webpack_require__(/*! dojo/mouse */ \"./node_modules/dojo/mouse.js\"),\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/touch */ \"./node_modules/dojo/touch.js\"),\r\n\t__webpack_require__(/*! ./_WidgetBase */ \"./node_modules/dijit/_WidgetBase.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require, array, connect, declare, lang, mouse, on, touch, _WidgetBase){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_AttachMixin\r\n\r\n\t// Map from string name like \"mouseenter\" to synthetic event like mouse.enter\r\n\tvar synthEvents = lang.delegate(touch, {\r\n\t\t\"mouseenter\": mouse.enter,\r\n\t\t\"mouseleave\": mouse.leave,\r\n\t\t\"keypress\": connect._keypress\t// remove for 2.0\r\n\t});\r\n\r\n\t// To be lightweight, _AttachMixin doesn't require() dijit/a11yclick.\r\n\t// If the subclass has a template using \"ondijitclick\", it must load dijit/a11yclick itself.\r\n\t// In that case, the a11yclick variable below will get set to point to that synthetic event.\r\n\tvar a11yclick;\r\n\r\n\tvar _AttachMixin = declare(\"dijit._AttachMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets to attach to dom nodes and setup events via\r\n\t\t//\t\tconvenient data-dojo-attach-point and data-dojo-attach-event DOM attributes.\r\n\t\t//\r\n\t\t//\t\tSuperclass of _TemplatedMixin, and can also be used standalone when templates are pre-rendered on the\r\n\t\t//\t\tserver.\r\n\t\t//\r\n\t\t//\t\tDoes not [yet] handle widgets like ContentPane with this.containerNode set.   It should skip\r\n\t\t//\t\tscanning for data-dojo-attach-point and data-dojo-attach-event inside this.containerNode, but it\r\n\t\t//\t\tdoesn't.\r\n\r\n/*=====\r\n\t\t// _attachPoints: [private] String[]\r\n\t\t//\t\tList of widget attribute names associated with data-dojo-attach-point=... in the\r\n\t\t//\t\ttemplate, ex: [\"containerNode\", \"labelNode\"]\r\n\t\t_attachPoints: [],\r\n\r\n\t\t// _attachEvents: [private] Handle[]\r\n\t\t//\t\tList of connections associated with data-dojo-attach-event=... in the\r\n\t\t//\t\ttemplate\r\n\t\t_attachEvents: [],\r\n\r\n\t\t// attachScope: [public] Object\r\n\t\t//\t\tObject to which attach points and events will be scoped.  Defaults\r\n\t\t//\t\tto 'this'.\r\n\t\tattachScope: undefined,\r\n\r\n\t\t// searchContainerNode: [protected] Boolean\r\n\t\t//\t\tSearch descendants of this.containerNode for data-dojo-attach-point and data-dojo-attach-event.\r\n\t\t//\t\tShould generally be left false (the default value) both for performance and to avoid failures when\r\n\t\t//\t\tthis.containerNode holds other _AttachMixin instances with their own attach points and events.\r\n \t\tsearchContainerNode: false,\r\n =====*/\r\n\r\n\t\tconstructor: function(/*===== params, srcNodeRef =====*/){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified, replace srcNodeRef with my generated DOM tree.\r\n\r\n\t\t\tthis._attachPoints = [];\r\n\t\t\tthis._attachEvents = [];\r\n\t\t},\r\n\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAttach to DOM nodes marked with special attributes.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\t// recurse through the node, looking for, and attaching to, our\r\n\t\t\t// attachment points and events, which should be defined on the template node.\r\n\t\t\tthis._attachTemplateNodes(this.domNode);\r\n\r\n\t\t\tthis._beforeFillContent();\t\t// hook for _WidgetsInTemplateMixin\r\n\t\t},\r\n\r\n\t\t_beforeFillContent: function(){\r\n\t\t},\r\n\r\n\t\t_attachTemplateNodes: function(rootNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tIterate through the dom nodes and attach functions and nodes accordingly.\r\n\t\t\t// description:\r\n\t\t\t//\t\tMap widget properties and functions to the handlers specified in\r\n\t\t\t//\t\tthe dom node and it's descendants. This function iterates over all\r\n\t\t\t//\t\tnodes and looks for these properties:\r\n\t\t\t//\r\n\t\t\t//\t\t- dojoAttachPoint/data-dojo-attach-point\r\n\t\t\t//\t\t- dojoAttachEvent/data-dojo-attach-event\r\n\t\t\t// rootNode: DomNode\r\n\t\t\t//\t\tThe node to search for properties. All descendants will be searched.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// DFS to process all nodes except those inside of this.containerNode\r\n\t\t\tvar node = rootNode;\r\n\t\t\twhile(true){\r\n\t\t\t\tif(node.nodeType == 1 && (this._processTemplateNode(node, function(n,p){ return n.getAttribute(p); },\r\n\t\t\t\t\t\tthis._attach) || this.searchContainerNode) && node.firstChild){\r\n\t\t\t\t\tnode = node.firstChild;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(node == rootNode){ return; }\r\n\t\t\t\t\twhile(!node.nextSibling){\r\n\t\t\t\t\t\tnode = node.parentNode;\r\n\t\t\t\t\t\tif(node == rootNode){ return; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode = node.nextSibling;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_processTemplateNode: function(/*DOMNode|Widget*/ baseNode, getAttrFunc, attachFunc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcess data-dojo-attach-point and data-dojo-attach-event for given node or widget.\r\n\t\t\t//\t\tReturns true if caller should process baseNode's children too.\r\n\r\n\t\t\tvar ret = true;\r\n\r\n\t\t\t// Process data-dojo-attach-point\r\n\t\t\tvar _attachScope = this.attachScope || this,\r\n\t\t\t\tattachPoint = getAttrFunc(baseNode, \"dojoAttachPoint\") || getAttrFunc(baseNode, \"data-dojo-attach-point\");\r\n\t\t\tif(attachPoint){\r\n\t\t\t\tvar point, points = attachPoint.split(/\\s*,\\s*/);\r\n\t\t\t\twhile((point = points.shift())){\r\n\t\t\t\t\tif(lang.isArray(_attachScope[point])){\r\n\t\t\t\t\t\t_attachScope[point].push(baseNode);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t_attachScope[point] = baseNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tret = (point != \"containerNode\");\r\n\t\t\t\t\tthis._attachPoints.push(point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Process data-dojo-attach-event\r\n\t\t\tvar attachEvent = getAttrFunc(baseNode, \"dojoAttachEvent\") || getAttrFunc(baseNode, \"data-dojo-attach-event\");\r\n\t\t\tif(attachEvent){\r\n\t\t\t\t// NOTE: we want to support attributes that have the form\r\n\t\t\t\t// \"domEvent: nativeEvent, ...\"\r\n\t\t\t\tvar event, events = attachEvent.split(/\\s*,\\s*/);\r\n\t\t\t\tvar trim = lang.trim;\r\n\t\t\t\twhile((event = events.shift())){\r\n\t\t\t\t\tif(event){\r\n\t\t\t\t\t\tvar thisFunc = null;\r\n\t\t\t\t\t\tif(event.indexOf(\":\") != -1){\r\n\t\t\t\t\t\t\t// oh, if only JS had tuple assignment\r\n\t\t\t\t\t\t\tvar funcNameArr = event.split(\":\");\r\n\t\t\t\t\t\t\tevent = trim(funcNameArr[0]);\r\n\t\t\t\t\t\t\tthisFunc = trim(funcNameArr[1]);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tevent = trim(event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!thisFunc){\r\n\t\t\t\t\t\t\tthisFunc = event;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._attachEvents.push(attachFunc(baseNode, event, lang.hitch(_attachScope, thisFunc)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t_attach: function(node, type, func){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRoughly corresponding to dojo/on, this is the default function for processing a\r\n\t\t\t//\t\tdata-dojo-attach-event.  Meant to attach to DOMNodes, not to widgets.\r\n\t\t\t// node: DOMNode\r\n\t\t\t//\t\tThe node to setup a listener on.\r\n\t\t\t// type: String\r\n\t\t\t//\t\tEvent name like \"click\".\r\n\t\t\t// getAttrFunc: Function\r\n\t\t\t//\t\tFunction to get the specified property for a given DomNode/Widget.\r\n\t\t\t// attachFunc: Function?\r\n\t\t\t//\t\tAttaches an event handler from the specified node/widget to specified function.\r\n\r\n\t\t\t// Map special type names like \"mouseenter\" to synthetic events.\r\n\t\t\t// Subclasses are responsible to require() dijit/a11yclick if they want to use it.\r\n\t\t\ttype = type.replace(/^on/, \"\").toLowerCase();\r\n\t\t\tif(type == \"dijitclick\"){\r\n\t\t\t\ttype = a11yclick || (a11yclick = require(\"./a11yclick\"));\r\n\t\t\t}else{\r\n\t\t\t\ttype = synthEvents[type] || type;\r\n\t\t\t}\r\n\r\n\t\t\treturn on(node, type, func);\r\n\t\t},\r\n\r\n\t\t_detachTemplateNodes: function() {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetach and clean up the attachments made in _attachtempalteNodes.\r\n\r\n\t\t\t// Delete all attach points to prevent IE6 memory leaks.\r\n\t\t\tvar _attachScope = this.attachScope || this;\r\n\t\t\tarray.forEach(this._attachPoints, function(point){\r\n\t\t\t\tdelete _attachScope[point];\r\n\t\t\t});\r\n\t\t\tthis._attachPoints = [];\r\n\r\n\t\t\t// And same for event handlers\r\n\t\t\tarray.forEach(this._attachEvents, function(handle){ handle.remove(); });\r\n\t\t\tthis._attachEvents = [];\r\n\t\t},\r\n\r\n\t\tdestroyRendering: function(){\r\n\t\t\tthis._detachTemplateNodes();\r\n\t\t\tthis.inherited(arguments);\r\n\t\t}\r\n\t});\r\n\r\n\t// These arguments can be specified for widgets which are used in templates.\r\n\t// Since any widget can be specified as sub widgets in template, mix it\r\n\t// into the base widget class.  (This is a hack, but it's effective.).\r\n\t// Remove for 2.0.   Also, hide from API doc parser.\r\n\tlang.extend(_WidgetBase, /*===== {} || =====*/ {\r\n\t\tdojoAttachEvent: \"\",\r\n\t\tdojoAttachPoint: \"\"\r\n\t});\r\n\t\r\n\treturn _AttachMixin;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/_AttachMixin.js\n");

/***/ }),

/***/ "./node_modules/dijit/_BidiMixin.js":
/*!******************************************!*\
  !*** ./node_modules/dijit/_BidiMixin.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_BidiMixin\r\n\r\n\t// UCC - constants that will be used by bidi support.\r\n\tvar bidi_const = {\r\n\t\tLRM : '\\u200E',\r\n\t\tLRE : '\\u202A',\r\n\t\tPDF : '\\u202C',\r\n\t\tRLM : '\\u200f',\r\n\t\tRLE : '\\u202B'\r\n\t};\r\n\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tWhen has(\"dojo-bidi\") is true, _WidgetBase will mixin this class.   It enables support for the textdir\r\n\t\t//\t\tproperty to control text direction independently from the GUI direction.\r\n\t\t// description:\r\n\t\t//\t\tThere's a special need for displaying BIDI text in rtl direction\r\n\t\t//\t\tin ltr GUI, sometimes needed auto support.\r\n\t\t//\t\tIn creation of widget, if it's want to activate this class,\r\n\t\t//\t\tthe widget should define the \"textDir\".\r\n\r\n\t\tgetTextDir: function(/*String*/ text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGets the right direction of text.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf textDir is ltr or rtl returns the value.\r\n\t\t\t//\t\tIf it's auto, calls to another function that responsible\r\n\t\t\t//\t\tfor checking the value, and defining the direction.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected.\r\n\t\t\treturn this.textDir == \"auto\" ? this._checkContextual(text) : this.textDir;\r\n\t\t},\r\n\r\n\t\t_checkContextual: function(text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds the first strong (directional) character, return ltr if isLatin\r\n\t\t\t//\t\tor rtl if isBidiChar.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate.\r\n\r\n\t\t\t// look for strong (directional) characters\r\n\t\t\tvar fdc = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(text);\r\n\t\t\t// if found return the direction that defined by the character, else return widgets dir as defult.\r\n\t\t\treturn fdc ? ( fdc[0] <= 'z' ? \"ltr\" : \"rtl\" ) : this.dir ? this.dir : this.isLeftToRight() ? \"ltr\" : \"rtl\";\r\n\t\t},\r\n\r\n\t\tapplyTextDir: function(/*DOMNode*/ element, /*String?*/ text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet element.dir according to this.textDir, assuming this.textDir has a value.\r\n\t\t\t// element:\r\n\t\t\t//\t\tThe text element to be set. Should have dir property.\r\n\t\t\t// text:\r\n\t\t\t//\t\tIf specified, and this.textDir is \"auto\", for calculating the right transformation\r\n\t\t\t//\t\tOtherwise text read from element.\r\n\t\t\t// description:\r\n\t\t\t//\t\tIf textDir is ltr or rtl returns the value.\r\n\t\t\t//\t\tIf it's auto, calls to another function that responsible\r\n\t\t\t//\t\tfor checking the value, and defining the direction.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected.\r\n\r\n\t\t\tif(this.textDir){\r\n\t\t\t\tvar textDir = this.textDir;\r\n\t\t\t\tif(textDir == \"auto\"){\r\n\t\t\t\t\t// convert \"auto\" to either \"ltr\" or \"rtl\"\r\n\t\t\t\t\tif(typeof text === \"undefined\"){\r\n\t\t\t\t\t\t// text not specified, get text from element\r\n\t\t\t\t\t\tvar tagName = element.tagName.toLowerCase();\r\n\t\t\t\t\t\ttext = (tagName == \"input\" || tagName == \"textarea\") ? element.value :\r\n\t\t\t\t\t\t\telement.innerText || element.textContent || \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttextDir = this._checkContextual(text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(element.dir != textDir){\r\n\t\t\t\t\t// set element's dir to match textDir, but not when textDir is null and not when it already matches\r\n\t\t\t\t\telement.dir = textDir;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tenforceTextDirWithUcc: function(option, text){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWraps by UCC (Unicode control characters) option's text according to this.textDir\r\n\t\t\t// option:\r\n\t\t\t//\t\tThe element (`<option>`) we wrapping the text for.\r\n\t\t\t// text:\r\n\t\t\t//\t\tThe text to be wrapped.\r\n\t\t\t// description:\r\n\t\t\t//\t\tThere's a dir problem with some HTML elements. For some elements (e.g. `<option>`, `<select>`)\r\n\t\t\t//\t\tdefining the dir in different direction then the GUI orientation, won't display correctly.\r\n\t\t\t//\t\tFF 3.6 will change the alignment of the text in option - this doesn't follow the bidi standards (static text\r\n\t\t\t//\t\tshould be aligned following GUI direction). IE8 and Opera11.10 completely ignore dir setting for `<option>`.\r\n\t\t\t//\t\tTherefore the only solution is to use UCC (Unicode  control characters) to display the text in correct orientation.\r\n\t\t\t//\t\tThis function saves the original text value for later restoration if needed, for example if the textDir will change etc.\r\n\t\t\tif(this.textDir){\r\n\t\t\t\tif(option){\r\n\t\t\t\t\toption.originalText = text;\r\n\t\t\t\t}\r\n\t\t\t\tvar dir = this.textDir == \"auto\" ? this._checkContextual(text) : this.textDir;\r\n\t\t\t\treturn (dir == \"ltr\" ? bidi_const.LRE : bidi_const.RLE ) + text + bidi_const.PDF;\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t},\r\n\r\n\t\trestoreOriginalText: function(origObj){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRestores the text of origObj, if needed, after enforceTextDirWithUcc, e.g. set(\"textDir\", textDir).\r\n\t\t\t// origObj:\r\n\t\t\t//\t\tThe element (`<option>`) to restore.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets the text of origObj to origObj.originalText, which is the original text, without the UCCs.\r\n\t\t\t//\t\tThe function than removes the originalText from origObj!\r\n\t\t\tif(origObj.originalText){\r\n\t\t\t\torigObj.text = origObj.originalText;\r\n\t\t\t\tdelete origObj.originalText;\r\n\t\t\t}\r\n\t\t\treturn origObj;\r\n\t\t},\r\n\r\n\t\t_setTextDirAttr: function(/*String*/ textDir){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSetter for textDir.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers shouldn't call this function; they should be calling\r\n\t\t\t//\t\tset('textDir', value)\r\n\t\t\tif(!this._created || this.textDir != textDir){\r\n\t\t\t\tthis._set(\"textDir\", textDir);\r\n\t\t\t\tvar node = null;\r\n\t\t\t\tif(this.displayNode){\r\n\t\t\t\t\tnode = this.displayNode;\r\n\t\t\t\t\tthis.displayNode.align = this.dir == \"rtl\" ? \"right\" : \"left\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnode = this.textDirNode || this.focusNode || this.textbox;\r\n\t\t\t\t}\r\n\t\t\t\tif(node){\r\n\t\t\t\t\tthis.applyTextDir(node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/_BidiMixin.js\n");

/***/ }),

/***/ "./node_modules/dijit/_FocusMixin.js":
/*!*******************************************!*\
  !*** ./node_modules/dijit/_FocusMixin.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! ./focus */ \"./node_modules/dijit/focus.js\"),\r\n\t__webpack_require__(/*! ./_WidgetBase */ \"./node_modules/dijit/_WidgetBase.js\"),\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\") // lang.extend\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(focus, _WidgetBase, declare, lang){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_FocusMixin\r\n\r\n\t// We don't know where _FocusMixin will occur in the inheritance chain, but we need the _onFocus()/_onBlur() below\r\n\t// to be last in the inheritance chain, so mixin to _WidgetBase.\r\n\tlang.extend(_WidgetBase, {\r\n\t\t// focused: [readonly] Boolean\r\n\t\t//\t\tThis widget or a widget it contains has focus, or is \"active\" because\r\n\t\t//\t\tit was recently clicked.\r\n\t\tfocused: false,\r\n\r\n\t\tonFocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the widget becomes \"active\" because\r\n\t\t\t//\t\tit or a widget inside of it either has focus, or has recently\r\n\t\t\t//\t\tbeen clicked.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\tonBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when the widget stops being \"active\" because\r\n\t\t\t//\t\tfocus moved to something outside of it, or the user\r\n\t\t\t//\t\tclicked somewhere outside of it, or the widget was\r\n\t\t\t//\t\thidden.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tcallback\r\n\t\t},\r\n\r\n\t\t_onFocus: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is where widgets do processing for when they are active,\r\n\t\t\t//\t\tsuch as changing CSS classes.  See onFocus() for more details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.onFocus();\r\n\t\t},\r\n\r\n\t\t_onBlur: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThis is where widgets do processing for when they stop being active,\r\n\t\t\t//\t\tsuch as changing CSS classes.  See onBlur() for more details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tthis.onBlur();\r\n\t\t}\r\n\t});\r\n\r\n\treturn declare(\"dijit._FocusMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin to widget to provide _onFocus() and _onBlur() methods that\r\n\t\t//\t\tfire when a widget or its descendants get/lose focus\r\n\r\n\t\t// flag that I want _onFocus()/_onBlur() notifications from focus manager\r\n\t\t_focusManager: focus\r\n\t});\r\n\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvX0ZvY3VzTWl4aW4uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGlqaXQvX0ZvY3VzTWl4aW4uanM/NDI5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xyXG5cdFwiLi9mb2N1c1wiLFxyXG5cdFwiLi9fV2lkZ2V0QmFzZVwiLFxyXG5cdFwiZG9qby9fYmFzZS9kZWNsYXJlXCIsIC8vIGRlY2xhcmVcclxuXHRcImRvam8vX2Jhc2UvbGFuZ1wiIC8vIGxhbmcuZXh0ZW5kXHJcbl0sIGZ1bmN0aW9uKGZvY3VzLCBfV2lkZ2V0QmFzZSwgZGVjbGFyZSwgbGFuZyl7XHJcblxyXG5cdC8vIG1vZHVsZTpcclxuXHQvL1x0XHRkaWppdC9fRm9jdXNNaXhpblxyXG5cclxuXHQvLyBXZSBkb24ndCBrbm93IHdoZXJlIF9Gb2N1c01peGluIHdpbGwgb2NjdXIgaW4gdGhlIGluaGVyaXRhbmNlIGNoYWluLCBidXQgd2UgbmVlZCB0aGUgX29uRm9jdXMoKS9fb25CbHVyKCkgYmVsb3dcclxuXHQvLyB0byBiZSBsYXN0IGluIHRoZSBpbmhlcml0YW5jZSBjaGFpbiwgc28gbWl4aW4gdG8gX1dpZGdldEJhc2UuXHJcblx0bGFuZy5leHRlbmQoX1dpZGdldEJhc2UsIHtcclxuXHRcdC8vIGZvY3VzZWQ6IFtyZWFkb25seV0gQm9vbGVhblxyXG5cdFx0Ly9cdFx0VGhpcyB3aWRnZXQgb3IgYSB3aWRnZXQgaXQgY29udGFpbnMgaGFzIGZvY3VzLCBvciBpcyBcImFjdGl2ZVwiIGJlY2F1c2VcclxuXHRcdC8vXHRcdGl0IHdhcyByZWNlbnRseSBjbGlja2VkLlxyXG5cdFx0Zm9jdXNlZDogZmFsc2UsXHJcblxyXG5cdFx0b25Gb2N1czogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Q2FsbGVkIHdoZW4gdGhlIHdpZGdldCBiZWNvbWVzIFwiYWN0aXZlXCIgYmVjYXVzZVxyXG5cdFx0XHQvL1x0XHRpdCBvciBhIHdpZGdldCBpbnNpZGUgb2YgaXQgZWl0aGVyIGhhcyBmb2N1cywgb3IgaGFzIHJlY2VudGx5XHJcblx0XHRcdC8vXHRcdGJlZW4gY2xpY2tlZC5cclxuXHRcdFx0Ly8gdGFnczpcclxuXHRcdFx0Ly9cdFx0Y2FsbGJhY2tcclxuXHRcdH0sXHJcblxyXG5cdFx0b25CbHVyOiBmdW5jdGlvbigpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRDYWxsZWQgd2hlbiB0aGUgd2lkZ2V0IHN0b3BzIGJlaW5nIFwiYWN0aXZlXCIgYmVjYXVzZVxyXG5cdFx0XHQvL1x0XHRmb2N1cyBtb3ZlZCB0byBzb21ldGhpbmcgb3V0c2lkZSBvZiBpdCwgb3IgdGhlIHVzZXJcclxuXHRcdFx0Ly9cdFx0Y2xpY2tlZCBzb21ld2hlcmUgb3V0c2lkZSBvZiBpdCwgb3IgdGhlIHdpZGdldCB3YXNcclxuXHRcdFx0Ly9cdFx0aGlkZGVuLlxyXG5cdFx0XHQvLyB0YWdzOlxyXG5cdFx0XHQvL1x0XHRjYWxsYmFja1xyXG5cdFx0fSxcclxuXHJcblx0XHRfb25Gb2N1czogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0VGhpcyBpcyB3aGVyZSB3aWRnZXRzIGRvIHByb2Nlc3NpbmcgZm9yIHdoZW4gdGhleSBhcmUgYWN0aXZlLFxyXG5cdFx0XHQvL1x0XHRzdWNoIGFzIGNoYW5naW5nIENTUyBjbGFzc2VzLiAgU2VlIG9uRm9jdXMoKSBmb3IgbW9yZSBkZXRhaWxzLlxyXG5cdFx0XHQvLyB0YWdzOlxyXG5cdFx0XHQvL1x0XHRwcm90ZWN0ZWRcclxuXHRcdFx0dGhpcy5vbkZvY3VzKCk7XHJcblx0XHR9LFxyXG5cclxuXHRcdF9vbkJsdXI6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFRoaXMgaXMgd2hlcmUgd2lkZ2V0cyBkbyBwcm9jZXNzaW5nIGZvciB3aGVuIHRoZXkgc3RvcCBiZWluZyBhY3RpdmUsXHJcblx0XHRcdC8vXHRcdHN1Y2ggYXMgY2hhbmdpbmcgQ1NTIGNsYXNzZXMuICBTZWUgb25CbHVyKCkgZm9yIG1vcmUgZGV0YWlscy5cclxuXHRcdFx0Ly8gdGFnczpcclxuXHRcdFx0Ly9cdFx0cHJvdGVjdGVkXHJcblx0XHRcdHRoaXMub25CbHVyKCk7XHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdHJldHVybiBkZWNsYXJlKFwiZGlqaXQuX0ZvY3VzTWl4aW5cIiwgbnVsbCwge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdE1peGluIHRvIHdpZGdldCB0byBwcm92aWRlIF9vbkZvY3VzKCkgYW5kIF9vbkJsdXIoKSBtZXRob2RzIHRoYXRcclxuXHRcdC8vXHRcdGZpcmUgd2hlbiBhIHdpZGdldCBvciBpdHMgZGVzY2VuZGFudHMgZ2V0L2xvc2UgZm9jdXNcclxuXHJcblx0XHQvLyBmbGFnIHRoYXQgSSB3YW50IF9vbkZvY3VzKCkvX29uQmx1cigpIG5vdGlmaWNhdGlvbnMgZnJvbSBmb2N1cyBtYW5hZ2VyXHJcblx0XHRfZm9jdXNNYW5hZ2VyOiBmb2N1c1xyXG5cdH0pO1xyXG5cclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dijit/_FocusMixin.js\n");

/***/ }),

/***/ "./node_modules/dijit/_OnDijitClickMixin.js":
/*!**************************************************!*\
  !*** ./node_modules/dijit/_OnDijitClickMixin.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach\r\n\t__webpack_require__(/*! dojo/keys */ \"./node_modules/dojo/keys.js\"), // keys.ENTER keys.SPACE\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"), // has(\"dom-addeventlistener\")\r\n\t__webpack_require__(/*! ./a11yclick */ \"./node_modules/dijit/a11yclick.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(on, array, keys, declare, has, a11yclick){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_OnDijitClickMixin\r\n\r\n\tvar ret = declare(\"dijit._OnDijitClickMixin\", null, {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated.   New code should access the dijit/a11yclick event directly, ex:\r\n\t\t//\t\t|\tthis.own(on(node, a11yclick, function(){ ... }));\r\n\t\t//\r\n\t\t//\t\tMixing in this class will make _WidgetBase.connect(node, \"ondijitclick\", ...) work.\r\n\t\t//\t\tIt also used to be necessary to make templates with ondijitclick work, but now you can just require\r\n\t\t//\t\tdijit/a11yclick.\r\n\r\n\t\tconnect: function(obj, event, method){\r\n\t\t\t// override _WidgetBase.connect() to make this.connect(node, \"ondijitclick\", ...) work\r\n\t\t\treturn this.inherited(arguments, [obj, event == \"ondijitclick\" ? a11yclick : event, method]);\r\n\t\t}\r\n\t});\r\n\r\n\tret.a11yclick = a11yclick;\t// back compat\r\n\r\n\treturn ret;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvX09uRGlqaXRDbGlja01peGluLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rpaml0L19PbkRpaml0Q2xpY2tNaXhpbi5qcz8zNGU2Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXHJcblx0XCJkb2pvL29uXCIsXHJcblx0XCJkb2pvL19iYXNlL2FycmF5XCIsIC8vIGFycmF5LmZvckVhY2hcclxuXHRcImRvam8va2V5c1wiLCAvLyBrZXlzLkVOVEVSIGtleXMuU1BBQ0VcclxuXHRcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCAvLyBkZWNsYXJlXHJcblx0XCJkb2pvL2hhc1wiLCAvLyBoYXMoXCJkb20tYWRkZXZlbnRsaXN0ZW5lclwiKVxyXG5cdFwiLi9hMTF5Y2xpY2tcIlxyXG5dLCBmdW5jdGlvbihvbiwgYXJyYXksIGtleXMsIGRlY2xhcmUsIGhhcywgYTExeWNsaWNrKXtcclxuXHJcblx0Ly8gbW9kdWxlOlxyXG5cdC8vXHRcdGRpaml0L19PbkRpaml0Q2xpY2tNaXhpblxyXG5cclxuXHR2YXIgcmV0ID0gZGVjbGFyZShcImRpaml0Ll9PbkRpaml0Q2xpY2tNaXhpblwiLCBudWxsLCB7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0RGVwcmVjYXRlZC4gICBOZXcgY29kZSBzaG91bGQgYWNjZXNzIHRoZSBkaWppdC9hMTF5Y2xpY2sgZXZlbnQgZGlyZWN0bHksIGV4OlxyXG5cdFx0Ly9cdFx0fFx0dGhpcy5vd24ob24obm9kZSwgYTExeWNsaWNrLCBmdW5jdGlvbigpeyAuLi4gfSkpO1xyXG5cdFx0Ly9cclxuXHRcdC8vXHRcdE1peGluZyBpbiB0aGlzIGNsYXNzIHdpbGwgbWFrZSBfV2lkZ2V0QmFzZS5jb25uZWN0KG5vZGUsIFwib25kaWppdGNsaWNrXCIsIC4uLikgd29yay5cclxuXHRcdC8vXHRcdEl0IGFsc28gdXNlZCB0byBiZSBuZWNlc3NhcnkgdG8gbWFrZSB0ZW1wbGF0ZXMgd2l0aCBvbmRpaml0Y2xpY2sgd29yaywgYnV0IG5vdyB5b3UgY2FuIGp1c3QgcmVxdWlyZVxyXG5cdFx0Ly9cdFx0ZGlqaXQvYTExeWNsaWNrLlxyXG5cclxuXHRcdGNvbm5lY3Q6IGZ1bmN0aW9uKG9iaiwgZXZlbnQsIG1ldGhvZCl7XHJcblx0XHRcdC8vIG92ZXJyaWRlIF9XaWRnZXRCYXNlLmNvbm5lY3QoKSB0byBtYWtlIHRoaXMuY29ubmVjdChub2RlLCBcIm9uZGlqaXRjbGlja1wiLCAuLi4pIHdvcmtcclxuXHRcdFx0cmV0dXJuIHRoaXMuaW5oZXJpdGVkKGFyZ3VtZW50cywgW29iaiwgZXZlbnQgPT0gXCJvbmRpaml0Y2xpY2tcIiA/IGExMXljbGljayA6IGV2ZW50LCBtZXRob2RdKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0cmV0LmExMXljbGljayA9IGExMXljbGljaztcdC8vIGJhY2sgY29tcGF0XHJcblxyXG5cdHJldHVybiByZXQ7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dijit/_OnDijitClickMixin.js\n");

/***/ }),

/***/ "./node_modules/dijit/_TemplatedMixin.js":
/*!***********************************************!*\
  !*** ./node_modules/dijit/_TemplatedMixin.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/cache */ \"./node_modules/dojo/cache.js\"),\t// dojo.cache\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"), // domConstruct.destroy, domConstruct.toDom\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.getObject\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"), // has(\"ie\")\r\n\t__webpack_require__(/*! dojo/string */ \"./node_modules/dojo/string.js\"), // string.substitute string.trim\r\n\t__webpack_require__(/*! ./_AttachMixin */ \"./node_modules/dijit/_AttachMixin.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(cache, declare, domConstruct, lang, on, has, string, _AttachMixin){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_TemplatedMixin\r\n\r\n\tvar _TemplatedMixin = declare(\"dijit._TemplatedMixin\", _AttachMixin, {\r\n\t\t// summary:\r\n\t\t//\t\tMixin for widgets that are instantiated from a template\r\n\r\n\t\t// templateString: [protected] String\r\n\t\t//\t\tA string that represents the widget template.\r\n\t\t//\t\tUse in conjunction with dojo.cache() to load from a file.\r\n\t\ttemplateString: null,\r\n\r\n\t\t// templatePath: [protected deprecated] String\r\n\t\t//\t\tPath to template (HTML file) for this widget relative to dojo.baseUrl.\r\n\t\t//\t\tDeprecated: use templateString with require([... \"dojo/text!...\"], ...) instead\r\n\t\ttemplatePath: null,\r\n\r\n\t\t// skipNodeCache: [protected] Boolean\r\n\t\t//\t\tIf using a cached widget template nodes poses issues for a\r\n\t\t//\t\tparticular widget class, it can set this property to ensure\r\n\t\t//\t\tthat its template is always re-built from a string\r\n\t\t_skipNodeCache: false,\r\n\r\n/*=====\r\n\t\t// _rendered: Boolean\r\n\t\t//\t\tNot normally use, but this flag can be set by the app if the server has already rendered the template,\r\n\t\t//\t\ti.e. already inlining the template for the widget into the main page.   Reduces _TemplatedMixin to\r\n\t\t//\t\tjust function like _AttachMixin.\r\n\t\t_rendered: false,\r\n=====*/\r\n\r\n\t\t// Set _AttachMixin.searchContainerNode to true for back-compat for widgets that have data-dojo-attach-point's\r\n\t\t// and events inside this.containerNode.   Remove for 2.0.\r\n\t\tsearchContainerNode: true,\r\n\r\n\t\t_stringRepl: function(tmpl){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDoes substitution of ${foo} type properties in template string\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\t\t\tvar className = this.declaredClass, _this = this;\r\n\t\t\t// Cache contains a string because we need to do property replacement\r\n\t\t\t// do the property replacement\r\n\t\t\treturn string.substitute(tmpl, this, function(value, key){\r\n\t\t\t\tif(key.charAt(0) == '!'){ value = lang.getObject(key.substr(1), false, _this); }\r\n\t\t\t\tif(typeof value == \"undefined\"){ throw new Error(className+\" template:\"+key); } // a debugging aide\r\n\t\t\t\tif(value == null){ return \"\"; }\r\n\r\n\t\t\t\t// Substitution keys beginning with ! will skip the transform step,\r\n\t\t\t\t// in case a user wishes to insert unescaped markup, e.g. ${!foo}\r\n\t\t\t\treturn key.charAt(0) == \"!\" ? value : this._escapeValue(\"\" + value);\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t_escapeValue: function(/*String*/ val){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tEscape a value to be inserted into the template, either into an attribute value\r\n\t\t\t//\t\t(ex: foo=\"${bar}\") or as inner text of an element (ex: <span>${foo}</span>)\r\n\r\n\t\t\t// Safer substitution, see heading \"Attribute values\" in\r\n\t\t\t// http://www.w3.org/TR/REC-html40/appendix/notes.html#h-B.3.2\r\n\t\t\t// and also https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet#RULE_.231_-_HTML_Escape_Before_Inserting_Untrusted_Data_into_HTML_Element_Content\r\n\t\t\treturn val.replace(/[\"'<>&]/g, function(val){\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"&\": \"&amp;\",\r\n\t\t\t\t\t\"<\": \"&lt;\",\r\n\t\t\t\t\t\">\": \"&gt;\",\r\n\t\t\t\t\t\"\\\"\": \"&quot;\",\r\n\t\t\t\t\t\"'\": \"&#x27;\"\r\n\t\t\t\t}[val];\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstruct the UI for this widget from a template, setting this.domNode.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\tif(!this.templateString){\r\n\t\t\t\t\tthis.templateString = cache(this.templatePath, {sanitize: true});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Lookup cached version of template, and download to cache if it\r\n\t\t\t\t// isn't there already.  Returns either a DomNode or a string, depending on\r\n\t\t\t\t// whether or not the template contains ${foo} replacement parameters.\r\n\t\t\t\tvar cached = _TemplatedMixin.getCachedTemplate(this.templateString, this._skipNodeCache, this.ownerDocument);\r\n\r\n\t\t\t\tvar node;\r\n\t\t\t\tif(lang.isString(cached)){\r\n\t\t\t\t\tnode = domConstruct.toDom(this._stringRepl(cached), this.ownerDocument);\r\n\t\t\t\t\tif(node.nodeType != 1){\r\n\t\t\t\t\t\t// Flag common problems such as templates with multiple top level nodes (nodeType == 11)\r\n\t\t\t\t\t\tthrow new Error(\"Invalid template: \" + cached);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// if it's a node, all we have to do is clone it\r\n\t\t\t\t\tnode = cached.cloneNode(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.domNode = node;\r\n\t\t\t}\r\n\r\n\t\t\t// Call down to _WidgetBase.buildRendering() to get base classes assigned\r\n\t\t\t// TODO: change the baseClass assignment to _setBaseClassAttr\r\n\t\t\tthis.inherited(arguments);\r\n\r\n\t\t\tif(!this._rendered){\r\n\t\t\t\tthis._fillContent(this.srcNodeRef);\r\n\t\t\t}\r\n\r\n\t\t\tthis._rendered = true;\r\n\t\t},\r\n\r\n\t\t_fillContent: function(/*DomNode*/ source){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRelocate source contents to templated container node.\r\n\t\t\t//\t\tthis.containerNode must be able to receive children, or exceptions will be thrown.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\tvar dest = this.containerNode;\r\n\t\t\tif(source && dest){\r\n\t\t\t\twhile(source.hasChildNodes()){\r\n\t\t\t\t\tdest.appendChild(source.firstChild);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// key is templateString; object is either string or DOM tree\r\n\t_TemplatedMixin._templateCache = {};\r\n\r\n\t_TemplatedMixin.getCachedTemplate = function(templateString, alwaysUseString, doc){\r\n\t\t// summary:\r\n\t\t//\t\tStatic method to get a template based on the templatePath or\r\n\t\t//\t\ttemplateString key\r\n\t\t// templateString: String\r\n\t\t//\t\tThe template\r\n\t\t// alwaysUseString: Boolean\r\n\t\t//\t\tDon't cache the DOM tree for this template, even if it doesn't have any variables\r\n\t\t// doc: Document?\r\n\t\t//\t\tThe target document.   Defaults to document global if unspecified.\r\n\t\t// returns: Mixed\r\n\t\t//\t\tEither string (if there are ${} variables that need to be replaced) or just\r\n\t\t//\t\ta DOM tree (if the node can be cloned directly)\r\n\r\n\t\t// is it already cached?\r\n\t\tvar tmplts = _TemplatedMixin._templateCache;\r\n\t\tvar key = templateString;\r\n\t\tvar cached = tmplts[key];\r\n\t\tif(cached){\r\n\t\t\ttry{\r\n\t\t\t\t// if the cached value is an innerHTML string (no ownerDocument) or a DOM tree created within the\r\n\t\t\t\t// current document, then use the current cached value\r\n\t\t\t\tif(!cached.ownerDocument || cached.ownerDocument == (doc || document)){\r\n\t\t\t\t\t// string or node of the same document\r\n\t\t\t\t\treturn cached;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){ /* squelch */ } // IE can throw an exception if cached.ownerDocument was reloaded\r\n\t\t\tdomConstruct.destroy(cached);\r\n\t\t}\r\n\r\n\t\ttemplateString = string.trim(templateString);\r\n\r\n\t\tif(alwaysUseString || templateString.match(/\\$\\{([^\\}]+)\\}/g)){\r\n\t\t\t// there are variables in the template so all we can do is cache the string\r\n\t\t\treturn (tmplts[key] = templateString); //String\r\n\t\t}else{\r\n\t\t\t// there are no variables in the template so we can cache the DOM tree\r\n\t\t\tvar node = domConstruct.toDom(templateString, doc);\r\n\t\t\tif(node.nodeType != 1){\r\n\t\t\t\tthrow new Error(\"Invalid template: \" + templateString);\r\n\t\t\t}\r\n\t\t\treturn (tmplts[key] = node); //Node\r\n\t\t}\r\n\t};\r\n\r\n\tif(has(\"ie\")){\r\n\t\ton(window, \"unload\", function(){\r\n\t\t\tvar cache = _TemplatedMixin._templateCache;\r\n\t\t\tfor(var key in cache){\r\n\t\t\t\tvar value = cache[key];\r\n\t\t\t\tif(typeof value == \"object\"){ // value is either a string or a DOM node template\r\n\t\t\t\t\tdomConstruct.destroy(value);\r\n\t\t\t\t}\r\n\t\t\t\tdelete cache[key];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn _TemplatedMixin;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/_TemplatedMixin.js\n");

/***/ }),

/***/ "./node_modules/dijit/_Widget.js":
/*!***************************************!*\
  !*** ./node_modules/dijit/_Widget.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/aspect */ \"./node_modules/dojo/aspect.js\"),\t// aspect.around\r\n\t__webpack_require__(/*! dojo/_base/config */ \"./node_modules/dojo/_base/config.js\"),\t// config.isDebug\r\n\t__webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"),\t// connect.connect\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"),\r\n\t__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), // kernel.deprecated\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.hitch\r\n\t__webpack_require__(/*! dojo/query */ \"./node_modules/dojo/query.js\"),\r\n\t__webpack_require__(/*! dojo/ready */ \"./node_modules/dojo/ready.js\"),\r\n\t__webpack_require__(/*! ./registry */ \"./node_modules/dijit/registry.js\"),\t// registry.byNode\r\n\t__webpack_require__(/*! ./_WidgetBase */ \"./node_modules/dijit/_WidgetBase.js\"),\r\n\t__webpack_require__(/*! ./_OnDijitClickMixin */ \"./node_modules/dijit/_OnDijitClickMixin.js\"),\r\n\t__webpack_require__(/*! ./_FocusMixin */ \"./node_modules/dijit/_FocusMixin.js\"),\r\n\t__webpack_require__(/*! dojo/uacss */ \"./node_modules/dojo/uacss.js\"),\t\t// browser sniffing (included for back-compat; subclasses may be using)\r\n\t__webpack_require__(/*! ./hccss */ \"./node_modules/dijit/hccss.js\")\t\t// high contrast mode sniffing (included to set CSS classes on <body>, module ret value unused)\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(aspect, config, connect, declare, has, kernel, lang, query, ready,\r\n\t\t\tregistry, _WidgetBase, _OnDijitClickMixin, _FocusMixin){\r\n\r\n\r\n// module:\r\n//\t\tdijit/_Widget\r\n\r\n\r\nfunction connectToDomNode(){\r\n\t// summary:\r\n\t//\t\tIf user connects to a widget method === this function, then they will\r\n\t//\t\tinstead actually be connecting the equivalent event on this.domNode\r\n}\r\n\r\n// Trap dojo.connect() calls to connectToDomNode methods, and redirect to _Widget.on()\r\nfunction aroundAdvice(originalConnect){\r\n\treturn function(obj, event, scope, method){\r\n\t\tif(obj && typeof event == \"string\" && obj[event] == connectToDomNode){\r\n\t\t\treturn obj.on(event.substring(2).toLowerCase(), lang.hitch(scope, method));\r\n\t\t}\r\n\t\treturn originalConnect.apply(connect, arguments);\r\n\t};\r\n}\r\naspect.around(connect, \"connect\", aroundAdvice);\r\nif(kernel.connect){\r\n\taspect.around(kernel, \"connect\", aroundAdvice);\r\n}\r\n\r\nvar _Widget = declare(\"dijit._Widget\", [_WidgetBase, _OnDijitClickMixin, _FocusMixin], {\r\n\t// summary:\r\n\t//\t\tOld base class for widgets.   New widgets should extend `dijit/_WidgetBase` instead\r\n\t// description:\r\n\t//\t\tOld Base class for Dijit widgets.\r\n\t//\r\n\t//\t\tExtends _WidgetBase, adding support for:\r\n\t//\r\n\t//\t\t- declaratively/programatically specifying widget initialization parameters like\r\n\t//\t\t\tonMouseMove=\"foo\" that call foo when this.domNode gets a mousemove event\r\n\t//\t\t- ondijitclick:\r\n\t//\t\t\tSupport new data-dojo-attach-event=\"ondijitclick: ...\" that is triggered by a mouse click or a SPACE/ENTER keypress\r\n\t//\t\t- focus related functions:\r\n\t//\t\t\tIn particular, the onFocus()/onBlur() callbacks.   Driven internally by\r\n\t//\t\t\tdijit/_base/focus.js.\r\n\t//\t\t- deprecated methods\r\n\t//\t\t- onShow(), onHide(), onClose()\r\n\t//\r\n\t//\t\tAlso, by loading code in dijit/_base, turns on:\r\n\t//\r\n\t//\t\t- browser sniffing (putting browser class like `dj_ie` on `<html>` node)\r\n\t//\t\t- high contrast mode sniffing (add `dijit_a11y` class to `<body>` if machine is in high contrast mode)\r\n\r\n\r\n\t////////////////// DEFERRED CONNECTS ///////////////////\r\n\r\n\tonClick: connectToDomNode,\r\n\t/*=====\r\n\tonClick: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of mouse click events.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonDblClick: connectToDomNode,\r\n\t/*=====\r\n\tonDblClick: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of mouse double click events.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonKeyDown: connectToDomNode,\r\n\t/*=====\r\n\tonKeyDown: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of keys being pressed down.\r\n\t\t// event:\r\n\t\t//\t\tkey Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonKeyPress: connectToDomNode,\r\n\t/*=====\r\n\tonKeyPress: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of printable keys being typed.\r\n\t\t// event:\r\n\t\t//\t\tkey Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonKeyUp: connectToDomNode,\r\n\t/*=====\r\n\tonKeyUp: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of keys being released.\r\n\t\t// event:\r\n\t\t//\t\tkey Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseDown: connectToDomNode,\r\n\t/*=====\r\n\tonMouseDown: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse button is pressed down.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseMove: connectToDomNode,\r\n\t/*=====\r\n\tonMouseMove: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves over nodes contained within this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseOut: connectToDomNode,\r\n\t/*=====\r\n\tonMouseOut: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves off of nodes contained within this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseOver: connectToDomNode,\r\n\t/*=====\r\n\tonMouseOver: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves onto nodes contained within this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseLeave: connectToDomNode,\r\n\t/*=====\r\n\tonMouseLeave: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves off of this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseEnter: connectToDomNode,\r\n\t/*=====\r\n\tonMouseEnter: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse moves onto this widget.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\tonMouseUp: connectToDomNode,\r\n\t/*=====\r\n\tonMouseUp: function(event){\r\n\t\t// summary:\r\n\t\t//\t\tConnect to this function to receive notifications of when the mouse button is released.\r\n\t\t// event:\r\n\t\t//\t\tmouse Event\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\t=====*/\r\n\r\n\tconstructor: function(params /*===== ,srcNodeRef =====*/){\r\n\t\t// summary:\r\n\t\t//\t\tCreate the widget.\r\n\t\t// params: Object|null\r\n\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t// srcNodeRef: DOMNode|String?\r\n\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t//\r\n\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t//\t\t- if this is a behavioral widget then apply behavior to that srcNodeRef\r\n\t\t//\t\t- otherwise, replace srcNodeRef with my generated DOM tree\r\n\r\n\t\t// extract parameters like onMouseMove that should connect directly to this.domNode\r\n\t\tthis._toConnect = {};\r\n\t\tfor(var name in params){\r\n\t\t\tif(this[name] === connectToDomNode){\r\n\t\t\t\tthis._toConnect[name.replace(/^on/, \"\").toLowerCase()] = params[name];\r\n\t\t\t\tdelete params[name];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpostCreate: function(){\r\n\t\tthis.inherited(arguments);\r\n\r\n\t\t// perform connection from this.domNode to user specified handlers (ex: onMouseMove)\r\n\t\tfor(var name in this._toConnect){\r\n\t\t\tthis.on(name, this._toConnect[name]);\r\n\t\t}\r\n\t\tdelete this._toConnect;\r\n\t},\r\n\r\n\ton: function(/*String|Function*/ type, /*Function*/ func){\r\n\t\tif(this[this._onMap(type)] === connectToDomNode){\r\n\t\t\t// Use connect.connect() rather than on() to get handling for \"onmouseenter\" on non-IE,\r\n\t\t\t// normalization of onkeypress/onkeydown to behave like firefox, etc.\r\n\t\t\t// Also, need to specify context as \"this\" rather than the default context of the DOMNode\r\n\t\t\t// Remove in 2.0.\r\n\t\t\treturn connect.connect(this.domNode, type.toLowerCase(), this, func);\r\n\t\t}\r\n\t\treturn this.inherited(arguments);\r\n\t},\r\n\r\n\t_setFocusedAttr: function(val){\r\n\t\t// Remove this method in 2.0 (or sooner), just here to set _focused == focused, for back compat\r\n\t\t// (but since it's a private variable we aren't required to keep supporting it).\r\n\t\tthis._focused = val;\r\n\t\tthis._set(\"focused\", val);\r\n\t},\r\n\r\n\t////////////////// DEPRECATED METHODS ///////////////////\r\n\r\n\tsetAttribute: function(/*String*/ attr, /*anything*/ value){\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated.  Use set() instead.\r\n\t\t// tags:\r\n\t\t//\t\tdeprecated\r\n\t\tkernel.deprecated(this.declaredClass+\"::setAttribute(attr, value) is deprecated. Use set() instead.\", \"\", \"2.0\");\r\n\t\tthis.set(attr, value);\r\n\t},\r\n\r\n\tattr: function(/*String|Object*/name, /*Object?*/value){\r\n\t\t// summary:\r\n\t\t//\t\tThis method is deprecated, use get() or set() directly.\r\n\t\t// name:\r\n\t\t//\t\tThe property to get or set. If an object is passed here and not\r\n\t\t//\t\ta string, its keys are used as names of attributes to be set\r\n\t\t//\t\tand the value of the object as values to set in the widget.\r\n\t\t// value:\r\n\t\t//\t\tOptional. If provided, attr() operates as a setter. If omitted,\r\n\t\t//\t\tthe current value of the named property is returned.\r\n\t\t// tags:\r\n\t\t//\t\tdeprecated\r\n\r\n\t\tvar args = arguments.length;\r\n\t\tif(args >= 2 || typeof name === \"object\"){ // setter\r\n\t\t\treturn this.set.apply(this, arguments);\r\n\t\t}else{ // getter\r\n\t\t\treturn this.get(name);\r\n\t\t}\r\n\t},\r\n\r\n\tgetDescendants: function(){\r\n\t\t// summary:\r\n\t\t//\t\tReturns all the widgets contained by this, i.e., all widgets underneath this.containerNode.\r\n\t\t//\t\tThis method should generally be avoided as it returns widgets declared in templates, which are\r\n\t\t//\t\tsupposed to be internal/hidden, but it's left here for back-compat reasons.\r\n\r\n\t\tkernel.deprecated(this.declaredClass+\"::getDescendants() is deprecated. Use getChildren() instead.\", \"\", \"2.0\");\r\n\t\treturn this.containerNode ? query('[widgetId]', this.containerNode).map(registry.byNode) : []; // dijit/_WidgetBase[]\r\n\t},\r\n\r\n\t////////////////// MISCELLANEOUS METHODS ///////////////////\r\n\r\n\t_onShow: function(){\r\n\t\t// summary:\r\n\t\t//\t\tInternal method called when this widget is made visible.\r\n\t\t//\t\tSee `onShow` for details.\r\n\t\tthis.onShow();\r\n\t},\r\n\r\n\tonShow: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when this widget becomes the selected pane in a\r\n\t\t//\t\t`dijit/layout/TabContainer`, `dijit/layout/StackContainer`,\r\n\t\t//\t\t`dijit/layout/AccordionContainer`, etc.\r\n\t\t//\r\n\t\t//\t\tAlso called to indicate display of a `dijit.Dialog`, `dijit.TooltipDialog`, or `dijit.TitlePane`.\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\r\n\tonHide: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when another widget becomes the selected pane in a\r\n\t\t//\t\t`dijit/layout/TabContainer`, `dijit/layout/StackContainer`,\r\n\t\t//\t\t`dijit/layout/AccordionContainer`, etc.\r\n\t\t//\r\n\t\t//\t\tAlso called to indicate hide of a `dijit.Dialog`, `dijit.TooltipDialog`, or `dijit.TitlePane`.\r\n\t\t// tags:\r\n\t\t//\t\tcallback\r\n\t},\r\n\r\n\tonClose: function(){\r\n\t\t// summary:\r\n\t\t//\t\tCalled when this widget is being displayed as a popup (ex: a Calendar popped\r\n\t\t//\t\tup from a DateTextBox), and it is hidden.\r\n\t\t//\t\tThis is called from the dijit.popup code, and should not be called directly.\r\n\t\t//\r\n\t\t//\t\tAlso used as a parameter for children of `dijit/layout/StackContainer` or subclasses.\r\n\t\t//\t\tCallback if a user tries to close the child.   Child will be closed if this function returns true.\r\n\t\t// tags:\r\n\t\t//\t\textension\r\n\r\n\t\treturn true;\t\t// Boolean\r\n\t}\r\n});\r\n\r\n// For back-compat, remove in 2.0.\r\nif(has(\"dijit-legacy-requires\")){\r\n\tready(0, function(){\r\n\t\tvar requires = [\"dijit/_base\"];\r\n\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t});\r\n}\r\nreturn _Widget;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/_Widget.js\n");

/***/ }),

/***/ "./node_modules/dijit/_WidgetBase.js":
/*!*******************************************!*\
  !*** ./node_modules/dijit/_WidgetBase.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__.dj.c(module.i), // require.toUrl\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach array.map\r\n\t__webpack_require__(/*! dojo/aspect */ \"./node_modules/dojo/aspect.js\"),\r\n\t__webpack_require__(/*! dojo/_base/config */ \"./node_modules/dojo/_base/config.js\"), // config.blankGif\r\n\t__webpack_require__(/*! dojo/_base/connect */ \"./node_modules/dojo/_base/connect.js\"), // connect.connect\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"), // dom.byId\r\n\t__webpack_require__(/*! dojo/dom-attr */ \"./node_modules/dojo/dom-attr.js\"), // domAttr.set domAttr.remove\r\n\t__webpack_require__(/*! dojo/dom-class */ \"./node_modules/dojo/dom-class.js\"), // domClass.add domClass.replace\r\n\t__webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"), // domConstruct.destroy domConstruct.place\r\n\t__webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), // isBodyLtr\r\n\t__webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"), // domStyle.set, domStyle.get\r\n\t__webpack_require__(/*! dojo/has */ \"./node_modules/dojo/has.js\"),\r\n\t__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"),\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // mixin(), isArray(), etc.\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/ready */ \"./node_modules/dojo/ready.js\"),\r\n\t__webpack_require__(/*! dojo/Stateful */ \"./node_modules/dojo/Stateful.js\"), // Stateful\r\n\t__webpack_require__(/*! dojo/topic */ \"./node_modules/dojo/topic.js\"),\r\n\t__webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), // win.body()\r\n\t__webpack_require__(/*! ./Destroyable */ \"./node_modules/dijit/Destroyable.js\"),\r\n\t__webpack_require__.dj.h(\"dojo-bidi?./node_modules/dijit/_BidiMixin.js\"),\r\n\t__webpack_require__(/*! ./registry */ \"./node_modules/dijit/registry.js\")    // registry.getUniqueId(), registry.findWidgets()\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require, array, aspect, config, connect, declare,\r\n\t\t\tdom, domAttr, domClass, domConstruct, domGeometry, domStyle, has, kernel,\r\n\t\t\tlang, on, ready, Stateful, topic, win, Destroyable, _BidiMixin, registry){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_WidgetBase\r\n\r\n\t// Flag to make dijit load modules the app didn't explicitly request, for backwards compatibility\r\n\thas.add(\"dijit-legacy-requires\", !kernel.isAsync);\r\n\r\n\t// Flag to enable support for textdir attribute\r\n\thas.add(\"dojo-bidi\", false);\r\n\r\n\r\n\t// For back-compat, remove in 2.0.\r\n\tif(has(\"dijit-legacy-requires\")){\r\n\t\tready(0, function(){\r\n\t\t\tvar requires = [\"dijit/_base/manager\"];\r\n\t\t\trequire(requires);\t// use indirection so modules not rolled into a build\r\n\t\t});\r\n\t}\r\n\r\n\t// Nested hash listing attributes for each tag, all strings in lowercase.\r\n\t// ex: {\"div\": {\"style\": true, \"tabindex\" true}, \"form\": { ...\r\n\tvar tagAttrs = {};\r\n\r\n\tfunction getAttrs(obj){\r\n\t\tvar ret = {};\r\n\t\tfor(var attr in obj){\r\n\t\t\tret[attr.toLowerCase()] = true;\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\r\n\tfunction nonEmptyAttrToDom(attr){\r\n\t\t// summary:\r\n\t\t//\t\tReturns a setter function that copies the attribute to this.domNode,\r\n\t\t//\t\tor removes the attribute from this.domNode, depending on whether the\r\n\t\t//\t\tvalue is defined or not.\r\n\t\treturn function(val){\r\n\t\t\tdomAttr[val ? \"set\" : \"remove\"](this.domNode, attr, val);\r\n\t\t\tthis._set(attr, val);\r\n\t\t};\r\n\t}\r\n\r\n\tfunction isEqual(a, b){\r\n\t\t//\tsummary:\r\n\t\t//\t\tFunction that determines whether two values are identical,\r\n\t\t//\t\ttaking into account that NaN is not normally equal to itself\r\n\t\t//\t\tin JS.\r\n\r\n\t\treturn a === b || (/* a is NaN */ a !== a && /* b is NaN */ b !== b);\r\n\t}\r\n\r\n\tvar _WidgetBase = declare(\"dijit._WidgetBase\", [Stateful, Destroyable], {\r\n\t\t// summary:\r\n\t\t//\t\tFuture base class for all Dijit widgets.\r\n\t\t// description:\r\n\t\t//\t\tFuture base class for all Dijit widgets.\r\n\t\t//\t\t_Widget extends this class adding support for various features needed by desktop.\r\n\t\t//\r\n\t\t//\t\tProvides stubs for widget lifecycle methods for subclasses to extend, like postMixInProperties(), buildRendering(),\r\n\t\t//\t\tpostCreate(), startup(), and destroy(), and also public API methods like set(), get(), and watch().\r\n\t\t//\r\n\t\t//\t\tWidgets can provide custom setters/getters for widget attributes, which are called automatically by set(name, value).\r\n\t\t//\t\tFor an attribute XXX, define methods _setXXXAttr() and/or _getXXXAttr().\r\n\t\t//\r\n\t\t//\t\t_setXXXAttr can also be a string/hash/array mapping from a widget attribute XXX to the widget's DOMNodes:\r\n\t\t//\r\n\t\t//\t\t- DOM node attribute\r\n\t\t// |\t\t_setFocusAttr: {node: \"focusNode\", type: \"attribute\"}\r\n\t\t// |\t\t_setFocusAttr: \"focusNode\"\t(shorthand)\r\n\t\t// |\t\t_setFocusAttr: \"\"\t\t(shorthand, maps to this.domNode)\r\n\t\t//\t\tMaps this.focus to this.focusNode.focus, or (last example) this.domNode.focus\r\n\t\t//\r\n\t\t//\t\t- DOM node innerHTML\r\n\t\t//\t|\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerHTML\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerHTML\r\n\t\t//\r\n\t\t//\t\t- DOM node innerText\r\n\t\t//\t|\t\t_setTitleAttr: { node: \"titleNode\", type: \"innerText\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerText\r\n\t\t//\r\n\t\t//\t\t- DOM node CSS class\r\n\t\t// |\t\t_setMyClassAttr: { node: \"domNode\", type: \"class\" }\r\n\t\t//\t\tMaps this.myClass to this.domNode.className\r\n\t\t//\r\n\t\t//\t\t- Toggle DOM node CSS class\r\n\t\t// |\t\t_setMyClassAttr: { node: \"domNode\", type: \"toggleClass\" }\r\n\t\t//\t\tToggles myClass on this.domNode by this.myClass\r\n\t\t//\r\n\t\t//\t\tIf the value of _setXXXAttr is an array, then each element in the array matches one of the\r\n\t\t//\t\tformats of the above list.\r\n\t\t//\r\n\t\t//\t\tIf the custom setter is null, no action is performed other than saving the new value\r\n\t\t//\t\tin the widget (in this).\r\n\t\t//\r\n\t\t//\t\tIf no custom setter is defined for an attribute, then it will be copied\r\n\t\t//\t\tto this.focusNode (if the widget defines a focusNode), or this.domNode otherwise.\r\n\t\t//\t\tThat's only done though for attributes that match DOMNode attributes (title,\r\n\t\t//\t\talt, aria-labelledby, etc.)\r\n\r\n\t\t// id: [const] String\r\n\t\t//\t\tA unique, opaque ID string that can be assigned by users or by the\r\n\t\t//\t\tsystem. If the developer passes an ID which is known not to be\r\n\t\t//\t\tunique, the specified ID is ignored and the system-generated ID is\r\n\t\t//\t\tused instead.\r\n\t\tid: \"\",\r\n\t\t_setIdAttr: \"domNode\", // to copy to this.domNode even for auto-generated id's\r\n\r\n\t\t// lang: [const] String\r\n\t\t//\t\tRarely used.  Overrides the default Dojo locale used to render this widget,\r\n\t\t//\t\tas defined by the [HTML LANG](http://www.w3.org/TR/html401/struct/dirlang.html#adef-lang) attribute.\r\n\t\t//\t\tValue must be among the list of locales specified during by the Dojo bootstrap,\r\n\t\t//\t\tformatted according to [RFC 3066](http://www.ietf.org/rfc/rfc3066.txt) (like en-us).\r\n\t\tlang: \"\",\r\n\t\t// set on domNode even when there's a focus node.\tbut don't set lang=\"\", since that's invalid.\r\n\t\t_setLangAttr: nonEmptyAttrToDom(\"lang\"),\r\n\r\n\t\t// dir: [const] String\r\n\t\t//\t\tBi-directional support, as defined by the [HTML DIR](http://www.w3.org/TR/html401/struct/dirlang.html#adef-dir)\r\n\t\t//\t\tattribute. Either left-to-right \"ltr\" or right-to-left \"rtl\".  If undefined, widgets renders in page's\r\n\t\t//\t\tdefault direction.\r\n\t\tdir: \"\",\r\n\t\t// set on domNode even when there's a focus node.\tbut don't set dir=\"\", since that's invalid.\r\n\t\t_setDirAttr: nonEmptyAttrToDom(\"dir\"), // to set on domNode even when there's a focus node\r\n\r\n\t\t// class: String\r\n\t\t//\t\tHTML class attribute\r\n\t\t\"class\": \"\",\r\n\t\t_setClassAttr: { node: \"domNode\", type: \"class\" },\r\n\r\n\t\t// Override automatic assigning type --> focusNode, it causes exception on IE6-8.\r\n\t\t// Instead, type must be specified as ${type} in the template, as part of the original DOM.\r\n\t\t_setTypeAttr: null,\r\n\r\n\t\t// style: String||Object\r\n\t\t//\t\tHTML style attributes as cssText string or name/value hash\r\n\t\tstyle: \"\",\r\n\r\n\t\t// title: String\r\n\t\t//\t\tHTML title attribute.\r\n\t\t//\r\n\t\t//\t\tFor form widgets this specifies a tooltip to display when hovering over\r\n\t\t//\t\tthe widget (just like the native HTML title attribute).\r\n\t\t//\r\n\t\t//\t\tFor TitlePane or for when this widget is a child of a TabContainer, AccordionContainer,\r\n\t\t//\t\tetc., it's used to specify the tab label, accordion pane title, etc.  In this case it's\r\n\t\t//\t\tinterpreted as HTML.\r\n\t\ttitle: \"\",\r\n\r\n\t\t// tooltip: String\r\n\t\t//\t\tWhen this widget's title attribute is used to for a tab label, accordion pane title, etc.,\r\n\t\t//\t\tthis specifies the tooltip to appear when the mouse is hovered over that text.\r\n\t\ttooltip: \"\",\r\n\r\n\t\t// baseClass: [protected] String\r\n\t\t//\t\tRoot CSS class of the widget (ex: dijitTextBox), used to construct CSS classes to indicate\r\n\t\t//\t\twidget state.\r\n\t\tbaseClass: \"\",\r\n\r\n\t\t// srcNodeRef: [readonly] DomNode\r\n\t\t//\t\tpointer to original DOM node\r\n\t\tsrcNodeRef: null,\r\n\r\n\t\t// domNode: [readonly] DomNode\r\n\t\t//\t\tThis is our visible representation of the widget! Other DOM\r\n\t\t//\t\tNodes may by assigned to other properties, usually through the\r\n\t\t//\t\ttemplate system's data-dojo-attach-point syntax, but the domNode\r\n\t\t//\t\tproperty is the canonical \"top level\" node in widget UI.\r\n\t\tdomNode: null,\r\n\r\n\t\t// containerNode: [readonly] DomNode\r\n\t\t//\t\tDesignates where children of the source DOM node will be placed.\r\n\t\t//\t\t\"Children\" in this case refers to both DOM nodes and widgets.\r\n\t\t//\t\tFor example, for myWidget:\r\n\t\t//\r\n\t\t//\t\t|\t<div data-dojo-type=myWidget>\r\n\t\t//\t\t|\t\t<b> here's a plain DOM node\r\n\t\t//\t\t|\t\t<span data-dojo-type=subWidget>and a widget</span>\r\n\t\t//\t\t|\t\t<i> and another plain DOM node </i>\r\n\t\t//\t\t|\t</div>\r\n\t\t//\r\n\t\t//\t\tcontainerNode would point to:\r\n\t\t//\r\n\t\t//\t\t|\t\t<b> here's a plain DOM node\r\n\t\t//\t\t|\t\t<span data-dojo-type=subWidget>and a widget</span>\r\n\t\t//\t\t|\t\t<i> and another plain DOM node </i>\r\n\t\t//\r\n\t\t//\t\tIn templated widgets, \"containerNode\" is set via a\r\n\t\t//\t\tdata-dojo-attach-point assignment.\r\n\t\t//\r\n\t\t//\t\tcontainerNode must be defined for any widget that accepts innerHTML\r\n\t\t//\t\t(like ContentPane or BorderContainer or even Button), and conversely\r\n\t\t//\t\tis null for widgets that don't, like TextBox.\r\n\t\tcontainerNode: null,\r\n\r\n\t\t// ownerDocument: [const] Document?\r\n\t\t//\t\tThe document this widget belongs to.  If not specified to constructor, will default to\r\n\t\t//\t\tsrcNodeRef.ownerDocument, or if no sourceRef specified, then to the document global\r\n\t\townerDocument: null,\r\n\t\t_setOwnerDocumentAttr: function(val){\r\n\t\t\t// this setter is merely to avoid automatically trying to set this.domNode.ownerDocument\r\n\t\t\tthis._set(\"ownerDocument\", val);\r\n\t\t},\r\n\r\n\t\t/*=====\r\n\t\t// _started: [readonly] Boolean\r\n\t\t//\t\tstartup() has completed.\r\n\t\t_started: false,\r\n\t\t=====*/\r\n\r\n\t\t// attributeMap: [protected] Object\r\n\t\t//\t\tDeprecated.\tInstead of attributeMap, widget should have a _setXXXAttr attribute\r\n\t\t//\t\tfor each XXX attribute to be mapped to the DOM.\r\n\t\t//\r\n\t\t//\t\tattributeMap sets up a \"binding\" between attributes (aka properties)\r\n\t\t//\t\tof the widget and the widget's DOM.\r\n\t\t//\t\tChanges to widget attributes listed in attributeMap will be\r\n\t\t//\t\treflected into the DOM.\r\n\t\t//\r\n\t\t//\t\tFor example, calling set('title', 'hello')\r\n\t\t//\t\ton a TitlePane will automatically cause the TitlePane's DOM to update\r\n\t\t//\t\twith the new title.\r\n\t\t//\r\n\t\t//\t\tattributeMap is a hash where the key is an attribute of the widget,\r\n\t\t//\t\tand the value reflects a binding to a:\r\n\t\t//\r\n\t\t//\t\t- DOM node attribute\r\n\t\t// |\t\tfocus: {node: \"focusNode\", type: \"attribute\"}\r\n\t\t//\t\tMaps this.focus to this.focusNode.focus\r\n\t\t//\r\n\t\t//\t\t- DOM node innerHTML\r\n\t\t//\t|\t\ttitle: { node: \"titleNode\", type: \"innerHTML\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerHTML\r\n\t\t//\r\n\t\t//\t\t- DOM node innerText\r\n\t\t//\t|\t\ttitle: { node: \"titleNode\", type: \"innerText\" }\r\n\t\t//\t\tMaps this.title to this.titleNode.innerText\r\n\t\t//\r\n\t\t//\t\t- DOM node CSS class\r\n\t\t// |\t\tmyClass: { node: \"domNode\", type: \"class\" }\r\n\t\t//\t\tMaps this.myClass to this.domNode.className\r\n\t\t//\r\n\t\t//\t\tIf the value is an array, then each element in the array matches one of the\r\n\t\t//\t\tformats of the above list.\r\n\t\t//\r\n\t\t//\t\tThere are also some shorthands for backwards compatibility:\r\n\t\t//\r\n\t\t//\t\t- string --> { node: string, type: \"attribute\" }, for example:\r\n\t\t//\r\n\t\t//\t|\t\"focusNode\" ---> { node: \"focusNode\", type: \"attribute\" }\r\n\t\t//\r\n\t\t//\t\t- \"\" --> { node: \"domNode\", type: \"attribute\" }\r\n\t\tattributeMap: {},\r\n\r\n\t\t// _blankGif: [protected] String\r\n\t\t//\t\tPath to a blank 1x1 image.\r\n\t\t//\t\tUsed by `<img>` nodes in templates that really get their image via CSS background-image.\r\n\t\t_blankGif: config.blankGif || require.toUrl(\"dojo/resources/blank.gif\"),\r\n\r\n\t\t// textDir: String\r\n\t\t//\t\tBi-directional support,\tthe main variable which is responsible for the direction of the text.\r\n\t\t//\t\tThe text direction can be different than the GUI direction by using this parameter in creation\r\n\t\t//\t\tof a widget.\r\n\t\t//\r\n\t\t//\t\tThis property is only effective when `has(\"dojo-bidi\")` is defined to be true.\r\n\t\t//\r\n\t\t//\t\tAllowed values:\r\n\t\t//\r\n\t\t//\t\t1. \"\" - default value; text is same direction as widget\r\n\t\t//\t\t2. \"ltr\"\r\n\t\t//\t\t3. \"rtl\"\r\n\t\t//\t\t4. \"auto\" - contextual the direction of a text defined by first strong letter.\r\n\t\ttextDir: \"\",\r\n\r\n\t\t//////////// INITIALIZATION METHODS ///////////////////////////////////////\r\n\r\n\t\t/*=====\r\n\t\tconstructor: function(params, srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCreate the widget.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t\t//\r\n\t\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t\t//\t\t- if this is a behavioral widget then apply behavior to that srcNodeRef\r\n\t\t\t//\t\t- otherwise, replace srcNodeRef with my generated DOM tree\r\n\t\t},\r\n\t\t=====*/\r\n\r\n\t\t_introspect: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCollect metadata about this widget (only once per class, not once per instance):\r\n\t\t\t//\r\n\t\t\t//\t\t\t- list of attributes with custom setters, storing in this.constructor._setterAttrs\r\n\t\t\t//\t\t\t- generate this.constructor._onMap, mapping names like \"mousedown\" to functions like onMouseDown\r\n\r\n\t\t\tvar ctor = this.constructor;\r\n\t\t\tif(!ctor._setterAttrs){\r\n\t\t\t\tvar proto = ctor.prototype,\r\n\t\t\t\t\tattrs = ctor._setterAttrs = [], // attributes with custom setters\r\n\t\t\t\t\tonMap = (ctor._onMap = {});\r\n\r\n\t\t\t\t// Items in this.attributeMap are like custom setters.  For back-compat, remove for 2.0.\r\n\t\t\t\tfor(var name in proto.attributeMap){\r\n\t\t\t\t\tattrs.push(name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loop over widget properties, collecting properties with custom setters and filling in ctor._onMap.\r\n\t\t\t\tfor(name in proto){\r\n\t\t\t\t\tif(/^on/.test(name)){\r\n\t\t\t\t\t\tonMap[name.substring(2).toLowerCase()] = name;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(/^_set[A-Z](.*)Attr$/.test(name)){\r\n\t\t\t\t\t\tname = name.charAt(4).toLowerCase() + name.substr(5, name.length - 9);\r\n\t\t\t\t\t\tif(!proto.attributeMap || !(name in proto.attributeMap)){\r\n\t\t\t\t\t\t\tattrs.push(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Note: this isn't picking up info on properties like aria-label and role, that don't have custom setters\r\n\t\t\t\t// but that set() maps to attributes on this.domNode or this.focusNode\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostscript: function(/*Object?*/params, /*DomNode|String*/srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tKicks off widget instantiation.  See create() for details.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Note that we skip calling this.inherited(), i.e. dojo/Stateful::postscript(), because 1.x widgets don't\r\n\t\t\t// expect their custom setters to get called until after buildRendering().  Consider changing for 2.0.\r\n\r\n\t\t\tthis.create(params, srcNodeRef);\r\n\t\t},\r\n\r\n\t\tcreate: function(params, srcNodeRef){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tKick off the life-cycle of a widget\r\n\t\t\t// description:\r\n\t\t\t//\t\tCreate calls a number of widget methods (postMixInProperties, buildRendering, postCreate,\r\n\t\t\t//\t\tetc.), some of which of you'll want to override. See http://dojotoolkit.org/reference-guide/dijit/_WidgetBase.html\r\n\t\t\t//\t\tfor a discussion of the widget creation lifecycle.\r\n\t\t\t//\r\n\t\t\t//\t\tOf course, adventurous developers could override create entirely, but this should\r\n\t\t\t//\t\tonly be done as a last resort.\r\n\t\t\t// params: Object|null\r\n\t\t\t//\t\tHash of initialization parameters for widget, including scalar values (like title, duration etc.)\r\n\t\t\t//\t\tand functions, typically callbacks like onClick.\r\n\t\t\t//\t\tThe hash can contain any of the widget's properties, excluding read-only properties.\r\n\t\t\t// srcNodeRef: DOMNode|String?\r\n\t\t\t//\t\tIf a srcNodeRef (DOM node) is specified:\r\n\t\t\t//\r\n\t\t\t//\t\t- use srcNodeRef.innerHTML as my contents\r\n\t\t\t//\t\t- if this is a behavioral widget then apply behavior to that srcNodeRef\r\n\t\t\t//\t\t- otherwise, replace srcNodeRef with my generated DOM tree\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// First time widget is instantiated, scan prototype to figure out info about custom setters etc.\r\n\t\t\tthis._introspect();\r\n\r\n\t\t\t// store pointer to original DOM tree\r\n\t\t\tthis.srcNodeRef = dom.byId(srcNodeRef);\r\n\r\n\t\t\t// No longer used, remove for 2.0.\r\n\t\t\tthis._connects = [];\r\n\t\t\tthis._supportingWidgets = [];\r\n\r\n\t\t\t// this is here for back-compat, remove in 2.0 (but check NodeList-instantiate.html test)\r\n\t\t\tif(this.srcNodeRef && this.srcNodeRef.id  && (typeof this.srcNodeRef.id == \"string\")){\r\n\t\t\t\tthis.id = this.srcNodeRef.id;\r\n\t\t\t}\r\n\r\n\t\t\t// mix in our passed parameters\r\n\t\t\tif(params){\r\n\t\t\t\tthis.params = params;\r\n\t\t\t\tlang.mixin(this, params);\r\n\t\t\t}\r\n\t\t\tthis.postMixInProperties();\r\n\r\n\t\t\t// Generate an id for the widget if one wasn't specified, or it was specified as id: undefined.\r\n\t\t\t// Do this before buildRendering() because it might expect the id to be there.\r\n\t\t\tif(!this.id){\r\n\t\t\t\tthis.id = registry.getUniqueId(this.declaredClass.replace(/\\./g, \"_\"));\r\n\t\t\t\tif(this.params){\r\n\t\t\t\t\t// if params contains {id: undefined}, prevent _applyAttributes() from processing it\r\n\t\t\t\t\tdelete this.params.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// The document and <body> node this widget is associated with\r\n\t\t\tthis.ownerDocument = this.ownerDocument || (this.srcNodeRef ? this.srcNodeRef.ownerDocument : document);\r\n\t\t\tthis.ownerDocumentBody = win.body(this.ownerDocument);\r\n\r\n\t\t\tregistry.add(this);\r\n\r\n\t\t\tthis.buildRendering();\r\n\r\n\t\t\tvar deleteSrcNodeRef;\r\n\r\n\t\t\tif(this.domNode){\r\n\t\t\t\t// Copy attributes listed in attributeMap into the [newly created] DOM for the widget.\r\n\t\t\t\t// Also calls custom setters for all attributes with custom setters.\r\n\t\t\t\tthis._applyAttributes();\r\n\r\n\t\t\t\t// If srcNodeRef was specified, then swap out original srcNode for this widget's DOM tree.\r\n\t\t\t\t// For 2.0, move this after postCreate().  postCreate() shouldn't depend on the\r\n\t\t\t\t// widget being attached to the DOM since it isn't when a widget is created programmatically like\r\n\t\t\t\t// new MyWidget({}).\tSee #11635.\r\n\t\t\t\tvar source = this.srcNodeRef;\r\n\t\t\t\tif(source && source.parentNode && this.domNode !== source){\r\n\t\t\t\t\tsource.parentNode.replaceChild(this.domNode, source);\r\n\t\t\t\t\tdeleteSrcNodeRef = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Note: for 2.0 may want to rename widgetId to dojo._scopeName + \"_widgetId\",\r\n\t\t\t\t// assuming that dojo._scopeName even exists in 2.0\r\n\t\t\t\tthis.domNode.setAttribute(\"widgetId\", this.id);\r\n\t\t\t}\r\n\t\t\tthis.postCreate();\r\n\r\n\t\t\t// If srcNodeRef has been processed and removed from the DOM (e.g. TemplatedWidget) then delete it to allow GC.\r\n\t\t\t// I think for back-compatibility it isn't deleting srcNodeRef until after postCreate() has run.\r\n\t\t\tif(deleteSrcNodeRef){\r\n\t\t\t\tdelete this.srcNodeRef;\r\n\t\t\t}\r\n\r\n\t\t\tthis._created = true;\r\n\t\t},\r\n\r\n\t\t_applyAttributes: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tStep during widget creation to copy  widget attributes to the\r\n\t\t\t//\t\tDOM according to attributeMap and _setXXXAttr objects, and also to call\r\n\t\t\t//\t\tcustom _setXXXAttr() methods.\r\n\t\t\t//\r\n\t\t\t//\t\tSkips over blank/false attribute values, unless they were explicitly specified\r\n\t\t\t//\t\tas parameters to the widget, since those are the default anyway,\r\n\t\t\t//\t\tand setting tabIndex=\"\" is different than not setting tabIndex at all.\r\n\t\t\t//\r\n\t\t\t//\t\tFor backwards-compatibility reasons attributeMap overrides _setXXXAttr when\r\n\t\t\t//\t\t_setXXXAttr is a hash/string/array, but _setXXXAttr as a functions override attributeMap.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\t// Call this.set() for each property that was either specified as parameter to constructor,\r\n\t\t\t// or is in the list found above.\tFor correlated properties like value and displayedValue, the one\r\n\t\t\t// specified as a parameter should take precedence.\r\n\t\t\t// Particularly important for new DateTextBox({displayedValue: ...}) since DateTextBox's default value is\r\n\t\t\t// NaN and thus is not ignored like a default value of \"\".\r\n\r\n\t\t\t// Step 1: Save the current values of the widget properties that were specified as parameters to the constructor.\r\n\t\t\t// Generally this.foo == this.params.foo, except if postMixInProperties() changed the value of this.foo.\r\n\t\t\tvar params = {};\r\n\t\t\tfor(var key in this.params || {}){\r\n\t\t\t\tparams[key] = this._get(key);\r\n\t\t\t}\r\n\r\n\t\t\t// Step 2: Call set() for each property with a non-falsy value that wasn't passed as a parameter to the constructor\r\n\t\t\tarray.forEach(this.constructor._setterAttrs, function(key){\r\n\t\t\t\tif(!(key in params)){\r\n\t\t\t\t\tvar val = this._get(key);\r\n\t\t\t\t\tif(val){\r\n\t\t\t\t\t\tthis.set(key, val);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\t// Step 3: Call set() for each property that was specified as parameter to constructor.\r\n\t\t\t// Use params hash created above to ignore side effects from step #2 above.\r\n\t\t\tfor(key in params){\r\n\t\t\t\tthis.set(key, params[key]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostMixInProperties: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled after the parameters to the widget have been read-in,\r\n\t\t\t//\t\tbut before the widget template is instantiated. Especially\r\n\t\t\t//\t\tuseful to set properties that are referenced in the widget\r\n\t\t\t//\t\ttemplate.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tbuildRendering: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConstruct the UI for this widget, setting this.domNode.\r\n\t\t\t//\t\tMost widgets will mixin `dijit._TemplatedMixin`, which implements this method.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(!this.domNode){\r\n\t\t\t\t// Create root node if it wasn't created by _TemplatedMixin\r\n\t\t\t\tthis.domNode = this.srcNodeRef || this.ownerDocument.createElement(\"div\");\r\n\t\t\t}\r\n\r\n\t\t\t// baseClass is a single class name or occasionally a space-separated list of names.\r\n\t\t\t// Add those classes to the DOMNode.  If RTL mode then also add with Rtl suffix.\r\n\t\t\t// TODO: make baseClass custom setter\r\n\t\t\tif(this.baseClass){\r\n\t\t\t\tvar classes = this.baseClass.split(\" \");\r\n\t\t\t\tif(!this.isLeftToRight()){\r\n\t\t\t\t\tclasses = classes.concat(array.map(classes, function(name){\r\n\t\t\t\t\t\treturn name + \"Rtl\";\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t\tdomClass.add(this.domNode, classes);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tpostCreate: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcessing after the DOM fragment is created\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled after the DOM fragment has been created, but not necessarily\r\n\t\t\t//\t\tadded to the document.  Do not include any operations which rely on\r\n\t\t\t//\t\tnode dimensions or placement.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t},\r\n\r\n\t\tstartup: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tProcessing after the DOM fragment is added to the document\r\n\t\t\t// description:\r\n\t\t\t//\t\tCalled after a widget and its children have been created and added to the page,\r\n\t\t\t//\t\tand all related widgets have finished their create() cycle, up through postCreate().\r\n\t\t\t//\r\n\t\t\t//\t\tNote that startup() may be called while the widget is still hidden, for example if the widget is\r\n\t\t\t//\t\tinside a hidden dijit/Dialog or an unselected tab of a dijit/layout/TabContainer.\r\n\t\t\t//\t\tFor widgets that need to do layout, it's best to put that layout code inside resize(), and then\r\n\t\t\t//\t\textend dijit/layout/_LayoutWidget so that resize() is called when the widget is visible.\r\n\t\t\tif(this._started){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._started = true;\r\n\t\t\tarray.forEach(this.getChildren(), function(obj){\r\n\t\t\t\tif(!obj._started && !obj._destroyed && lang.isFunction(obj.startup)){\r\n\t\t\t\t\tobj.startup();\r\n\t\t\t\t\tobj._started = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t//////////// DESTROY FUNCTIONS ////////////////////////////////\r\n\r\n\t\tdestroyRecursive: function(/*Boolean?*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this widget and its descendants\r\n\t\t\t// description:\r\n\t\t\t//\t\tThis is the generic \"destructor\" function that all widget users\r\n\t\t\t//\t\tshould call to cleanly discard with a widget. Once a widget is\r\n\t\t\t//\t\tdestroyed, it is removed from the manager object.\r\n\t\t\t// preserveDom:\r\n\t\t\t//\t\tIf true, this method will leave the original DOM structure\r\n\t\t\t//\t\talone of descendant Widgets. Note: This will NOT work with\r\n\t\t\t//\t\tdijit._TemplatedMixin widgets.\r\n\r\n\t\t\tthis._beingDestroyed = true;\r\n\t\t\tthis.destroyDescendants(preserveDom);\r\n\t\t\tthis.destroy(preserveDom);\r\n\t\t},\r\n\r\n\t\tdestroy: function(/*Boolean*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroy this widget, but not its descendants.  Descendants means widgets inside of\r\n\t\t\t//\t\tthis.containerNode.   Will also destroy any resources (including widgets) registered via this.own().\r\n\t\t\t//\r\n\t\t\t//\t\tThis method will also destroy internal widgets such as those created from a template,\r\n\t\t\t//\t\tassuming those widgets exist inside of this.domNode but outside of this.containerNode.\r\n\t\t\t//\r\n\t\t\t//\t\tFor 2.0 it's planned that this method will also destroy descendant widgets, so apps should not\r\n\t\t\t//\t\tdepend on the current ability to destroy a widget without destroying its descendants.   Generally\r\n\t\t\t//\t\tthey should use destroyRecursive() for widgets with children.\r\n\t\t\t// preserveDom: Boolean\r\n\t\t\t//\t\tIf true, this method will leave the original DOM structure alone.\r\n\t\t\t//\t\tNote: This will not yet work with _TemplatedMixin widgets\r\n\r\n\t\t\tthis._beingDestroyed = true;\r\n\t\t\tthis.uninitialize();\r\n\r\n\t\t\tfunction destroy(w){\r\n\t\t\t\tif(w.destroyRecursive){\r\n\t\t\t\t\tw.destroyRecursive(preserveDom);\r\n\t\t\t\t}else if(w.destroy){\r\n\t\t\t\t\tw.destroy(preserveDom);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Back-compat, remove for 2.0\r\n\t\t\tarray.forEach(this._connects, lang.hitch(this, \"disconnect\"));\r\n\t\t\tarray.forEach(this._supportingWidgets, destroy);\r\n\r\n\t\t\t// Destroy supporting widgets, but not child widgets under this.containerNode (for 2.0, destroy child widgets\r\n\t\t\t// here too).   if() statement is to guard against exception if destroy() called multiple times (see #15815).\r\n\t\t\tif(this.domNode){\r\n\t\t\t\tarray.forEach(registry.findWidgets(this.domNode, this.containerNode), destroy);\r\n\t\t\t}\r\n\r\n\t\t\tthis.destroyRendering(preserveDom);\r\n\t\t\tregistry.remove(this.id);\r\n\t\t\tthis._destroyed = true;\r\n\t\t},\r\n\r\n\t\tdestroyRendering: function(/*Boolean?*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDestroys the DOM nodes associated with this widget.\r\n\t\t\t// preserveDom:\r\n\t\t\t//\t\tIf true, this method will leave the original DOM structure alone\r\n\t\t\t//\t\tduring tear-down. Note: this will not work with _Templated\r\n\t\t\t//\t\twidgets yet.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tif(this.bgIframe){\r\n\t\t\t\tthis.bgIframe.destroy(preserveDom);\r\n\t\t\t\tdelete this.bgIframe;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.domNode){\r\n\t\t\t\tif(preserveDom){\r\n\t\t\t\t\tdomAttr.remove(this.domNode, \"widgetId\");\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdomConstruct.destroy(this.domNode);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.domNode;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.srcNodeRef){\r\n\t\t\t\tif(!preserveDom){\r\n\t\t\t\t\tdomConstruct.destroy(this.srcNodeRef);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this.srcNodeRef;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroyDescendants: function(/*Boolean?*/ preserveDom){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRecursively destroy the children of this widget and their\r\n\t\t\t//\t\tdescendants.\r\n\t\t\t// preserveDom:\r\n\t\t\t//\t\tIf true, the preserveDom attribute is passed to all descendant\r\n\t\t\t//\t\twidget's .destroy() method. Not for use with _Templated\r\n\t\t\t//\t\twidgets.\r\n\r\n\t\t\t// get all direct descendants and destroy them recursively\r\n\t\t\tarray.forEach(this.getChildren(), function(widget){\r\n\t\t\t\tif(widget.destroyRecursive){\r\n\t\t\t\t\twidget.destroyRecursive(preserveDom);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tuninitialize: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated. Override destroy() instead to implement custom widget tear-down\r\n\t\t\t//\t\tbehavior.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t////////////////// GET/SET, CUSTOM SETTERS, ETC. ///////////////////\r\n\r\n\t\t_setStyleAttr: function(/*String||Object*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSets the style attribute of the widget according to value,\r\n\t\t\t//\t\twhich is either a hash like {height: \"5px\", width: \"3px\"}\r\n\t\t\t//\t\tor a plain string\r\n\t\t\t// description:\r\n\t\t\t//\t\tDetermines which node to set the style on based on style setting\r\n\t\t\t//\t\tin attributeMap.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar mapNode = this.domNode;\r\n\r\n\t\t\t// Note: technically we should revert any style setting made in a previous call\r\n\t\t\t// to his method, but that's difficult to keep track of.\r\n\r\n\t\t\tif(lang.isObject(value)){\r\n\t\t\t\tdomStyle.set(mapNode, value);\r\n\t\t\t}else{\r\n\t\t\t\tif(mapNode.style.cssText){\r\n\t\t\t\t\tmapNode.style.cssText += \"; \" + value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tmapNode.style.cssText = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._set(\"style\", value);\r\n\t\t},\r\n\r\n\t\t_attrToDom: function(/*String*/ attr, /*String*/ value, /*Object?*/ commands){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReflect a widget attribute (title, tabIndex, duration etc.) to\r\n\t\t\t//\t\tthe widget DOM, as specified by commands parameter.\r\n\t\t\t//\t\tIf commands isn't specified then it's looked up from attributeMap.\r\n\t\t\t//\t\tNote some attributes like \"type\"\r\n\t\t\t//\t\tcannot be processed this way as they are not mutable.\r\n\t\t\t// attr:\r\n\t\t\t//\t\tName of member variable (ex: \"focusNode\" maps to this.focusNode) pointing\r\n\t\t\t//\t\tto DOMNode inside the widget, or alternately pointing to a subwidget\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tcommands = arguments.length >= 3 ? commands : this.attributeMap[attr];\r\n\r\n\t\t\tarray.forEach(lang.isArray(commands) ? commands : [commands], function(command){\r\n\r\n\t\t\t\t// Get target node and what we are doing to that node\r\n\t\t\t\tvar mapNode = this[command.node || command || \"domNode\"];\t// DOM node\r\n\t\t\t\tvar type = command.type || \"attribute\";\t// class, innerHTML, innerText, or attribute\r\n\r\n\t\t\t\tswitch(type){\r\n\t\t\t\t\tcase \"attribute\":\r\n\t\t\t\t\t\tif(lang.isFunction(value)){ // functions execute in the context of the widget\r\n\t\t\t\t\t\t\tvalue = lang.hitch(this, value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Get the name of the DOM node attribute; usually it's the same\r\n\t\t\t\t\t\t// as the name of the attribute in the widget (attr), but can be overridden.\r\n\t\t\t\t\t\t// Also maps handler names to lowercase, like onSubmit --> onsubmit\r\n\t\t\t\t\t\tvar attrName = command.attribute ? command.attribute :\r\n\t\t\t\t\t\t\t(/^on[A-Z][a-zA-Z]*$/.test(attr) ? attr.toLowerCase() : attr);\r\n\r\n\t\t\t\t\t\tif(mapNode.tagName){\r\n\t\t\t\t\t\t\t// Normal case, mapping to a DOMNode.  Note that modern browsers will have a mapNode.set()\r\n\t\t\t\t\t\t\t// method, but for consistency we still call domAttr\r\n\t\t\t\t\t\t\tdomAttr.set(mapNode, attrName, value);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t// mapping to a sub-widget\r\n\t\t\t\t\t\t\tmapNode.set(attrName, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"innerText\":\r\n\t\t\t\t\t\tmapNode.innerHTML = \"\";\r\n\t\t\t\t\t\tmapNode.appendChild(this.ownerDocument.createTextNode(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"innerHTML\":\r\n\t\t\t\t\t\tmapNode.innerHTML = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"class\":\r\n\t\t\t\t\t\tdomClass.replace(mapNode, value, this[attr]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"toggleClass\":\r\n\t\t\t\t\t\tdomClass.toggle(mapNode, command.className || attr, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\tget: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet a property from a widget.\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe property to get.\r\n\t\t\t// description:\r\n\t\t\t//\t\tGet a named property from a widget. The property may\r\n\t\t\t//\t\tpotentially be retrieved via a getter method. If no getter is defined, this\r\n\t\t\t//\t\tjust retrieves the object's property.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, if the widget has properties `foo` and `bar`\r\n\t\t\t//\t\tand a method named `_getFooAttr()`, calling:\r\n\t\t\t//\t\t`myWidget.get(\"foo\")` would be equivalent to calling\r\n\t\t\t//\t\t`widget._getFooAttr()` and `myWidget.get(\"bar\")`\r\n\t\t\t//\t\twould be equivalent to the expression\r\n\t\t\t//\t\t`widget.bar2`\r\n\t\t\tvar names = this._getAttrNames(name);\r\n\t\t\treturn this[names.g] ? this[names.g]() : this._get(name);\r\n\t\t},\r\n\r\n\t\tset: function(name, value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSet a property on a widget\r\n\t\t\t// name:\r\n\t\t\t//\t\tThe property to set.\r\n\t\t\t// value:\r\n\t\t\t//\t\tThe value to set in the property.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSets named properties on a widget which may potentially be handled by a\r\n\t\t\t//\t\tsetter in the widget.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, if the widget has properties `foo` and `bar`\r\n\t\t\t//\t\tand a method named `_setFooAttr()`, calling\r\n\t\t\t//\t\t`myWidget.set(\"foo\", \"Howdy!\")` would be equivalent to calling\r\n\t\t\t//\t\t`widget._setFooAttr(\"Howdy!\")` and `myWidget.set(\"bar\", 3)`\r\n\t\t\t//\t\twould be equivalent to the statement `widget.bar = 3;`\r\n\t\t\t//\r\n\t\t\t//\t\tset() may also be called with a hash of name/value pairs, ex:\r\n\t\t\t//\r\n\t\t\t//\t|\tmyWidget.set({\r\n\t\t\t//\t|\t\tfoo: \"Howdy\",\r\n\t\t\t//\t|\t\tbar: 3\r\n\t\t\t//\t|\t});\r\n\t\t\t//\r\n\t\t\t//\tThis is equivalent to calling `set(foo, \"Howdy\")` and `set(bar, 3)`\r\n\r\n\t\t\tif(typeof name === \"object\"){\r\n\t\t\t\tfor(var x in name){\r\n\t\t\t\t\tthis.set(x, name[x]);\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tvar names = this._getAttrNames(name),\r\n\t\t\t\tsetter = this[names.s];\r\n\t\t\tif(lang.isFunction(setter)){\r\n\t\t\t\t// use the explicit setter\r\n\t\t\t\tvar result = setter.apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t}else{\r\n\t\t\t\t// Mapping from widget attribute to DOMNode/subwidget attribute/value/etc.\r\n\t\t\t\t// Map according to:\r\n\t\t\t\t//\t\t1. attributeMap setting, if one exists (TODO: attributeMap deprecated, remove in 2.0)\r\n\t\t\t\t//\t\t2. _setFooAttr: {...} type attribute in the widget (if one exists)\r\n\t\t\t\t//\t\t3. apply to focusNode or domNode if standard attribute name, excluding funcs like onClick.\r\n\t\t\t\t// Checks if an attribute is a \"standard attribute\" by whether the DOMNode JS object has a similar\r\n\t\t\t\t// attribute name (ex: accept-charset attribute matches jsObject.acceptCharset).\r\n\t\t\t\t// Note also that Tree.focusNode() is a function not a DOMNode, so test for that.\r\n\t\t\t\tvar defaultNode = this.focusNode && !lang.isFunction(this.focusNode) ? \"focusNode\" : \"domNode\",\r\n\t\t\t\t\ttag = this[defaultNode] && this[defaultNode].tagName,\r\n\t\t\t\t\tattrsForTag = tag && (tagAttrs[tag] || (tagAttrs[tag] = getAttrs(this[defaultNode]))),\r\n\t\t\t\t\tmap = name in this.attributeMap ? this.attributeMap[name] :\r\n\t\t\t\t\t\tnames.s in this ? this[names.s] :\r\n\t\t\t\t\t\t\t((attrsForTag && names.l in attrsForTag && typeof value != \"function\") ||\r\n\t\t\t\t\t\t\t\t/^aria-|^data-|^role$/.test(name)) ? defaultNode : null;\r\n\t\t\t\tif(map != null){\r\n\t\t\t\t\tthis._attrToDom(name, value, map);\r\n\t\t\t\t}\r\n\t\t\t\tthis._set(name, value);\r\n\t\t\t}\r\n\t\t\treturn result || this;\r\n\t\t},\r\n\r\n\t\t_attrPairNames: {}, // shared between all widgets\r\n\t\t_getAttrNames: function(name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function for get() and set().\r\n\t\t\t//\t\tCaches attribute name values so we don't do the string ops every time.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tvar apn = this._attrPairNames;\r\n\t\t\tif(apn[name]){\r\n\t\t\t\treturn apn[name];\r\n\t\t\t}\r\n\t\t\tvar uc = name.replace(/^[a-z]|-[a-zA-Z]/g, function(c){\r\n\t\t\t\treturn c.charAt(c.length - 1).toUpperCase();\r\n\t\t\t});\r\n\t\t\treturn (apn[name] = {\r\n\t\t\t\tn: name + \"Node\",\r\n\t\t\t\ts: \"_set\" + uc + \"Attr\", // converts dashes to camel case, ex: accept-charset --> _setAcceptCharsetAttr\r\n\t\t\t\tg: \"_get\" + uc + \"Attr\",\r\n\t\t\t\tl: uc.toLowerCase()        // lowercase name w/out dashes, ex: acceptcharset\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_set: function(/*String*/ name, /*anything*/ value){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to set new value for specified property, and call handlers\r\n\t\t\t//\t\tregistered with watch() if the value has changed.\r\n\t\t\tvar oldValue = this[name];\r\n\t\t\tthis[name] = value;\r\n\t\t\tif(this._created && !isEqual(oldValue, value)){\r\n\t\t\t\tif(this._watchCallbacks){\r\n\t\t\t\t\tthis._watchCallbacks(name, oldValue, value);\r\n\t\t\t\t}\r\n\t\t\t\tthis.emit(\"attrmodified-\" + name, {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tprevValue: oldValue,\r\n\t\t\t\t\t\tnewValue: value\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_get: function(/*String*/ name){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tHelper function to get value for specified property stored by this._set(),\r\n\t\t\t//\t\ti.e. for properties with custom setters.  Used mainly by custom getters.\r\n\t\t\t//\r\n\t\t\t//\t\tFor example, CheckBox._getValueAttr() calls this._get(\"value\").\r\n\r\n\t\t\t// future: return name in this.props ? this.props[name] : this[name];\r\n\t\t\treturn this[name];\r\n\t\t},\r\n\r\n\t\temit: function(/*String*/ type, /*Object?*/ eventObj, /*Array?*/ callbackArgs){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tUsed by widgets to signal that a synthetic event occurred, ex:\r\n\t\t\t//\t|\tmyWidget.emit(\"attrmodified-selectedChildWidget\", {}).\r\n\t\t\t//\r\n\t\t\t//\t\tEmits an event on this.domNode named type.toLowerCase(), based on eventObj.\r\n\t\t\t//\t\tAlso calls onType() method, if present, and returns value from that method.\r\n\t\t\t//\t\tBy default passes eventObj to callback, but will pass callbackArgs instead, if specified.\r\n\t\t\t//\t\tModifies eventObj by adding missing parameters (bubbles, cancelable, widget).\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\t// Specify fallback values for bubbles, cancelable in case they are not set in eventObj.\r\n\t\t\t// Also set pointer to widget, although since we can't add a pointer to the widget for native events\r\n\t\t\t// (see #14729), maybe we shouldn't do it here?\r\n\t\t\teventObj = eventObj || {};\r\n\t\t\tif(eventObj.bubbles === undefined){\r\n\t\t\t\teventObj.bubbles = true;\r\n\t\t\t}\r\n\t\t\tif(eventObj.cancelable === undefined){\r\n\t\t\t\teventObj.cancelable = true;\r\n\t\t\t}\r\n\t\t\tif(!eventObj.detail){\r\n\t\t\t\teventObj.detail = {};\r\n\t\t\t}\r\n\t\t\teventObj.detail.widget = this;\r\n\r\n\t\t\tvar ret, callback = this[\"on\" + type];\r\n\t\t\tif(callback){\r\n\t\t\t\tret = callback.apply(this, callbackArgs ? callbackArgs : [eventObj]);\r\n\t\t\t}\r\n\r\n\t\t\t// Emit event, but avoid spurious emit()'s as parent sets properties on child during startup/destroy\r\n\t\t\tif(this._started && !this._beingDestroyed){\r\n\t\t\t\ton.emit(this.domNode, type.toLowerCase(), eventObj);\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\ton: function(/*String|Function*/ type, /*Function*/ func){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCall specified function when event occurs, ex: myWidget.on(\"click\", function(){ ... }).\r\n\t\t\t// type:\r\n\t\t\t//\t\tName of event (ex: \"click\") or extension event like touch.press.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCall specified function when event `type` occurs, ex: `myWidget.on(\"click\", function(){ ... })`.\r\n\t\t\t//\t\tNote that the function is not run in any particular scope, so if (for example) you want it to run in the\r\n\t\t\t//\t\twidget's scope you must do `myWidget.on(\"click\", lang.hitch(myWidget, func))`.\r\n\r\n\t\t\t// For backwards compatibility, if there's an onType() method in the widget then connect to that.\r\n\t\t\t// Remove in 2.0.\r\n\t\t\tvar widgetMethod = this._onMap(type);\r\n\t\t\tif(widgetMethod){\r\n\t\t\t\treturn aspect.after(this, widgetMethod, func, true);\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, just listen for the event on this.domNode.\r\n\t\t\treturn this.own(on(this.domNode, type, func))[0];\r\n\t\t},\r\n\r\n\t\t_onMap: function(/*String|Function*/ type){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMaps on() type parameter (ex: \"mousemove\") to method name (ex: \"onMouseMove\").\r\n\t\t\t//\t\tIf type is a synthetic event like touch.press then returns undefined.\r\n\t\t\tvar ctor = this.constructor, map = ctor._onMap;\r\n\t\t\tif(!map){\r\n\t\t\t\tmap = (ctor._onMap = {});\r\n\t\t\t\tfor(var attr in ctor.prototype){\r\n\t\t\t\t\tif(/^on/.test(attr)){\r\n\t\t\t\t\t\tmap[attr.replace(/^on/, \"\").toLowerCase()] = attr;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn map[typeof type == \"string\" && type.toLowerCase()];\t// String\r\n\t\t},\r\n\r\n\t\ttoString: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns a string that represents the widget.\r\n\t\t\t// description:\r\n\t\t\t//\t\tWhen a widget is cast to a string, this method will be used to generate the\r\n\t\t\t//\t\toutput. Currently, it does not implement any sort of reversible\r\n\t\t\t//\t\tserialization.\r\n\t\t\treturn '[Widget ' + this.declaredClass + ', ' + (this.id || 'NO ID') + ']'; // String\r\n\t\t},\r\n\r\n\t\tgetChildren: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns all direct children of this widget, i.e. all widgets underneath this.containerNode whose parent\r\n\t\t\t//\t\tis this widget.   Note that it does not return all descendants, but rather just direct children.\r\n\t\t\t//\t\tAnalogous to [Node.childNodes](https://developer.mozilla.org/en-US/docs/DOM/Node.childNodes),\r\n\t\t\t//\t\texcept containing widgets rather than DOMNodes.\r\n\t\t\t//\r\n\t\t\t//\t\tThe result intentionally excludes internally created widgets (a.k.a. supporting widgets)\r\n\t\t\t//\t\toutside of this.containerNode.\r\n\t\t\t//\r\n\t\t\t//\t\tNote that the array returned is a simple array.  Application code should not assume\r\n\t\t\t//\t\texistence of methods like forEach().\r\n\r\n\t\t\treturn this.containerNode ? registry.findWidgets(this.containerNode) : []; // dijit/_WidgetBase[]\r\n\t\t},\r\n\r\n\t\tgetParent: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the parent widget of this widget.\r\n\r\n\t\t\treturn registry.getEnclosingWidget(this.domNode.parentNode);\r\n\t\t},\r\n\r\n\t\tconnect: function(/*Object|null*/ obj, /*String|Function*/ event, /*String|Function*/ method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use this.own(on(...)) or this.own(aspect.after(...)) instead.\r\n\t\t\t//\r\n\t\t\t//\t\tConnects specified obj/event to specified method of this object\r\n\t\t\t//\t\tand registers for disconnect() on widget destroy.\r\n\t\t\t//\r\n\t\t\t//\t\tProvide widget-specific analog to dojo.connect, except with the\r\n\t\t\t//\t\timplicit use of this widget as the target object.\r\n\t\t\t//\t\tEvents connected with `this.connect` are disconnected upon\r\n\t\t\t//\t\tdestruction.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle that can be passed to `disconnect` in order to disconnect before\r\n\t\t\t//\t\tthe widget is destroyed.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar btn = new Button();\r\n\t\t\t//\t|\t// when foo.bar() is called, call the listener we're going to\r\n\t\t\t//\t|\t// provide in the scope of btn\r\n\t\t\t//\t|\tbtn.connect(foo, \"bar\", function(){\r\n\t\t\t//\t|\t\tconsole.debug(this.toString());\r\n\t\t\t//\t|\t});\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\treturn this.own(connect.connect(obj, event, this, method))[0];\t// handle\r\n\t\t},\r\n\r\n\t\tdisconnect: function(handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use handle.remove() instead.\r\n\t\t\t//\r\n\t\t\t//\t\tDisconnects handle created by `connect`.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\thandle.remove();\r\n\t\t},\r\n\r\n\t\tsubscribe: function(t, method){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use this.own(topic.subscribe()) instead.\r\n\t\t\t//\r\n\t\t\t//\t\tSubscribes to the specified topic and calls the specified method\r\n\t\t\t//\t\tof this object and registers for unsubscribe() on widget destroy.\r\n\t\t\t//\r\n\t\t\t//\t\tProvide widget-specific analog to dojo.subscribe, except with the\r\n\t\t\t//\t\timplicit use of this widget as the target object.\r\n\t\t\t// t: String\r\n\t\t\t//\t\tThe topic\r\n\t\t\t// method: Function\r\n\t\t\t//\t\tThe callback\r\n\t\t\t// example:\r\n\t\t\t//\t|\tvar btn = new Button();\r\n\t\t\t//\t|\t// when /my/topic is published, this button changes its label to\r\n\t\t\t//\t|\t// be the parameter of the topic.\r\n\t\t\t//\t|\tbtn.subscribe(\"/my/topic\", function(v){\r\n\t\t\t//\t|\t\tthis.set(\"label\", v);\r\n\t\t\t//\t|\t});\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.own(topic.subscribe(t, lang.hitch(this, method)))[0];\t// handle\r\n\t\t},\r\n\r\n\t\tunsubscribe: function(/*Object*/ handle){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDeprecated, will be removed in 2.0, use handle.remove() instead.\r\n\t\t\t//\r\n\t\t\t//\t\tUnsubscribes handle created by this.subscribe.\r\n\t\t\t//\t\tAlso removes handle from this widget's list of subscriptions\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\thandle.remove();\r\n\t\t},\r\n\r\n\t\tisLeftToRight: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn this widget's explicit or implicit orientation (true for LTR, false for RTL)\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\t\t\treturn this.dir ? (this.dir.toLowerCase() == \"ltr\") : domGeometry.isBodyLtr(this.ownerDocument); //Boolean\r\n\t\t},\r\n\r\n\t\tisFocusable: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if this widget can currently be focused\r\n\t\t\t//\t\tand false if not\r\n\t\t\treturn this.focus && (domStyle.get(this.domNode, \"display\") != \"none\");\r\n\t\t},\r\n\r\n\t\tplaceAt: function(/*String|DomNode|DocumentFragment|dijit/_WidgetBase*/ reference, /*String|Int?*/ position){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPlace this widget somewhere in the DOM based\r\n\t\t\t//\t\ton standard domConstruct.place() conventions.\r\n\t\t\t// description:\r\n\t\t\t//\t\tA convenience function provided in all _Widgets, providing a simple\r\n\t\t\t//\t\tshorthand mechanism to put an existing (or newly created) Widget\r\n\t\t\t//\t\tsomewhere in the dom, and allow chaining.\r\n\t\t\t// reference:\r\n\t\t\t//\t\tWidget, DOMNode, DocumentFragment, or id of widget or DOMNode\r\n\t\t\t// position:\r\n\t\t\t//\t\tIf reference is a widget (or id of widget), and that widget has an \".addChild\" method,\r\n\t\t\t//\t\tit will be called passing this widget instance into that method, supplying the optional\r\n\t\t\t//\t\tposition index passed.  In this case position (if specified) should be an integer.\r\n\t\t\t//\r\n\t\t\t//\t\tIf reference is a DOMNode (or id matching a DOMNode but not a widget),\r\n\t\t\t//\t\tthe position argument can be a numeric index or a string\r\n\t\t\t//\t\t\"first\", \"last\", \"before\", or \"after\", same as dojo/dom-construct::place().\r\n\t\t\t// returns: dijit/_WidgetBase\r\n\t\t\t//\t\tProvides a useful return of the newly created dijit._Widget instance so you\r\n\t\t\t//\t\tcan \"chain\" this function by instantiating, placing, then saving the return value\r\n\t\t\t//\t\tto a variable.\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// create a Button with no srcNodeRef, and place it in the body:\r\n\t\t\t//\t|\tvar button = new Button({ label:\"click\" }).placeAt(win.body());\r\n\t\t\t//\t|\t// now, 'button' is still the widget reference to the newly created button\r\n\t\t\t//\t|\tbutton.on(\"click\", function(e){ console.log('click'); }));\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// create a button out of a node with id=\"src\" and append it to id=\"wrapper\":\r\n\t\t\t//\t|\tvar button = new Button({},\"src\").placeAt(\"wrapper\");\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// place a new button as the first element of some div\r\n\t\t\t//\t|\tvar button = new Button({ label:\"click\" }).placeAt(\"wrapper\",\"first\");\r\n\t\t\t// example:\r\n\t\t\t//\t|\t// create a contentpane and add it to a TabContainer\r\n\t\t\t//\t|\tvar tc = dijit.byId(\"myTabs\");\r\n\t\t\t//\t|\tnew ContentPane({ href:\"foo.html\", title:\"Wow!\" }).placeAt(tc)\r\n\r\n\t\t\tvar refWidget = !reference.tagName && registry.byId(reference);\r\n\t\t\tif(refWidget && refWidget.addChild && (!position || typeof position === \"number\")){\r\n\t\t\t\t// Adding this to refWidget and can use refWidget.addChild() to handle everything.\r\n\t\t\t\trefWidget.addChild(this, position);\r\n\t\t\t}else{\r\n\t\t\t\t// \"reference\" is a plain DOMNode, or we can't use refWidget.addChild().   Use domConstruct.place() and\r\n\t\t\t\t// target refWidget.containerNode for nested placement (position==number, \"first\", \"last\", \"only\"), and\r\n\t\t\t\t// refWidget.domNode otherwise (\"after\"/\"before\"/\"replace\").  (But not supported officially, see #14946.)\r\n\t\t\t\tvar ref = refWidget && (\"domNode\" in refWidget) ?\r\n\t\t\t\t\t(refWidget.containerNode && !/after|before|replace/.test(position || \"\") ?\r\n\t\t\t\t\t\trefWidget.containerNode : refWidget.domNode) : dom.byId(reference, this.ownerDocument);\r\n\t\t\t\tdomConstruct.place(this.domNode, ref, position);\r\n\r\n\t\t\t\t// Start this iff it has a parent widget that's already started.\r\n\t\t\t\t// TODO: for 2.0 maybe it should also start the widget when this.getParent() returns null??\r\n\t\t\t\tif(!this._started && (this.getParent() || {})._started){\r\n\t\t\t\t\tthis.startup();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\tdefer: function(fcn, delay){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tWrapper to setTimeout to avoid deferred functions executing\r\n\t\t\t//\t\tafter the originating widget has been destroyed.\r\n\t\t\t//\t\tReturns an object handle with a remove method (that returns null) (replaces clearTimeout).\r\n\t\t\t// fcn: Function\r\n\t\t\t//\t\tFunction reference.\r\n\t\t\t// delay: Number?\r\n\t\t\t//\t\tDelay, defaults to 0.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprotected\r\n\r\n\t\t\tvar timer = setTimeout(lang.hitch(this,\r\n\t\t\t\tfunction(){\r\n\t\t\t\t\tif(!timer){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttimer = null;\r\n\t\t\t\t\tif(!this._destroyed){\r\n\t\t\t\t\t\tlang.hitch(this, fcn)();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tdelay || 0\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\tremove: function(){\r\n\t\t\t\t\tif(timer){\r\n\t\t\t\t\t\tclearTimeout(timer);\r\n\t\t\t\t\t\ttimer = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn null; // so this works well: handle = handle.remove();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tif(has(\"dojo-bidi\")){\r\n\t\t_WidgetBase.extend(_BidiMixin);\r\n\t}\r\n\r\n\treturn _WidgetBase;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/_WidgetBase.js\n");

/***/ }),

/***/ "./node_modules/dijit/_base/manager.js":
/*!*********************************************!*\
  !*** ./node_modules/dijit/_base/manager.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"),\r\n\t__webpack_require__(/*! dojo/_base/config */ \"./node_modules/dojo/_base/config.js\"), // defaultDuration\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"),\r\n\t__webpack_require__(/*! ../registry */ \"./node_modules/dijit/registry.js\"),\r\n\t__webpack_require__(/*! ../main */ \"./node_modules/dijit/main.js\")\t// for setting exports to dijit namespace\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, config, lang, registry, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/_base/manager\r\n\r\n\tvar exports = {\r\n\t\t// summary:\r\n\t\t//\t\tDeprecated.  Shim to methods on registry, plus a few other declarations.\r\n\t\t//\t\tNew code should access dijit/registry directly when possible.\r\n\t};\r\n\r\n\tarray.forEach([\"byId\", \"getUniqueId\", \"findWidgets\", \"_destroyAll\", \"byNode\", \"getEnclosingWidget\"], function(name){\r\n\t\texports[name] = registry[name];\r\n\t});\r\n\r\n\t lang.mixin(exports, {\r\n\t\t // defaultDuration: Integer\r\n\t\t //\t\tThe default fx.animation speed (in ms) to use for all Dijit\r\n\t\t //\t\ttransitional fx.animations, unless otherwise specified\r\n\t\t //\t\ton a per-instance basis. Defaults to 200, overrided by\r\n\t\t //\t\t`djConfig.defaultDuration`\r\n\t\t defaultDuration: config[\"defaultDuration\"] || 200\r\n\t });\r\n\r\n\tlang.mixin(dijit, exports);\r\n\r\n\t/*===== return exports; =====*/\r\n\treturn dijit;\t// for back compat :-(\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvX2Jhc2UvbWFuYWdlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kaWppdC9fYmFzZS9tYW5hZ2VyLmpzPzYyMWIiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcclxuXHRcImRvam8vX2Jhc2UvYXJyYXlcIixcclxuXHRcImRvam8vX2Jhc2UvY29uZmlnXCIsIC8vIGRlZmF1bHREdXJhdGlvblxyXG5cdFwiZG9qby9fYmFzZS9sYW5nXCIsXHJcblx0XCIuLi9yZWdpc3RyeVwiLFxyXG5cdFwiLi4vbWFpblwiXHQvLyBmb3Igc2V0dGluZyBleHBvcnRzIHRvIGRpaml0IG5hbWVzcGFjZVxyXG5dLCBmdW5jdGlvbihhcnJheSwgY29uZmlnLCBsYW5nLCByZWdpc3RyeSwgZGlqaXQpe1xyXG5cclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZGlqaXQvX2Jhc2UvbWFuYWdlclxyXG5cclxuXHR2YXIgZXhwb3J0cyA9IHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHREZXByZWNhdGVkLiAgU2hpbSB0byBtZXRob2RzIG9uIHJlZ2lzdHJ5LCBwbHVzIGEgZmV3IG90aGVyIGRlY2xhcmF0aW9ucy5cclxuXHRcdC8vXHRcdE5ldyBjb2RlIHNob3VsZCBhY2Nlc3MgZGlqaXQvcmVnaXN0cnkgZGlyZWN0bHkgd2hlbiBwb3NzaWJsZS5cclxuXHR9O1xyXG5cclxuXHRhcnJheS5mb3JFYWNoKFtcImJ5SWRcIiwgXCJnZXRVbmlxdWVJZFwiLCBcImZpbmRXaWRnZXRzXCIsIFwiX2Rlc3Ryb3lBbGxcIiwgXCJieU5vZGVcIiwgXCJnZXRFbmNsb3NpbmdXaWRnZXRcIl0sIGZ1bmN0aW9uKG5hbWUpe1xyXG5cdFx0ZXhwb3J0c1tuYW1lXSA9IHJlZ2lzdHJ5W25hbWVdO1xyXG5cdH0pO1xyXG5cclxuXHQgbGFuZy5taXhpbihleHBvcnRzLCB7XHJcblx0XHQgLy8gZGVmYXVsdER1cmF0aW9uOiBJbnRlZ2VyXHJcblx0XHQgLy9cdFx0VGhlIGRlZmF1bHQgZnguYW5pbWF0aW9uIHNwZWVkIChpbiBtcykgdG8gdXNlIGZvciBhbGwgRGlqaXRcclxuXHRcdCAvL1x0XHR0cmFuc2l0aW9uYWwgZnguYW5pbWF0aW9ucywgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWRcclxuXHRcdCAvL1x0XHRvbiBhIHBlci1pbnN0YW5jZSBiYXNpcy4gRGVmYXVsdHMgdG8gMjAwLCBvdmVycmlkZWQgYnlcclxuXHRcdCAvL1x0XHRgZGpDb25maWcuZGVmYXVsdER1cmF0aW9uYFxyXG5cdFx0IGRlZmF1bHREdXJhdGlvbjogY29uZmlnW1wiZGVmYXVsdER1cmF0aW9uXCJdIHx8IDIwMFxyXG5cdCB9KTtcclxuXHJcblx0bGFuZy5taXhpbihkaWppdCwgZXhwb3J0cyk7XHJcblxyXG5cdC8qPT09PT0gcmV0dXJuIGV4cG9ydHM7ID09PT09Ki9cclxuXHRyZXR1cm4gZGlqaXQ7XHQvLyBmb3IgYmFjayBjb21wYXQgOi0oXHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dijit/_base/manager.js\n");

/***/ }),

/***/ "./node_modules/dijit/a11y.js":
/*!************************************!*\
  !*** ./node_modules/dijit/a11y.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach array.map\r\n\t__webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"),\t\t\t// dom.byId\r\n\t__webpack_require__(/*! dojo/dom-attr */ \"./node_modules/dojo/dom-attr.js\"), // domAttr.attr domAttr.has\r\n\t__webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"), // domStyle.style\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.mixin()\r\n\t__webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"), // has(\"ie\") has(\"extend-dojo\")\r\n\t__webpack_require__(/*! ./main */ \"./node_modules/dijit/main.js\")\t// for exporting methods to dijit namespace\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, dom, domAttr, domStyle, lang, has, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/a11y\r\n\r\n\tvar undefined;\r\n\r\n\tvar a11y = {\r\n\t\t// summary:\r\n\t\t//\t\tAccessibility utility functions (keyboard, tab stops, etc.)\r\n\r\n\t\t_isElementShown: function(/*Element*/ elem){\r\n\t\t\tvar s = domStyle.get(elem);\r\n\t\t\treturn (s.visibility != \"hidden\")\r\n\t\t\t\t&& (s.visibility != \"collapsed\")\r\n\t\t\t\t&& (s.display != \"none\")\r\n\t\t\t\t&& (domAttr.get(elem, \"type\") != \"hidden\");\r\n\t\t},\r\n\r\n\t\thasDefaultTabStop: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if element is tab-navigable even without an explicit tabIndex setting\r\n\r\n\t\t\t// No explicit tabIndex setting, need to investigate node type\r\n\t\t\tswitch(elem.nodeName.toLowerCase()){\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\t// An <a> w/out a tabindex is only navigable if it has an href\r\n\t\t\t\t\treturn domAttr.has(elem, \"href\");\r\n\t\t\t\tcase \"area\":\r\n\t\t\t\tcase \"button\":\r\n\t\t\t\tcase \"input\":\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\tcase \"select\":\r\n\t\t\t\tcase \"textarea\":\r\n\t\t\t\t\t// These are navigable by default\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"iframe\":\r\n\t\t\t\t\t// If it's an editor <iframe> then it's tab navigable.\r\n\t\t\t\t\tvar body;\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\t// non-IE\r\n\t\t\t\t\t\tvar contentDocument = elem.contentDocument;\r\n\t\t\t\t\t\tif(\"designMode\" in contentDocument && contentDocument.designMode == \"on\"){\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbody = contentDocument.body;\r\n\t\t\t\t\t}catch(e1){\r\n\t\t\t\t\t\t// contentWindow.document isn't accessible within IE7/8\r\n\t\t\t\t\t\t// if the iframe.src points to a foreign url and this\r\n\t\t\t\t\t\t// page contains an element, that could get focus\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tbody = elem.contentWindow.document.body;\r\n\t\t\t\t\t\t}catch(e2){\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn body && (body.contentEditable == 'true' ||\r\n\t\t\t\t\t\t(body.firstChild && body.firstChild.contentEditable == 'true'));\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn elem.contentEditable == 'true';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\teffectiveTabIndex: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns effective tabIndex of an element, either a number, or undefined if element isn't focusable.\r\n\r\n\t\t\tif(domAttr.get(elem, \"disabled\")){\r\n\t\t\t\treturn undefined;\r\n\t\t\t}else if(domAttr.has(elem, \"tabIndex\")){\r\n\t\t\t\t// Explicit tab index setting\r\n\t\t\t\treturn +domAttr.get(elem, \"tabIndex\");// + to convert string --> number\r\n\t\t\t}else{\r\n\t\t\t\t// No explicit tabIndex setting, so depends on node type\r\n\t\t\t\treturn a11y.hasDefaultTabStop(elem) ? 0 : undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tisTabNavigable: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if an element is tab-navigable\r\n\r\n\t\t\treturn a11y.effectiveTabIndex(elem) >= 0;\r\n\t\t},\r\n\r\n\t\tisFocusable: function(/*Element*/ elem){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tTests if an element is focusable by tabbing to it, or clicking it with the mouse.\r\n\r\n\t\t\treturn a11y.effectiveTabIndex(elem) >= -1;\r\n\t\t},\r\n\r\n\t\t_getTabNavigable: function(/*DOMNode*/ root){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds descendants of the specified root node.\r\n\t\t\t// description:\r\n\t\t\t//\t\tFinds the following descendants of the specified root node:\r\n\t\t\t//\r\n\t\t\t//\t\t- the first tab-navigable element in document order\r\n\t\t\t//\t\t  without a tabIndex or with tabIndex=\"0\"\r\n\t\t\t//\t\t- the last tab-navigable element in document order\r\n\t\t\t//\t\t  without a tabIndex or with tabIndex=\"0\"\r\n\t\t\t//\t\t- the first element in document order with the lowest\r\n\t\t\t//\t\t  positive tabIndex value\r\n\t\t\t//\t\t- the last element in document order with the highest\r\n\t\t\t//\t\t  positive tabIndex value\r\n\t\t\tvar first, last, lowest, lowestTabindex, highest, highestTabindex, radioSelected = {};\r\n\r\n\t\t\tfunction radioName(node){\r\n\t\t\t\t// If this element is part of a radio button group, return the name for that group.\r\n\t\t\t\treturn node && node.tagName.toLowerCase() == \"input\" &&\r\n\t\t\t\t\tnode.type && node.type.toLowerCase() == \"radio\" &&\r\n\t\t\t\t\tnode.name && node.name.toLowerCase();\r\n\t\t\t}\r\n\r\n\t\t\tvar shown = a11y._isElementShown, effectiveTabIndex = a11y.effectiveTabIndex;\r\n\t\t\tvar walkTree = function(/*DOMNode*/ parent){\r\n\t\t\t\tfor(var child = parent.firstChild; child; child = child.nextSibling){\r\n\t\t\t\t\t// Skip text elements, hidden elements, and also non-HTML elements (those in custom namespaces) in IE,\r\n\t\t\t\t\t// since show() invokes getAttribute(\"type\"), which crash on VML nodes in IE.\r\n\t\t\t\t\tif(child.nodeType != 1 || (has(\"ie\") <= 9 && child.scopeName !== \"HTML\") || !shown(child)){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar tabindex = effectiveTabIndex(child);\r\n\t\t\t\t\tif(tabindex >= 0){\r\n\t\t\t\t\t\tif(tabindex == 0){\r\n\t\t\t\t\t\t\tif(!first){\r\n\t\t\t\t\t\t\t\tfirst = child;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlast = child;\r\n\t\t\t\t\t\t}else if(tabindex > 0){\r\n\t\t\t\t\t\t\tif(!lowest || tabindex < lowestTabindex){\r\n\t\t\t\t\t\t\t\tlowestTabindex = tabindex;\r\n\t\t\t\t\t\t\t\tlowest = child;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!highest || tabindex >= highestTabindex){\r\n\t\t\t\t\t\t\t\thighestTabindex = tabindex;\r\n\t\t\t\t\t\t\t\thighest = child;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar rn = radioName(child);\r\n\t\t\t\t\t\tif(domAttr.get(child, \"checked\") && rn){\r\n\t\t\t\t\t\t\tradioSelected[rn] = child;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(child.nodeName.toUpperCase() != 'SELECT'){\r\n\t\t\t\t\t\twalkTree(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tif(shown(root)){\r\n\t\t\t\twalkTree(root);\r\n\t\t\t}\r\n\t\t\tfunction rs(node){\r\n\t\t\t\t// substitute checked radio button for unchecked one, if there is a checked one with the same name.\r\n\t\t\t\treturn radioSelected[radioName(node)] || node;\r\n\t\t\t}\r\n\r\n\t\t\treturn { first: rs(first), last: rs(last), lowest: rs(lowest), highest: rs(highest) };\r\n\t\t},\r\n\r\n\t\tgetFirstInTabbingOrder: function(/*String|DOMNode*/ root, /*Document?*/ doc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds the descendant of the specified root node\r\n\t\t\t//\t\tthat is first in the tabbing order\r\n\t\t\tvar elems = a11y._getTabNavigable(dom.byId(root, doc));\r\n\t\t\treturn elems.lowest ? elems.lowest : elems.first; // DomNode\r\n\t\t},\r\n\r\n\t\tgetLastInTabbingOrder: function(/*String|DOMNode*/ root, /*Document?*/ doc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFinds the descendant of the specified root node\r\n\t\t\t//\t\tthat is last in the tabbing order\r\n\t\t\tvar elems = a11y._getTabNavigable(dom.byId(root, doc));\r\n\t\t\treturn elems.last ? elems.last : elems.highest; // DomNode\r\n\t\t}\r\n\t};\r\n\r\n\thas(\"extend-dojo\") && lang.mixin(dijit, a11y);\r\n\r\n\treturn a11y;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/a11y.js\n");

/***/ }),

/***/ "./node_modules/dijit/a11yclick.js":
/*!*****************************************!*\
  !*** ./node_modules/dijit/a11yclick.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/keys */ \"./node_modules/dojo/keys.js\"), // keys.ENTER keys.SPACE\r\n\t__webpack_require__(/*! dojo/mouse */ \"./node_modules/dojo/mouse.js\"),\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/touch */ \"./node_modules/dojo/touch.js\") // touch support for click is now there\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(keys, mouse, on, touch){\r\n\r\n\t// module:\r\n\t//\t\tdijit/a11yclick\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tCustom press, release, and click synthetic events\r\n\t\t//\t\twhich trigger on a left mouse click, touch, or space/enter keyup.\r\n\r\n\t\tclick: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tLogical click operation for mouse, touch, or keyboard (space/enter key)\r\n\t\t},\r\n\t\tpress: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMousedown (left button), touchstart, or keydown (space or enter) corresponding to logical click operation.\r\n\t\t},\r\n\t\trelease: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouseup (left button), touchend, or keyup (space or enter) corresponding to logical click operation.\r\n\t\t},\r\n\t\tmove: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tMouse cursor or a finger is dragged over the given node.\r\n\t\t}\r\n\t};\r\n\t=====*/\r\n\r\n\tfunction clickKey(/*Event*/ e){\r\n\t\t// Test if this keyboard event should be tracked as the start (if keydown) or end (if keyup) of a click event.\r\n\t\t// Only track for nodes marked to be tracked, and not for buttons or inputs,\r\n\t\t// since buttons handle keyboard click natively, and text inputs should not\r\n\t\t// prevent typing spaces or newlines.\r\n\t\tif((e.keyCode === keys.ENTER || e.keyCode === keys.SPACE) && !/input|button|textarea/i.test(e.target.nodeName)){\r\n\r\n\t\t\t// Test if a node or its ancestor has been marked with the dojoClick property to indicate special processing\r\n\t\t\tfor(var node = e.target; node; node = node.parentNode){\r\n\t\t\t\tif(node.dojoClick){ return true; }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar lastKeyDownNode;\r\n\r\n\ton(document, \"keydown\", function(e){\r\n\t\t//console.log(\"a11yclick: onkeydown, e.target = \", e.target, \", lastKeyDownNode was \", lastKeyDownNode, \", equality is \", (e.target === lastKeyDownNode));\r\n\t\tif(clickKey(e)){\r\n\t\t\t// needed on IE for when focus changes between keydown and keyup - otherwise dropdown menus do not work\r\n\t\t\tlastKeyDownNode = e.target;\r\n\r\n\t\t\t// Prevent viewport scrolling on space key in IE<9.\r\n\t\t\t// (Reproducible on test_Button.html on any of the first dijit/form/Button examples)\r\n\t\t\te.preventDefault();\r\n\t\t}else{\r\n\t\t\tlastKeyDownNode = null;\r\n\t\t}\r\n\t});\r\n\r\n\ton(document, \"keyup\", function(e){\r\n\t\t//console.log(\"a11yclick: onkeyup, e.target = \", e.target, \", lastKeyDownNode was \", lastKeyDownNode, \", equality is \", (e.target === lastKeyDownNode));\r\n\t\tif(clickKey(e) && e.target == lastKeyDownNode){\t// === breaks greasemonkey\r\n\t\t\t//need reset here or have problems in FF when focus returns to trigger element after closing popup/alert\r\n\t\t\tlastKeyDownNode = null;\r\n\r\n\t\t\ton.emit(e.target, \"click\", {\r\n\t\t\t\tcancelable: true,\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tctrlKey: e.ctrlKey,\r\n\t\t\t\tshiftKey: e.shiftKey,\r\n\t\t\t\tmetaKey: e.metaKey,\r\n\t\t\t\taltKey: e.altKey,\r\n\t\t\t\t_origType: e.type\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// I want to return a hash of the synthetic events, but for backwards compatibility the main return value\r\n\t// needs to be the click event.   Change for 2.0.\r\n\r\n\tvar click = function(node, listener){\r\n\t\t// Set flag on node so that keydown/keyup above emits click event.\r\n\t\t// Also enables fast click processing from dojo/touch.\r\n\t\tnode.dojoClick = true;\r\n\r\n\t\treturn on(node, \"click\", listener);\r\n\t};\r\n\tclick.click = click;\t// forward compatibility with 2.0\r\n\r\n\tclick.press =  function(node, listener){\r\n\t\tvar touchListener = on(node, touch.press, function(evt){\r\n\t\t\tif(evt.type == \"mousedown\" && !mouse.isLeft(evt)){\r\n\t\t\t\t// Ignore right click\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlistener(evt);\r\n\t\t}), keyListener = on(node, \"keydown\", function(evt){\r\n\t\t\tif(evt.keyCode === keys.ENTER || evt.keyCode === keys.SPACE){\r\n\t\t\t\tlistener(evt);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\ttouchListener.remove();\r\n\t\t\t\tkeyListener.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tclick.release =  function(node, listener){\r\n\t\tvar touchListener = on(node, touch.release, function(evt){\r\n\t\t\tif(evt.type == \"mouseup\" && !mouse.isLeft(evt)){\r\n\t\t\t\t// Ignore right click\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlistener(evt);\r\n\t\t}), keyListener = on(node, \"keyup\", function(evt){\r\n\t\t\tif(evt.keyCode === keys.ENTER || evt.keyCode === keys.SPACE){\r\n\t\t\t\tlistener(evt);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tremove: function(){\r\n\t\t\t\ttouchListener.remove();\r\n\t\t\t\tkeyListener.remove();\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tclick.move = touch.move;\t// just for convenience\r\n\r\n\treturn click;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvYTExeWNsaWNrLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rpaml0L2ExMXljbGljay5qcz8wY2U1Il0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXHJcblx0XCJkb2pvL2tleXNcIiwgLy8ga2V5cy5FTlRFUiBrZXlzLlNQQUNFXHJcblx0XCJkb2pvL21vdXNlXCIsXHJcblx0XCJkb2pvL29uXCIsXHJcblx0XCJkb2pvL3RvdWNoXCIgLy8gdG91Y2ggc3VwcG9ydCBmb3IgY2xpY2sgaXMgbm93IHRoZXJlXHJcbl0sIGZ1bmN0aW9uKGtleXMsIG1vdXNlLCBvbiwgdG91Y2gpe1xyXG5cclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZGlqaXQvYTExeWNsaWNrXHJcblxyXG5cdC8qPT09PT1cclxuXHRyZXR1cm4ge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdEN1c3RvbSBwcmVzcywgcmVsZWFzZSwgYW5kIGNsaWNrIHN5bnRoZXRpYyBldmVudHNcclxuXHRcdC8vXHRcdHdoaWNoIHRyaWdnZXIgb24gYSBsZWZ0IG1vdXNlIGNsaWNrLCB0b3VjaCwgb3Igc3BhY2UvZW50ZXIga2V5dXAuXHJcblxyXG5cdFx0Y2xpY2s6IGZ1bmN0aW9uKG5vZGUsIGxpc3RlbmVyKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0TG9naWNhbCBjbGljayBvcGVyYXRpb24gZm9yIG1vdXNlLCB0b3VjaCwgb3Iga2V5Ym9hcmQgKHNwYWNlL2VudGVyIGtleSlcclxuXHRcdH0sXHJcblx0XHRwcmVzczogZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRNb3VzZWRvd24gKGxlZnQgYnV0dG9uKSwgdG91Y2hzdGFydCwgb3Iga2V5ZG93biAoc3BhY2Ugb3IgZW50ZXIpIGNvcnJlc3BvbmRpbmcgdG8gbG9naWNhbCBjbGljayBvcGVyYXRpb24uXHJcblx0XHR9LFxyXG5cdFx0cmVsZWFzZTogZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRNb3VzZXVwIChsZWZ0IGJ1dHRvbiksIHRvdWNoZW5kLCBvciBrZXl1cCAoc3BhY2Ugb3IgZW50ZXIpIGNvcnJlc3BvbmRpbmcgdG8gbG9naWNhbCBjbGljayBvcGVyYXRpb24uXHJcblx0XHR9LFxyXG5cdFx0bW92ZTogZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRNb3VzZSBjdXJzb3Igb3IgYSBmaW5nZXIgaXMgZHJhZ2dlZCBvdmVyIHRoZSBnaXZlbiBub2RlLlxyXG5cdFx0fVxyXG5cdH07XHJcblx0PT09PT0qL1xyXG5cclxuXHRmdW5jdGlvbiBjbGlja0tleSgvKkV2ZW50Ki8gZSl7XHJcblx0XHQvLyBUZXN0IGlmIHRoaXMga2V5Ym9hcmQgZXZlbnQgc2hvdWxkIGJlIHRyYWNrZWQgYXMgdGhlIHN0YXJ0IChpZiBrZXlkb3duKSBvciBlbmQgKGlmIGtleXVwKSBvZiBhIGNsaWNrIGV2ZW50LlxyXG5cdFx0Ly8gT25seSB0cmFjayBmb3Igbm9kZXMgbWFya2VkIHRvIGJlIHRyYWNrZWQsIGFuZCBub3QgZm9yIGJ1dHRvbnMgb3IgaW5wdXRzLFxyXG5cdFx0Ly8gc2luY2UgYnV0dG9ucyBoYW5kbGUga2V5Ym9hcmQgY2xpY2sgbmF0aXZlbHksIGFuZCB0ZXh0IGlucHV0cyBzaG91bGQgbm90XHJcblx0XHQvLyBwcmV2ZW50IHR5cGluZyBzcGFjZXMgb3IgbmV3bGluZXMuXHJcblx0XHRpZigoZS5rZXlDb2RlID09PSBrZXlzLkVOVEVSIHx8IGUua2V5Q29kZSA9PT0ga2V5cy5TUEFDRSkgJiYgIS9pbnB1dHxidXR0b258dGV4dGFyZWEvaS50ZXN0KGUudGFyZ2V0Lm5vZGVOYW1lKSl7XHJcblxyXG5cdFx0XHQvLyBUZXN0IGlmIGEgbm9kZSBvciBpdHMgYW5jZXN0b3IgaGFzIGJlZW4gbWFya2VkIHdpdGggdGhlIGRvam9DbGljayBwcm9wZXJ0eSB0byBpbmRpY2F0ZSBzcGVjaWFsIHByb2Nlc3NpbmdcclxuXHRcdFx0Zm9yKHZhciBub2RlID0gZS50YXJnZXQ7IG5vZGU7IG5vZGUgPSBub2RlLnBhcmVudE5vZGUpe1xyXG5cdFx0XHRcdGlmKG5vZGUuZG9qb0NsaWNrKXsgcmV0dXJuIHRydWU7IH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0dmFyIGxhc3RLZXlEb3duTm9kZTtcclxuXHJcblx0b24oZG9jdW1lbnQsIFwia2V5ZG93blwiLCBmdW5jdGlvbihlKXtcclxuXHRcdC8vY29uc29sZS5sb2coXCJhMTF5Y2xpY2s6IG9ua2V5ZG93biwgZS50YXJnZXQgPSBcIiwgZS50YXJnZXQsIFwiLCBsYXN0S2V5RG93bk5vZGUgd2FzIFwiLCBsYXN0S2V5RG93bk5vZGUsIFwiLCBlcXVhbGl0eSBpcyBcIiwgKGUudGFyZ2V0ID09PSBsYXN0S2V5RG93bk5vZGUpKTtcclxuXHRcdGlmKGNsaWNrS2V5KGUpKXtcclxuXHRcdFx0Ly8gbmVlZGVkIG9uIElFIGZvciB3aGVuIGZvY3VzIGNoYW5nZXMgYmV0d2VlbiBrZXlkb3duIGFuZCBrZXl1cCAtIG90aGVyd2lzZSBkcm9wZG93biBtZW51cyBkbyBub3Qgd29ya1xyXG5cdFx0XHRsYXN0S2V5RG93bk5vZGUgPSBlLnRhcmdldDtcclxuXHJcblx0XHRcdC8vIFByZXZlbnQgdmlld3BvcnQgc2Nyb2xsaW5nIG9uIHNwYWNlIGtleSBpbiBJRTw5LlxyXG5cdFx0XHQvLyAoUmVwcm9kdWNpYmxlIG9uIHRlc3RfQnV0dG9uLmh0bWwgb24gYW55IG9mIHRoZSBmaXJzdCBkaWppdC9mb3JtL0J1dHRvbiBleGFtcGxlcylcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdGxhc3RLZXlEb3duTm9kZSA9IG51bGw7XHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdG9uKGRvY3VtZW50LCBcImtleXVwXCIsIGZ1bmN0aW9uKGUpe1xyXG5cdFx0Ly9jb25zb2xlLmxvZyhcImExMXljbGljazogb25rZXl1cCwgZS50YXJnZXQgPSBcIiwgZS50YXJnZXQsIFwiLCBsYXN0S2V5RG93bk5vZGUgd2FzIFwiLCBsYXN0S2V5RG93bk5vZGUsIFwiLCBlcXVhbGl0eSBpcyBcIiwgKGUudGFyZ2V0ID09PSBsYXN0S2V5RG93bk5vZGUpKTtcclxuXHRcdGlmKGNsaWNrS2V5KGUpICYmIGUudGFyZ2V0ID09IGxhc3RLZXlEb3duTm9kZSl7XHQvLyA9PT0gYnJlYWtzIGdyZWFzZW1vbmtleVxyXG5cdFx0XHQvL25lZWQgcmVzZXQgaGVyZSBvciBoYXZlIHByb2JsZW1zIGluIEZGIHdoZW4gZm9jdXMgcmV0dXJucyB0byB0cmlnZ2VyIGVsZW1lbnQgYWZ0ZXIgY2xvc2luZyBwb3B1cC9hbGVydFxyXG5cdFx0XHRsYXN0S2V5RG93bk5vZGUgPSBudWxsO1xyXG5cclxuXHRcdFx0b24uZW1pdChlLnRhcmdldCwgXCJjbGlja1wiLCB7XHJcblx0XHRcdFx0Y2FuY2VsYWJsZTogdHJ1ZSxcclxuXHRcdFx0XHRidWJibGVzOiB0cnVlLFxyXG5cdFx0XHRcdGN0cmxLZXk6IGUuY3RybEtleSxcclxuXHRcdFx0XHRzaGlmdEtleTogZS5zaGlmdEtleSxcclxuXHRcdFx0XHRtZXRhS2V5OiBlLm1ldGFLZXksXHJcblx0XHRcdFx0YWx0S2V5OiBlLmFsdEtleSxcclxuXHRcdFx0XHRfb3JpZ1R5cGU6IGUudHlwZVxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gSSB3YW50IHRvIHJldHVybiBhIGhhc2ggb2YgdGhlIHN5bnRoZXRpYyBldmVudHMsIGJ1dCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgdGhlIG1haW4gcmV0dXJuIHZhbHVlXHJcblx0Ly8gbmVlZHMgdG8gYmUgdGhlIGNsaWNrIGV2ZW50LiAgIENoYW5nZSBmb3IgMi4wLlxyXG5cclxuXHR2YXIgY2xpY2sgPSBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHQvLyBTZXQgZmxhZyBvbiBub2RlIHNvIHRoYXQga2V5ZG93bi9rZXl1cCBhYm92ZSBlbWl0cyBjbGljayBldmVudC5cclxuXHRcdC8vIEFsc28gZW5hYmxlcyBmYXN0IGNsaWNrIHByb2Nlc3NpbmcgZnJvbSBkb2pvL3RvdWNoLlxyXG5cdFx0bm9kZS5kb2pvQ2xpY2sgPSB0cnVlO1xyXG5cclxuXHRcdHJldHVybiBvbihub2RlLCBcImNsaWNrXCIsIGxpc3RlbmVyKTtcclxuXHR9O1xyXG5cdGNsaWNrLmNsaWNrID0gY2xpY2s7XHQvLyBmb3J3YXJkIGNvbXBhdGliaWxpdHkgd2l0aCAyLjBcclxuXHJcblx0Y2xpY2sucHJlc3MgPSAgZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0dmFyIHRvdWNoTGlzdGVuZXIgPSBvbihub2RlLCB0b3VjaC5wcmVzcywgZnVuY3Rpb24oZXZ0KXtcclxuXHRcdFx0aWYoZXZ0LnR5cGUgPT0gXCJtb3VzZWRvd25cIiAmJiAhbW91c2UuaXNMZWZ0KGV2dCkpe1xyXG5cdFx0XHRcdC8vIElnbm9yZSByaWdodCBjbGlja1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0XHRsaXN0ZW5lcihldnQpO1xyXG5cdFx0fSksIGtleUxpc3RlbmVyID0gb24obm9kZSwgXCJrZXlkb3duXCIsIGZ1bmN0aW9uKGV2dCl7XHJcblx0XHRcdGlmKGV2dC5rZXlDb2RlID09PSBrZXlzLkVOVEVSIHx8IGV2dC5rZXlDb2RlID09PSBrZXlzLlNQQUNFKXtcclxuXHRcdFx0XHRsaXN0ZW5lcihldnQpO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHJlbW92ZTogZnVuY3Rpb24oKXtcclxuXHRcdFx0XHR0b3VjaExpc3RlbmVyLnJlbW92ZSgpO1xyXG5cdFx0XHRcdGtleUxpc3RlbmVyLnJlbW92ZSgpO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH07XHJcblxyXG5cdGNsaWNrLnJlbGVhc2UgPSAgZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0dmFyIHRvdWNoTGlzdGVuZXIgPSBvbihub2RlLCB0b3VjaC5yZWxlYXNlLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRpZihldnQudHlwZSA9PSBcIm1vdXNldXBcIiAmJiAhbW91c2UuaXNMZWZ0KGV2dCkpe1xyXG5cdFx0XHRcdC8vIElnbm9yZSByaWdodCBjbGlja1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0XHRsaXN0ZW5lcihldnQpO1xyXG5cdFx0fSksIGtleUxpc3RlbmVyID0gb24obm9kZSwgXCJrZXl1cFwiLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRpZihldnQua2V5Q29kZSA9PT0ga2V5cy5FTlRFUiB8fCBldnQua2V5Q29kZSA9PT0ga2V5cy5TUEFDRSl7XHJcblx0XHRcdFx0bGlzdGVuZXIoZXZ0KTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRyZW1vdmU6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0dG91Y2hMaXN0ZW5lci5yZW1vdmUoKTtcclxuXHRcdFx0XHRrZXlMaXN0ZW5lci5yZW1vdmUoKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9O1xyXG5cclxuXHRjbGljay5tb3ZlID0gdG91Y2gubW92ZTtcdC8vIGp1c3QgZm9yIGNvbnZlbmllbmNlXHJcblxyXG5cdHJldHVybiBjbGljaztcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dijit/a11yclick.js\n");

/***/ }),

/***/ "./node_modules/dijit/focus.js":
/*!*************************************!*\
  !*** ./node_modules/dijit/focus.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/aspect */ \"./node_modules/dojo/aspect.js\"),\r\n\t__webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), // declare\r\n\t__webpack_require__(/*! dojo/dom */ \"./node_modules/dojo/dom.js\"), // domAttr.get dom.isDescendant\r\n\t__webpack_require__(/*! dojo/dom-attr */ \"./node_modules/dojo/dom-attr.js\"), // domAttr.get dom.isDescendant\r\n\t__webpack_require__(/*! dojo/dom-class */ \"./node_modules/dojo/dom-class.js\"),\r\n\t__webpack_require__(/*! dojo/dom-construct */ \"./node_modules/dojo/dom-construct.js\"), // connect to domConstruct.empty, domConstruct.destroy\r\n\t__webpack_require__(/*! dojo/Evented */ \"./node_modules/dojo/Evented.js\"),\r\n\t__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), // lang.hitch\r\n\t__webpack_require__(/*! dojo/on */ \"./node_modules/dojo/on.js\"),\r\n\t__webpack_require__(/*! dojo/domReady */ \"./node_modules/dojo/domReady.js\"),\r\n\t__webpack_require__(/*! dojo/sniff */ \"./node_modules/dojo/sniff.js\"), // has(\"ie\")\r\n\t__webpack_require__(/*! dojo/Stateful */ \"./node_modules/dojo/Stateful.js\"),\r\n\t__webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), // win.body\r\n\t__webpack_require__(/*! dojo/window */ \"./node_modules/dojo/window.js\"), // winUtils.get\r\n\t__webpack_require__(/*! ./a11y */ \"./node_modules/dijit/a11y.js\"),\t// a11y.isTabNavigable\r\n\t__webpack_require__(/*! ./registry */ \"./node_modules/dijit/registry.js\"),\t// registry.byId\r\n\t__webpack_require__(/*! ./main */ \"./node_modules/dijit/main.js\")\t\t// to set dijit.focus\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(aspect, declare, dom, domAttr, domClass, domConstruct, Evented, lang, on, domReady, has, Stateful, win, winUtils,\r\n\t\t\ta11y, registry, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/focus\r\n\r\n\t// Time of the last focusin event\r\n\tvar lastFocusin;\r\n\r\n\t// Time of the last touch/mousedown or focusin event\r\n\tvar lastTouchOrFocusin;\r\n\r\n\tvar FocusManager = declare([Stateful, Evented], {\r\n\t\t// summary:\r\n\t\t//\t\tTracks the currently focused node, and which widgets are currently \"active\".\r\n\t\t//\t\tAccess via require([\"dijit/focus\"], function(focus){ ... }).\r\n\t\t//\r\n\t\t//\t\tA widget is considered active if it or a descendant widget has focus,\r\n\t\t//\t\tor if a non-focusable node of this widget or a descendant was recently clicked.\r\n\t\t//\r\n\t\t//\t\tCall focus.watch(\"curNode\", callback) to track the current focused DOMNode,\r\n\t\t//\t\tor focus.watch(\"activeStack\", callback) to track the currently focused stack of widgets.\r\n\t\t//\r\n\t\t//\t\tCall focus.on(\"widget-blur\", func) or focus.on(\"widget-focus\", ...) to monitor when\r\n\t\t//\t\twhen widgets become active/inactive\r\n\t\t//\r\n\t\t//\t\tFinally, focus(node) will focus a node, suppressing errors if the node doesn't exist.\r\n\r\n\t\t// curNode: DomNode\r\n\t\t//\t\tCurrently focused item on screen\r\n\t\tcurNode: null,\r\n\r\n\t\t// activeStack: dijit/_WidgetBase[]\r\n\t\t//\t\tList of currently active widgets (focused widget and it's ancestors)\r\n\t\tactiveStack: [],\r\n\r\n\t\tconstructor: function(){\r\n\t\t\t// Don't leave curNode/prevNode pointing to bogus elements\r\n\t\t\tvar check = lang.hitch(this, function(node){\r\n\t\t\t\tif(dom.isDescendant(this.curNode, node)){\r\n\t\t\t\t\tthis.set(\"curNode\", null);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom.isDescendant(this.prevNode, node)){\r\n\t\t\t\t\tthis.set(\"prevNode\", null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\taspect.before(domConstruct, \"empty\", check);\r\n\t\t\taspect.before(domConstruct, \"destroy\", check);\r\n\t\t},\r\n\r\n\t\tregisterIframe: function(/*DomNode*/ iframe){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified iframe so that any click\r\n\t\t\t//\t\tor focus event on that iframe (or anything in it) is reported\r\n\t\t\t//\t\tas a focus/click event on the `<iframe>` itself.\r\n\t\t\t// description:\r\n\t\t\t//\t\tCurrently only used by editor.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle with remove() method to deregister.\r\n\t\t\treturn this.registerWin(iframe.contentWindow, iframe);\r\n\t\t},\r\n\r\n\t\tregisterWin: function(/*Window?*/targetWindow, /*DomNode?*/ effectiveNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegisters listeners on the specified window (either the main\r\n\t\t\t//\t\twindow or an iframe's window) to detect when the user has clicked somewhere\r\n\t\t\t//\t\tor focused somewhere.\r\n\t\t\t// description:\r\n\t\t\t//\t\tUsers should call registerIframe() instead of this method.\r\n\t\t\t// targetWindow:\r\n\t\t\t//\t\tIf specified this is the window associated with the iframe,\r\n\t\t\t//\t\ti.e. iframe.contentWindow.\r\n\t\t\t// effectiveNode:\r\n\t\t\t//\t\tIf specified, report any focus events inside targetWindow as\r\n\t\t\t//\t\tan event on effectiveNode, rather than on evt.target.\r\n\t\t\t// returns:\r\n\t\t\t//\t\tHandle with remove() method to deregister.\r\n\r\n\t\t\t// TODO: make this function private in 2.0; Editor/users should call registerIframe(),\r\n\r\n\t\t\t// Listen for blur and focus events on targetWindow's document.\r\n\t\t\tvar _this = this,\r\n\t\t\t\tbody = targetWindow.document && targetWindow.document.body;\r\n\r\n\t\t\tif(body){\r\n\t\t\t\t// Listen for touches or mousedowns... could also use dojo/touch.press here.\r\n\t\t\t\tvar event = has(\"pointer-events\") ? \"pointerdown\" :  false ? undefined :\r\n\t\t\t\t\thas(\"touch-events\") ? \"mousedown, touchstart\" : \"mousedown\";\r\n\t\t\t\tvar mdh = on(targetWindow.document, event, function(evt){\r\n\t\t\t\t\t// workaround weird IE bug where the click is on an orphaned node\r\n\t\t\t\t\t// (first time clicking a Select/DropDownButton inside a TooltipDialog).\r\n\t\t\t\t\t// actually, strangely this is happening on latest chrome too.\r\n\t\t\t\t\tif(evt && evt.target && evt.target.parentNode == null){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_this._onTouchNode(effectiveNode || evt.target, \"mouse\");\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar fih = on(body, 'focusin', function(evt){\r\n\t\t\t\t\t// When you refocus the browser window, IE gives an event with an empty srcElement\r\n\t\t\t\t\tif(!evt.target.tagName) { return; }\r\n\r\n\t\t\t\t\t// IE reports that nodes like <body> have gotten focus, even though they have tabIndex=-1,\r\n\t\t\t\t\t// ignore those events\r\n\t\t\t\t\tvar tag = evt.target.tagName.toLowerCase();\r\n\t\t\t\t\tif(tag == \"#document\" || tag == \"body\"){ return; }\r\n\r\n\t\t\t\t\tif(a11y.isFocusable(evt.target)){\r\n\t\t\t\t\t\t_this._onFocusNode(effectiveNode || evt.target);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// Previous code called _onTouchNode() for any activate event on a non-focusable node.   Can\r\n\t\t\t\t\t\t// probably just ignore such an event as it will be handled by onmousedown handler above, but\r\n\t\t\t\t\t\t// leaving the code for now.\r\n\t\t\t\t\t\t_this._onTouchNode(effectiveNode || evt.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar foh = on(body, 'focusout', function(evt){\r\n\t\t\t\t\t_this._onBlurNode(effectiveNode || evt.target);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function(){\r\n\t\t\t\t\t\tmdh.remove();\r\n\t\t\t\t\t\tfih.remove();\r\n\t\t\t\t\t\tfoh.remove();\r\n\t\t\t\t\t\tmdh = fih = foh = null;\r\n\t\t\t\t\t\tbody = null;\t// prevent memory leak (apparent circular reference via closure)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onBlurNode: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCalled when focus leaves a node.\r\n\t\t\t//\t\tUsually ignored, _unless_ it *isn't* followed by touching another node,\r\n\t\t\t//\t\twhich indicates that we tabbed off the last field on the page,\r\n\t\t\t//\t\tin which case every widget is marked inactive\r\n\r\n\t\t\tvar now = (new Date()).getTime();\r\n\r\n\t\t\t// IE9+ and chrome have a problem where focusout events come after the corresponding focusin event.\r\n\t\t\t// For chrome problem see https://bugs.dojotoolkit.org/ticket/17668.\r\n\t\t\t// IE problem happens when moving focus from the Editor's <iframe> to a normal DOMNode.\r\n\t\t\tif(now < lastFocusin + 100){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If the blur event isn't followed by a focus event, it means the user clicked on something unfocusable,\r\n\t\t\t// so clear focus.\r\n\t\t\tif(this._clearFocusTimer){\r\n\t\t\t\tclearTimeout(this._clearFocusTimer);\r\n\t\t\t}\r\n\t\t\tthis._clearFocusTimer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\tthis.set(\"prevNode\", this.curNode);\r\n\t\t\t\tthis.set(\"curNode\", null);\r\n\t\t\t}), 0);\r\n\r\n\t\t\t// Unset timer to zero-out widget stack; we'll reset it below if appropriate.\r\n\t\t\tif(this._clearActiveWidgetsTimer){\r\n\t\t\t\tclearTimeout(this._clearActiveWidgetsTimer);\r\n\t\t\t}\r\n\r\n\t\t\tif(now < lastTouchOrFocusin + 100){\r\n\t\t\t\t// This blur event is coming late (after the call to _onTouchNode() rather than before.\r\n\t\t\t\t// So let _onTouchNode() handle setting the widget stack.\r\n\t\t\t\t// See https://bugs.dojotoolkit.org/ticket/17668\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If the blur event isn't followed (or preceded) by a focus or touch event then mark all widgets as inactive.\r\n\t\t\tthis._clearActiveWidgetsTimer = setTimeout(lang.hitch(this, function(){\r\n\t\t\t\tdelete this._clearActiveWidgetsTimer;\r\n\t\t\t\tthis._setStack([]);\r\n\t\t\t}), 0);\r\n\t\t},\r\n\r\n\t\t_onTouchNode: function(/*DomNode*/ node, /*String*/ by){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when node is focused or touched.\r\n\t\t\t//\t\tNote that _onFocusNode() calls _onTouchNode().\r\n\t\t\t// node:\r\n\t\t\t//\t\tThe node that was touched.\r\n\t\t\t// by:\r\n\t\t\t//\t\t\"mouse\" if the focus/touch was caused by a mouse down event\r\n\r\n\t\t\t// Keep track of time of last focusin or touch event.\r\n\t\t\tlastTouchOrFocusin = (new Date()).getTime();\r\n\r\n\t\t\tif(this._clearActiveWidgetsTimer){\r\n\t\t\t\t// forget the recent blur event\r\n\t\t\t\tclearTimeout(this._clearActiveWidgetsTimer);\r\n\t\t\t\tdelete this._clearActiveWidgetsTimer;\r\n\t\t\t}\r\n\r\n\t\t\t// if the click occurred on the scrollbar of a dropdown, treat it as a click on the dropdown,\r\n\t\t\t// even though the scrollbar is technically on the popup wrapper (see #10631)\r\n\t\t\tif(domClass.contains(node, \"dijitPopup\")){\r\n\t\t\t\tnode = node.firstChild;\r\n\t\t\t}\r\n\r\n\t\t\t// compute stack of active widgets (ex: ComboButton --> Menu --> MenuItem)\r\n\t\t\tvar newStack=[];\r\n\t\t\ttry{\r\n\t\t\t\twhile(node){\r\n\t\t\t\t\tvar popupParent = domAttr.get(node, \"dijitPopupParent\");\r\n\t\t\t\t\tif(popupParent){\r\n\t\t\t\t\t\tnode=registry.byId(popupParent).domNode;\r\n\t\t\t\t\t}else if(node.tagName && node.tagName.toLowerCase() == \"body\"){\r\n\t\t\t\t\t\t// is this the root of the document or just the root of an iframe?\r\n\t\t\t\t\t\tif(node === win.body()){\r\n\t\t\t\t\t\t\t// node is the root of the main document\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// otherwise, find the iframe this node refers to (can't access it via parentNode,\r\n\t\t\t\t\t\t// need to do this trick instead). window.frameElement is supported in IE/FF/Webkit\r\n\t\t\t\t\t\tnode=winUtils.get(node.ownerDocument).frameElement;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// if this node is the root node of a widget, then add widget id to stack,\r\n\t\t\t\t\t\t// except ignore clicks on disabled widgets (actually focusing a disabled widget still works,\r\n\t\t\t\t\t\t// to support MenuItem)\r\n\t\t\t\t\t\tvar id = node.getAttribute && node.getAttribute(\"widgetId\"),\r\n\t\t\t\t\t\t\twidget = id && registry.byId(id);\r\n\t\t\t\t\t\tif(widget && !(by == \"mouse\" && widget.get(\"disabled\"))){\r\n\t\t\t\t\t\t\tnewStack.unshift(id);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnode=node.parentNode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}catch(e){ /* squelch */ }\r\n\r\n\t\t\tthis._setStack(newStack, by);\r\n\t\t},\r\n\r\n\t\t_onFocusNode: function(/*DomNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCallback when node is focused\r\n\r\n\t\t\tif(!node){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(node.nodeType == 9){\r\n\t\t\t\t// Ignore focus events on the document itself.  This is here so that\r\n\t\t\t\t// (for example) clicking the up/down arrows of a spinner\r\n\t\t\t\t// (which don't get focus) won't cause that widget to blur. (FF issue)\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of time of last focusin event.\r\n\t\t\tlastFocusin = (new Date()).getTime();\r\n\r\n\t\t\t// There was probably a blur event right before this event, but since we have a new focus,\r\n\t\t\t// forget about the blur\r\n\t\t\tif(this._clearFocusTimer){\r\n\t\t\t\tclearTimeout(this._clearFocusTimer);\r\n\t\t\t\tdelete this._clearFocusTimer;\r\n\t\t\t}\r\n\r\n\t\t\tthis._onTouchNode(node);\r\n\r\n\t\t\tif(node == this.curNode){ return; }\r\n\t\t\tthis.set(\"prevNode\", this.curNode);\r\n\t\t\tthis.set(\"curNode\", node);\r\n\t\t},\r\n\r\n\t\t_setStack: function(/*String[]*/ newStack, /*String*/ by){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tThe stack of active widgets has changed.  Send out appropriate events and records new stack.\r\n\t\t\t// newStack:\r\n\t\t\t//\t\tarray of widget id's, starting from the top (outermost) widget\r\n\t\t\t// by:\r\n\t\t\t//\t\t\"mouse\" if the focus/touch was caused by a mouse down event\r\n\r\n\t\t\tvar oldStack = this.activeStack, lastOldIdx = oldStack.length - 1, lastNewIdx = newStack.length - 1;\r\n\r\n\t\t\tif(newStack[lastNewIdx] == oldStack[lastOldIdx]){\r\n\t\t\t\t// no changes, return now to avoid spurious notifications about changes to activeStack\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.set(\"activeStack\", newStack);\r\n\r\n\t\t\tvar widget, i;\r\n\r\n\t\t\t// for all elements that have gone out of focus, set focused=false\r\n\t\t\tfor(i = lastOldIdx; i >= 0 && oldStack[i] != newStack[i]; i--){\r\n\t\t\t\twidget = registry.byId(oldStack[i]);\r\n\t\t\t\tif(widget){\r\n\t\t\t\t\twidget._hasBeenBlurred = true;\t\t// TODO: used by form widgets, should be moved there\r\n\t\t\t\t\twidget.set(\"focused\", false);\r\n\t\t\t\t\tif(widget._focusManager == this){\r\n\t\t\t\t\t\twidget._onBlur(by);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.emit(\"widget-blur\", widget, by);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// for all element that have come into focus, set focused=true\r\n\t\t\tfor(i++; i <= lastNewIdx; i++){\r\n\t\t\t\twidget = registry.byId(newStack[i]);\r\n\t\t\t\tif(widget){\r\n\t\t\t\t\twidget.set(\"focused\", true);\r\n\t\t\t\t\tif(widget._focusManager == this){\r\n\t\t\t\t\t\twidget._onFocus(by);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.emit(\"widget-focus\", widget, by);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tfocus: function(node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFocus the specified node, suppressing errors if they occur\r\n\t\t\tif(node){\r\n\t\t\t\ttry{ node.focus(); }catch(e){/*quiet*/}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tvar singleton = new FocusManager();\r\n\r\n\t// register top window and all the iframes it contains\r\n\tdomReady(function(){\r\n\t\tvar handle = singleton.registerWin(winUtils.get(document));\r\n\t\tif(has(\"ie\")){\r\n\t\t\ton(window, \"unload\", function(){\r\n\t\t\t\tif(handle){\t// because this gets called twice when doh.robot is running\r\n\t\t\t\t\thandle.remove();\r\n\t\t\t\t\thandle = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// Setup dijit.focus as a pointer to the singleton but also (for backwards compatibility)\r\n\t// as a function to set focus.   Remove for 2.0.\r\n\tdijit.focus = function(node){\r\n\t\tsingleton.focus(node);\t// indirection here allows dijit/_base/focus.js to override behavior\r\n\t};\r\n\tfor(var attr in singleton){\r\n\t\tif(!/^_/.test(attr)){\r\n\t\t\tdijit.focus[attr] = typeof singleton[attr] == \"function\" ? lang.hitch(singleton, attr) : singleton[attr];\r\n\t\t}\r\n\t}\r\n\tsingleton.watch(function(attr, oldVal, newVal){\r\n\t\tdijit.focus[attr] = newVal;\r\n\t});\r\n\r\n\treturn singleton;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvZm9jdXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGlqaXQvZm9jdXMuanM/YzgyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1xyXG5cdFwiZG9qby9hc3BlY3RcIixcclxuXHRcImRvam8vX2Jhc2UvZGVjbGFyZVwiLCAvLyBkZWNsYXJlXHJcblx0XCJkb2pvL2RvbVwiLCAvLyBkb21BdHRyLmdldCBkb20uaXNEZXNjZW5kYW50XHJcblx0XCJkb2pvL2RvbS1hdHRyXCIsIC8vIGRvbUF0dHIuZ2V0IGRvbS5pc0Rlc2NlbmRhbnRcclxuXHRcImRvam8vZG9tLWNsYXNzXCIsXHJcblx0XCJkb2pvL2RvbS1jb25zdHJ1Y3RcIiwgLy8gY29ubmVjdCB0byBkb21Db25zdHJ1Y3QuZW1wdHksIGRvbUNvbnN0cnVjdC5kZXN0cm95XHJcblx0XCJkb2pvL0V2ZW50ZWRcIixcclxuXHRcImRvam8vX2Jhc2UvbGFuZ1wiLCAvLyBsYW5nLmhpdGNoXHJcblx0XCJkb2pvL29uXCIsXHJcblx0XCJkb2pvL2RvbVJlYWR5XCIsXHJcblx0XCJkb2pvL3NuaWZmXCIsIC8vIGhhcyhcImllXCIpXHJcblx0XCJkb2pvL1N0YXRlZnVsXCIsXHJcblx0XCJkb2pvL19iYXNlL3dpbmRvd1wiLCAvLyB3aW4uYm9keVxyXG5cdFwiZG9qby93aW5kb3dcIiwgLy8gd2luVXRpbHMuZ2V0XHJcblx0XCIuL2ExMXlcIixcdC8vIGExMXkuaXNUYWJOYXZpZ2FibGVcclxuXHRcIi4vcmVnaXN0cnlcIixcdC8vIHJlZ2lzdHJ5LmJ5SWRcclxuXHRcIi4vbWFpblwiXHRcdC8vIHRvIHNldCBkaWppdC5mb2N1c1xyXG5dLCBmdW5jdGlvbihhc3BlY3QsIGRlY2xhcmUsIGRvbSwgZG9tQXR0ciwgZG9tQ2xhc3MsIGRvbUNvbnN0cnVjdCwgRXZlbnRlZCwgbGFuZywgb24sIGRvbVJlYWR5LCBoYXMsIFN0YXRlZnVsLCB3aW4sIHdpblV0aWxzLFxyXG5cdFx0XHRhMTF5LCByZWdpc3RyeSwgZGlqaXQpe1xyXG5cclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZGlqaXQvZm9jdXNcclxuXHJcblx0Ly8gVGltZSBvZiB0aGUgbGFzdCBmb2N1c2luIGV2ZW50XHJcblx0dmFyIGxhc3RGb2N1c2luO1xyXG5cclxuXHQvLyBUaW1lIG9mIHRoZSBsYXN0IHRvdWNoL21vdXNlZG93biBvciBmb2N1c2luIGV2ZW50XHJcblx0dmFyIGxhc3RUb3VjaE9yRm9jdXNpbjtcclxuXHJcblx0dmFyIEZvY3VzTWFuYWdlciA9IGRlY2xhcmUoW1N0YXRlZnVsLCBFdmVudGVkXSwge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFRyYWNrcyB0aGUgY3VycmVudGx5IGZvY3VzZWQgbm9kZSwgYW5kIHdoaWNoIHdpZGdldHMgYXJlIGN1cnJlbnRseSBcImFjdGl2ZVwiLlxyXG5cdFx0Ly9cdFx0QWNjZXNzIHZpYSByZXF1aXJlKFtcImRpaml0L2ZvY3VzXCJdLCBmdW5jdGlvbihmb2N1cyl7IC4uLiB9KS5cclxuXHRcdC8vXHJcblx0XHQvL1x0XHRBIHdpZGdldCBpcyBjb25zaWRlcmVkIGFjdGl2ZSBpZiBpdCBvciBhIGRlc2NlbmRhbnQgd2lkZ2V0IGhhcyBmb2N1cyxcclxuXHRcdC8vXHRcdG9yIGlmIGEgbm9uLWZvY3VzYWJsZSBub2RlIG9mIHRoaXMgd2lkZ2V0IG9yIGEgZGVzY2VuZGFudCB3YXMgcmVjZW50bHkgY2xpY2tlZC5cclxuXHRcdC8vXHJcblx0XHQvL1x0XHRDYWxsIGZvY3VzLndhdGNoKFwiY3VyTm9kZVwiLCBjYWxsYmFjaykgdG8gdHJhY2sgdGhlIGN1cnJlbnQgZm9jdXNlZCBET01Ob2RlLFxyXG5cdFx0Ly9cdFx0b3IgZm9jdXMud2F0Y2goXCJhY3RpdmVTdGFja1wiLCBjYWxsYmFjaykgdG8gdHJhY2sgdGhlIGN1cnJlbnRseSBmb2N1c2VkIHN0YWNrIG9mIHdpZGdldHMuXHJcblx0XHQvL1xyXG5cdFx0Ly9cdFx0Q2FsbCBmb2N1cy5vbihcIndpZGdldC1ibHVyXCIsIGZ1bmMpIG9yIGZvY3VzLm9uKFwid2lkZ2V0LWZvY3VzXCIsIC4uLikgdG8gbW9uaXRvciB3aGVuXHJcblx0XHQvL1x0XHR3aGVuIHdpZGdldHMgYmVjb21lIGFjdGl2ZS9pbmFjdGl2ZVxyXG5cdFx0Ly9cclxuXHRcdC8vXHRcdEZpbmFsbHksIGZvY3VzKG5vZGUpIHdpbGwgZm9jdXMgYSBub2RlLCBzdXBwcmVzc2luZyBlcnJvcnMgaWYgdGhlIG5vZGUgZG9lc24ndCBleGlzdC5cclxuXHJcblx0XHQvLyBjdXJOb2RlOiBEb21Ob2RlXHJcblx0XHQvL1x0XHRDdXJyZW50bHkgZm9jdXNlZCBpdGVtIG9uIHNjcmVlblxyXG5cdFx0Y3VyTm9kZTogbnVsbCxcclxuXHJcblx0XHQvLyBhY3RpdmVTdGFjazogZGlqaXQvX1dpZGdldEJhc2VbXVxyXG5cdFx0Ly9cdFx0TGlzdCBvZiBjdXJyZW50bHkgYWN0aXZlIHdpZGdldHMgKGZvY3VzZWQgd2lkZ2V0IGFuZCBpdCdzIGFuY2VzdG9ycylcclxuXHRcdGFjdGl2ZVN0YWNrOiBbXSxcclxuXHJcblx0XHRjb25zdHJ1Y3RvcjogZnVuY3Rpb24oKXtcclxuXHRcdFx0Ly8gRG9uJ3QgbGVhdmUgY3VyTm9kZS9wcmV2Tm9kZSBwb2ludGluZyB0byBib2d1cyBlbGVtZW50c1xyXG5cdFx0XHR2YXIgY2hlY2sgPSBsYW5nLmhpdGNoKHRoaXMsIGZ1bmN0aW9uKG5vZGUpe1xyXG5cdFx0XHRcdGlmKGRvbS5pc0Rlc2NlbmRhbnQodGhpcy5jdXJOb2RlLCBub2RlKSl7XHJcblx0XHRcdFx0XHR0aGlzLnNldChcImN1ck5vZGVcIiwgbnVsbCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmKGRvbS5pc0Rlc2NlbmRhbnQodGhpcy5wcmV2Tm9kZSwgbm9kZSkpe1xyXG5cdFx0XHRcdFx0dGhpcy5zZXQoXCJwcmV2Tm9kZVwiLCBudWxsKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRhc3BlY3QuYmVmb3JlKGRvbUNvbnN0cnVjdCwgXCJlbXB0eVwiLCBjaGVjayk7XHJcblx0XHRcdGFzcGVjdC5iZWZvcmUoZG9tQ29uc3RydWN0LCBcImRlc3Ryb3lcIiwgY2hlY2spO1xyXG5cdFx0fSxcclxuXHJcblx0XHRyZWdpc3RlcklmcmFtZTogZnVuY3Rpb24oLypEb21Ob2RlKi8gaWZyYW1lKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0UmVnaXN0ZXJzIGxpc3RlbmVycyBvbiB0aGUgc3BlY2lmaWVkIGlmcmFtZSBzbyB0aGF0IGFueSBjbGlja1xyXG5cdFx0XHQvL1x0XHRvciBmb2N1cyBldmVudCBvbiB0aGF0IGlmcmFtZSAob3IgYW55dGhpbmcgaW4gaXQpIGlzIHJlcG9ydGVkXHJcblx0XHRcdC8vXHRcdGFzIGEgZm9jdXMvY2xpY2sgZXZlbnQgb24gdGhlIGA8aWZyYW1lPmAgaXRzZWxmLlxyXG5cdFx0XHQvLyBkZXNjcmlwdGlvbjpcclxuXHRcdFx0Ly9cdFx0Q3VycmVudGx5IG9ubHkgdXNlZCBieSBlZGl0b3IuXHJcblx0XHRcdC8vIHJldHVybnM6XHJcblx0XHRcdC8vXHRcdEhhbmRsZSB3aXRoIHJlbW92ZSgpIG1ldGhvZCB0byBkZXJlZ2lzdGVyLlxyXG5cdFx0XHRyZXR1cm4gdGhpcy5yZWdpc3RlcldpbihpZnJhbWUuY29udGVudFdpbmRvdywgaWZyYW1lKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0cmVnaXN0ZXJXaW46IGZ1bmN0aW9uKC8qV2luZG93PyovdGFyZ2V0V2luZG93LCAvKkRvbU5vZGU/Ki8gZWZmZWN0aXZlTm9kZSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVycyBsaXN0ZW5lcnMgb24gdGhlIHNwZWNpZmllZCB3aW5kb3cgKGVpdGhlciB0aGUgbWFpblxyXG5cdFx0XHQvL1x0XHR3aW5kb3cgb3IgYW4gaWZyYW1lJ3Mgd2luZG93KSB0byBkZXRlY3Qgd2hlbiB0aGUgdXNlciBoYXMgY2xpY2tlZCBzb21ld2hlcmVcclxuXHRcdFx0Ly9cdFx0b3IgZm9jdXNlZCBzb21ld2hlcmUuXHJcblx0XHRcdC8vIGRlc2NyaXB0aW9uOlxyXG5cdFx0XHQvL1x0XHRVc2VycyBzaG91bGQgY2FsbCByZWdpc3RlcklmcmFtZSgpIGluc3RlYWQgb2YgdGhpcyBtZXRob2QuXHJcblx0XHRcdC8vIHRhcmdldFdpbmRvdzpcclxuXHRcdFx0Ly9cdFx0SWYgc3BlY2lmaWVkIHRoaXMgaXMgdGhlIHdpbmRvdyBhc3NvY2lhdGVkIHdpdGggdGhlIGlmcmFtZSxcclxuXHRcdFx0Ly9cdFx0aS5lLiBpZnJhbWUuY29udGVudFdpbmRvdy5cclxuXHRcdFx0Ly8gZWZmZWN0aXZlTm9kZTpcclxuXHRcdFx0Ly9cdFx0SWYgc3BlY2lmaWVkLCByZXBvcnQgYW55IGZvY3VzIGV2ZW50cyBpbnNpZGUgdGFyZ2V0V2luZG93IGFzXHJcblx0XHRcdC8vXHRcdGFuIGV2ZW50IG9uIGVmZmVjdGl2ZU5vZGUsIHJhdGhlciB0aGFuIG9uIGV2dC50YXJnZXQuXHJcblx0XHRcdC8vIHJldHVybnM6XHJcblx0XHRcdC8vXHRcdEhhbmRsZSB3aXRoIHJlbW92ZSgpIG1ldGhvZCB0byBkZXJlZ2lzdGVyLlxyXG5cclxuXHRcdFx0Ly8gVE9ETzogbWFrZSB0aGlzIGZ1bmN0aW9uIHByaXZhdGUgaW4gMi4wOyBFZGl0b3IvdXNlcnMgc2hvdWxkIGNhbGwgcmVnaXN0ZXJJZnJhbWUoKSxcclxuXHJcblx0XHRcdC8vIExpc3RlbiBmb3IgYmx1ciBhbmQgZm9jdXMgZXZlbnRzIG9uIHRhcmdldFdpbmRvdydzIGRvY3VtZW50LlxyXG5cdFx0XHR2YXIgX3RoaXMgPSB0aGlzLFxyXG5cdFx0XHRcdGJvZHkgPSB0YXJnZXRXaW5kb3cuZG9jdW1lbnQgJiYgdGFyZ2V0V2luZG93LmRvY3VtZW50LmJvZHk7XHJcblxyXG5cdFx0XHRpZihib2R5KXtcclxuXHRcdFx0XHQvLyBMaXN0ZW4gZm9yIHRvdWNoZXMgb3IgbW91c2Vkb3ducy4uLiBjb3VsZCBhbHNvIHVzZSBkb2pvL3RvdWNoLnByZXNzIGhlcmUuXHJcblx0XHRcdFx0dmFyIGV2ZW50ID0gaGFzKFwicG9pbnRlci1ldmVudHNcIikgPyBcInBvaW50ZXJkb3duXCIgOiBoYXMoXCJNU1BvaW50ZXJcIikgPyBcIk1TUG9pbnRlckRvd25cIiA6XHJcblx0XHRcdFx0XHRoYXMoXCJ0b3VjaC1ldmVudHNcIikgPyBcIm1vdXNlZG93biwgdG91Y2hzdGFydFwiIDogXCJtb3VzZWRvd25cIjtcclxuXHRcdFx0XHR2YXIgbWRoID0gb24odGFyZ2V0V2luZG93LmRvY3VtZW50LCBldmVudCwgZnVuY3Rpb24oZXZ0KXtcclxuXHRcdFx0XHRcdC8vIHdvcmthcm91bmQgd2VpcmQgSUUgYnVnIHdoZXJlIHRoZSBjbGljayBpcyBvbiBhbiBvcnBoYW5lZCBub2RlXHJcblx0XHRcdFx0XHQvLyAoZmlyc3QgdGltZSBjbGlja2luZyBhIFNlbGVjdC9Ecm9wRG93bkJ1dHRvbiBpbnNpZGUgYSBUb29sdGlwRGlhbG9nKS5cclxuXHRcdFx0XHRcdC8vIGFjdHVhbGx5LCBzdHJhbmdlbHkgdGhpcyBpcyBoYXBwZW5pbmcgb24gbGF0ZXN0IGNocm9tZSB0b28uXHJcblx0XHRcdFx0XHRpZihldnQgJiYgZXZ0LnRhcmdldCAmJiBldnQudGFyZ2V0LnBhcmVudE5vZGUgPT0gbnVsbCl7XHJcblx0XHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRfdGhpcy5fb25Ub3VjaE5vZGUoZWZmZWN0aXZlTm9kZSB8fCBldnQudGFyZ2V0LCBcIm1vdXNlXCIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHR2YXIgZmloID0gb24oYm9keSwgJ2ZvY3VzaW4nLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdFx0Ly8gV2hlbiB5b3UgcmVmb2N1cyB0aGUgYnJvd3NlciB3aW5kb3csIElFIGdpdmVzIGFuIGV2ZW50IHdpdGggYW4gZW1wdHkgc3JjRWxlbWVudFxyXG5cdFx0XHRcdFx0aWYoIWV2dC50YXJnZXQudGFnTmFtZSkgeyByZXR1cm47IH1cclxuXHJcblx0XHRcdFx0XHQvLyBJRSByZXBvcnRzIHRoYXQgbm9kZXMgbGlrZSA8Ym9keT4gaGF2ZSBnb3R0ZW4gZm9jdXMsIGV2ZW4gdGhvdWdoIHRoZXkgaGF2ZSB0YWJJbmRleD0tMSxcclxuXHRcdFx0XHRcdC8vIGlnbm9yZSB0aG9zZSBldmVudHNcclxuXHRcdFx0XHRcdHZhciB0YWcgPSBldnQudGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0XHRcdGlmKHRhZyA9PSBcIiNkb2N1bWVudFwiIHx8IHRhZyA9PSBcImJvZHlcIil7IHJldHVybjsgfVxyXG5cclxuXHRcdFx0XHRcdGlmKGExMXkuaXNGb2N1c2FibGUoZXZ0LnRhcmdldCkpe1xyXG5cdFx0XHRcdFx0XHRfdGhpcy5fb25Gb2N1c05vZGUoZWZmZWN0aXZlTm9kZSB8fCBldnQudGFyZ2V0KTtcclxuXHRcdFx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdFx0XHQvLyBQcmV2aW91cyBjb2RlIGNhbGxlZCBfb25Ub3VjaE5vZGUoKSBmb3IgYW55IGFjdGl2YXRlIGV2ZW50IG9uIGEgbm9uLWZvY3VzYWJsZSBub2RlLiAgIENhblxyXG5cdFx0XHRcdFx0XHQvLyBwcm9iYWJseSBqdXN0IGlnbm9yZSBzdWNoIGFuIGV2ZW50IGFzIGl0IHdpbGwgYmUgaGFuZGxlZCBieSBvbm1vdXNlZG93biBoYW5kbGVyIGFib3ZlLCBidXRcclxuXHRcdFx0XHRcdFx0Ly8gbGVhdmluZyB0aGUgY29kZSBmb3Igbm93LlxyXG5cdFx0XHRcdFx0XHRfdGhpcy5fb25Ub3VjaE5vZGUoZWZmZWN0aXZlTm9kZSB8fCBldnQudGFyZ2V0KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0dmFyIGZvaCA9IG9uKGJvZHksICdmb2N1c291dCcsIGZ1bmN0aW9uKGV2dCl7XHJcblx0XHRcdFx0XHRfdGhpcy5fb25CbHVyTm9kZShlZmZlY3RpdmVOb2RlIHx8IGV2dC50YXJnZXQpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0XHRtZGgucmVtb3ZlKCk7XHJcblx0XHRcdFx0XHRcdGZpaC5yZW1vdmUoKTtcclxuXHRcdFx0XHRcdFx0Zm9oLnJlbW92ZSgpO1xyXG5cdFx0XHRcdFx0XHRtZGggPSBmaWggPSBmb2ggPSBudWxsO1xyXG5cdFx0XHRcdFx0XHRib2R5ID0gbnVsbDtcdC8vIHByZXZlbnQgbWVtb3J5IGxlYWsgKGFwcGFyZW50IGNpcmN1bGFyIHJlZmVyZW5jZSB2aWEgY2xvc3VyZSlcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9O1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cclxuXHRcdF9vbkJsdXJOb2RlOiBmdW5jdGlvbigvKkRvbU5vZGUqLyBub2RlKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Q2FsbGVkIHdoZW4gZm9jdXMgbGVhdmVzIGEgbm9kZS5cclxuXHRcdFx0Ly9cdFx0VXN1YWxseSBpZ25vcmVkLCBfdW5sZXNzXyBpdCAqaXNuJ3QqIGZvbGxvd2VkIGJ5IHRvdWNoaW5nIGFub3RoZXIgbm9kZSxcclxuXHRcdFx0Ly9cdFx0d2hpY2ggaW5kaWNhdGVzIHRoYXQgd2UgdGFiYmVkIG9mZiB0aGUgbGFzdCBmaWVsZCBvbiB0aGUgcGFnZSxcclxuXHRcdFx0Ly9cdFx0aW4gd2hpY2ggY2FzZSBldmVyeSB3aWRnZXQgaXMgbWFya2VkIGluYWN0aXZlXHJcblxyXG5cdFx0XHR2YXIgbm93ID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcclxuXHJcblx0XHRcdC8vIElFOSsgYW5kIGNocm9tZSBoYXZlIGEgcHJvYmxlbSB3aGVyZSBmb2N1c291dCBldmVudHMgY29tZSBhZnRlciB0aGUgY29ycmVzcG9uZGluZyBmb2N1c2luIGV2ZW50LlxyXG5cdFx0XHQvLyBGb3IgY2hyb21lIHByb2JsZW0gc2VlIGh0dHBzOi8vYnVncy5kb2pvdG9vbGtpdC5vcmcvdGlja2V0LzE3NjY4LlxyXG5cdFx0XHQvLyBJRSBwcm9ibGVtIGhhcHBlbnMgd2hlbiBtb3ZpbmcgZm9jdXMgZnJvbSB0aGUgRWRpdG9yJ3MgPGlmcmFtZT4gdG8gYSBub3JtYWwgRE9NTm9kZS5cclxuXHRcdFx0aWYobm93IDwgbGFzdEZvY3VzaW4gKyAxMDApe1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSWYgdGhlIGJsdXIgZXZlbnQgaXNuJ3QgZm9sbG93ZWQgYnkgYSBmb2N1cyBldmVudCwgaXQgbWVhbnMgdGhlIHVzZXIgY2xpY2tlZCBvbiBzb21ldGhpbmcgdW5mb2N1c2FibGUsXHJcblx0XHRcdC8vIHNvIGNsZWFyIGZvY3VzLlxyXG5cdFx0XHRpZih0aGlzLl9jbGVhckZvY3VzVGltZXIpe1xyXG5cdFx0XHRcdGNsZWFyVGltZW91dCh0aGlzLl9jbGVhckZvY3VzVGltZXIpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMuX2NsZWFyRm9jdXNUaW1lciA9IHNldFRpbWVvdXQobGFuZy5oaXRjaCh0aGlzLCBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdHRoaXMuc2V0KFwicHJldk5vZGVcIiwgdGhpcy5jdXJOb2RlKTtcclxuXHRcdFx0XHR0aGlzLnNldChcImN1ck5vZGVcIiwgbnVsbCk7XHJcblx0XHRcdH0pLCAwKTtcclxuXHJcblx0XHRcdC8vIFVuc2V0IHRpbWVyIHRvIHplcm8tb3V0IHdpZGdldCBzdGFjazsgd2UnbGwgcmVzZXQgaXQgYmVsb3cgaWYgYXBwcm9wcmlhdGUuXHJcblx0XHRcdGlmKHRoaXMuX2NsZWFyQWN0aXZlV2lkZ2V0c1RpbWVyKXtcclxuXHRcdFx0XHRjbGVhclRpbWVvdXQodGhpcy5fY2xlYXJBY3RpdmVXaWRnZXRzVGltZXIpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZihub3cgPCBsYXN0VG91Y2hPckZvY3VzaW4gKyAxMDApe1xyXG5cdFx0XHRcdC8vIFRoaXMgYmx1ciBldmVudCBpcyBjb21pbmcgbGF0ZSAoYWZ0ZXIgdGhlIGNhbGwgdG8gX29uVG91Y2hOb2RlKCkgcmF0aGVyIHRoYW4gYmVmb3JlLlxyXG5cdFx0XHRcdC8vIFNvIGxldCBfb25Ub3VjaE5vZGUoKSBoYW5kbGUgc2V0dGluZyB0aGUgd2lkZ2V0IHN0YWNrLlxyXG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2J1Z3MuZG9qb3Rvb2xraXQub3JnL3RpY2tldC8xNzY2OFxyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSWYgdGhlIGJsdXIgZXZlbnQgaXNuJ3QgZm9sbG93ZWQgKG9yIHByZWNlZGVkKSBieSBhIGZvY3VzIG9yIHRvdWNoIGV2ZW50IHRoZW4gbWFyayBhbGwgd2lkZ2V0cyBhcyBpbmFjdGl2ZS5cclxuXHRcdFx0dGhpcy5fY2xlYXJBY3RpdmVXaWRnZXRzVGltZXIgPSBzZXRUaW1lb3V0KGxhbmcuaGl0Y2godGhpcywgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRkZWxldGUgdGhpcy5fY2xlYXJBY3RpdmVXaWRnZXRzVGltZXI7XHJcblx0XHRcdFx0dGhpcy5fc2V0U3RhY2soW10pO1xyXG5cdFx0XHR9KSwgMCk7XHJcblx0XHR9LFxyXG5cclxuXHRcdF9vblRvdWNoTm9kZTogZnVuY3Rpb24oLypEb21Ob2RlKi8gbm9kZSwgLypTdHJpbmcqLyBieSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdENhbGxiYWNrIHdoZW4gbm9kZSBpcyBmb2N1c2VkIG9yIHRvdWNoZWQuXHJcblx0XHRcdC8vXHRcdE5vdGUgdGhhdCBfb25Gb2N1c05vZGUoKSBjYWxscyBfb25Ub3VjaE5vZGUoKS5cclxuXHRcdFx0Ly8gbm9kZTpcclxuXHRcdFx0Ly9cdFx0VGhlIG5vZGUgdGhhdCB3YXMgdG91Y2hlZC5cclxuXHRcdFx0Ly8gYnk6XHJcblx0XHRcdC8vXHRcdFwibW91c2VcIiBpZiB0aGUgZm9jdXMvdG91Y2ggd2FzIGNhdXNlZCBieSBhIG1vdXNlIGRvd24gZXZlbnRcclxuXHJcblx0XHRcdC8vIEtlZXAgdHJhY2sgb2YgdGltZSBvZiBsYXN0IGZvY3VzaW4gb3IgdG91Y2ggZXZlbnQuXHJcblx0XHRcdGxhc3RUb3VjaE9yRm9jdXNpbiA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcblxyXG5cdFx0XHRpZih0aGlzLl9jbGVhckFjdGl2ZVdpZGdldHNUaW1lcil7XHJcblx0XHRcdFx0Ly8gZm9yZ2V0IHRoZSByZWNlbnQgYmx1ciBldmVudFxyXG5cdFx0XHRcdGNsZWFyVGltZW91dCh0aGlzLl9jbGVhckFjdGl2ZVdpZGdldHNUaW1lcik7XHJcblx0XHRcdFx0ZGVsZXRlIHRoaXMuX2NsZWFyQWN0aXZlV2lkZ2V0c1RpbWVyO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBpZiB0aGUgY2xpY2sgb2NjdXJyZWQgb24gdGhlIHNjcm9sbGJhciBvZiBhIGRyb3Bkb3duLCB0cmVhdCBpdCBhcyBhIGNsaWNrIG9uIHRoZSBkcm9wZG93bixcclxuXHRcdFx0Ly8gZXZlbiB0aG91Z2ggdGhlIHNjcm9sbGJhciBpcyB0ZWNobmljYWxseSBvbiB0aGUgcG9wdXAgd3JhcHBlciAoc2VlICMxMDYzMSlcclxuXHRcdFx0aWYoZG9tQ2xhc3MuY29udGFpbnMobm9kZSwgXCJkaWppdFBvcHVwXCIpKXtcclxuXHRcdFx0XHRub2RlID0gbm9kZS5maXJzdENoaWxkO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBjb21wdXRlIHN0YWNrIG9mIGFjdGl2ZSB3aWRnZXRzIChleDogQ29tYm9CdXR0b24gLS0+IE1lbnUgLS0+IE1lbnVJdGVtKVxyXG5cdFx0XHR2YXIgbmV3U3RhY2s9W107XHJcblx0XHRcdHRyeXtcclxuXHRcdFx0XHR3aGlsZShub2RlKXtcclxuXHRcdFx0XHRcdHZhciBwb3B1cFBhcmVudCA9IGRvbUF0dHIuZ2V0KG5vZGUsIFwiZGlqaXRQb3B1cFBhcmVudFwiKTtcclxuXHRcdFx0XHRcdGlmKHBvcHVwUGFyZW50KXtcclxuXHRcdFx0XHRcdFx0bm9kZT1yZWdpc3RyeS5ieUlkKHBvcHVwUGFyZW50KS5kb21Ob2RlO1xyXG5cdFx0XHRcdFx0fWVsc2UgaWYobm9kZS50YWdOYW1lICYmIG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09IFwiYm9keVwiKXtcclxuXHRcdFx0XHRcdFx0Ly8gaXMgdGhpcyB0aGUgcm9vdCBvZiB0aGUgZG9jdW1lbnQgb3IganVzdCB0aGUgcm9vdCBvZiBhbiBpZnJhbWU/XHJcblx0XHRcdFx0XHRcdGlmKG5vZGUgPT09IHdpbi5ib2R5KCkpe1xyXG5cdFx0XHRcdFx0XHRcdC8vIG5vZGUgaXMgdGhlIHJvb3Qgb2YgdGhlIG1haW4gZG9jdW1lbnRcclxuXHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHQvLyBvdGhlcndpc2UsIGZpbmQgdGhlIGlmcmFtZSB0aGlzIG5vZGUgcmVmZXJzIHRvIChjYW4ndCBhY2Nlc3MgaXQgdmlhIHBhcmVudE5vZGUsXHJcblx0XHRcdFx0XHRcdC8vIG5lZWQgdG8gZG8gdGhpcyB0cmljayBpbnN0ZWFkKS4gd2luZG93LmZyYW1lRWxlbWVudCBpcyBzdXBwb3J0ZWQgaW4gSUUvRkYvV2Via2l0XHJcblx0XHRcdFx0XHRcdG5vZGU9d2luVXRpbHMuZ2V0KG5vZGUub3duZXJEb2N1bWVudCkuZnJhbWVFbGVtZW50O1xyXG5cdFx0XHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0XHRcdC8vIGlmIHRoaXMgbm9kZSBpcyB0aGUgcm9vdCBub2RlIG9mIGEgd2lkZ2V0LCB0aGVuIGFkZCB3aWRnZXQgaWQgdG8gc3RhY2ssXHJcblx0XHRcdFx0XHRcdC8vIGV4Y2VwdCBpZ25vcmUgY2xpY2tzIG9uIGRpc2FibGVkIHdpZGdldHMgKGFjdHVhbGx5IGZvY3VzaW5nIGEgZGlzYWJsZWQgd2lkZ2V0IHN0aWxsIHdvcmtzLFxyXG5cdFx0XHRcdFx0XHQvLyB0byBzdXBwb3J0IE1lbnVJdGVtKVxyXG5cdFx0XHRcdFx0XHR2YXIgaWQgPSBub2RlLmdldEF0dHJpYnV0ZSAmJiBub2RlLmdldEF0dHJpYnV0ZShcIndpZGdldElkXCIpLFxyXG5cdFx0XHRcdFx0XHRcdHdpZGdldCA9IGlkICYmIHJlZ2lzdHJ5LmJ5SWQoaWQpO1xyXG5cdFx0XHRcdFx0XHRpZih3aWRnZXQgJiYgIShieSA9PSBcIm1vdXNlXCIgJiYgd2lkZ2V0LmdldChcImRpc2FibGVkXCIpKSl7XHJcblx0XHRcdFx0XHRcdFx0bmV3U3RhY2sudW5zaGlmdChpZCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0bm9kZT1ub2RlLnBhcmVudE5vZGU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9Y2F0Y2goZSl7IC8qIHNxdWVsY2ggKi8gfVxyXG5cclxuXHRcdFx0dGhpcy5fc2V0U3RhY2sobmV3U3RhY2ssIGJ5KTtcclxuXHRcdH0sXHJcblxyXG5cdFx0X29uRm9jdXNOb2RlOiBmdW5jdGlvbigvKkRvbU5vZGUqLyBub2RlKXtcclxuXHRcdFx0Ly8gc3VtbWFyeTpcclxuXHRcdFx0Ly9cdFx0Q2FsbGJhY2sgd2hlbiBub2RlIGlzIGZvY3VzZWRcclxuXHJcblx0XHRcdGlmKCFub2RlKXtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmKG5vZGUubm9kZVR5cGUgPT0gOSl7XHJcblx0XHRcdFx0Ly8gSWdub3JlIGZvY3VzIGV2ZW50cyBvbiB0aGUgZG9jdW1lbnQgaXRzZWxmLiAgVGhpcyBpcyBoZXJlIHNvIHRoYXRcclxuXHRcdFx0XHQvLyAoZm9yIGV4YW1wbGUpIGNsaWNraW5nIHRoZSB1cC9kb3duIGFycm93cyBvZiBhIHNwaW5uZXJcclxuXHRcdFx0XHQvLyAod2hpY2ggZG9uJ3QgZ2V0IGZvY3VzKSB3b24ndCBjYXVzZSB0aGF0IHdpZGdldCB0byBibHVyLiAoRkYgaXNzdWUpXHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHRpbWUgb2YgbGFzdCBmb2N1c2luIGV2ZW50LlxyXG5cdFx0XHRsYXN0Rm9jdXNpbiA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcblxyXG5cdFx0XHQvLyBUaGVyZSB3YXMgcHJvYmFibHkgYSBibHVyIGV2ZW50IHJpZ2h0IGJlZm9yZSB0aGlzIGV2ZW50LCBidXQgc2luY2Ugd2UgaGF2ZSBhIG5ldyBmb2N1cyxcclxuXHRcdFx0Ly8gZm9yZ2V0IGFib3V0IHRoZSBibHVyXHJcblx0XHRcdGlmKHRoaXMuX2NsZWFyRm9jdXNUaW1lcil7XHJcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRoaXMuX2NsZWFyRm9jdXNUaW1lcik7XHJcblx0XHRcdFx0ZGVsZXRlIHRoaXMuX2NsZWFyRm9jdXNUaW1lcjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dGhpcy5fb25Ub3VjaE5vZGUobm9kZSk7XHJcblxyXG5cdFx0XHRpZihub2RlID09IHRoaXMuY3VyTm9kZSl7IHJldHVybjsgfVxyXG5cdFx0XHR0aGlzLnNldChcInByZXZOb2RlXCIsIHRoaXMuY3VyTm9kZSk7XHJcblx0XHRcdHRoaXMuc2V0KFwiY3VyTm9kZVwiLCBub2RlKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0X3NldFN0YWNrOiBmdW5jdGlvbigvKlN0cmluZ1tdKi8gbmV3U3RhY2ssIC8qU3RyaW5nKi8gYnkpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRUaGUgc3RhY2sgb2YgYWN0aXZlIHdpZGdldHMgaGFzIGNoYW5nZWQuICBTZW5kIG91dCBhcHByb3ByaWF0ZSBldmVudHMgYW5kIHJlY29yZHMgbmV3IHN0YWNrLlxyXG5cdFx0XHQvLyBuZXdTdGFjazpcclxuXHRcdFx0Ly9cdFx0YXJyYXkgb2Ygd2lkZ2V0IGlkJ3MsIHN0YXJ0aW5nIGZyb20gdGhlIHRvcCAob3V0ZXJtb3N0KSB3aWRnZXRcclxuXHRcdFx0Ly8gYnk6XHJcblx0XHRcdC8vXHRcdFwibW91c2VcIiBpZiB0aGUgZm9jdXMvdG91Y2ggd2FzIGNhdXNlZCBieSBhIG1vdXNlIGRvd24gZXZlbnRcclxuXHJcblx0XHRcdHZhciBvbGRTdGFjayA9IHRoaXMuYWN0aXZlU3RhY2ssIGxhc3RPbGRJZHggPSBvbGRTdGFjay5sZW5ndGggLSAxLCBsYXN0TmV3SWR4ID0gbmV3U3RhY2subGVuZ3RoIC0gMTtcclxuXHJcblx0XHRcdGlmKG5ld1N0YWNrW2xhc3ROZXdJZHhdID09IG9sZFN0YWNrW2xhc3RPbGRJZHhdKXtcclxuXHRcdFx0XHQvLyBubyBjaGFuZ2VzLCByZXR1cm4gbm93IHRvIGF2b2lkIHNwdXJpb3VzIG5vdGlmaWNhdGlvbnMgYWJvdXQgY2hhbmdlcyB0byBhY3RpdmVTdGFja1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dGhpcy5zZXQoXCJhY3RpdmVTdGFja1wiLCBuZXdTdGFjayk7XHJcblxyXG5cdFx0XHR2YXIgd2lkZ2V0LCBpO1xyXG5cclxuXHRcdFx0Ly8gZm9yIGFsbCBlbGVtZW50cyB0aGF0IGhhdmUgZ29uZSBvdXQgb2YgZm9jdXMsIHNldCBmb2N1c2VkPWZhbHNlXHJcblx0XHRcdGZvcihpID0gbGFzdE9sZElkeDsgaSA+PSAwICYmIG9sZFN0YWNrW2ldICE9IG5ld1N0YWNrW2ldOyBpLS0pe1xyXG5cdFx0XHRcdHdpZGdldCA9IHJlZ2lzdHJ5LmJ5SWQob2xkU3RhY2tbaV0pO1xyXG5cdFx0XHRcdGlmKHdpZGdldCl7XHJcblx0XHRcdFx0XHR3aWRnZXQuX2hhc0JlZW5CbHVycmVkID0gdHJ1ZTtcdFx0Ly8gVE9ETzogdXNlZCBieSBmb3JtIHdpZGdldHMsIHNob3VsZCBiZSBtb3ZlZCB0aGVyZVxyXG5cdFx0XHRcdFx0d2lkZ2V0LnNldChcImZvY3VzZWRcIiwgZmFsc2UpO1xyXG5cdFx0XHRcdFx0aWYod2lkZ2V0Ll9mb2N1c01hbmFnZXIgPT0gdGhpcyl7XHJcblx0XHRcdFx0XHRcdHdpZGdldC5fb25CbHVyKGJ5KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHRoaXMuZW1pdChcIndpZGdldC1ibHVyXCIsIHdpZGdldCwgYnkpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gZm9yIGFsbCBlbGVtZW50IHRoYXQgaGF2ZSBjb21lIGludG8gZm9jdXMsIHNldCBmb2N1c2VkPXRydWVcclxuXHRcdFx0Zm9yKGkrKzsgaSA8PSBsYXN0TmV3SWR4OyBpKyspe1xyXG5cdFx0XHRcdHdpZGdldCA9IHJlZ2lzdHJ5LmJ5SWQobmV3U3RhY2tbaV0pO1xyXG5cdFx0XHRcdGlmKHdpZGdldCl7XHJcblx0XHRcdFx0XHR3aWRnZXQuc2V0KFwiZm9jdXNlZFwiLCB0cnVlKTtcclxuXHRcdFx0XHRcdGlmKHdpZGdldC5fZm9jdXNNYW5hZ2VyID09IHRoaXMpe1xyXG5cdFx0XHRcdFx0XHR3aWRnZXQuX29uRm9jdXMoYnkpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0dGhpcy5lbWl0KFwid2lkZ2V0LWZvY3VzXCIsIHdpZGdldCwgYnkpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHJcblx0XHRmb2N1czogZnVuY3Rpb24obm9kZSl7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdEZvY3VzIHRoZSBzcGVjaWZpZWQgbm9kZSwgc3VwcHJlc3NpbmcgZXJyb3JzIGlmIHRoZXkgb2NjdXJcclxuXHRcdFx0aWYobm9kZSl7XHJcblx0XHRcdFx0dHJ5eyBub2RlLmZvY3VzKCk7IH1jYXRjaChlKXsvKnF1aWV0Ki99XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0dmFyIHNpbmdsZXRvbiA9IG5ldyBGb2N1c01hbmFnZXIoKTtcclxuXHJcblx0Ly8gcmVnaXN0ZXIgdG9wIHdpbmRvdyBhbmQgYWxsIHRoZSBpZnJhbWVzIGl0IGNvbnRhaW5zXHJcblx0ZG9tUmVhZHkoZnVuY3Rpb24oKXtcclxuXHRcdHZhciBoYW5kbGUgPSBzaW5nbGV0b24ucmVnaXN0ZXJXaW4od2luVXRpbHMuZ2V0KGRvY3VtZW50KSk7XHJcblx0XHRpZihoYXMoXCJpZVwiKSl7XHJcblx0XHRcdG9uKHdpbmRvdywgXCJ1bmxvYWRcIiwgZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRpZihoYW5kbGUpe1x0Ly8gYmVjYXVzZSB0aGlzIGdldHMgY2FsbGVkIHR3aWNlIHdoZW4gZG9oLnJvYm90IGlzIHJ1bm5pbmdcclxuXHRcdFx0XHRcdGhhbmRsZS5yZW1vdmUoKTtcclxuXHRcdFx0XHRcdGhhbmRsZSA9IG51bGw7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblx0Ly8gU2V0dXAgZGlqaXQuZm9jdXMgYXMgYSBwb2ludGVyIHRvIHRoZSBzaW5nbGV0b24gYnV0IGFsc28gKGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSlcclxuXHQvLyBhcyBhIGZ1bmN0aW9uIHRvIHNldCBmb2N1cy4gICBSZW1vdmUgZm9yIDIuMC5cclxuXHRkaWppdC5mb2N1cyA9IGZ1bmN0aW9uKG5vZGUpe1xyXG5cdFx0c2luZ2xldG9uLmZvY3VzKG5vZGUpO1x0Ly8gaW5kaXJlY3Rpb24gaGVyZSBhbGxvd3MgZGlqaXQvX2Jhc2UvZm9jdXMuanMgdG8gb3ZlcnJpZGUgYmVoYXZpb3JcclxuXHR9O1xyXG5cdGZvcih2YXIgYXR0ciBpbiBzaW5nbGV0b24pe1xyXG5cdFx0aWYoIS9eXy8udGVzdChhdHRyKSl7XHJcblx0XHRcdGRpaml0LmZvY3VzW2F0dHJdID0gdHlwZW9mIHNpbmdsZXRvblthdHRyXSA9PSBcImZ1bmN0aW9uXCIgPyBsYW5nLmhpdGNoKHNpbmdsZXRvbiwgYXR0cikgOiBzaW5nbGV0b25bYXR0cl07XHJcblx0XHR9XHJcblx0fVxyXG5cdHNpbmdsZXRvbi53YXRjaChmdW5jdGlvbihhdHRyLCBvbGRWYWwsIG5ld1ZhbCl7XHJcblx0XHRkaWppdC5mb2N1c1thdHRyXSA9IG5ld1ZhbDtcclxuXHR9KTtcclxuXHJcblx0cmV0dXJuIHNpbmdsZXRvbjtcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dijit/focus.js\n");

/***/ }),

/***/ "./node_modules/dijit/hccss.js":
/*!*************************************!*\
  !*** ./node_modules/dijit/hccss.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/dom-class */ \"./node_modules/dojo/dom-class.js\"), __webpack_require__(/*! dojo/hccss */ \"./node_modules/dojo/hccss.js\"), __webpack_require__(/*! dojo/domReady */ \"./node_modules/dojo/domReady.js\"), __webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(domClass, has, domReady, win){\r\n\r\n\t// module:\r\n\t//\t\tdijit/hccss\r\n\r\n\t/*=====\r\n\treturn function(){\r\n\t\t// summary:\r\n\t\t//\t\tTest if computer is in high contrast mode, and sets `dijit_a11y` flag on `<body>` if it is.\r\n\t\t//\t\tDeprecated, use ``dojo/hccss`` instead.\r\n\t};\r\n\t=====*/\r\n\r\n\tdomReady(function(){\r\n\t\tif(has(\"highcontrast\")){\r\n\t\t\tdomClass.add(win.body(), \"dijit_a11y\");\r\n\t\t}\r\n\t});\r\n\r\n\treturn has;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvaGNjc3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGlqaXQvaGNjc3MuanM/Mjk0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJkZWZpbmUoW1wiZG9qby9kb20tY2xhc3NcIiwgXCJkb2pvL2hjY3NzXCIsIFwiZG9qby9kb21SZWFkeVwiLCBcImRvam8vX2Jhc2Uvd2luZG93XCJdLCBmdW5jdGlvbihkb21DbGFzcywgaGFzLCBkb21SZWFkeSwgd2luKXtcclxuXHJcblx0Ly8gbW9kdWxlOlxyXG5cdC8vXHRcdGRpaml0L2hjY3NzXHJcblxyXG5cdC8qPT09PT1cclxuXHRyZXR1cm4gZnVuY3Rpb24oKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRUZXN0IGlmIGNvbXB1dGVyIGlzIGluIGhpZ2ggY29udHJhc3QgbW9kZSwgYW5kIHNldHMgYGRpaml0X2ExMXlgIGZsYWcgb24gYDxib2R5PmAgaWYgaXQgaXMuXHJcblx0XHQvL1x0XHREZXByZWNhdGVkLCB1c2UgYGBkb2pvL2hjY3NzYGAgaW5zdGVhZC5cclxuXHR9O1xyXG5cdD09PT09Ki9cclxuXHJcblx0ZG9tUmVhZHkoZnVuY3Rpb24oKXtcclxuXHRcdGlmKGhhcyhcImhpZ2hjb250cmFzdFwiKSl7XHJcblx0XHRcdGRvbUNsYXNzLmFkZCh3aW4uYm9keSgpLCBcImRpaml0X2ExMXlcIik7XHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdHJldHVybiBoYXM7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dijit/hccss.js\n");

/***/ }),

/***/ "./node_modules/dijit/main.js":
/*!************************************!*\
  !*** ./node_modules/dijit/main.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo){\r\n\t// module:\r\n\t//\t\tdijit/main\r\n\r\n/*=====\r\nreturn {\r\n\t// summary:\r\n\t//\t\tThe dijit package main module.\r\n\t//\t\tDeprecated.   Users should access individual modules (ex: dijit/registry) directly.\r\n};\r\n=====*/\r\n\r\n\treturn dojo.dijit;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGlqaXQvbWFpbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kaWppdC9tYWluLmpzP2IwNmMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcclxuXHRcImRvam8vX2Jhc2Uva2VybmVsXCJcclxuXSwgZnVuY3Rpb24oZG9qbyl7XHJcblx0Ly8gbW9kdWxlOlxyXG5cdC8vXHRcdGRpaml0L21haW5cclxuXHJcbi8qPT09PT1cclxucmV0dXJuIHtcclxuXHQvLyBzdW1tYXJ5OlxyXG5cdC8vXHRcdFRoZSBkaWppdCBwYWNrYWdlIG1haW4gbW9kdWxlLlxyXG5cdC8vXHRcdERlcHJlY2F0ZWQuICAgVXNlcnMgc2hvdWxkIGFjY2VzcyBpbmRpdmlkdWFsIG1vZHVsZXMgKGV4OiBkaWppdC9yZWdpc3RyeSkgZGlyZWN0bHkuXHJcbn07XHJcbj09PT09Ki9cclxuXHJcblx0cmV0dXJuIGRvam8uZGlqaXQ7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dijit/main.js\n");

/***/ }),

/***/ "./node_modules/dijit/place.js":
/*!*************************************!*\
  !*** ./node_modules/dijit/place.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach array.map array.some\r\n\t__webpack_require__(/*! dojo/dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), // domGeometry.position\r\n\t__webpack_require__(/*! dojo/dom-style */ \"./node_modules/dojo/dom-style.js\"), // domStyle.getComputedStyle\r\n\t__webpack_require__(/*! dojo/_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), // kernel.deprecated\r\n\t__webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), // win.body\r\n\t__webpack_require__(/*! ./Viewport */ \"./node_modules/dijit/Viewport.js\"), // getEffectiveBox\r\n\t__webpack_require__(/*! ./main */ \"./node_modules/dijit/main.js\")\t// dijit (defining dijit.place to match API doc)\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, domGeometry, domStyle, kernel, win, Viewport, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/place\r\n\r\n\r\n\tfunction _place(/*DomNode*/ node, choices, layoutNode, aroundNodeCoords){\r\n\t\t// summary:\r\n\t\t//\t\tGiven a list of spots to put node, put it at the first spot where it fits,\r\n\t\t//\t\tof if it doesn't fit anywhere then the place with the least overflow\r\n\t\t// choices: Array\r\n\t\t//\t\tArray of elements like: {corner: 'TL', pos: {x: 10, y: 20} }\r\n\t\t//\t\tAbove example says to put the top-left corner of the node at (10,20)\r\n\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner, size)\r\n\t\t//\t\tfor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t//\t\tbased on their orientation relative to the parent.\t This adjusts the popup based on orientation.\r\n\t\t//\t\tIt also passes in the available size for the popup, which is useful for tooltips to\r\n\t\t//\t\ttell them that their width is limited to a certain amount.\t layoutNode() may return a value expressing\r\n\t\t//\t\thow much the popup had to be modified to fit into the available space.\t This is used to determine\r\n\t\t//\t\twhat the best placement is.\r\n\t\t// aroundNodeCoords: Object\r\n\t\t//\t\tSize of aroundNode, ex: {w: 200, h: 50}\r\n\r\n\t\t// get {x: 10, y: 10, w: 100, h:100} type obj representing position of\r\n\t\t// viewport over document\r\n\t\tvar view = Viewport.getEffectiveBox(node.ownerDocument);\r\n\r\n\t\t// This won't work if the node is inside a <div style=\"position: relative\">,\r\n\t\t// so reattach it to <body>.\t (Otherwise, the positioning will be wrong\r\n\t\t// and also it might get cutoff.)\r\n\t\tif(!node.parentNode || String(node.parentNode.tagName).toLowerCase() != \"body\"){\r\n\t\t\twin.body(node.ownerDocument).appendChild(node);\r\n\t\t}\r\n\r\n\t\tvar best = null;\r\n\t\tarray.some(choices, function(choice){\r\n\t\t\tvar corner = choice.corner;\r\n\t\t\tvar pos = choice.pos;\r\n\t\t\tvar overflow = 0;\r\n\r\n\t\t\t// calculate amount of space available given specified position of node\r\n\t\t\tvar spaceAvailable = {\r\n\t\t\t\tw: {\r\n\t\t\t\t\t'L': view.l + view.w - pos.x,\r\n\t\t\t\t\t'R': pos.x - view.l,\r\n\t\t\t\t\t'M': view.w\r\n\t\t\t\t}[corner.charAt(1)],\r\n\t\t\t\th: {\r\n\t\t\t\t\t'T': view.t + view.h - pos.y,\r\n\t\t\t\t\t'B': pos.y - view.t,\r\n\t\t\t\t\t'M': view.h\r\n\t\t\t\t}[corner.charAt(0)]\r\n\t\t\t};\r\n\r\n\t\t\t// Clear left/right position settings set earlier so they don't interfere with calculations,\r\n\t\t\t// specifically when layoutNode() (a.k.a. Tooltip.orient()) measures natural width of Tooltip\r\n\t\t\tvar s = node.style;\r\n\t\t\ts.left = s.right = \"auto\";\r\n\r\n\t\t\t// configure node to be displayed in given position relative to button\r\n\t\t\t// (need to do this in order to get an accurate size for the node, because\r\n\t\t\t// a tooltip's size changes based on position, due to triangle)\r\n\t\t\tif(layoutNode){\r\n\t\t\t\tvar res = layoutNode(node, choice.aroundCorner, corner, spaceAvailable, aroundNodeCoords);\r\n\t\t\t\toverflow = typeof res == \"undefined\" ? 0 : res;\r\n\t\t\t}\r\n\r\n\t\t\t// get node's size\r\n\t\t\tvar style = node.style;\r\n\t\t\tvar oldDisplay = style.display;\r\n\t\t\tvar oldVis = style.visibility;\r\n\t\t\tif(style.display == \"none\"){\r\n\t\t\t\tstyle.visibility = \"hidden\";\r\n\t\t\t\tstyle.display = \"\";\r\n\t\t\t}\r\n\t\t\tvar bb = domGeometry.position(node);\r\n\t\t\tstyle.display = oldDisplay;\r\n\t\t\tstyle.visibility = oldVis;\r\n\r\n\t\t\t// coordinates and size of node with specified corner placed at pos,\r\n\t\t\t// and clipped by viewport\r\n\t\t\tvar\r\n\t\t\t\tstartXpos = {\r\n\t\t\t\t\t'L': pos.x,\r\n\t\t\t\t\t'R': pos.x - bb.w,\r\n\t\t\t\t\t'M': Math.max(view.l, Math.min(view.l + view.w, pos.x + (bb.w >> 1)) - bb.w) // M orientation is more flexible\r\n\t\t\t\t}[corner.charAt(1)],\r\n\t\t\t\tstartYpos = {\r\n\t\t\t\t\t'T': pos.y,\r\n\t\t\t\t\t'B': pos.y - bb.h,\r\n\t\t\t\t\t'M': Math.max(view.t, Math.min(view.t + view.h, pos.y + (bb.h >> 1)) - bb.h)\r\n\t\t\t\t}[corner.charAt(0)],\r\n\t\t\t\tstartX = Math.max(view.l, startXpos),\r\n\t\t\t\tstartY = Math.max(view.t, startYpos),\r\n\t\t\t\tendX = Math.min(view.l + view.w, startXpos + bb.w),\r\n\t\t\t\tendY = Math.min(view.t + view.h, startYpos + bb.h),\r\n\t\t\t\twidth = endX - startX,\r\n\t\t\t\theight = endY - startY;\r\n\r\n\t\t\toverflow += (bb.w - width) + (bb.h - height);\r\n\r\n\t\t\tif(best == null || overflow < best.overflow){\r\n\t\t\t\tbest = {\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\taroundCorner: choice.aroundCorner,\r\n\t\t\t\t\tx: startX,\r\n\t\t\t\t\ty: startY,\r\n\t\t\t\t\tw: width,\r\n\t\t\t\t\th: height,\r\n\t\t\t\t\toverflow: overflow,\r\n\t\t\t\t\tspaceAvailable: spaceAvailable\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn !overflow;\r\n\t\t});\r\n\r\n\t\t// In case the best position is not the last one we checked, need to call\r\n\t\t// layoutNode() again.\r\n\t\tif(best.overflow && layoutNode){\r\n\t\t\tlayoutNode(node, best.aroundCorner, best.corner, best.spaceAvailable, aroundNodeCoords);\r\n\t\t}\r\n\r\n\t\t// And then position the node.  Do this last, after the layoutNode() above\r\n\t\t// has sized the node, due to browser quirks when the viewport is scrolled\r\n\t\t// (specifically that a Tooltip will shrink to fit as though the window was\r\n\t\t// scrolled to the left).\r\n\r\n\t\tvar top = best.y,\r\n\t\t\tside = best.x,\r\n\t\t\tbody = win.body(node.ownerDocument);\r\n\r\n\t\tif(/relative|absolute/.test(domStyle.get(body, \"position\"))){\r\n\t\t\t// compensate for margin on <body>, see #16148\r\n\t\t\ttop -= domStyle.get(body, \"marginTop\");\r\n\t\t\tside -= domStyle.get(body, \"marginLeft\");\r\n\t\t}\r\n\r\n\t\tvar s = node.style;\r\n\t\ts.top = top + \"px\";\r\n\t\ts.left = side + \"px\";\r\n\t\ts.right = \"auto\";\t// needed for FF or else tooltip goes to far left\r\n\r\n\t\treturn best;\r\n\t}\r\n\r\n\tvar reverse = {\r\n\t\t// Map from corner to kitty-corner\r\n\t\t\"TL\": \"BR\",\r\n\t\t\"TR\": \"BL\",\r\n\t\t\"BL\": \"TR\",\r\n\t\t\"BR\": \"TL\"\r\n\t};\r\n\r\n\tvar place = {\r\n\t\t// summary:\r\n\t\t//\t\tCode to place a DOMNode relative to another DOMNode.\r\n\t\t//\t\tLoad using require([\"dijit/place\"], function(place){ ... }).\r\n\r\n\t\tat: function(node, pos, corners, padding, layoutNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPositions node kitty-corner to the rectangle centered at (pos.x, pos.y) with width and height of\r\n\t\t\t//\t\tpadding.x * 2 and padding.y * 2, or zero if padding not specified.  Picks first corner in corners[]\r\n\t\t\t//\t\twhere node is fully visible, or the corner where it's most visible.\r\n\t\t\t//\r\n\t\t\t//\t\tNode is assumed to be absolutely or relatively positioned.\r\n\t\t\t// node: DOMNode\r\n\t\t\t//\t\tThe node to position\r\n\t\t\t// pos: dijit/place.__Position\r\n\t\t\t//\t\tObject like {x: 10, y: 20}\r\n\t\t\t// corners: String[]\r\n\t\t\t//\t\tArray of Strings representing order to try corners of the node in, like [\"TR\", \"BL\"].\r\n\t\t\t//\t\tPossible values are:\r\n\t\t\t//\r\n\t\t\t//\t\t- \"BL\" - bottom left\r\n\t\t\t//\t\t- \"BR\" - bottom right\r\n\t\t\t//\t\t- \"TL\" - top left\r\n\t\t\t//\t\t- \"TR\" - top right\r\n\t\t\t// padding: dijit/place.__Position?\r\n\t\t\t//\t\tOptional param to set padding, to put some buffer around the element you want to position.\r\n\t\t\t//\t\tDefaults to zero.\r\n\t\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n\t\t\t//\t\tFor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t\t//\t\tbased on their orientation relative to the parent.  This adjusts the popup based on orientation.\r\n\t\t\t// example:\r\n\t\t\t//\t\tTry to place node's top right corner at (10,20).\r\n\t\t\t//\t\tIf that makes node go (partially) off screen, then try placing\r\n\t\t\t//\t\tbottom left corner at (10,20).\r\n\t\t\t//\t|\tplace(node, {x: 10, y: 20}, [\"TR\", \"BL\"])\r\n\t\t\tvar choices = array.map(corners, function(corner){\r\n\t\t\t\tvar c = {\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\taroundCorner: reverse[corner],\t// so TooltipDialog.orient() gets aroundCorner argument set\r\n\t\t\t\t\tpos: {x: pos.x,y: pos.y}\r\n\t\t\t\t};\r\n\t\t\t\tif(padding){\r\n\t\t\t\t\tc.pos.x += corner.charAt(1) == 'L' ? padding.x : -padding.x;\r\n\t\t\t\t\tc.pos.y += corner.charAt(0) == 'T' ? padding.y : -padding.y;\r\n\t\t\t\t}\r\n\t\t\t\treturn c;\r\n\t\t\t});\r\n\r\n\t\t\treturn _place(node, choices, layoutNode);\r\n\t\t},\r\n\r\n\t\taround: function(\r\n\t\t\t/*DomNode*/\t\tnode,\r\n\t\t\t/*DomNode|dijit/place.__Rectangle*/ anchor,\r\n\t\t\t/*String[]*/\tpositions,\r\n\t\t\t/*Boolean*/\t\tleftToRight,\r\n\t\t\t/*Function?*/\tlayoutNode){\r\n\r\n\t\t\t// summary:\r\n\t\t\t//\t\tPosition node adjacent or kitty-corner to anchor\r\n\t\t\t//\t\tsuch that it's fully visible in viewport.\r\n\t\t\t// description:\r\n\t\t\t//\t\tPlace node such that corner of node touches a corner of\r\n\t\t\t//\t\taroundNode, and that node is fully visible.\r\n\t\t\t// anchor:\r\n\t\t\t//\t\tEither a DOMNode or a rectangle (object with x, y, width, height).\r\n\t\t\t// positions:\r\n\t\t\t//\t\tOrdered list of positions to try matching up.\r\n\t\t\t//\r\n\t\t\t//\t\t- before: places drop down to the left of the anchor node/widget, or to the right in the case\r\n\t\t\t//\t\t\tof RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n\t\t\t//\t\t\twith the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n\t\t\t//\t\t- after: places drop down to the right of the anchor node/widget, or to the left in the case\r\n\t\t\t//\t\t\tof RTL scripts like Hebrew and Arabic; aligns either the top of the drop down\r\n\t\t\t//\t\t\twith the top of the anchor, or the bottom of the drop down with bottom of the anchor.\r\n\t\t\t//\t\t- before-centered: centers drop down to the left of the anchor node/widget, or to the right\r\n\t\t\t//\t\t\tin the case of RTL scripts like Hebrew and Arabic\r\n\t\t\t//\t\t- after-centered: centers drop down to the right of the anchor node/widget, or to the left\r\n\t\t\t//\t\t\tin the case of RTL scripts like Hebrew and Arabic\r\n\t\t\t//\t\t- above-centered: drop down is centered above anchor node\r\n\t\t\t//\t\t- above: drop down goes above anchor node, left sides aligned\r\n\t\t\t//\t\t- above-alt: drop down goes above anchor node, right sides aligned\r\n\t\t\t//\t\t- below-centered: drop down is centered above anchor node\r\n\t\t\t//\t\t- below: drop down goes below anchor node\r\n\t\t\t//\t\t- below-alt: drop down goes below anchor node, right sides aligned\r\n\t\t\t// layoutNode: Function(node, aroundNodeCorner, nodeCorner)\r\n\t\t\t//\t\tFor things like tooltip, they are displayed differently (and have different dimensions)\r\n\t\t\t//\t\tbased on their orientation relative to the parent.\t This adjusts the popup based on orientation.\r\n\t\t\t// leftToRight:\r\n\t\t\t//\t\tTrue if widget is LTR, false if widget is RTL.   Affects the behavior of \"above\" and \"below\"\r\n\t\t\t//\t\tpositions slightly.\r\n\t\t\t// example:\r\n\t\t\t//\t|\tplaceAroundNode(node, aroundNode, ['below', 'above-alt']);\r\n\t\t\t//\t\tThis will try to position node such that node's top-left corner is at the same position\r\n\t\t\t//\t\tas the bottom left corner of the aroundNode (ie, put node below\r\n\t\t\t//\t\taroundNode, with left edges aligned).\tIf that fails it will try to put\r\n\t\t\t//\t\tthe bottom-right corner of node where the top right corner of aroundNode is\r\n\t\t\t//\t\t(ie, put node above aroundNode, with right edges aligned)\r\n\t\t\t//\r\n\r\n\t\t\t// If around is a DOMNode (or DOMNode id), convert to coordinates.\r\n\t\t\tvar aroundNodePos;\r\n\t\t\tif(typeof anchor == \"string\" || \"offsetWidth\" in anchor || \"ownerSVGElement\" in anchor){\r\n\t\t\t\taroundNodePos = domGeometry.position(anchor, true);\r\n\r\n\t\t\t\t// For above and below dropdowns, subtract width of border so that popup and aroundNode borders\r\n\t\t\t\t// overlap, preventing a double-border effect.  Unfortunately, difficult to measure the border\r\n\t\t\t\t// width of either anchor or popup because in both cases the border may be on an inner node.\r\n\t\t\t\tif(/^(above|below)/.test(positions[0])){\r\n\t\t\t\t\tvar anchorBorder = domGeometry.getBorderExtents(anchor),\r\n\t\t\t\t\t\tanchorChildBorder = anchor.firstChild ? domGeometry.getBorderExtents(anchor.firstChild) : {t:0,l:0,b:0,r:0},\r\n\t\t\t\t\t\tnodeBorder =  domGeometry.getBorderExtents(node),\r\n\t\t\t\t\t\tnodeChildBorder = node.firstChild ? domGeometry.getBorderExtents(node.firstChild) : {t:0,l:0,b:0,r:0};\r\n\t\t\t\t\taroundNodePos.y += Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t + nodeChildBorder.t);\r\n\t\t\t\t\taroundNodePos.h -=  Math.min(anchorBorder.t + anchorChildBorder.t, nodeBorder.t+ nodeChildBorder.t) +\r\n\t\t\t\t\t\tMath.min(anchorBorder.b + anchorChildBorder.b, nodeBorder.b + nodeChildBorder.b);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\taroundNodePos = anchor;\r\n\t\t\t}\r\n\r\n\t\t\t// Compute position and size of visible part of anchor (it may be partially hidden by ancestor nodes w/scrollbars)\r\n\t\t\tif(anchor.parentNode){\r\n\t\t\t\t// ignore nodes between position:relative and position:absolute\r\n\t\t\t\tvar sawPosAbsolute = domStyle.getComputedStyle(anchor).position == \"absolute\";\r\n\t\t\t\tvar parent = anchor.parentNode;\r\n\t\t\t\twhile(parent && parent.nodeType == 1 && parent.nodeName != \"BODY\"){  //ignoring the body will help performance\r\n\t\t\t\t\tvar parentPos = domGeometry.position(parent, true),\r\n\t\t\t\t\t\tpcs = domStyle.getComputedStyle(parent);\r\n\t\t\t\t\tif(/relative|absolute/.test(pcs.position)){\r\n\t\t\t\t\t\tsawPosAbsolute = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!sawPosAbsolute && /hidden|auto|scroll/.test(pcs.overflow)){\r\n\t\t\t\t\t\tvar bottomYCoord = Math.min(aroundNodePos.y + aroundNodePos.h, parentPos.y + parentPos.h);\r\n\t\t\t\t\t\tvar rightXCoord = Math.min(aroundNodePos.x + aroundNodePos.w, parentPos.x + parentPos.w);\r\n\t\t\t\t\t\taroundNodePos.x = Math.max(aroundNodePos.x, parentPos.x);\r\n\t\t\t\t\t\taroundNodePos.y = Math.max(aroundNodePos.y, parentPos.y);\r\n\t\t\t\t\t\taroundNodePos.h = bottomYCoord - aroundNodePos.y;\r\n\t\t\t\t\t\taroundNodePos.w = rightXCoord - aroundNodePos.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(pcs.position == \"absolute\"){\r\n\t\t\t\t\t\tsawPosAbsolute = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparent = parent.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar x = aroundNodePos.x,\r\n\t\t\t\ty = aroundNodePos.y,\r\n\t\t\t\twidth = \"w\" in aroundNodePos ? aroundNodePos.w : (aroundNodePos.w = aroundNodePos.width),\r\n\t\t\t\theight = \"h\" in aroundNodePos ? aroundNodePos.h : (kernel.deprecated(\"place.around: dijit/place.__Rectangle: { x:\"+x+\", y:\"+y+\", height:\"+aroundNodePos.height+\", width:\"+width+\" } has been deprecated.  Please use { x:\"+x+\", y:\"+y+\", h:\"+aroundNodePos.height+\", w:\"+width+\" }\", \"\", \"2.0\"), aroundNodePos.h = aroundNodePos.height);\r\n\r\n\t\t\t// Convert positions arguments into choices argument for _place()\r\n\t\t\tvar choices = [];\r\n\t\t\tfunction push(aroundCorner, corner){\r\n\t\t\t\tchoices.push({\r\n\t\t\t\t\taroundCorner: aroundCorner,\r\n\t\t\t\t\tcorner: corner,\r\n\t\t\t\t\tpos: {\r\n\t\t\t\t\t\tx: {\r\n\t\t\t\t\t\t\t'L': x,\r\n\t\t\t\t\t\t\t'R': x + width,\r\n\t\t\t\t\t\t\t'M': x + (width >> 1)\r\n\t\t\t\t\t\t}[aroundCorner.charAt(1)],\r\n\t\t\t\t\t\ty: {\r\n\t\t\t\t\t\t\t'T': y,\r\n\t\t\t\t\t\t\t'B': y + height,\r\n\t\t\t\t\t\t\t'M': y + (height >> 1)\r\n\t\t\t\t\t\t}[aroundCorner.charAt(0)]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tarray.forEach(positions, function(pos){\r\n\t\t\t\tvar ltr =  leftToRight;\r\n\t\t\t\tswitch(pos){\r\n\t\t\t\t\tcase \"above-centered\":\r\n\t\t\t\t\t\tpush(\"TM\", \"BM\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"below-centered\":\r\n\t\t\t\t\t\tpush(\"BM\", \"TM\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"after-centered\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"before-centered\":\r\n\t\t\t\t\t\tpush(ltr ? \"ML\" : \"MR\", ltr ? \"MR\" : \"ML\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"after\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"before\":\r\n\t\t\t\t\t\tpush(ltr ? \"TL\" : \"TR\", ltr ? \"TR\" : \"TL\");\r\n\t\t\t\t\t\tpush(ltr ? \"BL\" : \"BR\", ltr ? \"BR\" : \"BL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"below-alt\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"below\":\r\n\t\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\t\tpush(ltr ? \"BL\" : \"BR\", ltr ? \"TL\" : \"TR\");\r\n\t\t\t\t\t\tpush(ltr ? \"BR\" : \"BL\", ltr ? \"TR\" : \"TL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"above-alt\":\r\n\t\t\t\t\t\tltr = !ltr;\r\n\t\t\t\t\t\t// fall through\r\n\t\t\t\t\tcase \"above\":\r\n\t\t\t\t\t\t// first try to align left borders, next try to align right borders (or reverse for RTL mode)\r\n\t\t\t\t\t\tpush(ltr ? \"TL\" : \"TR\", ltr ? \"BL\" : \"BR\");\r\n\t\t\t\t\t\tpush(ltr ? \"TR\" : \"TL\", ltr ? \"BR\" : \"BL\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// To assist dijit/_base/place, accept arguments of type {aroundCorner: \"BL\", corner: \"TL\"}.\r\n\t\t\t\t\t\t// Not meant to be used directly.  Remove for 2.0.\r\n\t\t\t\t\t\tpush(pos.aroundCorner, pos.corner);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar position = _place(node, choices, layoutNode, {w: width, h: height});\r\n\t\t\tposition.aroundNodePos = aroundNodePos;\r\n\r\n\t\t\treturn position;\r\n\t\t}\r\n\t};\r\n\r\n\t/*=====\r\n\tplace.__Position = {\r\n\t\t// x: Integer\r\n\t\t//\t\thorizontal coordinate in pixels, relative to document body\r\n\t\t// y: Integer\r\n\t\t//\t\tvertical coordinate in pixels, relative to document body\r\n\t};\r\n\tplace.__Rectangle = {\r\n\t\t// x: Integer\r\n\t\t//\t\thorizontal offset in pixels, relative to document body\r\n\t\t// y: Integer\r\n\t\t//\t\tvertical offset in pixels, relative to document body\r\n\t\t// w: Integer\r\n\t\t//\t\twidth in pixels.   Can also be specified as \"width\" for backwards-compatibility.\r\n\t\t// h: Integer\r\n\t\t//\t\theight in pixels.   Can also be specified as \"height\" for backwards-compatibility.\r\n\t};\r\n\t=====*/\r\n\r\n\treturn dijit.place = place;\t// setting dijit.place for back-compat, remove for 2.0\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/place.js\n");

/***/ }),

/***/ "./node_modules/dijit/registry.js":
/*!****************************************!*\
  !*** ./node_modules/dijit/registry.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! dojo/_base/array */ \"./node_modules/dojo/_base/array.js\"), // array.forEach array.map\r\n\t__webpack_require__(/*! dojo/_base/window */ \"./node_modules/dojo/_base/window.js\"), // win.body\r\n\t__webpack_require__(/*! ./main */ \"./node_modules/dijit/main.js\")\t// dijit._scopeName\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(array, win, dijit){\r\n\r\n\t// module:\r\n\t//\t\tdijit/registry\r\n\r\n\tvar _widgetTypeCtr = {}, hash = {};\r\n\r\n\tvar registry =  {\r\n\t\t// summary:\r\n\t\t//\t\tRegistry of existing widget on page, plus some utility methods.\r\n\r\n\t\t// length: Number\r\n\t\t//\t\tNumber of registered widgets\r\n\t\tlength: 0,\r\n\r\n\t\tadd: function(widget){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tAdd a widget to the registry. If a duplicate ID is detected, a error is thrown.\r\n\t\t\t// widget: dijit/_WidgetBase\r\n\t\t\t//\t\tAny dijit/_WidgetBase subclass.\r\n\t\t\tif(hash[widget.id]){\r\n\t\t\t\tthrow new Error(\"Tried to register widget with id==\" + widget.id + \" but that id is already registered\");\r\n\t\t\t}\r\n\t\t\thash[widget.id] = widget;\r\n\t\t\tthis.length++;\r\n\t\t},\r\n\r\n\t\tremove: function(/*String*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRemove a widget from the registry. Does not destroy the widget; simply\r\n\t\t\t//\t\tremoves the reference.\r\n\t\t\tif(hash[id]){\r\n\t\t\t\tdelete hash[id];\r\n\t\t\t\tthis.length--;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbyId: function(/*String|Widget*/ id){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tFind a widget by it's id.\r\n\t\t\t//\t\tIf passed a widget then just returns the widget.\r\n\t\t\treturn typeof id == \"string\" ? hash[id] : id;\t// dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\tbyNode: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the widget corresponding to the given DOMNode\r\n\t\t\treturn hash[node.getAttribute(\"widgetId\")]; // dijit/_WidgetBase\r\n\t\t},\r\n\r\n\t\ttoArray: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tConvert registry into a true Array\r\n\t\t\t//\r\n\t\t\t// example:\r\n\t\t\t//\t\tWork with the widget .domNodes in a real Array\r\n\t\t\t//\t\t|\tarray.map(registry.toArray(), function(w){ return w.domNode; });\r\n\r\n\t\t\tvar ar = [];\r\n\t\t\tfor(var id in hash){\r\n\t\t\t\tar.push(hash[id]);\r\n\t\t\t}\r\n\t\t\treturn ar;\t// dijit/_WidgetBase[]\r\n\t\t},\r\n\r\n\t\tgetUniqueId: function(/*String*/widgetType){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGenerates a unique id for a given widgetType\r\n\r\n\t\t\tvar id;\r\n\t\t\tdo{\r\n\t\t\t\tid = widgetType + \"_\" +\r\n\t\t\t\t\t(widgetType in _widgetTypeCtr ?\r\n\t\t\t\t\t\t++_widgetTypeCtr[widgetType] : _widgetTypeCtr[widgetType] = 0);\r\n\t\t\t}while(hash[id]);\r\n\t\t\treturn dijit._scopeName == \"dijit\" ? id : dijit._scopeName + \"_\" + id; // String\r\n\t\t},\r\n\r\n\t\tfindWidgets: function(root, skipNode){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tSearch subtree under root returning widgets found.\r\n\t\t\t//\t\tDoesn't search for nested widgets (ie, widgets inside other widgets).\r\n\t\t\t// root: DOMNode\r\n\t\t\t//\t\tNode to search under.\r\n\t\t\t// skipNode: DOMNode\r\n\t\t\t//\t\tIf specified, don't search beneath this node (usually containerNode).\r\n\r\n\t\t\tvar outAry = [];\r\n\r\n\t\t\tfunction getChildrenHelper(root){\r\n\t\t\t\tfor(var node = root.firstChild; node; node = node.nextSibling){\r\n\t\t\t\t\tif(node.nodeType == 1){\r\n\t\t\t\t\t\tvar widgetId = node.getAttribute(\"widgetId\");\r\n\t\t\t\t\t\tif(widgetId){\r\n\t\t\t\t\t\t\tvar widget = hash[widgetId];\r\n\t\t\t\t\t\t\tif(widget){\t// may be null on page w/multiple dojo's loaded\r\n\t\t\t\t\t\t\t\toutAry.push(widget);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(node !== skipNode){\r\n\t\t\t\t\t\t\tgetChildrenHelper(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgetChildrenHelper(root);\r\n\t\t\treturn outAry;\r\n\t\t},\r\n\r\n\t\t_destroyAll: function(){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCode to destroy all widgets and do other cleanup on page unload\r\n\r\n\t\t\t// Clean up focus manager lingering references to widgets and nodes\r\n\t\t\tdijit._curFocus = null;\r\n\t\t\tdijit._prevFocus = null;\r\n\t\t\tdijit._activeStack = [];\r\n\r\n\t\t\t// Destroy all the widgets, top down\r\n\t\t\tarray.forEach(registry.findWidgets(win.body()), function(widget){\r\n\t\t\t\t// Avoid double destroy of widgets like Menu that are attached to <body>\r\n\t\t\t\t// even though they are logically children of other widgets.\r\n\t\t\t\tif(!widget._destroyed){\r\n\t\t\t\t\tif(widget.destroyRecursive){\r\n\t\t\t\t\t\twidget.destroyRecursive();\r\n\t\t\t\t\t}else if(widget.destroy){\r\n\t\t\t\t\t\twidget.destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tgetEnclosingWidget: function(/*DOMNode*/ node){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the widget whose DOM tree contains the specified DOMNode, or null if\r\n\t\t\t//\t\tthe node is not contained within the DOM tree of any widget\r\n\t\t\twhile(node){\r\n\t\t\t\tvar id = node.nodeType == 1 && node.getAttribute(\"widgetId\");\r\n\t\t\t\tif(id){\r\n\t\t\t\t\treturn hash[id];\r\n\t\t\t\t}\r\n\t\t\t\tnode = node.parentNode;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\r\n\t\t// In case someone needs to access hash.\r\n\t\t// Actually, this is accessed from WidgetSet back-compatibility code\r\n\t\t_hash: hash\r\n\t};\r\n\r\n\tdijit.registry = registry;\r\n\r\n\treturn registry;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dijit/registry.js\n");

/***/ }),

/***/ "./node_modules/dojo-webpack-plugin/loaders/dojo/text/index.js!./node_modules/dijit/templates/Tooltip.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/dojo-webpack-plugin/loaders/dojo/text!./node_modules/dijit/templates/Tooltip.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"dijitTooltip dijitTooltipLeft\\\" id=\\\"dojoTooltip\\\" data-dojo-attach-event=\\\"mouseenter:onMouseEnter,mouseleave:onMouseLeave\\\"\\r\\n\\t><div class=\\\"dijitTooltipConnector\\\" data-dojo-attach-point=\\\"connectorNode\\\"></div\\r\\n\\t><div class=\\\"dijitTooltipContainer dijitTooltipContents\\\" data-dojo-attach-point=\\\"containerNode\\\" role='alert'></div\\r\\n></div>\\r\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby13ZWJwYWNrLXBsdWdpbi9sb2FkZXJzL2Rvam8vdGV4dC9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy9kaWppdC90ZW1wbGF0ZXMvVG9vbHRpcC5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rpaml0L3RlbXBsYXRlcy9Ub29sdGlwLmh0bWw/NDgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPGRpdiBjbGFzcz1cXFwiZGlqaXRUb29sdGlwIGRpaml0VG9vbHRpcExlZnRcXFwiIGlkPVxcXCJkb2pvVG9vbHRpcFxcXCIgZGF0YS1kb2pvLWF0dGFjaC1ldmVudD1cXFwibW91c2VlbnRlcjpvbk1vdXNlRW50ZXIsbW91c2VsZWF2ZTpvbk1vdXNlTGVhdmVcXFwiXFxyXFxuXFx0PjxkaXYgY2xhc3M9XFxcImRpaml0VG9vbHRpcENvbm5lY3RvclxcXCIgZGF0YS1kb2pvLWF0dGFjaC1wb2ludD1cXFwiY29ubmVjdG9yTm9kZVxcXCI+PC9kaXZcXHJcXG5cXHQ+PGRpdiBjbGFzcz1cXFwiZGlqaXRUb29sdGlwQ29udGFpbmVyIGRpaml0VG9vbHRpcENvbnRlbnRzXFxcIiBkYXRhLWRvam8tYXR0YWNoLXBvaW50PVxcXCJjb250YWluZXJOb2RlXFxcIiByb2xlPSdhbGVydCc+PC9kaXZcXHJcXG4+PC9kaXY+XFxyXFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojo-webpack-plugin/loaders/dojo/text/index.js!./node_modules/dijit/templates/Tooltip.html\n");

/***/ }),

/***/ "./node_modules/dojo/cache.js":
/*!************************************!*\
  !*** ./node_modules/dojo/cache.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! ./text */ \"./node_modules/dojo/text.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo){\r\n\t// module:\r\n\t//\t\tdojo/cache\r\n\r\n\t// dojo.cache is defined in dojo/text\r\n\treturn dojo.cache;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby9jYWNoZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pvL2NhY2hlLmpzPzNlMDYiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcIi4vX2Jhc2Uva2VybmVsXCIsIFwiLi90ZXh0XCJdLCBmdW5jdGlvbihkb2pvKXtcclxuXHQvLyBtb2R1bGU6XHJcblx0Ly9cdFx0ZG9qby9jYWNoZVxyXG5cclxuXHQvLyBkb2pvLmNhY2hlIGlzIGRlZmluZWQgaW4gZG9qby90ZXh0XHJcblx0cmV0dXJuIGRvam8uY2FjaGU7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dojo/cache.js\n");

/***/ }),

/***/ "./node_modules/dojo/hccss.js":
/*!************************************!*\
  !*** ./node_modules/dojo/hccss.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__.dj.c(module.i),\t\t\t// require, require.toUrl\r\n\t__webpack_require__(/*! ./_base/config */ \"./node_modules/dojo/_base/config.js\"), // config.blankGif\r\n\t__webpack_require__(/*! ./dom-class */ \"./node_modules/dojo/dom-class.js\"), // domClass.add\r\n\t__webpack_require__(/*! ./dom-style */ \"./node_modules/dojo/dom-style.js\"), // domStyle.getComputedStyle\r\n\t__webpack_require__(/*! ./has */ \"./node_modules/dojo/has.js\"),\r\n\t__webpack_require__(/*! ./domReady */ \"./node_modules/dojo/domReady.js\"),\r\n\t__webpack_require__(/*! ./_base/window */ \"./node_modules/dojo/_base/window.js\") // win.body\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require, config, domClass, domStyle, has, domReady, win){\r\n\r\n\t// module:\r\n\t//\t\tdojo/hccss\r\n\r\n\t/*=====\r\n\treturn function(){\r\n\t\t// summary:\r\n\t\t//\t\tTest if computer is in high contrast mode (i.e. if browser is not displaying background images).\r\n\t\t//\t\tDefines `has(\"highcontrast\")` and sets `dj_a11y` CSS class on `<body>` if machine is in high contrast mode.\r\n\t\t//\t\tReturns `has()` method;\r\n\t};\r\n\t=====*/\r\n\r\n\t// Has() test for when background images aren't displayed.  Don't call has(\"highcontrast\") before dojo/domReady!.\r\n\thas.add(\"highcontrast\", function(){\r\n\t\t// note: if multiple documents, doesn't matter which one we use\r\n\t\tvar div = win.doc.createElement(\"div\");\r\n\t\ttry{\r\n\t\t\tdiv.style.cssText = \"border: 1px solid; border-color:red green; position: absolute; height: 5px; top: -999px;\" +\r\n\t\t\t\t\"background-image: url(\\\"\" + (config.blankGif || require.toUrl(\"./resources/blank.gif\")) + \"\\\");\";\r\n\t\t\twin.body().appendChild(div);\r\n\r\n\t\t\tvar cs = domStyle.getComputedStyle(div),\r\n\t\t\t\tbkImg = cs.backgroundImage;\r\n\t\t\treturn cs.borderTopColor == cs.borderRightColor ||\r\n\t\t\t\t(bkImg && (bkImg == \"none\" || bkImg == \"url(invalid-url:)\" ));\r\n\t\t}catch(e){\r\n\t\t\tconsole.warn(\"hccss: exception detecting high-contrast mode, document is likely hidden: \" + e.toString());\r\n\t\t\treturn false;\r\n\t\t}finally{\r\n\t\t\tif(has(\"ie\") <= 8){\r\n\t\t\t\tdiv.outerHTML = \"\";\t\t// prevent mixed-content warning, see http://support.microsoft.com/kb/925014\r\n\t\t\t}else{\r\n\t\t\t\twin.body().removeChild(div);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tdomReady(function(){\r\n\t\tif(has(\"highcontrast\")){\r\n\t\t\tdomClass.add(win.body(), \"dj_a11y\");\r\n\t\t}\r\n\t});\r\n\r\n\treturn has;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby9oY2Nzcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pvL2hjY3NzLmpzPzQ0YWEiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcclxuXHRcInJlcXVpcmVcIixcdFx0XHQvLyByZXF1aXJlLCByZXF1aXJlLnRvVXJsXHJcblx0XCIuL19iYXNlL2NvbmZpZ1wiLCAvLyBjb25maWcuYmxhbmtHaWZcclxuXHRcIi4vZG9tLWNsYXNzXCIsIC8vIGRvbUNsYXNzLmFkZFxyXG5cdFwiLi9kb20tc3R5bGVcIiwgLy8gZG9tU3R5bGUuZ2V0Q29tcHV0ZWRTdHlsZVxyXG5cdFwiLi9oYXNcIixcclxuXHRcIi4vZG9tUmVhZHlcIixcclxuXHRcIi4vX2Jhc2Uvd2luZG93XCIgLy8gd2luLmJvZHlcclxuXSwgZnVuY3Rpb24ocmVxdWlyZSwgY29uZmlnLCBkb21DbGFzcywgZG9tU3R5bGUsIGhhcywgZG9tUmVhZHksIHdpbil7XHJcblxyXG5cdC8vIG1vZHVsZTpcclxuXHQvL1x0XHRkb2pvL2hjY3NzXHJcblxyXG5cdC8qPT09PT1cclxuXHRyZXR1cm4gZnVuY3Rpb24oKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRUZXN0IGlmIGNvbXB1dGVyIGlzIGluIGhpZ2ggY29udHJhc3QgbW9kZSAoaS5lLiBpZiBicm93c2VyIGlzIG5vdCBkaXNwbGF5aW5nIGJhY2tncm91bmQgaW1hZ2VzKS5cclxuXHRcdC8vXHRcdERlZmluZXMgYGhhcyhcImhpZ2hjb250cmFzdFwiKWAgYW5kIHNldHMgYGRqX2ExMXlgIENTUyBjbGFzcyBvbiBgPGJvZHk+YCBpZiBtYWNoaW5lIGlzIGluIGhpZ2ggY29udHJhc3QgbW9kZS5cclxuXHRcdC8vXHRcdFJldHVybnMgYGhhcygpYCBtZXRob2Q7XHJcblx0fTtcclxuXHQ9PT09PSovXHJcblxyXG5cdC8vIEhhcygpIHRlc3QgZm9yIHdoZW4gYmFja2dyb3VuZCBpbWFnZXMgYXJlbid0IGRpc3BsYXllZC4gIERvbid0IGNhbGwgaGFzKFwiaGlnaGNvbnRyYXN0XCIpIGJlZm9yZSBkb2pvL2RvbVJlYWR5IS5cclxuXHRoYXMuYWRkKFwiaGlnaGNvbnRyYXN0XCIsIGZ1bmN0aW9uKCl7XHJcblx0XHQvLyBub3RlOiBpZiBtdWx0aXBsZSBkb2N1bWVudHMsIGRvZXNuJ3QgbWF0dGVyIHdoaWNoIG9uZSB3ZSB1c2VcclxuXHRcdHZhciBkaXYgPSB3aW4uZG9jLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcblx0XHR0cnl7XHJcblx0XHRcdGRpdi5zdHlsZS5jc3NUZXh0ID0gXCJib3JkZXI6IDFweCBzb2xpZDsgYm9yZGVyLWNvbG9yOnJlZCBncmVlbjsgcG9zaXRpb246IGFic29sdXRlOyBoZWlnaHQ6IDVweDsgdG9wOiAtOTk5cHg7XCIgK1xyXG5cdFx0XHRcdFwiYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCJcIiArIChjb25maWcuYmxhbmtHaWYgfHwgcmVxdWlyZS50b1VybChcIi4vcmVzb3VyY2VzL2JsYW5rLmdpZlwiKSkgKyBcIlxcXCIpO1wiO1xyXG5cdFx0XHR3aW4uYm9keSgpLmFwcGVuZENoaWxkKGRpdik7XHJcblxyXG5cdFx0XHR2YXIgY3MgPSBkb21TdHlsZS5nZXRDb21wdXRlZFN0eWxlKGRpdiksXHJcblx0XHRcdFx0YmtJbWcgPSBjcy5iYWNrZ3JvdW5kSW1hZ2U7XHJcblx0XHRcdHJldHVybiBjcy5ib3JkZXJUb3BDb2xvciA9PSBjcy5ib3JkZXJSaWdodENvbG9yIHx8XHJcblx0XHRcdFx0KGJrSW1nICYmIChia0ltZyA9PSBcIm5vbmVcIiB8fCBia0ltZyA9PSBcInVybChpbnZhbGlkLXVybDopXCIgKSk7XHJcblx0XHR9Y2F0Y2goZSl7XHJcblx0XHRcdGNvbnNvbGUud2FybihcImhjY3NzOiBleGNlcHRpb24gZGV0ZWN0aW5nIGhpZ2gtY29udHJhc3QgbW9kZSwgZG9jdW1lbnQgaXMgbGlrZWx5IGhpZGRlbjogXCIgKyBlLnRvU3RyaW5nKCkpO1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9ZmluYWxseXtcclxuXHRcdFx0aWYoaGFzKFwiaWVcIikgPD0gOCl7XHJcblx0XHRcdFx0ZGl2Lm91dGVySFRNTCA9IFwiXCI7XHRcdC8vIHByZXZlbnQgbWl4ZWQtY29udGVudCB3YXJuaW5nLCBzZWUgaHR0cDovL3N1cHBvcnQubWljcm9zb2Z0LmNvbS9rYi85MjUwMTRcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0d2luLmJvZHkoKS5yZW1vdmVDaGlsZChkaXYpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cdGRvbVJlYWR5KGZ1bmN0aW9uKCl7XHJcblx0XHRpZihoYXMoXCJoaWdoY29udHJhc3RcIikpe1xyXG5cdFx0XHRkb21DbGFzcy5hZGQod2luLmJvZHkoKSwgXCJkal9hMTF5XCIpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4gaGFzO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dojo/hccss.js\n");

/***/ }),

/***/ "./node_modules/dojo/request.js":
/*!**************************************!*\
  !*** ./node_modules/dojo/request.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t__webpack_require__(/*! ./request/default */ \"./node_modules/dojo/request/xhr.js\")/*=====,\r\n\t'./_base/declare',\r\n\t'./promise/Promise' =====*/\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(request/*=====, declare, Promise =====*/){\r\n\t/*=====\r\n\trequest = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend a request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tThe URL to request.\r\n\t\t// options: dojo/request.__Options?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.__Promise = declare(Promise, {\r\n\t\t// response: dojo/promise/Promise\r\n\t\t//\t\tA promise resolving to an object representing\r\n\t\t//\t\tthe response from the server.\r\n\t});\r\n\trequest.__BaseOptions = declare(null, {\r\n\t\t// query: String|Object?\r\n\t\t//\t\tQuery parameters to append to the URL.\r\n\t\t// data: String|Object?\r\n\t\t//\t\tData to transfer.  This is ignored for GET and DELETE\r\n\t\t//\t\trequests.\r\n\t\t// preventCache: Boolean?\r\n\t\t//\t\tWhether to append a cache-busting parameter to the URL.\r\n\t\t// timeout: Integer?\r\n\t\t//\t\tMilliseconds to wait for the response.  If this time\r\n\t\t//\t\tpasses, the then the promise is rejected.\r\n\t\t// handleAs: String?\r\n\t\t//\t\tHow to handle the response from the server.  Default is\r\n\t\t//\t\t'text'.  Other values are 'json', 'javascript', and 'xml'.\r\n\t});\r\n\trequest.__MethodOptions = declare(null, {\r\n\t\t// method: String?\r\n\t\t//\t\tThe HTTP method to use to make the request.  Must be\r\n\t\t//\t\tuppercase.\r\n\t});\r\n\trequest.__Options = declare([request.__BaseOptions, request.__MethodOptions]);\r\n\r\n\trequest.get = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP GET request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.post = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP POST request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.put = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP POST request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\trequest.del = function(url, options){\r\n\t\t// summary:\r\n\t\t//\t\tSend an HTTP DELETE request using the default transport for the current platform.\r\n\t\t// url: String\r\n\t\t//\t\tURL to request\r\n\t\t// options: dojo/request.__BaseOptions?\r\n\t\t//\t\tOptions for the request.\r\n\t\t// returns: dojo/request.__Promise\r\n\t};\r\n\t=====*/\r\n\treturn request;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby9yZXF1ZXN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam8vcmVxdWVzdC5qcz83NTcyIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXHJcblx0Jy4vcmVxdWVzdC9kZWZhdWx0IScvKj09PT09LFxyXG5cdCcuL19iYXNlL2RlY2xhcmUnLFxyXG5cdCcuL3Byb21pc2UvUHJvbWlzZScgPT09PT0qL1xyXG5dLCBmdW5jdGlvbihyZXF1ZXN0Lyo9PT09PSwgZGVjbGFyZSwgUHJvbWlzZSA9PT09PSovKXtcclxuXHQvKj09PT09XHJcblx0cmVxdWVzdCA9IGZ1bmN0aW9uKHVybCwgb3B0aW9ucyl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0U2VuZCBhIHJlcXVlc3QgdXNpbmcgdGhlIGRlZmF1bHQgdHJhbnNwb3J0IGZvciB0aGUgY3VycmVudCBwbGF0Zm9ybS5cclxuXHRcdC8vIHVybDogU3RyaW5nXHJcblx0XHQvL1x0XHRUaGUgVVJMIHRvIHJlcXVlc3QuXHJcblx0XHQvLyBvcHRpb25zOiBkb2pvL3JlcXVlc3QuX19PcHRpb25zP1xyXG5cdFx0Ly9cdFx0T3B0aW9ucyBmb3IgdGhlIHJlcXVlc3QuXHJcblx0XHQvLyByZXR1cm5zOiBkb2pvL3JlcXVlc3QuX19Qcm9taXNlXHJcblx0fTtcclxuXHRyZXF1ZXN0Ll9fUHJvbWlzZSA9IGRlY2xhcmUoUHJvbWlzZSwge1xyXG5cdFx0Ly8gcmVzcG9uc2U6IGRvam8vcHJvbWlzZS9Qcm9taXNlXHJcblx0XHQvL1x0XHRBIHByb21pc2UgcmVzb2x2aW5nIHRvIGFuIG9iamVjdCByZXByZXNlbnRpbmdcclxuXHRcdC8vXHRcdHRoZSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIuXHJcblx0fSk7XHJcblx0cmVxdWVzdC5fX0Jhc2VPcHRpb25zID0gZGVjbGFyZShudWxsLCB7XHJcblx0XHQvLyBxdWVyeTogU3RyaW5nfE9iamVjdD9cclxuXHRcdC8vXHRcdFF1ZXJ5IHBhcmFtZXRlcnMgdG8gYXBwZW5kIHRvIHRoZSBVUkwuXHJcblx0XHQvLyBkYXRhOiBTdHJpbmd8T2JqZWN0P1xyXG5cdFx0Ly9cdFx0RGF0YSB0byB0cmFuc2Zlci4gIFRoaXMgaXMgaWdub3JlZCBmb3IgR0VUIGFuZCBERUxFVEVcclxuXHRcdC8vXHRcdHJlcXVlc3RzLlxyXG5cdFx0Ly8gcHJldmVudENhY2hlOiBCb29sZWFuP1xyXG5cdFx0Ly9cdFx0V2hldGhlciB0byBhcHBlbmQgYSBjYWNoZS1idXN0aW5nIHBhcmFtZXRlciB0byB0aGUgVVJMLlxyXG5cdFx0Ly8gdGltZW91dDogSW50ZWdlcj9cclxuXHRcdC8vXHRcdE1pbGxpc2Vjb25kcyB0byB3YWl0IGZvciB0aGUgcmVzcG9uc2UuICBJZiB0aGlzIHRpbWVcclxuXHRcdC8vXHRcdHBhc3NlcywgdGhlIHRoZW4gdGhlIHByb21pc2UgaXMgcmVqZWN0ZWQuXHJcblx0XHQvLyBoYW5kbGVBczogU3RyaW5nP1xyXG5cdFx0Ly9cdFx0SG93IHRvIGhhbmRsZSB0aGUgcmVzcG9uc2UgZnJvbSB0aGUgc2VydmVyLiAgRGVmYXVsdCBpc1xyXG5cdFx0Ly9cdFx0J3RleHQnLiAgT3RoZXIgdmFsdWVzIGFyZSAnanNvbicsICdqYXZhc2NyaXB0JywgYW5kICd4bWwnLlxyXG5cdH0pO1xyXG5cdHJlcXVlc3QuX19NZXRob2RPcHRpb25zID0gZGVjbGFyZShudWxsLCB7XHJcblx0XHQvLyBtZXRob2Q6IFN0cmluZz9cclxuXHRcdC8vXHRcdFRoZSBIVFRQIG1ldGhvZCB0byB1c2UgdG8gbWFrZSB0aGUgcmVxdWVzdC4gIE11c3QgYmVcclxuXHRcdC8vXHRcdHVwcGVyY2FzZS5cclxuXHR9KTtcclxuXHRyZXF1ZXN0Ll9fT3B0aW9ucyA9IGRlY2xhcmUoW3JlcXVlc3QuX19CYXNlT3B0aW9ucywgcmVxdWVzdC5fX01ldGhvZE9wdGlvbnNdKTtcclxuXHJcblx0cmVxdWVzdC5nZXQgPSBmdW5jdGlvbih1cmwsIG9wdGlvbnMpe1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFNlbmQgYW4gSFRUUCBHRVQgcmVxdWVzdCB1c2luZyB0aGUgZGVmYXVsdCB0cmFuc3BvcnQgZm9yIHRoZSBjdXJyZW50IHBsYXRmb3JtLlxyXG5cdFx0Ly8gdXJsOiBTdHJpbmdcclxuXHRcdC8vXHRcdFVSTCB0byByZXF1ZXN0XHJcblx0XHQvLyBvcHRpb25zOiBkb2pvL3JlcXVlc3QuX19CYXNlT3B0aW9ucz9cclxuXHRcdC8vXHRcdE9wdGlvbnMgZm9yIHRoZSByZXF1ZXN0LlxyXG5cdFx0Ly8gcmV0dXJuczogZG9qby9yZXF1ZXN0Ll9fUHJvbWlzZVxyXG5cdH07XHJcblx0cmVxdWVzdC5wb3N0ID0gZnVuY3Rpb24odXJsLCBvcHRpb25zKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRTZW5kIGFuIEhUVFAgUE9TVCByZXF1ZXN0IHVzaW5nIHRoZSBkZWZhdWx0IHRyYW5zcG9ydCBmb3IgdGhlIGN1cnJlbnQgcGxhdGZvcm0uXHJcblx0XHQvLyB1cmw6IFN0cmluZ1xyXG5cdFx0Ly9cdFx0VVJMIHRvIHJlcXVlc3RcclxuXHRcdC8vIG9wdGlvbnM6IGRvam8vcmVxdWVzdC5fX0Jhc2VPcHRpb25zP1xyXG5cdFx0Ly9cdFx0T3B0aW9ucyBmb3IgdGhlIHJlcXVlc3QuXHJcblx0XHQvLyByZXR1cm5zOiBkb2pvL3JlcXVlc3QuX19Qcm9taXNlXHJcblx0fTtcclxuXHRyZXF1ZXN0LnB1dCA9IGZ1bmN0aW9uKHVybCwgb3B0aW9ucyl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0U2VuZCBhbiBIVFRQIFBPU1QgcmVxdWVzdCB1c2luZyB0aGUgZGVmYXVsdCB0cmFuc3BvcnQgZm9yIHRoZSBjdXJyZW50IHBsYXRmb3JtLlxyXG5cdFx0Ly8gdXJsOiBTdHJpbmdcclxuXHRcdC8vXHRcdFVSTCB0byByZXF1ZXN0XHJcblx0XHQvLyBvcHRpb25zOiBkb2pvL3JlcXVlc3QuX19CYXNlT3B0aW9ucz9cclxuXHRcdC8vXHRcdE9wdGlvbnMgZm9yIHRoZSByZXF1ZXN0LlxyXG5cdFx0Ly8gcmV0dXJuczogZG9qby9yZXF1ZXN0Ll9fUHJvbWlzZVxyXG5cdH07XHJcblx0cmVxdWVzdC5kZWwgPSBmdW5jdGlvbih1cmwsIG9wdGlvbnMpe1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFNlbmQgYW4gSFRUUCBERUxFVEUgcmVxdWVzdCB1c2luZyB0aGUgZGVmYXVsdCB0cmFuc3BvcnQgZm9yIHRoZSBjdXJyZW50IHBsYXRmb3JtLlxyXG5cdFx0Ly8gdXJsOiBTdHJpbmdcclxuXHRcdC8vXHRcdFVSTCB0byByZXF1ZXN0XHJcblx0XHQvLyBvcHRpb25zOiBkb2pvL3JlcXVlc3QuX19CYXNlT3B0aW9ucz9cclxuXHRcdC8vXHRcdE9wdGlvbnMgZm9yIHRoZSByZXF1ZXN0LlxyXG5cdFx0Ly8gcmV0dXJuczogZG9qby9yZXF1ZXN0Ll9fUHJvbWlzZVxyXG5cdH07XHJcblx0PT09PT0qL1xyXG5cdHJldHVybiByZXF1ZXN0O1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojo/request.js\n");

/***/ }),

/***/ "./node_modules/dojo/text.js":
/*!***********************************!*\
  !*** ./node_modules/dojo/text.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__.dj.c(module.i), __webpack_require__(/*! ./has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./request */ \"./node_modules/dojo/request.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo, require, has, request){\r\n\t// module:\r\n\t//\t\tdojo/text\r\n\r\n\tvar getText;\r\n\tif(true){\r\n\t\tgetText= function(url, sync, load){\r\n\t\t\trequest(url, {sync:!!sync, headers: { 'X-Requested-With': null } }).then(load);\r\n\t\t};\r\n\t}else{}\r\n\r\n\tvar\r\n\t\ttheCache = {},\r\n\r\n\t\tstrip= function(text){\r\n\t\t\t//Strips <?xml ...?> declarations so that external SVG and XML\r\n\t\t\t//documents can be added to a document without worry. Also, if the string\r\n\t\t\t//is an HTML document, only the part inside the body tag is returned.\r\n\t\t\tif(text){\r\n\t\t\t\ttext= text.replace(/^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im, \"\");\r\n\t\t\t\tvar matches= text.match(/<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im);\r\n\t\t\t\tif(matches){\r\n\t\t\t\t\ttext= matches[1];\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\ttext = \"\";\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t},\r\n\r\n\t\tnotFound = {},\r\n\r\n\t\tpending = {};\r\n\r\n\tdojo.cache = function(/*String||Object*/module, /*String*/url, /*String||Object?*/value){\r\n\t\t// summary:\r\n\t\t//\t\tA getter and setter for storing the string content associated with the\r\n\t\t//\t\tmodule and url arguments.\r\n\t\t// description:\r\n\t\t//\t\tIf module is a string that contains slashes, then it is interpretted as a fully\r\n\t\t//\t\tresolved path (typically a result returned by require.toUrl), and url should not be\r\n\t\t//\t\tprovided. This is the preferred signature. If module is a string that does not\r\n\t\t//\t\tcontain slashes, then url must also be provided and module and url are used to\r\n\t\t//\t\tcall `dojo.moduleUrl()` to generate a module URL. This signature is deprecated.\r\n\t\t//\t\tIf value is specified, the cache value for the moduleUrl will be set to\r\n\t\t//\t\tthat value. Otherwise, dojo.cache will fetch the moduleUrl and store it\r\n\t\t//\t\tin its internal cache and return that cached value for the URL. To clear\r\n\t\t//\t\ta cache value pass null for value. Since XMLHttpRequest (XHR) is used to fetch the\r\n\t\t//\t\tthe URL contents, only modules on the same domain of the page can use this capability.\r\n\t\t//\t\tThe build system can inline the cache values though, to allow for xdomain hosting.\r\n\t\t// module: String||Object\r\n\t\t//\t\tIf a String with slashes, a fully resolved path; if a String without slashes, the\r\n\t\t//\t\tmodule name to use for the base part of the URL, similar to module argument\r\n\t\t//\t\tto `dojo.moduleUrl`. If an Object, something that has a .toString() method that\r\n\t\t//\t\tgenerates a valid path for the cache item. For example, a dojo._Url object.\r\n\t\t// url: String\r\n\t\t//\t\tThe rest of the path to append to the path derived from the module argument. If\r\n\t\t//\t\tmodule is an object, then this second argument should be the \"value\" argument instead.\r\n\t\t// value: String||Object?\r\n\t\t//\t\tIf a String, the value to use in the cache for the module/url combination.\r\n\t\t//\t\tIf an Object, it can have two properties: value and sanitize. The value property\r\n\t\t//\t\tshould be the value to use in the cache, and sanitize can be set to true or false,\r\n\t\t//\t\tto indicate if XML declarations should be removed from the value and if the HTML\r\n\t\t//\t\tinside a body tag in the value should be extracted as the real value. The value argument\r\n\t\t//\t\tor the value property on the value argument are usually only used by the build system\r\n\t\t//\t\tas it inlines cache content.\r\n\t\t// example:\r\n\t\t//\t\tTo ask dojo.cache to fetch content and store it in the cache (the dojo[\"cache\"] style\r\n\t\t//\t\tof call is used to avoid an issue with the build system erroneously trying to intern\r\n\t\t//\t\tthis example. To get the build system to intern your dojo.cache calls, use the\r\n\t\t//\t\t\"dojo.cache\" style of call):\r\n\t\t//\t\t| //If template.html contains \"<h1>Hello</h1>\" that will be\r\n\t\t//\t\t| //the value for the text variable.\r\n\t\t//\t\t| //Note: This is pre-AMD, deprecated syntax\r\n\t\t//\t\t| var text = dojo[\"cache\"](\"my.module\", \"template.html\");\r\n\t\t// example:\r\n\t\t//\t\tTo ask dojo.cache to fetch content and store it in the cache, and sanitize the input\r\n\t\t//\t\t (the dojo[\"cache\"] style of call is used to avoid an issue with the build system\r\n\t\t//\t\terroneously trying to intern this example. To get the build system to intern your\r\n\t\t//\t\tdojo.cache calls, use the \"dojo.cache\" style of call):\r\n\t\t//\t\t| //If template.html contains \"<html><body><h1>Hello</h1></body></html>\", the\r\n\t\t//\t\t| //text variable will contain just \"<h1>Hello</h1>\".\r\n\t\t//\t\t| //Note: This is pre-AMD, deprecated syntax\r\n\t\t//\t\t| var text = dojo[\"cache\"](\"my.module\", \"template.html\", {sanitize: true});\r\n\t\t// example:\r\n\t\t//\t\tSame example as previous, but demonstrates how an object can be passed in as\r\n\t\t//\t\tthe first argument, then the value argument can then be the second argument.\r\n\t\t//\t\t| //If template.html contains \"<html><body><h1>Hello</h1></body></html>\", the\r\n\t\t//\t\t| //text variable will contain just \"<h1>Hello</h1>\".\r\n\t\t//\t\t| //Note: This is pre-AMD, deprecated syntax\r\n\t\t//\t\t| var text = dojo[\"cache\"](new dojo._Url(\"my/module/template.html\"), {sanitize: true});\r\n\r\n\t\t//\t * (string string [value]) => (module, url, value)\r\n\t\t//\t * (object [value])        => (module, value), url defaults to \"\"\r\n\t\t//\r\n\t\t//\t * if module is an object, then it must be convertable to a string\r\n\t\t//\t * (module, url) module + (url ? (\"/\" + url) : \"\") must be a legal argument to require.toUrl\r\n\t\t//\t * value may be a string or an object; if an object then may have the properties \"value\" and/or \"sanitize\"\r\n\t\tvar key;\r\n\t\tif(typeof module==\"string\"){\r\n\t\t\tif(/\\//.test(module)){\r\n\t\t\t\t// module is a version 1.7+ resolved path\r\n\t\t\t\tkey = module;\r\n\t\t\t\tvalue = url;\r\n\t\t\t}else{\r\n\t\t\t\t// module is a version 1.6- argument to dojo.moduleUrl\r\n\t\t\t\tkey = require.toUrl(module.replace(/\\./g, \"/\") + (url ? (\"/\" + url) : \"\"));\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tkey = module + \"\";\r\n\t\t\tvalue = url;\r\n\t\t}\r\n\t\tvar\r\n\t\t\tval = (value != undefined && typeof value != \"string\") ? value.value : value,\r\n\t\t\tsanitize = value && value.sanitize;\r\n\r\n\t\tif(typeof val == \"string\"){\r\n\t\t\t//We have a string, set cache value\r\n\t\t\ttheCache[key] = val;\r\n\t\t\treturn sanitize ? strip(val) : val;\r\n\t\t}else if(val === null){\r\n\t\t\t//Remove cached value\r\n\t\t\tdelete theCache[key];\r\n\t\t\treturn null;\r\n\t\t}else{\r\n\t\t\t//Allow cache values to be empty strings. If key property does\r\n\t\t\t//not exist, fetch it.\r\n\t\t\tif(!(key in theCache)){\r\n\t\t\t\tgetText(key, true, function(text){\r\n\t\t\t\t\ttheCache[key]= text;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn sanitize ? strip(theCache[key]) : theCache[key];\r\n\t\t}\r\n\t};\r\n\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tThis module implements the dojo/text! plugin and the dojo.cache API.\r\n\t\t// description:\r\n\t\t//\t\tWe choose to include our own plugin to leverage functionality already contained in dojo\r\n\t\t//\t\tand thereby reduce the size of the plugin compared to various foreign loader implementations.\r\n\t\t//\t\tAlso, this allows foreign AMD loaders to be used without their plugins.\r\n\t\t//\r\n\t\t//\t\tCAUTION: this module is designed to optionally function synchronously to support the dojo v1.x synchronous\r\n\t\t//\t\tloader. This feature is outside the scope of the CommonJS plugins specification.\r\n\r\n\t\t// the dojo/text caches it's own resources because of dojo.cache\r\n\t\tdynamic: true,\r\n\r\n\t\tnormalize: function(id, toAbsMid){\r\n\t\t\t// id is something like (path may be relative):\r\n\t\t\t//\r\n\t\t\t//\t \"path/to/text.html\"\r\n\t\t\t//\t \"path/to/text.html!strip\"\r\n\t\t\tvar parts= id.split(\"!\"),\r\n\t\t\t\turl= parts[0];\r\n\t\t\treturn (/^\\./.test(url) ? toAbsMid(url) : url) + (parts[1] ? \"!\" + parts[1] : \"\");\r\n\t\t},\r\n\r\n\t\tload: function(id, require, load){\r\n\t\t\t// id: String\r\n\t\t\t//\t\tPath to the resource.\r\n\t\t\t// require: Function\r\n\t\t\t//\t\tObject that include the function toUrl with given id returns a valid URL from which to load the text.\r\n\t\t\t// load: Function\r\n\t\t\t//\t\tCallback function which will be called, when the loading finished.\r\n\r\n\t\t\t// id is something like (path is always absolute):\r\n\t\t\t//\r\n\t\t\t//\t \"path/to/text.html\"\r\n\t\t\t//\t \"path/to/text.html!strip\"\r\n\t\t\tvar\r\n\t\t\t\tparts= id.split(\"!\"),\r\n\t\t\t\tstripFlag= parts.length>1,\r\n\t\t\t\tabsMid= parts[0],\r\n\t\t\t\turl = require.toUrl(parts[0]),\r\n\t\t\t\trequireCacheUrl = \"url:\" + url,\r\n\t\t\t\ttext = notFound,\r\n\t\t\t\tfinish = function(text){\r\n\t\t\t\t\tload(stripFlag ? strip(text) : text);\r\n\t\t\t\t};\r\n\t\t\tif(absMid in theCache){\r\n\t\t\t\ttext = theCache[absMid];\r\n\t\t\t}else if(require.cache && requireCacheUrl in require.cache){\r\n\t\t\t\ttext = require.cache[requireCacheUrl];\r\n\t\t\t}else if(url in theCache){\r\n\t\t\t\ttext = theCache[url];\r\n\t\t\t}\r\n\t\t\tif(text===notFound){\r\n\t\t\t\tif(pending[url]){\r\n\t\t\t\t\tpending[url].push(finish);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar pendingList = pending[url] = [finish];\r\n\t\t\t\t\tgetText(url, !require.async, function(text){\r\n\t\t\t\t\t\ttheCache[absMid]= theCache[url]= text;\r\n\t\t\t\t\t\tfor(var i = 0; i<pendingList.length;){\r\n\t\t\t\t\t\t\tpendingList[i++](text);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete pending[url];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tfinish(text);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby90ZXh0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Rvam8vdGV4dC5qcz9kYTBlIl0sInNvdXJjZXNDb250ZW50IjpbImRlZmluZShbXCIuL19iYXNlL2tlcm5lbFwiLCBcInJlcXVpcmVcIiwgXCIuL2hhc1wiLCBcIi4vaGFzIWhvc3QtYnJvd3Nlcj8uL3JlcXVlc3RcIl0sIGZ1bmN0aW9uKGRvam8sIHJlcXVpcmUsIGhhcywgcmVxdWVzdCl7XHJcblx0Ly8gbW9kdWxlOlxyXG5cdC8vXHRcdGRvam8vdGV4dFxyXG5cclxuXHR2YXIgZ2V0VGV4dDtcclxuXHRpZihoYXMoXCJob3N0LWJyb3dzZXJcIikpe1xyXG5cdFx0Z2V0VGV4dD0gZnVuY3Rpb24odXJsLCBzeW5jLCBsb2FkKXtcclxuXHRcdFx0cmVxdWVzdCh1cmwsIHtzeW5jOiEhc3luYywgaGVhZGVyczogeyAnWC1SZXF1ZXN0ZWQtV2l0aCc6IG51bGwgfSB9KS50aGVuKGxvYWQpO1xyXG5cdFx0fTtcclxuXHR9ZWxzZXtcclxuXHRcdC8vIFBhdGggZm9yIG5vZGUuanMgYW5kIHJoaW5vLCB0byBsb2FkIGZyb20gbG9jYWwgZmlsZSBzeXN0ZW0uXHJcblx0XHQvLyBUT0RPOiB1c2Ugbm9kZS5qcyBuYXRpdmUgbWV0aG9kcyByYXRoZXIgdGhhbiBkZXBlbmRpbmcgb24gYSByZXF1aXJlLmdldFRleHQoKSBtZXRob2QgdG8gZXhpc3QuXHJcblx0XHRpZihyZXF1aXJlLmdldFRleHQpe1xyXG5cdFx0XHRnZXRUZXh0PSByZXF1aXJlLmdldFRleHQ7XHJcblx0XHR9ZWxzZXtcclxuXHRcdFx0Y29uc29sZS5lcnJvcihcImRvam8vdGV4dCBwbHVnaW4gZmFpbGVkIHRvIGxvYWQgYmVjYXVzZSBsb2FkZXIgZG9lcyBub3Qgc3VwcG9ydCBnZXRUZXh0XCIpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0dmFyXHJcblx0XHR0aGVDYWNoZSA9IHt9LFxyXG5cclxuXHRcdHN0cmlwPSBmdW5jdGlvbih0ZXh0KXtcclxuXHRcdFx0Ly9TdHJpcHMgPD94bWwgLi4uPz4gZGVjbGFyYXRpb25zIHNvIHRoYXQgZXh0ZXJuYWwgU1ZHIGFuZCBYTUxcclxuXHRcdFx0Ly9kb2N1bWVudHMgY2FuIGJlIGFkZGVkIHRvIGEgZG9jdW1lbnQgd2l0aG91dCB3b3JyeS4gQWxzbywgaWYgdGhlIHN0cmluZ1xyXG5cdFx0XHQvL2lzIGFuIEhUTUwgZG9jdW1lbnQsIG9ubHkgdGhlIHBhcnQgaW5zaWRlIHRoZSBib2R5IHRhZyBpcyByZXR1cm5lZC5cclxuXHRcdFx0aWYodGV4dCl7XHJcblx0XHRcdFx0dGV4dD0gdGV4dC5yZXBsYWNlKC9eXFxzKjxcXD94bWwoXFxzKSt2ZXJzaW9uPVtcXCdcXFwiXShcXGQpKi4oXFxkKSpbXFwnXFxcIl0oXFxzKSpcXD8+L2ltLCBcIlwiKTtcclxuXHRcdFx0XHR2YXIgbWF0Y2hlcz0gdGV4dC5tYXRjaCgvPGJvZHlbXj5dKj5cXHMqKFtcXHNcXFNdKylcXHMqPFxcL2JvZHk+L2ltKTtcclxuXHRcdFx0XHRpZihtYXRjaGVzKXtcclxuXHRcdFx0XHRcdHRleHQ9IG1hdGNoZXNbMV07XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHR0ZXh0ID0gXCJcIjtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGV4dDtcclxuXHRcdH0sXHJcblxyXG5cdFx0bm90Rm91bmQgPSB7fSxcclxuXHJcblx0XHRwZW5kaW5nID0ge307XHJcblxyXG5cdGRvam8uY2FjaGUgPSBmdW5jdGlvbigvKlN0cmluZ3x8T2JqZWN0Ki9tb2R1bGUsIC8qU3RyaW5nKi91cmwsIC8qU3RyaW5nfHxPYmplY3Q/Ki92YWx1ZSl7XHJcblx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0Ly9cdFx0QSBnZXR0ZXIgYW5kIHNldHRlciBmb3Igc3RvcmluZyB0aGUgc3RyaW5nIGNvbnRlbnQgYXNzb2NpYXRlZCB3aXRoIHRoZVxyXG5cdFx0Ly9cdFx0bW9kdWxlIGFuZCB1cmwgYXJndW1lbnRzLlxyXG5cdFx0Ly8gZGVzY3JpcHRpb246XHJcblx0XHQvL1x0XHRJZiBtb2R1bGUgaXMgYSBzdHJpbmcgdGhhdCBjb250YWlucyBzbGFzaGVzLCB0aGVuIGl0IGlzIGludGVycHJldHRlZCBhcyBhIGZ1bGx5XHJcblx0XHQvL1x0XHRyZXNvbHZlZCBwYXRoICh0eXBpY2FsbHkgYSByZXN1bHQgcmV0dXJuZWQgYnkgcmVxdWlyZS50b1VybCksIGFuZCB1cmwgc2hvdWxkIG5vdCBiZVxyXG5cdFx0Ly9cdFx0cHJvdmlkZWQuIFRoaXMgaXMgdGhlIHByZWZlcnJlZCBzaWduYXR1cmUuIElmIG1vZHVsZSBpcyBhIHN0cmluZyB0aGF0IGRvZXMgbm90XHJcblx0XHQvL1x0XHRjb250YWluIHNsYXNoZXMsIHRoZW4gdXJsIG11c3QgYWxzbyBiZSBwcm92aWRlZCBhbmQgbW9kdWxlIGFuZCB1cmwgYXJlIHVzZWQgdG9cclxuXHRcdC8vXHRcdGNhbGwgYGRvam8ubW9kdWxlVXJsKClgIHRvIGdlbmVyYXRlIGEgbW9kdWxlIFVSTC4gVGhpcyBzaWduYXR1cmUgaXMgZGVwcmVjYXRlZC5cclxuXHRcdC8vXHRcdElmIHZhbHVlIGlzIHNwZWNpZmllZCwgdGhlIGNhY2hlIHZhbHVlIGZvciB0aGUgbW9kdWxlVXJsIHdpbGwgYmUgc2V0IHRvXHJcblx0XHQvL1x0XHR0aGF0IHZhbHVlLiBPdGhlcndpc2UsIGRvam8uY2FjaGUgd2lsbCBmZXRjaCB0aGUgbW9kdWxlVXJsIGFuZCBzdG9yZSBpdFxyXG5cdFx0Ly9cdFx0aW4gaXRzIGludGVybmFsIGNhY2hlIGFuZCByZXR1cm4gdGhhdCBjYWNoZWQgdmFsdWUgZm9yIHRoZSBVUkwuIFRvIGNsZWFyXHJcblx0XHQvL1x0XHRhIGNhY2hlIHZhbHVlIHBhc3MgbnVsbCBmb3IgdmFsdWUuIFNpbmNlIFhNTEh0dHBSZXF1ZXN0IChYSFIpIGlzIHVzZWQgdG8gZmV0Y2ggdGhlXHJcblx0XHQvL1x0XHR0aGUgVVJMIGNvbnRlbnRzLCBvbmx5IG1vZHVsZXMgb24gdGhlIHNhbWUgZG9tYWluIG9mIHRoZSBwYWdlIGNhbiB1c2UgdGhpcyBjYXBhYmlsaXR5LlxyXG5cdFx0Ly9cdFx0VGhlIGJ1aWxkIHN5c3RlbSBjYW4gaW5saW5lIHRoZSBjYWNoZSB2YWx1ZXMgdGhvdWdoLCB0byBhbGxvdyBmb3IgeGRvbWFpbiBob3N0aW5nLlxyXG5cdFx0Ly8gbW9kdWxlOiBTdHJpbmd8fE9iamVjdFxyXG5cdFx0Ly9cdFx0SWYgYSBTdHJpbmcgd2l0aCBzbGFzaGVzLCBhIGZ1bGx5IHJlc29sdmVkIHBhdGg7IGlmIGEgU3RyaW5nIHdpdGhvdXQgc2xhc2hlcywgdGhlXHJcblx0XHQvL1x0XHRtb2R1bGUgbmFtZSB0byB1c2UgZm9yIHRoZSBiYXNlIHBhcnQgb2YgdGhlIFVSTCwgc2ltaWxhciB0byBtb2R1bGUgYXJndW1lbnRcclxuXHRcdC8vXHRcdHRvIGBkb2pvLm1vZHVsZVVybGAuIElmIGFuIE9iamVjdCwgc29tZXRoaW5nIHRoYXQgaGFzIGEgLnRvU3RyaW5nKCkgbWV0aG9kIHRoYXRcclxuXHRcdC8vXHRcdGdlbmVyYXRlcyBhIHZhbGlkIHBhdGggZm9yIHRoZSBjYWNoZSBpdGVtLiBGb3IgZXhhbXBsZSwgYSBkb2pvLl9Vcmwgb2JqZWN0LlxyXG5cdFx0Ly8gdXJsOiBTdHJpbmdcclxuXHRcdC8vXHRcdFRoZSByZXN0IG9mIHRoZSBwYXRoIHRvIGFwcGVuZCB0byB0aGUgcGF0aCBkZXJpdmVkIGZyb20gdGhlIG1vZHVsZSBhcmd1bWVudC4gSWZcclxuXHRcdC8vXHRcdG1vZHVsZSBpcyBhbiBvYmplY3QsIHRoZW4gdGhpcyBzZWNvbmQgYXJndW1lbnQgc2hvdWxkIGJlIHRoZSBcInZhbHVlXCIgYXJndW1lbnQgaW5zdGVhZC5cclxuXHRcdC8vIHZhbHVlOiBTdHJpbmd8fE9iamVjdD9cclxuXHRcdC8vXHRcdElmIGEgU3RyaW5nLCB0aGUgdmFsdWUgdG8gdXNlIGluIHRoZSBjYWNoZSBmb3IgdGhlIG1vZHVsZS91cmwgY29tYmluYXRpb24uXHJcblx0XHQvL1x0XHRJZiBhbiBPYmplY3QsIGl0IGNhbiBoYXZlIHR3byBwcm9wZXJ0aWVzOiB2YWx1ZSBhbmQgc2FuaXRpemUuIFRoZSB2YWx1ZSBwcm9wZXJ0eVxyXG5cdFx0Ly9cdFx0c2hvdWxkIGJlIHRoZSB2YWx1ZSB0byB1c2UgaW4gdGhlIGNhY2hlLCBhbmQgc2FuaXRpemUgY2FuIGJlIHNldCB0byB0cnVlIG9yIGZhbHNlLFxyXG5cdFx0Ly9cdFx0dG8gaW5kaWNhdGUgaWYgWE1MIGRlY2xhcmF0aW9ucyBzaG91bGQgYmUgcmVtb3ZlZCBmcm9tIHRoZSB2YWx1ZSBhbmQgaWYgdGhlIEhUTUxcclxuXHRcdC8vXHRcdGluc2lkZSBhIGJvZHkgdGFnIGluIHRoZSB2YWx1ZSBzaG91bGQgYmUgZXh0cmFjdGVkIGFzIHRoZSByZWFsIHZhbHVlLiBUaGUgdmFsdWUgYXJndW1lbnRcclxuXHRcdC8vXHRcdG9yIHRoZSB2YWx1ZSBwcm9wZXJ0eSBvbiB0aGUgdmFsdWUgYXJndW1lbnQgYXJlIHVzdWFsbHkgb25seSB1c2VkIGJ5IHRoZSBidWlsZCBzeXN0ZW1cclxuXHRcdC8vXHRcdGFzIGl0IGlubGluZXMgY2FjaGUgY29udGVudC5cclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRUbyBhc2sgZG9qby5jYWNoZSB0byBmZXRjaCBjb250ZW50IGFuZCBzdG9yZSBpdCBpbiB0aGUgY2FjaGUgKHRoZSBkb2pvW1wiY2FjaGVcIl0gc3R5bGVcclxuXHRcdC8vXHRcdG9mIGNhbGwgaXMgdXNlZCB0byBhdm9pZCBhbiBpc3N1ZSB3aXRoIHRoZSBidWlsZCBzeXN0ZW0gZXJyb25lb3VzbHkgdHJ5aW5nIHRvIGludGVyblxyXG5cdFx0Ly9cdFx0dGhpcyBleGFtcGxlLiBUbyBnZXQgdGhlIGJ1aWxkIHN5c3RlbSB0byBpbnRlcm4geW91ciBkb2pvLmNhY2hlIGNhbGxzLCB1c2UgdGhlXHJcblx0XHQvL1x0XHRcImRvam8uY2FjaGVcIiBzdHlsZSBvZiBjYWxsKTpcclxuXHRcdC8vXHRcdHwgLy9JZiB0ZW1wbGF0ZS5odG1sIGNvbnRhaW5zIFwiPGgxPkhlbGxvPC9oMT5cIiB0aGF0IHdpbGwgYmVcclxuXHRcdC8vXHRcdHwgLy90aGUgdmFsdWUgZm9yIHRoZSB0ZXh0IHZhcmlhYmxlLlxyXG5cdFx0Ly9cdFx0fCAvL05vdGU6IFRoaXMgaXMgcHJlLUFNRCwgZGVwcmVjYXRlZCBzeW50YXhcclxuXHRcdC8vXHRcdHwgdmFyIHRleHQgPSBkb2pvW1wiY2FjaGVcIl0oXCJteS5tb2R1bGVcIiwgXCJ0ZW1wbGF0ZS5odG1sXCIpO1xyXG5cdFx0Ly8gZXhhbXBsZTpcclxuXHRcdC8vXHRcdFRvIGFzayBkb2pvLmNhY2hlIHRvIGZldGNoIGNvbnRlbnQgYW5kIHN0b3JlIGl0IGluIHRoZSBjYWNoZSwgYW5kIHNhbml0aXplIHRoZSBpbnB1dFxyXG5cdFx0Ly9cdFx0ICh0aGUgZG9qb1tcImNhY2hlXCJdIHN0eWxlIG9mIGNhbGwgaXMgdXNlZCB0byBhdm9pZCBhbiBpc3N1ZSB3aXRoIHRoZSBidWlsZCBzeXN0ZW1cclxuXHRcdC8vXHRcdGVycm9uZW91c2x5IHRyeWluZyB0byBpbnRlcm4gdGhpcyBleGFtcGxlLiBUbyBnZXQgdGhlIGJ1aWxkIHN5c3RlbSB0byBpbnRlcm4geW91clxyXG5cdFx0Ly9cdFx0ZG9qby5jYWNoZSBjYWxscywgdXNlIHRoZSBcImRvam8uY2FjaGVcIiBzdHlsZSBvZiBjYWxsKTpcclxuXHRcdC8vXHRcdHwgLy9JZiB0ZW1wbGF0ZS5odG1sIGNvbnRhaW5zIFwiPGh0bWw+PGJvZHk+PGgxPkhlbGxvPC9oMT48L2JvZHk+PC9odG1sPlwiLCB0aGVcclxuXHRcdC8vXHRcdHwgLy90ZXh0IHZhcmlhYmxlIHdpbGwgY29udGFpbiBqdXN0IFwiPGgxPkhlbGxvPC9oMT5cIi5cclxuXHRcdC8vXHRcdHwgLy9Ob3RlOiBUaGlzIGlzIHByZS1BTUQsIGRlcHJlY2F0ZWQgc3ludGF4XHJcblx0XHQvL1x0XHR8IHZhciB0ZXh0ID0gZG9qb1tcImNhY2hlXCJdKFwibXkubW9kdWxlXCIsIFwidGVtcGxhdGUuaHRtbFwiLCB7c2FuaXRpemU6IHRydWV9KTtcclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRTYW1lIGV4YW1wbGUgYXMgcHJldmlvdXMsIGJ1dCBkZW1vbnN0cmF0ZXMgaG93IGFuIG9iamVjdCBjYW4gYmUgcGFzc2VkIGluIGFzXHJcblx0XHQvL1x0XHR0aGUgZmlyc3QgYXJndW1lbnQsIHRoZW4gdGhlIHZhbHVlIGFyZ3VtZW50IGNhbiB0aGVuIGJlIHRoZSBzZWNvbmQgYXJndW1lbnQuXHJcblx0XHQvL1x0XHR8IC8vSWYgdGVtcGxhdGUuaHRtbCBjb250YWlucyBcIjxodG1sPjxib2R5PjxoMT5IZWxsbzwvaDE+PC9ib2R5PjwvaHRtbD5cIiwgdGhlXHJcblx0XHQvL1x0XHR8IC8vdGV4dCB2YXJpYWJsZSB3aWxsIGNvbnRhaW4ganVzdCBcIjxoMT5IZWxsbzwvaDE+XCIuXHJcblx0XHQvL1x0XHR8IC8vTm90ZTogVGhpcyBpcyBwcmUtQU1ELCBkZXByZWNhdGVkIHN5bnRheFxyXG5cdFx0Ly9cdFx0fCB2YXIgdGV4dCA9IGRvam9bXCJjYWNoZVwiXShuZXcgZG9qby5fVXJsKFwibXkvbW9kdWxlL3RlbXBsYXRlLmh0bWxcIiksIHtzYW5pdGl6ZTogdHJ1ZX0pO1xyXG5cclxuXHRcdC8vXHQgKiAoc3RyaW5nIHN0cmluZyBbdmFsdWVdKSA9PiAobW9kdWxlLCB1cmwsIHZhbHVlKVxyXG5cdFx0Ly9cdCAqIChvYmplY3QgW3ZhbHVlXSkgICAgICAgID0+IChtb2R1bGUsIHZhbHVlKSwgdXJsIGRlZmF1bHRzIHRvIFwiXCJcclxuXHRcdC8vXHJcblx0XHQvL1x0ICogaWYgbW9kdWxlIGlzIGFuIG9iamVjdCwgdGhlbiBpdCBtdXN0IGJlIGNvbnZlcnRhYmxlIHRvIGEgc3RyaW5nXHJcblx0XHQvL1x0ICogKG1vZHVsZSwgdXJsKSBtb2R1bGUgKyAodXJsID8gKFwiL1wiICsgdXJsKSA6IFwiXCIpIG11c3QgYmUgYSBsZWdhbCBhcmd1bWVudCB0byByZXF1aXJlLnRvVXJsXHJcblx0XHQvL1x0ICogdmFsdWUgbWF5IGJlIGEgc3RyaW5nIG9yIGFuIG9iamVjdDsgaWYgYW4gb2JqZWN0IHRoZW4gbWF5IGhhdmUgdGhlIHByb3BlcnRpZXMgXCJ2YWx1ZVwiIGFuZC9vciBcInNhbml0aXplXCJcclxuXHRcdHZhciBrZXk7XHJcblx0XHRpZih0eXBlb2YgbW9kdWxlPT1cInN0cmluZ1wiKXtcclxuXHRcdFx0aWYoL1xcLy8udGVzdChtb2R1bGUpKXtcclxuXHRcdFx0XHQvLyBtb2R1bGUgaXMgYSB2ZXJzaW9uIDEuNysgcmVzb2x2ZWQgcGF0aFxyXG5cdFx0XHRcdGtleSA9IG1vZHVsZTtcclxuXHRcdFx0XHR2YWx1ZSA9IHVybDtcclxuXHRcdFx0fWVsc2V7XHJcblx0XHRcdFx0Ly8gbW9kdWxlIGlzIGEgdmVyc2lvbiAxLjYtIGFyZ3VtZW50IHRvIGRvam8ubW9kdWxlVXJsXHJcblx0XHRcdFx0a2V5ID0gcmVxdWlyZS50b1VybChtb2R1bGUucmVwbGFjZSgvXFwuL2csIFwiL1wiKSArICh1cmwgPyAoXCIvXCIgKyB1cmwpIDogXCJcIikpO1xyXG5cdFx0XHR9XHJcblx0XHR9ZWxzZXtcclxuXHRcdFx0a2V5ID0gbW9kdWxlICsgXCJcIjtcclxuXHRcdFx0dmFsdWUgPSB1cmw7XHJcblx0XHR9XHJcblx0XHR2YXJcclxuXHRcdFx0dmFsID0gKHZhbHVlICE9IHVuZGVmaW5lZCAmJiB0eXBlb2YgdmFsdWUgIT0gXCJzdHJpbmdcIikgPyB2YWx1ZS52YWx1ZSA6IHZhbHVlLFxyXG5cdFx0XHRzYW5pdGl6ZSA9IHZhbHVlICYmIHZhbHVlLnNhbml0aXplO1xyXG5cclxuXHRcdGlmKHR5cGVvZiB2YWwgPT0gXCJzdHJpbmdcIil7XHJcblx0XHRcdC8vV2UgaGF2ZSBhIHN0cmluZywgc2V0IGNhY2hlIHZhbHVlXHJcblx0XHRcdHRoZUNhY2hlW2tleV0gPSB2YWw7XHJcblx0XHRcdHJldHVybiBzYW5pdGl6ZSA/IHN0cmlwKHZhbCkgOiB2YWw7XHJcblx0XHR9ZWxzZSBpZih2YWwgPT09IG51bGwpe1xyXG5cdFx0XHQvL1JlbW92ZSBjYWNoZWQgdmFsdWVcclxuXHRcdFx0ZGVsZXRlIHRoZUNhY2hlW2tleV07XHJcblx0XHRcdHJldHVybiBudWxsO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdC8vQWxsb3cgY2FjaGUgdmFsdWVzIHRvIGJlIGVtcHR5IHN0cmluZ3MuIElmIGtleSBwcm9wZXJ0eSBkb2VzXHJcblx0XHRcdC8vbm90IGV4aXN0LCBmZXRjaCBpdC5cclxuXHRcdFx0aWYoIShrZXkgaW4gdGhlQ2FjaGUpKXtcclxuXHRcdFx0XHRnZXRUZXh0KGtleSwgdHJ1ZSwgZnVuY3Rpb24odGV4dCl7XHJcblx0XHRcdFx0XHR0aGVDYWNoZVtrZXldPSB0ZXh0O1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBzYW5pdGl6ZSA/IHN0cmlwKHRoZUNhY2hlW2tleV0pIDogdGhlQ2FjaGVba2V5XTtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdFRoaXMgbW9kdWxlIGltcGxlbWVudHMgdGhlIGRvam8vdGV4dCEgcGx1Z2luIGFuZCB0aGUgZG9qby5jYWNoZSBBUEkuXHJcblx0XHQvLyBkZXNjcmlwdGlvbjpcclxuXHRcdC8vXHRcdFdlIGNob29zZSB0byBpbmNsdWRlIG91ciBvd24gcGx1Z2luIHRvIGxldmVyYWdlIGZ1bmN0aW9uYWxpdHkgYWxyZWFkeSBjb250YWluZWQgaW4gZG9qb1xyXG5cdFx0Ly9cdFx0YW5kIHRoZXJlYnkgcmVkdWNlIHRoZSBzaXplIG9mIHRoZSBwbHVnaW4gY29tcGFyZWQgdG8gdmFyaW91cyBmb3JlaWduIGxvYWRlciBpbXBsZW1lbnRhdGlvbnMuXHJcblx0XHQvL1x0XHRBbHNvLCB0aGlzIGFsbG93cyBmb3JlaWduIEFNRCBsb2FkZXJzIHRvIGJlIHVzZWQgd2l0aG91dCB0aGVpciBwbHVnaW5zLlxyXG5cdFx0Ly9cclxuXHRcdC8vXHRcdENBVVRJT046IHRoaXMgbW9kdWxlIGlzIGRlc2lnbmVkIHRvIG9wdGlvbmFsbHkgZnVuY3Rpb24gc3luY2hyb25vdXNseSB0byBzdXBwb3J0IHRoZSBkb2pvIHYxLnggc3luY2hyb25vdXNcclxuXHRcdC8vXHRcdGxvYWRlci4gVGhpcyBmZWF0dXJlIGlzIG91dHNpZGUgdGhlIHNjb3BlIG9mIHRoZSBDb21tb25KUyBwbHVnaW5zIHNwZWNpZmljYXRpb24uXHJcblxyXG5cdFx0Ly8gdGhlIGRvam8vdGV4dCBjYWNoZXMgaXQncyBvd24gcmVzb3VyY2VzIGJlY2F1c2Ugb2YgZG9qby5jYWNoZVxyXG5cdFx0ZHluYW1pYzogdHJ1ZSxcclxuXHJcblx0XHRub3JtYWxpemU6IGZ1bmN0aW9uKGlkLCB0b0Fic01pZCl7XHJcblx0XHRcdC8vIGlkIGlzIHNvbWV0aGluZyBsaWtlIChwYXRoIG1heSBiZSByZWxhdGl2ZSk6XHJcblx0XHRcdC8vXHJcblx0XHRcdC8vXHQgXCJwYXRoL3RvL3RleHQuaHRtbFwiXHJcblx0XHRcdC8vXHQgXCJwYXRoL3RvL3RleHQuaHRtbCFzdHJpcFwiXHJcblx0XHRcdHZhciBwYXJ0cz0gaWQuc3BsaXQoXCIhXCIpLFxyXG5cdFx0XHRcdHVybD0gcGFydHNbMF07XHJcblx0XHRcdHJldHVybiAoL15cXC4vLnRlc3QodXJsKSA/IHRvQWJzTWlkKHVybCkgOiB1cmwpICsgKHBhcnRzWzFdID8gXCIhXCIgKyBwYXJ0c1sxXSA6IFwiXCIpO1xyXG5cdFx0fSxcclxuXHJcblx0XHRsb2FkOiBmdW5jdGlvbihpZCwgcmVxdWlyZSwgbG9hZCl7XHJcblx0XHRcdC8vIGlkOiBTdHJpbmdcclxuXHRcdFx0Ly9cdFx0UGF0aCB0byB0aGUgcmVzb3VyY2UuXHJcblx0XHRcdC8vIHJlcXVpcmU6IEZ1bmN0aW9uXHJcblx0XHRcdC8vXHRcdE9iamVjdCB0aGF0IGluY2x1ZGUgdGhlIGZ1bmN0aW9uIHRvVXJsIHdpdGggZ2l2ZW4gaWQgcmV0dXJucyBhIHZhbGlkIFVSTCBmcm9tIHdoaWNoIHRvIGxvYWQgdGhlIHRleHQuXHJcblx0XHRcdC8vIGxvYWQ6IEZ1bmN0aW9uXHJcblx0XHRcdC8vXHRcdENhbGxiYWNrIGZ1bmN0aW9uIHdoaWNoIHdpbGwgYmUgY2FsbGVkLCB3aGVuIHRoZSBsb2FkaW5nIGZpbmlzaGVkLlxyXG5cclxuXHRcdFx0Ly8gaWQgaXMgc29tZXRoaW5nIGxpa2UgKHBhdGggaXMgYWx3YXlzIGFic29sdXRlKTpcclxuXHRcdFx0Ly9cclxuXHRcdFx0Ly9cdCBcInBhdGgvdG8vdGV4dC5odG1sXCJcclxuXHRcdFx0Ly9cdCBcInBhdGgvdG8vdGV4dC5odG1sIXN0cmlwXCJcclxuXHRcdFx0dmFyXHJcblx0XHRcdFx0cGFydHM9IGlkLnNwbGl0KFwiIVwiKSxcclxuXHRcdFx0XHRzdHJpcEZsYWc9IHBhcnRzLmxlbmd0aD4xLFxyXG5cdFx0XHRcdGFic01pZD0gcGFydHNbMF0sXHJcblx0XHRcdFx0dXJsID0gcmVxdWlyZS50b1VybChwYXJ0c1swXSksXHJcblx0XHRcdFx0cmVxdWlyZUNhY2hlVXJsID0gXCJ1cmw6XCIgKyB1cmwsXHJcblx0XHRcdFx0dGV4dCA9IG5vdEZvdW5kLFxyXG5cdFx0XHRcdGZpbmlzaCA9IGZ1bmN0aW9uKHRleHQpe1xyXG5cdFx0XHRcdFx0bG9hZChzdHJpcEZsYWcgPyBzdHJpcCh0ZXh0KSA6IHRleHQpO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdGlmKGFic01pZCBpbiB0aGVDYWNoZSl7XHJcblx0XHRcdFx0dGV4dCA9IHRoZUNhY2hlW2Fic01pZF07XHJcblx0XHRcdH1lbHNlIGlmKHJlcXVpcmUuY2FjaGUgJiYgcmVxdWlyZUNhY2hlVXJsIGluIHJlcXVpcmUuY2FjaGUpe1xyXG5cdFx0XHRcdHRleHQgPSByZXF1aXJlLmNhY2hlW3JlcXVpcmVDYWNoZVVybF07XHJcblx0XHRcdH1lbHNlIGlmKHVybCBpbiB0aGVDYWNoZSl7XHJcblx0XHRcdFx0dGV4dCA9IHRoZUNhY2hlW3VybF07XHJcblx0XHRcdH1cclxuXHRcdFx0aWYodGV4dD09PW5vdEZvdW5kKXtcclxuXHRcdFx0XHRpZihwZW5kaW5nW3VybF0pe1xyXG5cdFx0XHRcdFx0cGVuZGluZ1t1cmxdLnB1c2goZmluaXNoKTtcclxuXHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdHZhciBwZW5kaW5nTGlzdCA9IHBlbmRpbmdbdXJsXSA9IFtmaW5pc2hdO1xyXG5cdFx0XHRcdFx0Z2V0VGV4dCh1cmwsICFyZXF1aXJlLmFzeW5jLCBmdW5jdGlvbih0ZXh0KXtcclxuXHRcdFx0XHRcdFx0dGhlQ2FjaGVbYWJzTWlkXT0gdGhlQ2FjaGVbdXJsXT0gdGV4dDtcclxuXHRcdFx0XHRcdFx0Zm9yKHZhciBpID0gMDsgaTxwZW5kaW5nTGlzdC5sZW5ndGg7KXtcclxuXHRcdFx0XHRcdFx0XHRwZW5kaW5nTGlzdFtpKytdKHRleHQpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGRlbGV0ZSBwZW5kaW5nW3VybF07XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1lbHNle1xyXG5cdFx0XHRcdGZpbmlzaCh0ZXh0KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblxyXG59KTtcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojo/text.js\n");

/***/ }),

/***/ "./node_modules/dojo/touch.js":
/*!************************************!*\
  !*** ./node_modules/dojo/touch.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/kernel */ \"./node_modules/dojo/_base/kernel.js\"), __webpack_require__(/*! ./aspect */ \"./node_modules/dojo/aspect.js\"), __webpack_require__(/*! ./dom */ \"./node_modules/dojo/dom.js\"), __webpack_require__(/*! ./dom-class */ \"./node_modules/dojo/dom-class.js\"), __webpack_require__(/*! ./_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./on */ \"./node_modules/dojo/on.js\"), __webpack_require__(/*! ./has */ \"./node_modules/dojo/has.js\"), __webpack_require__(/*! ./mouse */ \"./node_modules/dojo/mouse.js\"), __webpack_require__(/*! ./domReady */ \"./node_modules/dojo/domReady.js\"), __webpack_require__(/*! ./_base/window */ \"./node_modules/dojo/_base/window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(dojo, aspect, dom, domClass, lang, on, has, mouse, domReady, win){\r\n\r\n\t// module:\r\n\t//\t\tdojo/touch\r\n\r\n\tvar ios4 = has(\"ios\") < 5;\r\n\r\n\t// Detect if platform supports Pointer Events, and if so, the names of the events (pointerdown vs. MSPointerDown).\r\n\tvar hasPointer = has(\"pointer-events\") || has(\"MSPointer\"),\r\n\t\tpointer = (function () {\r\n\t\t\tvar pointer = {};\r\n\t\t\tfor (var type in { down: 1, move: 1, up: 1, cancel: 1, over: 1, out: 1 }) {\r\n\t\t\t\tpointer[type] =  false ?\r\n\t\t\t\t\tundefined :\r\n\t\t\t\t\t\"pointer\" + type;\r\n\t\t\t}\r\n\t\t\treturn pointer;\r\n\t\t})();\r\n\r\n\t// Detect if platform supports the webkit touchstart/touchend/... events\r\n\tvar hasTouch = has(\"touch-events\");\r\n\r\n\t// Click generation variables\r\n\tvar clicksInited, clickTracker, useTarget = false, clickTarget, clickX, clickY, clickDx, clickDy, clickTime;\r\n\r\n\t// Time of most recent touchstart, touchmove, or touchend event\r\n\tvar lastTouch;\r\n\r\n\tfunction dualEvent(mouseType, touchType, pointerType){\r\n\t\t// Returns synthetic event that listens for both the specified mouse event and specified touch event.\r\n\t\t// But ignore fake mouse events that were generated due to the user touching the screen.\r\n\t\tif(hasPointer && pointerType){\r\n\t\t\t// IE10+: MSPointer* events are designed to handle both mouse and touch in a uniform way,\r\n\t\t\t// so just use that regardless of hasTouch.\r\n\t\t\treturn function(node, listener){\r\n\t\t\t\treturn on(node, pointerType, listener);\r\n\t\t\t};\r\n\t\t}else if(hasTouch){\r\n\t\t\treturn function(node, listener){\r\n\t\t\t\tvar handle1 = on(node, touchType, function(evt){\r\n\t\t\t\t\t\tlistener.call(this, evt);\r\n\r\n\t\t\t\t\t\t// On slow mobile browsers (see https://bugs.dojotoolkit.org/ticket/17634),\r\n\t\t\t\t\t\t// a handler for a touch event may take >1s to run.  That time shouldn't\r\n\t\t\t\t\t\t// be included in the calculation for lastTouch.\r\n\t\t\t\t\t\tlastTouch = (new Date()).getTime();\r\n\t\t\t\t\t}),\r\n\t\t\t\t\thandle2 = on(node, mouseType, function(evt){\r\n\t\t\t\t\t\tif(!lastTouch || (new Date()).getTime() > lastTouch + 1000){\r\n\t\t\t\t\t\t\tlistener.call(this, evt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function(){\r\n\t\t\t\t\t\thandle1.remove();\r\n\t\t\t\t\t\thandle2.remove();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t}else{\r\n\t\t\t// Avoid creating listeners for touch events on performance sensitive older browsers like IE6\r\n\t\t\treturn function(node, listener){\r\n\t\t\t\treturn on(node, mouseType, listener);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tfunction marked(/*DOMNode*/ node){\r\n\t\t// Search for node ancestor has been marked with the dojoClick property to indicate special processing.\r\n\t\t// Returns marked ancestor.\r\n\t\tdo{\r\n\t\t\tif(node.dojoClick !== undefined){ return node; }\r\n\t\t}while(node = node.parentNode);\r\n\t}\r\n\r\n\tfunction doClicks(e, moveType, endType){\r\n\t\t// summary:\r\n\t\t//\t\tSetup touch listeners to generate synthetic clicks immediately (rather than waiting for the browser\r\n\t\t//\t\tto generate clicks after the double-tap delay) and consistently (regardless of whether event.preventDefault()\r\n\t\t//\t\twas called in an event listener. Synthetic clicks are generated only if a node or one of its ancestors has\r\n\t\t//\t\tits dojoClick property set to truthy. If a node receives synthetic clicks because one of its ancestors has its\r\n\t\t//      dojoClick property set to truthy, you can disable synthetic clicks on this node by setting its own dojoClick property\r\n\t\t//      to falsy.\r\n\r\n\t\tif(mouse.isRight(e)){\r\n\t\t\treturn;\t\t// avoid spurious dojoclick event on IE10+; right click is just for context menu\r\n\t\t}\r\n\r\n\t\tvar markedNode = marked(e.target);\r\n\t\tclickTracker  = !e.target.disabled && markedNode && markedNode.dojoClick; // click threshold = true, number, x/y object, or \"useTarget\"\r\n\t\tif(clickTracker){\r\n\t\t\tuseTarget = (clickTracker == \"useTarget\");\r\n\t\t\tclickTarget = (useTarget?markedNode:e.target);\r\n\t\t\tif(useTarget){\r\n\t\t\t\t// We expect a click, so prevent any other\r\n\t\t\t\t// default action on \"touchpress\"\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tclickX = e.changedTouches ? e.changedTouches[0].pageX - win.global.pageXOffset : e.clientX;\r\n\t\t\tclickY = e.changedTouches ? e.changedTouches[0].pageY - win.global.pageYOffset : e.clientY;\r\n\t\t\tclickDx = (typeof clickTracker == \"object\" ? clickTracker.x : (typeof clickTracker == \"number\" ? clickTracker : 0)) || 4;\r\n\t\t\tclickDy = (typeof clickTracker == \"object\" ? clickTracker.y : (typeof clickTracker == \"number\" ? clickTracker : 0)) || 4;\r\n\r\n\t\t\t// add move/end handlers only the first time a node with dojoClick is seen,\r\n\t\t\t// so we don't add too much overhead when dojoClick is never set.\r\n\t\t\tif(!clicksInited){\r\n\t\t\t\tclicksInited = true;\r\n\r\n\t\t\t\tfunction updateClickTracker(e){\r\n\t\t\t\t\tif(useTarget){\r\n\t\t\t\t\t\tclickTracker = dom.isDescendant(\r\n\t\t\t\t\t\t\twin.doc.elementFromPoint(\r\n\t\t\t\t\t\t\t\t(e.changedTouches ? e.changedTouches[0].pageX - win.global.pageXOffset : e.clientX),\r\n\t\t\t\t\t\t\t\t(e.changedTouches ? e.changedTouches[0].pageY - win.global.pageYOffset : e.clientY)),\r\n\t\t\t\t\t\t\tclickTarget);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tclickTracker = clickTracker &&\r\n\t\t\t\t\t\t\t(e.changedTouches ? e.changedTouches[0].target : e.target) == clickTarget &&\r\n\t\t\t\t\t\t\tMath.abs((e.changedTouches ? e.changedTouches[0].pageX - win.global.pageXOffset : e.clientX) - clickX) <= clickDx &&\r\n\t\t\t\t\t\t\tMath.abs((e.changedTouches ? e.changedTouches[0].pageY - win.global.pageYOffset : e.clientY) - clickY) <= clickDy;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\twin.doc.addEventListener(moveType, function(e){\r\n\t\t\t\t\tif(mouse.isRight(e)){\r\n\t\t\t\t\t\treturn;\t\t// avoid spurious dojoclick event on IE10+; right click is just for context menu\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateClickTracker(e);\r\n\t\t\t\t\tif(useTarget){\r\n\t\t\t\t\t\t// prevent native scroll event and ensure touchend is\r\n\t\t\t\t\t\t// fire after touch moves between press and release.\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t\twin.doc.addEventListener(endType, function(e){\r\n\t\t\t\t\tif(mouse.isRight(e)){\r\n\t\t\t\t\t\treturn;\t\t// avoid spurious dojoclick event on IE10+; right click is just for context menu\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateClickTracker(e);\r\n\t\t\t\t\tif(clickTracker){\r\n\t\t\t\t\t\tclickTime = (new Date()).getTime();\r\n\t\t\t\t\t\tvar target = (useTarget?clickTarget:e.target);\r\n\t\t\t\t\t\tif(target.tagName === \"LABEL\"){\r\n\t\t\t\t\t\t\t// when clicking on a label, forward click to its associated input if any\r\n\t\t\t\t\t\t\ttarget = dom.byId(target.getAttribute(\"for\")) || target;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//some attributes can be on the Touch object, not on the Event:\r\n\t\t\t\t\t\t//http://www.w3.org/TR/touch-events/#touch-interface\r\n\t\t\t\t\t\tvar src = (e.changedTouches) ? e.changedTouches[0] : e;\r\n\t\t\t\t\t\tfunction createMouseEvent(type){\r\n\t\t\t\t\t\t\t//create the synthetic event.\r\n\t\t\t\t\t\t\t//http://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-initMouseEvent\r\n\t\t\t\t\t\t\tvar evt = document.createEvent(\"MouseEvents\");\r\n\t\t\t\t\t\t\tevt._dojo_click = true;\r\n\t\t\t\t\t\t\tevt.initMouseEvent(type,\r\n\t\t\t\t\t\t\t\ttrue, //bubbles\r\n\t\t\t\t\t\t\t\ttrue, //cancelable\r\n\t\t\t\t\t\t\t\te.view,\r\n\t\t\t\t\t\t\t\te.detail,\r\n\t\t\t\t\t\t\t\tsrc.screenX,\r\n\t\t\t\t\t\t\t\tsrc.screenY,\r\n\t\t\t\t\t\t\t\tsrc.clientX,\r\n\t\t\t\t\t\t\t\tsrc.clientY,\r\n\t\t\t\t\t\t\t\te.ctrlKey,\r\n\t\t\t\t\t\t\t\te.altKey,\r\n\t\t\t\t\t\t\t\te.shiftKey,\r\n\t\t\t\t\t\t\t\te.metaKey,\r\n\t\t\t\t\t\t\t\t0, //button\r\n\t\t\t\t\t\t\t\tnull //related target\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn evt;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar mouseDownEvt = createMouseEvent(\"mousedown\");\r\n\t\t\t\t\t\tvar mouseUpEvt = createMouseEvent(\"mouseup\");\r\n\t\t\t\t\t\tvar clickEvt = createMouseEvent(\"click\");\r\n\r\n\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\ton.emit(target, \"mousedown\", mouseDownEvt);\r\n\t\t\t\t\t\t\ton.emit(target, \"mouseup\", mouseUpEvt);\r\n\t\t\t\t\t\t\ton.emit(target, \"click\", clickEvt);\r\n\r\n\t\t\t\t\t\t\t// refresh clickTime in case app-defined click handler took a long time to run\r\n\t\t\t\t\t\t\tclickTime = (new Date()).getTime();\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t\tfunction stopNativeEvents(type){\r\n\t\t\t\t\twin.doc.addEventListener(type, function(e){\r\n\t\t\t\t\t\t// Stop native events when we emitted our own click event.  Note that the native click may occur\r\n\t\t\t\t\t\t// on a different node than the synthetic click event was generated on.  For example,\r\n\t\t\t\t\t\t// click on a menu item, causing the menu to disappear, and then (~300ms later) the browser\r\n\t\t\t\t\t\t// sends a click event to the node that was *underneath* the menu.  So stop all native events\r\n\t\t\t\t\t\t// sent shortly after ours, similar to what is done in dualEvent.\r\n\t\t\t\t\t\t// The INPUT.dijitOffScreen test is for offscreen inputs used in dijit/form/Button, on which\r\n\t\t\t\t\t\t// we call click() explicitly, we don't want to stop this event.\r\n\t\t\t\t\t\tvar target = e.target;\r\n\t\t\t\t\t\tif(clickTracker && !e._dojo_click &&\r\n\t\t\t\t\t\t\t\t(new Date()).getTime() <= clickTime + 1000 &&\r\n\t\t\t\t\t\t\t\t!(target.tagName == \"INPUT\" && domClass.contains(target, \"dijitOffScreen\"))){\r\n\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\te.stopImmediatePropagation && e.stopImmediatePropagation();\r\n\t\t\t\t\t\t\tif(type == \"click\" &&\r\n\t\t\t\t\t\t\t\t(target.tagName != \"INPUT\" ||\r\n\t\t\t\t\t\t\t\t(target.type == \"radio\" &&\r\n\t\t\t\t\t\t\t\t\t// #18352 Do not preventDefault for radios that are not dijit or\r\n\t\t\t\t\t\t\t\t\t// dojox/mobile widgets.\r\n\t\t\t\t\t\t\t\t\t// (The CSS class dijitCheckBoxInput holds for both checkboxes and radio buttons.)\r\n\t\t\t\t\t\t\t\t\t(domClass.contains(target, \"dijitCheckBoxInput\") ||\r\n\t\t\t\t\t\t\t\t\t\tdomClass.contains(target, \"mblRadioButton\"))) ||\r\n\t\t\t\t\t\t\t\t(target.type == \"checkbox\" &&\r\n\t\t\t\t\t\t\t\t\t// #18352 Do not preventDefault for checkboxes that are not dijit or\r\n\t\t\t\t\t\t\t\t\t// dojox/mobile widgets.\r\n\t\t\t\t\t\t\t\t\t(domClass.contains(target, \"dijitCheckBoxInput\") ||\r\n\t\t\t\t\t\t\t\t\t\tdomClass.contains(target, \"mblCheckBox\")))) &&\r\n\t\t\t\t\t\t\t\ttarget.tagName != \"TEXTAREA\" && target.tagName != \"AUDIO\" && target.tagName != \"VIDEO\"){\r\n\t\t\t\t\t\t\t\t// preventDefault() breaks textual <input>s on android, keyboard doesn't popup,\r\n\t\t\t\t\t\t\t\t// but it is still needed for checkboxes and radio buttons, otherwise in some cases\r\n\t\t\t\t\t\t\t\t// the checked state becomes inconsistent with the widget's state\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstopNativeEvents(\"click\");\r\n\r\n\t\t\t\t// We also stop mousedown/up since these would be sent well after with our \"fast\" click (300ms),\r\n\t\t\t\t// which can confuse some dijit widgets.\r\n\t\t\t\tstopNativeEvents(\"mousedown\");\r\n\t\t\t\tstopNativeEvents(\"mouseup\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar hoveredNode;\r\n\r\n\tif(has(\"touch\")){\r\n\t\tif(hasPointer){\r\n\t\t\t// MSPointer (IE10+) already has support for over and out, so we just need to init click support\r\n\t\t\tdomReady(function(){\r\n\t\t\t\twin.doc.addEventListener(pointer.down, function(evt){\r\n\t\t\t\t\tdoClicks(evt, pointer.move, pointer.up);\r\n\t\t\t\t}, true);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tdomReady(function(){\r\n\t\t\t\t// Keep track of currently hovered node\r\n\t\t\t\thoveredNode = win.body();\t// currently hovered node\r\n\r\n\t\t\t\twin.doc.addEventListener(\"touchstart\", function(evt){\r\n\t\t\t\t\t\tlastTouch = (new Date()).getTime();\r\n\r\n\t\t\t\t\t// Precede touchstart event with touch.over event.  DnD depends on this.\r\n\t\t\t\t\t// Use addEventListener(cb, true) to run cb before any touchstart handlers on node run,\r\n\t\t\t\t\t// and to ensure this code runs even if the listener on the node does event.stop().\r\n\t\t\t\t\tvar oldNode = hoveredNode;\r\n\t\t\t\t\thoveredNode = evt.target;\r\n\t\t\t\t\ton.emit(oldNode, \"dojotouchout\", {\r\n\t\t\t\t\t\trelatedTarget: hoveredNode,\r\n\t\t\t\t\t\tbubbles: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\ton.emit(hoveredNode, \"dojotouchover\", {\r\n\t\t\t\t\t\trelatedTarget: oldNode,\r\n\t\t\t\t\t\tbubbles: true\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdoClicks(evt, \"touchmove\", \"touchend\"); // init click generation\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t\tfunction copyEventProps(evt){\r\n\t\t\t\t\t// Make copy of event object and also set bubbles:true.  Used when calling on.emit().\r\n\t\t\t\t\tvar props = lang.delegate(evt, {\r\n\t\t\t\t\t\tbubbles: true\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif(has(\"ios\") >= 6){\r\n\t\t\t\t\t\t// On iOS6 \"touches\" became a non-enumerable property, which\r\n\t\t\t\t\t\t// is not hit by for...in.  Ditto for the other properties below.\r\n\t\t\t\t\t\tprops.touches = evt.touches;\r\n\t\t\t\t\t\tprops.altKey = evt.altKey;\r\n\t\t\t\t\t\tprops.changedTouches = evt.changedTouches;\r\n\t\t\t\t\t\tprops.ctrlKey = evt.ctrlKey;\r\n\t\t\t\t\t\tprops.metaKey = evt.metaKey;\r\n\t\t\t\t\t\tprops.shiftKey = evt.shiftKey;\r\n\t\t\t\t\t\tprops.targetTouches = evt.targetTouches;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn props;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ton(win.doc, \"touchmove\", function(evt){\r\n\t\t\t\t\tlastTouch = (new Date()).getTime();\r\n\r\n\t\t\t\t\tvar newNode = win.doc.elementFromPoint(\r\n\t\t\t\t\t\tevt.pageX - (ios4 ? 0 : win.global.pageXOffset), // iOS 4 expects page coords\r\n\t\t\t\t\t\tevt.pageY - (ios4 ? 0 : win.global.pageYOffset)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif(newNode){\r\n\t\t\t\t\t\t// Fire synthetic touchover and touchout events on nodes since the browser won't do it natively.\r\n\t\t\t\t\t\tif(hoveredNode !== newNode){\r\n\t\t\t\t\t\t\t// touch out on the old node\r\n\t\t\t\t\t\t\ton.emit(hoveredNode, \"dojotouchout\", {\r\n\t\t\t\t\t\t\t\trelatedTarget: newNode,\r\n\t\t\t\t\t\t\t\tbubbles: true\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// touchover on the new node\r\n\t\t\t\t\t\t\ton.emit(newNode, \"dojotouchover\", {\r\n\t\t\t\t\t\t\t\trelatedTarget: hoveredNode,\r\n\t\t\t\t\t\t\t\tbubbles: true\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\thoveredNode = newNode;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Unlike a listener on \"touchmove\", on(node, \"dojotouchmove\", listener) fires when the finger\r\n\t\t\t\t\t\t// drags over the specified node, regardless of which node the touch started on.\r\n\t\t\t\t\t\tif(!on.emit(newNode, \"dojotouchmove\", copyEventProps(evt))){\r\n\t\t\t\t\t\t\t// emit returns false when synthetic event \"dojotouchmove\" is cancelled, so we prevent the\r\n\t\t\t\t\t\t\t// default behavior of the underlying native event \"touchmove\".\r\n\t\t\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Fire a dojotouchend event on the node where the finger was before it was removed from the screen.\r\n\t\t\t\t// This is different than the native touchend, which fires on the node where the drag started.\r\n\t\t\t\ton(win.doc, \"touchend\", function(evt){\r\n\t\t\t\t\t\tlastTouch = (new Date()).getTime();\r\n\t\t\t\t\tvar node = win.doc.elementFromPoint(\r\n\t\t\t\t\t\tevt.pageX - (ios4 ? 0 : win.global.pageXOffset), // iOS 4 expects page coords\r\n\t\t\t\t\t\tevt.pageY - (ios4 ? 0 : win.global.pageYOffset)\r\n\t\t\t\t\t) || win.body(); // if out of the screen\r\n\r\n\t\t\t\t\ton.emit(node, \"dojotouchend\", copyEventProps(evt));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//device neutral events - touch.press|move|release|cancel/over/out\r\n\tvar touch = {\r\n\t\tpress: dualEvent(\"mousedown\", \"touchstart\", pointer.down),\r\n\t\tmove: dualEvent(\"mousemove\", \"dojotouchmove\", pointer.move),\r\n\t\trelease: dualEvent(\"mouseup\", \"dojotouchend\", pointer.up),\r\n\t\tcancel: dualEvent(mouse.leave, \"touchcancel\", hasPointer ? pointer.cancel : null),\r\n\t\tover: dualEvent(\"mouseover\", \"dojotouchover\", pointer.over),\r\n\t\tout: dualEvent(\"mouseout\", \"dojotouchout\", pointer.out),\r\n\t\tenter: mouse._eventHandler(dualEvent(\"mouseover\",\"dojotouchover\", pointer.over)),\r\n\t\tleave: mouse._eventHandler(dualEvent(\"mouseout\", \"dojotouchout\", pointer.out))\r\n\t};\r\n\r\n\t/*=====\r\n\ttouch = {\r\n\t\t// summary:\r\n\t\t//\t\tThis module provides unified touch event handlers by exporting\r\n\t\t//\t\tpress, move, release and cancel which can also run well on desktop.\r\n\t\t//\t\tBased on http://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html\r\n\t\t//      Also, if the dojoClick property is set to truthy on a DOM node, dojo/touch generates\r\n\t\t//      click events immediately for this node and its descendants (except for descendants that\r\n\t\t//      have a dojoClick property set to falsy), to avoid the delay before native browser click events,\r\n\t\t//      and regardless of whether evt.preventDefault() was called in a touch.press event listener.\r\n\t\t//\r\n\t\t// example:\r\n\t\t//\t\tUsed with dojo/on\r\n\t\t//\t\t|\tdefine([\"dojo/on\", \"dojo/touch\"], function(on, touch){\r\n\t\t//\t\t|\t\ton(node, touch.press, function(e){});\r\n\t\t//\t\t|\t\ton(node, touch.move, function(e){});\r\n\t\t//\t\t|\t\ton(node, touch.release, function(e){});\r\n\t\t//\t\t|\t\ton(node, touch.cancel, function(e){});\r\n\t\t// example:\r\n\t\t//\t\tUsed with touch.* directly\r\n\t\t//\t\t|\ttouch.press(node, function(e){});\r\n\t\t//\t\t|\ttouch.move(node, function(e){});\r\n\t\t//\t\t|\ttouch.release(node, function(e){});\r\n\t\t//\t\t|\ttouch.cancel(node, function(e){});\r\n\t\t// example:\r\n\t\t//\t\tHave dojo/touch generate clicks without delay, with a default move threshold of 4 pixels\r\n\t\t//\t\t|\tnode.dojoClick = true;\r\n\t\t// example:\r\n\t\t//\t\tHave dojo/touch generate clicks without delay, with a move threshold of 10 pixels horizontally and vertically\r\n\t\t//\t\t|\tnode.dojoClick = 10;\r\n\t\t// example:\r\n\t\t//\t\tHave dojo/touch generate clicks without delay, with a move threshold of 50 pixels horizontally and 10 pixels vertically\r\n\t\t//\t\t|\tnode.dojoClick = {x:50, y:5};\r\n\t\t// example:\r\n\t\t//\t\tDisable clicks without delay generated by dojo/touch on a node that has an ancestor with property dojoClick set to truthy\r\n\t\t//\t\t|  node.dojoClick = false;\r\n\r\n\t\tpress: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to 'touchstart'|'mousedown' for the given node\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\tmove: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener that fires when the mouse cursor or a finger is dragged over the given node.\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\trelease: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to releasing the mouse button while the cursor is over the given node\r\n\t\t\t//\t\t(i.e. \"mouseup\") or for removing the finger from the screen while touching the given node.\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\tcancel: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to 'touchcancel'|'mouseleave' for the given node\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\tover: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to 'mouseover' or touch equivalent for the given node\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\tout: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to 'mouseout' or touch equivalent for the given node\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\tenter: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to mouse.enter or touch equivalent for the given node\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t},\r\n\t\tleave: function(node, listener){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tRegister a listener to mouse.leave or touch equivalent for the given node\r\n\t\t\t// node: Dom\r\n\t\t\t//\t\tTarget node to listen to\r\n\t\t\t// listener: Function\r\n\t\t\t//\t\tCallback function\r\n\t\t\t// returns:\r\n\t\t\t//\t\tA handle which will be used to remove the listener by handle.remove()\r\n\t\t}\r\n\t};\r\n\t=====*/\r\n\r\n\thas(\"extend-dojo\") && (dojo.touch = touch);\r\n\r\n\treturn touch;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby90b3VjaC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pvL3RvdWNoLmpzPzkzMmIiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcIi4vX2Jhc2Uva2VybmVsXCIsIFwiLi9hc3BlY3RcIiwgXCIuL2RvbVwiLCBcIi4vZG9tLWNsYXNzXCIsIFwiLi9fYmFzZS9sYW5nXCIsIFwiLi9vblwiLCBcIi4vaGFzXCIsIFwiLi9tb3VzZVwiLCBcIi4vZG9tUmVhZHlcIiwgXCIuL19iYXNlL3dpbmRvd1wiXSxcclxuZnVuY3Rpb24oZG9qbywgYXNwZWN0LCBkb20sIGRvbUNsYXNzLCBsYW5nLCBvbiwgaGFzLCBtb3VzZSwgZG9tUmVhZHksIHdpbil7XHJcblxyXG5cdC8vIG1vZHVsZTpcclxuXHQvL1x0XHRkb2pvL3RvdWNoXHJcblxyXG5cdHZhciBpb3M0ID0gaGFzKFwiaW9zXCIpIDwgNTtcclxuXHJcblx0Ly8gRGV0ZWN0IGlmIHBsYXRmb3JtIHN1cHBvcnRzIFBvaW50ZXIgRXZlbnRzLCBhbmQgaWYgc28sIHRoZSBuYW1lcyBvZiB0aGUgZXZlbnRzIChwb2ludGVyZG93biB2cy4gTVNQb2ludGVyRG93bikuXHJcblx0dmFyIGhhc1BvaW50ZXIgPSBoYXMoXCJwb2ludGVyLWV2ZW50c1wiKSB8fCBoYXMoXCJNU1BvaW50ZXJcIiksXHJcblx0XHRwb2ludGVyID0gKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0dmFyIHBvaW50ZXIgPSB7fTtcclxuXHRcdFx0Zm9yICh2YXIgdHlwZSBpbiB7IGRvd246IDEsIG1vdmU6IDEsIHVwOiAxLCBjYW5jZWw6IDEsIG92ZXI6IDEsIG91dDogMSB9KSB7XHJcblx0XHRcdFx0cG9pbnRlclt0eXBlXSA9IGhhcyhcIk1TUG9pbnRlclwiKSA/XHJcblx0XHRcdFx0XHRcIk1TUG9pbnRlclwiICsgdHlwZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHR5cGUuc2xpY2UoMSkgOlxyXG5cdFx0XHRcdFx0XCJwb2ludGVyXCIgKyB0eXBlO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBwb2ludGVyO1xyXG5cdFx0fSkoKTtcclxuXHJcblx0Ly8gRGV0ZWN0IGlmIHBsYXRmb3JtIHN1cHBvcnRzIHRoZSB3ZWJraXQgdG91Y2hzdGFydC90b3VjaGVuZC8uLi4gZXZlbnRzXHJcblx0dmFyIGhhc1RvdWNoID0gaGFzKFwidG91Y2gtZXZlbnRzXCIpO1xyXG5cclxuXHQvLyBDbGljayBnZW5lcmF0aW9uIHZhcmlhYmxlc1xyXG5cdHZhciBjbGlja3NJbml0ZWQsIGNsaWNrVHJhY2tlciwgdXNlVGFyZ2V0ID0gZmFsc2UsIGNsaWNrVGFyZ2V0LCBjbGlja1gsIGNsaWNrWSwgY2xpY2tEeCwgY2xpY2tEeSwgY2xpY2tUaW1lO1xyXG5cclxuXHQvLyBUaW1lIG9mIG1vc3QgcmVjZW50IHRvdWNoc3RhcnQsIHRvdWNobW92ZSwgb3IgdG91Y2hlbmQgZXZlbnRcclxuXHR2YXIgbGFzdFRvdWNoO1xyXG5cclxuXHRmdW5jdGlvbiBkdWFsRXZlbnQobW91c2VUeXBlLCB0b3VjaFR5cGUsIHBvaW50ZXJUeXBlKXtcclxuXHRcdC8vIFJldHVybnMgc3ludGhldGljIGV2ZW50IHRoYXQgbGlzdGVucyBmb3IgYm90aCB0aGUgc3BlY2lmaWVkIG1vdXNlIGV2ZW50IGFuZCBzcGVjaWZpZWQgdG91Y2ggZXZlbnQuXHJcblx0XHQvLyBCdXQgaWdub3JlIGZha2UgbW91c2UgZXZlbnRzIHRoYXQgd2VyZSBnZW5lcmF0ZWQgZHVlIHRvIHRoZSB1c2VyIHRvdWNoaW5nIHRoZSBzY3JlZW4uXHJcblx0XHRpZihoYXNQb2ludGVyICYmIHBvaW50ZXJUeXBlKXtcclxuXHRcdFx0Ly8gSUUxMCs6IE1TUG9pbnRlciogZXZlbnRzIGFyZSBkZXNpZ25lZCB0byBoYW5kbGUgYm90aCBtb3VzZSBhbmQgdG91Y2ggaW4gYSB1bmlmb3JtIHdheSxcclxuXHRcdFx0Ly8gc28ganVzdCB1c2UgdGhhdCByZWdhcmRsZXNzIG9mIGhhc1RvdWNoLlxyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHRcdHJldHVybiBvbihub2RlLCBwb2ludGVyVHlwZSwgbGlzdGVuZXIpO1xyXG5cdFx0XHR9O1xyXG5cdFx0fWVsc2UgaWYoaGFzVG91Y2gpe1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHRcdHZhciBoYW5kbGUxID0gb24obm9kZSwgdG91Y2hUeXBlLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdFx0XHRsaXN0ZW5lci5jYWxsKHRoaXMsIGV2dCk7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBPbiBzbG93IG1vYmlsZSBicm93c2VycyAoc2VlIGh0dHBzOi8vYnVncy5kb2pvdG9vbGtpdC5vcmcvdGlja2V0LzE3NjM0KSxcclxuXHRcdFx0XHRcdFx0Ly8gYSBoYW5kbGVyIGZvciBhIHRvdWNoIGV2ZW50IG1heSB0YWtlID4xcyB0byBydW4uICBUaGF0IHRpbWUgc2hvdWxkbid0XHJcblx0XHRcdFx0XHRcdC8vIGJlIGluY2x1ZGVkIGluIHRoZSBjYWxjdWxhdGlvbiBmb3IgbGFzdFRvdWNoLlxyXG5cdFx0XHRcdFx0XHRsYXN0VG91Y2ggPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xyXG5cdFx0XHRcdFx0fSksXHJcblx0XHRcdFx0XHRoYW5kbGUyID0gb24obm9kZSwgbW91c2VUeXBlLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdFx0XHRpZighbGFzdFRvdWNoIHx8IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgPiBsYXN0VG91Y2ggKyAxMDAwKXtcclxuXHRcdFx0XHRcdFx0XHRsaXN0ZW5lci5jYWxsKHRoaXMsIGV2dCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0XHRyZW1vdmU6IGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRcdGhhbmRsZTEucmVtb3ZlKCk7XHJcblx0XHRcdFx0XHRcdGhhbmRsZTIucmVtb3ZlKCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fTtcclxuXHRcdFx0fTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHQvLyBBdm9pZCBjcmVhdGluZyBsaXN0ZW5lcnMgZm9yIHRvdWNoIGV2ZW50cyBvbiBwZXJmb3JtYW5jZSBzZW5zaXRpdmUgb2xkZXIgYnJvd3NlcnMgbGlrZSBJRTZcclxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKG5vZGUsIGxpc3RlbmVyKXtcclxuXHRcdFx0XHRyZXR1cm4gb24obm9kZSwgbW91c2VUeXBlLCBsaXN0ZW5lcik7XHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBtYXJrZWQoLypET01Ob2RlKi8gbm9kZSl7XHJcblx0XHQvLyBTZWFyY2ggZm9yIG5vZGUgYW5jZXN0b3IgaGFzIGJlZW4gbWFya2VkIHdpdGggdGhlIGRvam9DbGljayBwcm9wZXJ0eSB0byBpbmRpY2F0ZSBzcGVjaWFsIHByb2Nlc3NpbmcuXHJcblx0XHQvLyBSZXR1cm5zIG1hcmtlZCBhbmNlc3Rvci5cclxuXHRcdGRve1xyXG5cdFx0XHRpZihub2RlLmRvam9DbGljayAhPT0gdW5kZWZpbmVkKXsgcmV0dXJuIG5vZGU7IH1cclxuXHRcdH13aGlsZShub2RlID0gbm9kZS5wYXJlbnROb2RlKTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGRvQ2xpY2tzKGUsIG1vdmVUeXBlLCBlbmRUeXBlKXtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRTZXR1cCB0b3VjaCBsaXN0ZW5lcnMgdG8gZ2VuZXJhdGUgc3ludGhldGljIGNsaWNrcyBpbW1lZGlhdGVseSAocmF0aGVyIHRoYW4gd2FpdGluZyBmb3IgdGhlIGJyb3dzZXJcclxuXHRcdC8vXHRcdHRvIGdlbmVyYXRlIGNsaWNrcyBhZnRlciB0aGUgZG91YmxlLXRhcCBkZWxheSkgYW5kIGNvbnNpc3RlbnRseSAocmVnYXJkbGVzcyBvZiB3aGV0aGVyIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuXHRcdC8vXHRcdHdhcyBjYWxsZWQgaW4gYW4gZXZlbnQgbGlzdGVuZXIuIFN5bnRoZXRpYyBjbGlja3MgYXJlIGdlbmVyYXRlZCBvbmx5IGlmIGEgbm9kZSBvciBvbmUgb2YgaXRzIGFuY2VzdG9ycyBoYXNcclxuXHRcdC8vXHRcdGl0cyBkb2pvQ2xpY2sgcHJvcGVydHkgc2V0IHRvIHRydXRoeS4gSWYgYSBub2RlIHJlY2VpdmVzIHN5bnRoZXRpYyBjbGlja3MgYmVjYXVzZSBvbmUgb2YgaXRzIGFuY2VzdG9ycyBoYXMgaXRzXHJcblx0XHQvLyAgICAgIGRvam9DbGljayBwcm9wZXJ0eSBzZXQgdG8gdHJ1dGh5LCB5b3UgY2FuIGRpc2FibGUgc3ludGhldGljIGNsaWNrcyBvbiB0aGlzIG5vZGUgYnkgc2V0dGluZyBpdHMgb3duIGRvam9DbGljayBwcm9wZXJ0eVxyXG5cdFx0Ly8gICAgICB0byBmYWxzeS5cclxuXHJcblx0XHRpZihtb3VzZS5pc1JpZ2h0KGUpKXtcclxuXHRcdFx0cmV0dXJuO1x0XHQvLyBhdm9pZCBzcHVyaW91cyBkb2pvY2xpY2sgZXZlbnQgb24gSUUxMCs7IHJpZ2h0IGNsaWNrIGlzIGp1c3QgZm9yIGNvbnRleHQgbWVudVxyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBtYXJrZWROb2RlID0gbWFya2VkKGUudGFyZ2V0KTtcclxuXHRcdGNsaWNrVHJhY2tlciAgPSAhZS50YXJnZXQuZGlzYWJsZWQgJiYgbWFya2VkTm9kZSAmJiBtYXJrZWROb2RlLmRvam9DbGljazsgLy8gY2xpY2sgdGhyZXNob2xkID0gdHJ1ZSwgbnVtYmVyLCB4L3kgb2JqZWN0LCBvciBcInVzZVRhcmdldFwiXHJcblx0XHRpZihjbGlja1RyYWNrZXIpe1xyXG5cdFx0XHR1c2VUYXJnZXQgPSAoY2xpY2tUcmFja2VyID09IFwidXNlVGFyZ2V0XCIpO1xyXG5cdFx0XHRjbGlja1RhcmdldCA9ICh1c2VUYXJnZXQ/bWFya2VkTm9kZTplLnRhcmdldCk7XHJcblx0XHRcdGlmKHVzZVRhcmdldCl7XHJcblx0XHRcdFx0Ly8gV2UgZXhwZWN0IGEgY2xpY2ssIHNvIHByZXZlbnQgYW55IG90aGVyXHJcblx0XHRcdFx0Ly8gZGVmYXVsdCBhY3Rpb24gb24gXCJ0b3VjaHByZXNzXCJcclxuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdH1cclxuXHRcdFx0Y2xpY2tYID0gZS5jaGFuZ2VkVG91Y2hlcyA/IGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVggLSB3aW4uZ2xvYmFsLnBhZ2VYT2Zmc2V0IDogZS5jbGllbnRYO1xyXG5cdFx0XHRjbGlja1kgPSBlLmNoYW5nZWRUb3VjaGVzID8gZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSAtIHdpbi5nbG9iYWwucGFnZVlPZmZzZXQgOiBlLmNsaWVudFk7XHJcblx0XHRcdGNsaWNrRHggPSAodHlwZW9mIGNsaWNrVHJhY2tlciA9PSBcIm9iamVjdFwiID8gY2xpY2tUcmFja2VyLnggOiAodHlwZW9mIGNsaWNrVHJhY2tlciA9PSBcIm51bWJlclwiID8gY2xpY2tUcmFja2VyIDogMCkpIHx8IDQ7XHJcblx0XHRcdGNsaWNrRHkgPSAodHlwZW9mIGNsaWNrVHJhY2tlciA9PSBcIm9iamVjdFwiID8gY2xpY2tUcmFja2VyLnkgOiAodHlwZW9mIGNsaWNrVHJhY2tlciA9PSBcIm51bWJlclwiID8gY2xpY2tUcmFja2VyIDogMCkpIHx8IDQ7XHJcblxyXG5cdFx0XHQvLyBhZGQgbW92ZS9lbmQgaGFuZGxlcnMgb25seSB0aGUgZmlyc3QgdGltZSBhIG5vZGUgd2l0aCBkb2pvQ2xpY2sgaXMgc2VlbixcclxuXHRcdFx0Ly8gc28gd2UgZG9uJ3QgYWRkIHRvbyBtdWNoIG92ZXJoZWFkIHdoZW4gZG9qb0NsaWNrIGlzIG5ldmVyIHNldC5cclxuXHRcdFx0aWYoIWNsaWNrc0luaXRlZCl7XHJcblx0XHRcdFx0Y2xpY2tzSW5pdGVkID0gdHJ1ZTtcclxuXHJcblx0XHRcdFx0ZnVuY3Rpb24gdXBkYXRlQ2xpY2tUcmFja2VyKGUpe1xyXG5cdFx0XHRcdFx0aWYodXNlVGFyZ2V0KXtcclxuXHRcdFx0XHRcdFx0Y2xpY2tUcmFja2VyID0gZG9tLmlzRGVzY2VuZGFudChcclxuXHRcdFx0XHRcdFx0XHR3aW4uZG9jLmVsZW1lbnRGcm9tUG9pbnQoXHJcblx0XHRcdFx0XHRcdFx0XHQoZS5jaGFuZ2VkVG91Y2hlcyA/IGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVggLSB3aW4uZ2xvYmFsLnBhZ2VYT2Zmc2V0IDogZS5jbGllbnRYKSxcclxuXHRcdFx0XHRcdFx0XHRcdChlLmNoYW5nZWRUb3VjaGVzID8gZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSAtIHdpbi5nbG9iYWwucGFnZVlPZmZzZXQgOiBlLmNsaWVudFkpKSxcclxuXHRcdFx0XHRcdFx0XHRjbGlja1RhcmdldCk7XHJcblx0XHRcdFx0XHR9ZWxzZXtcclxuXHRcdFx0XHRcdFx0Y2xpY2tUcmFja2VyID0gY2xpY2tUcmFja2VyICYmXHJcblx0XHRcdFx0XHRcdFx0KGUuY2hhbmdlZFRvdWNoZXMgPyBlLmNoYW5nZWRUb3VjaGVzWzBdLnRhcmdldCA6IGUudGFyZ2V0KSA9PSBjbGlja1RhcmdldCAmJlxyXG5cdFx0XHRcdFx0XHRcdE1hdGguYWJzKChlLmNoYW5nZWRUb3VjaGVzID8gZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWCAtIHdpbi5nbG9iYWwucGFnZVhPZmZzZXQgOiBlLmNsaWVudFgpIC0gY2xpY2tYKSA8PSBjbGlja0R4ICYmXHJcblx0XHRcdFx0XHRcdFx0TWF0aC5hYnMoKGUuY2hhbmdlZFRvdWNoZXMgPyBlLmNoYW5nZWRUb3VjaGVzWzBdLnBhZ2VZIC0gd2luLmdsb2JhbC5wYWdlWU9mZnNldCA6IGUuY2xpZW50WSkgLSBjbGlja1kpIDw9IGNsaWNrRHk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHR3aW4uZG9jLmFkZEV2ZW50TGlzdGVuZXIobW92ZVR5cGUsIGZ1bmN0aW9uKGUpe1xyXG5cdFx0XHRcdFx0aWYobW91c2UuaXNSaWdodChlKSl7XHJcblx0XHRcdFx0XHRcdHJldHVybjtcdFx0Ly8gYXZvaWQgc3B1cmlvdXMgZG9qb2NsaWNrIGV2ZW50IG9uIElFMTArOyByaWdodCBjbGljayBpcyBqdXN0IGZvciBjb250ZXh0IG1lbnVcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHVwZGF0ZUNsaWNrVHJhY2tlcihlKTtcclxuXHRcdFx0XHRcdGlmKHVzZVRhcmdldCl7XHJcblx0XHRcdFx0XHRcdC8vIHByZXZlbnQgbmF0aXZlIHNjcm9sbCBldmVudCBhbmQgZW5zdXJlIHRvdWNoZW5kIGlzXHJcblx0XHRcdFx0XHRcdC8vIGZpcmUgYWZ0ZXIgdG91Y2ggbW92ZXMgYmV0d2VlbiBwcmVzcyBhbmQgcmVsZWFzZS5cclxuXHRcdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sIHRydWUpO1xyXG5cclxuXHRcdFx0XHR3aW4uZG9jLmFkZEV2ZW50TGlzdGVuZXIoZW5kVHlwZSwgZnVuY3Rpb24oZSl7XHJcblx0XHRcdFx0XHRpZihtb3VzZS5pc1JpZ2h0KGUpKXtcclxuXHRcdFx0XHRcdFx0cmV0dXJuO1x0XHQvLyBhdm9pZCBzcHVyaW91cyBkb2pvY2xpY2sgZXZlbnQgb24gSUUxMCs7IHJpZ2h0IGNsaWNrIGlzIGp1c3QgZm9yIGNvbnRleHQgbWVudVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0dXBkYXRlQ2xpY2tUcmFja2VyKGUpO1xyXG5cdFx0XHRcdFx0aWYoY2xpY2tUcmFja2VyKXtcclxuXHRcdFx0XHRcdFx0Y2xpY2tUaW1lID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcclxuXHRcdFx0XHRcdFx0dmFyIHRhcmdldCA9ICh1c2VUYXJnZXQ/Y2xpY2tUYXJnZXQ6ZS50YXJnZXQpO1xyXG5cdFx0XHRcdFx0XHRpZih0YXJnZXQudGFnTmFtZSA9PT0gXCJMQUJFTFwiKXtcclxuXHRcdFx0XHRcdFx0XHQvLyB3aGVuIGNsaWNraW5nIG9uIGEgbGFiZWwsIGZvcndhcmQgY2xpY2sgdG8gaXRzIGFzc29jaWF0ZWQgaW5wdXQgaWYgYW55XHJcblx0XHRcdFx0XHRcdFx0dGFyZ2V0ID0gZG9tLmJ5SWQodGFyZ2V0LmdldEF0dHJpYnV0ZShcImZvclwiKSkgfHwgdGFyZ2V0O1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdC8vc29tZSBhdHRyaWJ1dGVzIGNhbiBiZSBvbiB0aGUgVG91Y2ggb2JqZWN0LCBub3Qgb24gdGhlIEV2ZW50OlxyXG5cdFx0XHRcdFx0XHQvL2h0dHA6Ly93d3cudzMub3JnL1RSL3RvdWNoLWV2ZW50cy8jdG91Y2gtaW50ZXJmYWNlXHJcblx0XHRcdFx0XHRcdHZhciBzcmMgPSAoZS5jaGFuZ2VkVG91Y2hlcykgPyBlLmNoYW5nZWRUb3VjaGVzWzBdIDogZTtcclxuXHRcdFx0XHRcdFx0ZnVuY3Rpb24gY3JlYXRlTW91c2VFdmVudCh0eXBlKXtcclxuXHRcdFx0XHRcdFx0XHQvL2NyZWF0ZSB0aGUgc3ludGhldGljIGV2ZW50LlxyXG5cdFx0XHRcdFx0XHRcdC8vaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyN3aWRsLU1vdXNlRXZlbnQtaW5pdE1vdXNlRXZlbnRcclxuXHRcdFx0XHRcdFx0XHR2YXIgZXZ0ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJNb3VzZUV2ZW50c1wiKTtcclxuXHRcdFx0XHRcdFx0XHRldnQuX2Rvam9fY2xpY2sgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHRcdGV2dC5pbml0TW91c2VFdmVudCh0eXBlLFxyXG5cdFx0XHRcdFx0XHRcdFx0dHJ1ZSwgLy9idWJibGVzXHJcblx0XHRcdFx0XHRcdFx0XHR0cnVlLCAvL2NhbmNlbGFibGVcclxuXHRcdFx0XHRcdFx0XHRcdGUudmlldyxcclxuXHRcdFx0XHRcdFx0XHRcdGUuZGV0YWlsLFxyXG5cdFx0XHRcdFx0XHRcdFx0c3JjLnNjcmVlblgsXHJcblx0XHRcdFx0XHRcdFx0XHRzcmMuc2NyZWVuWSxcclxuXHRcdFx0XHRcdFx0XHRcdHNyYy5jbGllbnRYLFxyXG5cdFx0XHRcdFx0XHRcdFx0c3JjLmNsaWVudFksXHJcblx0XHRcdFx0XHRcdFx0XHRlLmN0cmxLZXksXHJcblx0XHRcdFx0XHRcdFx0XHRlLmFsdEtleSxcclxuXHRcdFx0XHRcdFx0XHRcdGUuc2hpZnRLZXksXHJcblx0XHRcdFx0XHRcdFx0XHRlLm1ldGFLZXksXHJcblx0XHRcdFx0XHRcdFx0XHQwLCAvL2J1dHRvblxyXG5cdFx0XHRcdFx0XHRcdFx0bnVsbCAvL3JlbGF0ZWQgdGFyZ2V0XHJcblx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZXZ0O1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdHZhciBtb3VzZURvd25FdnQgPSBjcmVhdGVNb3VzZUV2ZW50KFwibW91c2Vkb3duXCIpO1xyXG5cdFx0XHRcdFx0XHR2YXIgbW91c2VVcEV2dCA9IGNyZWF0ZU1vdXNlRXZlbnQoXCJtb3VzZXVwXCIpO1xyXG5cdFx0XHRcdFx0XHR2YXIgY2xpY2tFdnQgPSBjcmVhdGVNb3VzZUV2ZW50KFwiY2xpY2tcIik7XHJcblxyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRcdFx0b24uZW1pdCh0YXJnZXQsIFwibW91c2Vkb3duXCIsIG1vdXNlRG93bkV2dCk7XHJcblx0XHRcdFx0XHRcdFx0b24uZW1pdCh0YXJnZXQsIFwibW91c2V1cFwiLCBtb3VzZVVwRXZ0KTtcclxuXHRcdFx0XHRcdFx0XHRvbi5lbWl0KHRhcmdldCwgXCJjbGlja1wiLCBjbGlja0V2dCk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIHJlZnJlc2ggY2xpY2tUaW1lIGluIGNhc2UgYXBwLWRlZmluZWQgY2xpY2sgaGFuZGxlciB0b29rIGEgbG9uZyB0aW1lIHRvIHJ1blxyXG5cdFx0XHRcdFx0XHRcdGNsaWNrVGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcblx0XHRcdFx0XHRcdH0sIDApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sIHRydWUpO1xyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBzdG9wTmF0aXZlRXZlbnRzKHR5cGUpe1xyXG5cdFx0XHRcdFx0d2luLmRvYy5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGZ1bmN0aW9uKGUpe1xyXG5cdFx0XHRcdFx0XHQvLyBTdG9wIG5hdGl2ZSBldmVudHMgd2hlbiB3ZSBlbWl0dGVkIG91ciBvd24gY2xpY2sgZXZlbnQuICBOb3RlIHRoYXQgdGhlIG5hdGl2ZSBjbGljayBtYXkgb2NjdXJcclxuXHRcdFx0XHRcdFx0Ly8gb24gYSBkaWZmZXJlbnQgbm9kZSB0aGFuIHRoZSBzeW50aGV0aWMgY2xpY2sgZXZlbnQgd2FzIGdlbmVyYXRlZCBvbi4gIEZvciBleGFtcGxlLFxyXG5cdFx0XHRcdFx0XHQvLyBjbGljayBvbiBhIG1lbnUgaXRlbSwgY2F1c2luZyB0aGUgbWVudSB0byBkaXNhcHBlYXIsIGFuZCB0aGVuICh+MzAwbXMgbGF0ZXIpIHRoZSBicm93c2VyXHJcblx0XHRcdFx0XHRcdC8vIHNlbmRzIGEgY2xpY2sgZXZlbnQgdG8gdGhlIG5vZGUgdGhhdCB3YXMgKnVuZGVybmVhdGgqIHRoZSBtZW51LiAgU28gc3RvcCBhbGwgbmF0aXZlIGV2ZW50c1xyXG5cdFx0XHRcdFx0XHQvLyBzZW50IHNob3J0bHkgYWZ0ZXIgb3Vycywgc2ltaWxhciB0byB3aGF0IGlzIGRvbmUgaW4gZHVhbEV2ZW50LlxyXG5cdFx0XHRcdFx0XHQvLyBUaGUgSU5QVVQuZGlqaXRPZmZTY3JlZW4gdGVzdCBpcyBmb3Igb2Zmc2NyZWVuIGlucHV0cyB1c2VkIGluIGRpaml0L2Zvcm0vQnV0dG9uLCBvbiB3aGljaFxyXG5cdFx0XHRcdFx0XHQvLyB3ZSBjYWxsIGNsaWNrKCkgZXhwbGljaXRseSwgd2UgZG9uJ3Qgd2FudCB0byBzdG9wIHRoaXMgZXZlbnQuXHJcblx0XHRcdFx0XHRcdHZhciB0YXJnZXQgPSBlLnRhcmdldDtcclxuXHRcdFx0XHRcdFx0aWYoY2xpY2tUcmFja2VyICYmICFlLl9kb2pvX2NsaWNrICYmXHJcblx0XHRcdFx0XHRcdFx0XHQobmV3IERhdGUoKSkuZ2V0VGltZSgpIDw9IGNsaWNrVGltZSArIDEwMDAgJiZcclxuXHRcdFx0XHRcdFx0XHRcdCEodGFyZ2V0LnRhZ05hbWUgPT0gXCJJTlBVVFwiICYmIGRvbUNsYXNzLmNvbnRhaW5zKHRhcmdldCwgXCJkaWppdE9mZlNjcmVlblwiKSkpe1xyXG5cdFx0XHRcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0XHRcdFx0ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24gJiYgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHRcdFx0XHRpZih0eXBlID09IFwiY2xpY2tcIiAmJlxyXG5cdFx0XHRcdFx0XHRcdFx0KHRhcmdldC50YWdOYW1lICE9IFwiSU5QVVRcIiB8fFxyXG5cdFx0XHRcdFx0XHRcdFx0KHRhcmdldC50eXBlID09IFwicmFkaW9cIiAmJlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyAjMTgzNTIgRG8gbm90IHByZXZlbnREZWZhdWx0IGZvciByYWRpb3MgdGhhdCBhcmUgbm90IGRpaml0IG9yXHJcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGRvam94L21vYmlsZSB3aWRnZXRzLlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyAoVGhlIENTUyBjbGFzcyBkaWppdENoZWNrQm94SW5wdXQgaG9sZHMgZm9yIGJvdGggY2hlY2tib3hlcyBhbmQgcmFkaW8gYnV0dG9ucy4pXHJcblx0XHRcdFx0XHRcdFx0XHRcdChkb21DbGFzcy5jb250YWlucyh0YXJnZXQsIFwiZGlqaXRDaGVja0JveElucHV0XCIpIHx8XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZG9tQ2xhc3MuY29udGFpbnModGFyZ2V0LCBcIm1ibFJhZGlvQnV0dG9uXCIpKSkgfHxcclxuXHRcdFx0XHRcdFx0XHRcdCh0YXJnZXQudHlwZSA9PSBcImNoZWNrYm94XCIgJiZcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gIzE4MzUyIERvIG5vdCBwcmV2ZW50RGVmYXVsdCBmb3IgY2hlY2tib3hlcyB0aGF0IGFyZSBub3QgZGlqaXQgb3JcclxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gZG9qb3gvbW9iaWxlIHdpZGdldHMuXHJcblx0XHRcdFx0XHRcdFx0XHRcdChkb21DbGFzcy5jb250YWlucyh0YXJnZXQsIFwiZGlqaXRDaGVja0JveElucHV0XCIpIHx8XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZG9tQ2xhc3MuY29udGFpbnModGFyZ2V0LCBcIm1ibENoZWNrQm94XCIpKSkpICYmXHJcblx0XHRcdFx0XHRcdFx0XHR0YXJnZXQudGFnTmFtZSAhPSBcIlRFWFRBUkVBXCIgJiYgdGFyZ2V0LnRhZ05hbWUgIT0gXCJBVURJT1wiICYmIHRhcmdldC50YWdOYW1lICE9IFwiVklERU9cIil7XHJcblx0XHRcdFx0XHRcdFx0XHQvLyBwcmV2ZW50RGVmYXVsdCgpIGJyZWFrcyB0ZXh0dWFsIDxpbnB1dD5zIG9uIGFuZHJvaWQsIGtleWJvYXJkIGRvZXNuJ3QgcG9wdXAsXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBidXQgaXQgaXMgc3RpbGwgbmVlZGVkIGZvciBjaGVja2JveGVzIGFuZCByYWRpbyBidXR0b25zLCBvdGhlcndpc2UgaW4gc29tZSBjYXNlc1xyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gdGhlIGNoZWNrZWQgc3RhdGUgYmVjb21lcyBpbmNvbnNpc3RlbnQgd2l0aCB0aGUgd2lkZ2V0J3Mgc3RhdGVcclxuXHRcdFx0XHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0sIHRydWUpO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0c3RvcE5hdGl2ZUV2ZW50cyhcImNsaWNrXCIpO1xyXG5cclxuXHRcdFx0XHQvLyBXZSBhbHNvIHN0b3AgbW91c2Vkb3duL3VwIHNpbmNlIHRoZXNlIHdvdWxkIGJlIHNlbnQgd2VsbCBhZnRlciB3aXRoIG91ciBcImZhc3RcIiBjbGljayAoMzAwbXMpLFxyXG5cdFx0XHRcdC8vIHdoaWNoIGNhbiBjb25mdXNlIHNvbWUgZGlqaXQgd2lkZ2V0cy5cclxuXHRcdFx0XHRzdG9wTmF0aXZlRXZlbnRzKFwibW91c2Vkb3duXCIpO1xyXG5cdFx0XHRcdHN0b3BOYXRpdmVFdmVudHMoXCJtb3VzZXVwXCIpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHR2YXIgaG92ZXJlZE5vZGU7XHJcblxyXG5cdGlmKGhhcyhcInRvdWNoXCIpKXtcclxuXHRcdGlmKGhhc1BvaW50ZXIpe1xyXG5cdFx0XHQvLyBNU1BvaW50ZXIgKElFMTArKSBhbHJlYWR5IGhhcyBzdXBwb3J0IGZvciBvdmVyIGFuZCBvdXQsIHNvIHdlIGp1c3QgbmVlZCB0byBpbml0IGNsaWNrIHN1cHBvcnRcclxuXHRcdFx0ZG9tUmVhZHkoZnVuY3Rpb24oKXtcclxuXHRcdFx0XHR3aW4uZG9jLmFkZEV2ZW50TGlzdGVuZXIocG9pbnRlci5kb3duLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdFx0ZG9DbGlja3MoZXZ0LCBwb2ludGVyLm1vdmUsIHBvaW50ZXIudXApO1xyXG5cdFx0XHRcdH0sIHRydWUpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHRkb21SZWFkeShmdW5jdGlvbigpe1xyXG5cdFx0XHRcdC8vIEtlZXAgdHJhY2sgb2YgY3VycmVudGx5IGhvdmVyZWQgbm9kZVxyXG5cdFx0XHRcdGhvdmVyZWROb2RlID0gd2luLmJvZHkoKTtcdC8vIGN1cnJlbnRseSBob3ZlcmVkIG5vZGVcclxuXHJcblx0XHRcdFx0d2luLmRvYy5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdFx0XHRsYXN0VG91Y2ggPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xyXG5cclxuXHRcdFx0XHRcdC8vIFByZWNlZGUgdG91Y2hzdGFydCBldmVudCB3aXRoIHRvdWNoLm92ZXIgZXZlbnQuICBEbkQgZGVwZW5kcyBvbiB0aGlzLlxyXG5cdFx0XHRcdFx0Ly8gVXNlIGFkZEV2ZW50TGlzdGVuZXIoY2IsIHRydWUpIHRvIHJ1biBjYiBiZWZvcmUgYW55IHRvdWNoc3RhcnQgaGFuZGxlcnMgb24gbm9kZSBydW4sXHJcblx0XHRcdFx0XHQvLyBhbmQgdG8gZW5zdXJlIHRoaXMgY29kZSBydW5zIGV2ZW4gaWYgdGhlIGxpc3RlbmVyIG9uIHRoZSBub2RlIGRvZXMgZXZlbnQuc3RvcCgpLlxyXG5cdFx0XHRcdFx0dmFyIG9sZE5vZGUgPSBob3ZlcmVkTm9kZTtcclxuXHRcdFx0XHRcdGhvdmVyZWROb2RlID0gZXZ0LnRhcmdldDtcclxuXHRcdFx0XHRcdG9uLmVtaXQob2xkTm9kZSwgXCJkb2pvdG91Y2hvdXRcIiwge1xyXG5cdFx0XHRcdFx0XHRyZWxhdGVkVGFyZ2V0OiBob3ZlcmVkTm9kZSxcclxuXHRcdFx0XHRcdFx0YnViYmxlczogdHJ1ZVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRvbi5lbWl0KGhvdmVyZWROb2RlLCBcImRvam90b3VjaG92ZXJcIiwge1xyXG5cdFx0XHRcdFx0XHRyZWxhdGVkVGFyZ2V0OiBvbGROb2RlLFxyXG5cdFx0XHRcdFx0XHRidWJibGVzOiB0cnVlXHJcblx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRkb0NsaWNrcyhldnQsIFwidG91Y2htb3ZlXCIsIFwidG91Y2hlbmRcIik7IC8vIGluaXQgY2xpY2sgZ2VuZXJhdGlvblxyXG5cdFx0XHRcdH0sIHRydWUpO1xyXG5cclxuXHRcdFx0XHRmdW5jdGlvbiBjb3B5RXZlbnRQcm9wcyhldnQpe1xyXG5cdFx0XHRcdFx0Ly8gTWFrZSBjb3B5IG9mIGV2ZW50IG9iamVjdCBhbmQgYWxzbyBzZXQgYnViYmxlczp0cnVlLiAgVXNlZCB3aGVuIGNhbGxpbmcgb24uZW1pdCgpLlxyXG5cdFx0XHRcdFx0dmFyIHByb3BzID0gbGFuZy5kZWxlZ2F0ZShldnQsIHtcclxuXHRcdFx0XHRcdFx0YnViYmxlczogdHJ1ZVxyXG5cdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0aWYoaGFzKFwiaW9zXCIpID49IDYpe1xyXG5cdFx0XHRcdFx0XHQvLyBPbiBpT1M2IFwidG91Y2hlc1wiIGJlY2FtZSBhIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5LCB3aGljaFxyXG5cdFx0XHRcdFx0XHQvLyBpcyBub3QgaGl0IGJ5IGZvci4uLmluLiAgRGl0dG8gZm9yIHRoZSBvdGhlciBwcm9wZXJ0aWVzIGJlbG93LlxyXG5cdFx0XHRcdFx0XHRwcm9wcy50b3VjaGVzID0gZXZ0LnRvdWNoZXM7XHJcblx0XHRcdFx0XHRcdHByb3BzLmFsdEtleSA9IGV2dC5hbHRLZXk7XHJcblx0XHRcdFx0XHRcdHByb3BzLmNoYW5nZWRUb3VjaGVzID0gZXZ0LmNoYW5nZWRUb3VjaGVzO1xyXG5cdFx0XHRcdFx0XHRwcm9wcy5jdHJsS2V5ID0gZXZ0LmN0cmxLZXk7XHJcblx0XHRcdFx0XHRcdHByb3BzLm1ldGFLZXkgPSBldnQubWV0YUtleTtcclxuXHRcdFx0XHRcdFx0cHJvcHMuc2hpZnRLZXkgPSBldnQuc2hpZnRLZXk7XHJcblx0XHRcdFx0XHRcdHByb3BzLnRhcmdldFRvdWNoZXMgPSBldnQudGFyZ2V0VG91Y2hlcztcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRyZXR1cm4gcHJvcHM7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRvbih3aW4uZG9jLCBcInRvdWNobW92ZVwiLCBmdW5jdGlvbihldnQpe1xyXG5cdFx0XHRcdFx0bGFzdFRvdWNoID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcclxuXHJcblx0XHRcdFx0XHR2YXIgbmV3Tm9kZSA9IHdpbi5kb2MuZWxlbWVudEZyb21Qb2ludChcclxuXHRcdFx0XHRcdFx0ZXZ0LnBhZ2VYIC0gKGlvczQgPyAwIDogd2luLmdsb2JhbC5wYWdlWE9mZnNldCksIC8vIGlPUyA0IGV4cGVjdHMgcGFnZSBjb29yZHNcclxuXHRcdFx0XHRcdFx0ZXZ0LnBhZ2VZIC0gKGlvczQgPyAwIDogd2luLmdsb2JhbC5wYWdlWU9mZnNldClcclxuXHRcdFx0XHRcdCk7XHJcblxyXG5cdFx0XHRcdFx0aWYobmV3Tm9kZSl7XHJcblx0XHRcdFx0XHRcdC8vIEZpcmUgc3ludGhldGljIHRvdWNob3ZlciBhbmQgdG91Y2hvdXQgZXZlbnRzIG9uIG5vZGVzIHNpbmNlIHRoZSBicm93c2VyIHdvbid0IGRvIGl0IG5hdGl2ZWx5LlxyXG5cdFx0XHRcdFx0XHRpZihob3ZlcmVkTm9kZSAhPT0gbmV3Tm9kZSl7XHJcblx0XHRcdFx0XHRcdFx0Ly8gdG91Y2ggb3V0IG9uIHRoZSBvbGQgbm9kZVxyXG5cdFx0XHRcdFx0XHRcdG9uLmVtaXQoaG92ZXJlZE5vZGUsIFwiZG9qb3RvdWNob3V0XCIsIHtcclxuXHRcdFx0XHRcdFx0XHRcdHJlbGF0ZWRUYXJnZXQ6IG5ld05vZGUsXHJcblx0XHRcdFx0XHRcdFx0XHRidWJibGVzOiB0cnVlXHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIHRvdWNob3ZlciBvbiB0aGUgbmV3IG5vZGVcclxuXHRcdFx0XHRcdFx0XHRvbi5lbWl0KG5ld05vZGUsIFwiZG9qb3RvdWNob3ZlclwiLCB7XHJcblx0XHRcdFx0XHRcdFx0XHRyZWxhdGVkVGFyZ2V0OiBob3ZlcmVkTm9kZSxcclxuXHRcdFx0XHRcdFx0XHRcdGJ1YmJsZXM6IHRydWVcclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0aG92ZXJlZE5vZGUgPSBuZXdOb2RlO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBVbmxpa2UgYSBsaXN0ZW5lciBvbiBcInRvdWNobW92ZVwiLCBvbihub2RlLCBcImRvam90b3VjaG1vdmVcIiwgbGlzdGVuZXIpIGZpcmVzIHdoZW4gdGhlIGZpbmdlclxyXG5cdFx0XHRcdFx0XHQvLyBkcmFncyBvdmVyIHRoZSBzcGVjaWZpZWQgbm9kZSwgcmVnYXJkbGVzcyBvZiB3aGljaCBub2RlIHRoZSB0b3VjaCBzdGFydGVkIG9uLlxyXG5cdFx0XHRcdFx0XHRpZighb24uZW1pdChuZXdOb2RlLCBcImRvam90b3VjaG1vdmVcIiwgY29weUV2ZW50UHJvcHMoZXZ0KSkpe1xyXG5cdFx0XHRcdFx0XHRcdC8vIGVtaXQgcmV0dXJucyBmYWxzZSB3aGVuIHN5bnRoZXRpYyBldmVudCBcImRvam90b3VjaG1vdmVcIiBpcyBjYW5jZWxsZWQsIHNvIHdlIHByZXZlbnQgdGhlXHJcblx0XHRcdFx0XHRcdFx0Ly8gZGVmYXVsdCBiZWhhdmlvciBvZiB0aGUgdW5kZXJseWluZyBuYXRpdmUgZXZlbnQgXCJ0b3VjaG1vdmVcIi5cclxuXHRcdFx0XHRcdFx0XHRldnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHQvLyBGaXJlIGEgZG9qb3RvdWNoZW5kIGV2ZW50IG9uIHRoZSBub2RlIHdoZXJlIHRoZSBmaW5nZXIgd2FzIGJlZm9yZSBpdCB3YXMgcmVtb3ZlZCBmcm9tIHRoZSBzY3JlZW4uXHJcblx0XHRcdFx0Ly8gVGhpcyBpcyBkaWZmZXJlbnQgdGhhbiB0aGUgbmF0aXZlIHRvdWNoZW5kLCB3aGljaCBmaXJlcyBvbiB0aGUgbm9kZSB3aGVyZSB0aGUgZHJhZyBzdGFydGVkLlxyXG5cdFx0XHRcdG9uKHdpbi5kb2MsIFwidG91Y2hlbmRcIiwgZnVuY3Rpb24oZXZ0KXtcclxuXHRcdFx0XHRcdFx0bGFzdFRvdWNoID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTtcclxuXHRcdFx0XHRcdHZhciBub2RlID0gd2luLmRvYy5lbGVtZW50RnJvbVBvaW50KFxyXG5cdFx0XHRcdFx0XHRldnQucGFnZVggLSAoaW9zNCA/IDAgOiB3aW4uZ2xvYmFsLnBhZ2VYT2Zmc2V0KSwgLy8gaU9TIDQgZXhwZWN0cyBwYWdlIGNvb3Jkc1xyXG5cdFx0XHRcdFx0XHRldnQucGFnZVkgLSAoaW9zNCA/IDAgOiB3aW4uZ2xvYmFsLnBhZ2VZT2Zmc2V0KVxyXG5cdFx0XHRcdFx0KSB8fCB3aW4uYm9keSgpOyAvLyBpZiBvdXQgb2YgdGhlIHNjcmVlblxyXG5cclxuXHRcdFx0XHRcdG9uLmVtaXQobm9kZSwgXCJkb2pvdG91Y2hlbmRcIiwgY29weUV2ZW50UHJvcHMoZXZ0KSk7XHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly9kZXZpY2UgbmV1dHJhbCBldmVudHMgLSB0b3VjaC5wcmVzc3xtb3ZlfHJlbGVhc2V8Y2FuY2VsL292ZXIvb3V0XHJcblx0dmFyIHRvdWNoID0ge1xyXG5cdFx0cHJlc3M6IGR1YWxFdmVudChcIm1vdXNlZG93blwiLCBcInRvdWNoc3RhcnRcIiwgcG9pbnRlci5kb3duKSxcclxuXHRcdG1vdmU6IGR1YWxFdmVudChcIm1vdXNlbW92ZVwiLCBcImRvam90b3VjaG1vdmVcIiwgcG9pbnRlci5tb3ZlKSxcclxuXHRcdHJlbGVhc2U6IGR1YWxFdmVudChcIm1vdXNldXBcIiwgXCJkb2pvdG91Y2hlbmRcIiwgcG9pbnRlci51cCksXHJcblx0XHRjYW5jZWw6IGR1YWxFdmVudChtb3VzZS5sZWF2ZSwgXCJ0b3VjaGNhbmNlbFwiLCBoYXNQb2ludGVyID8gcG9pbnRlci5jYW5jZWwgOiBudWxsKSxcclxuXHRcdG92ZXI6IGR1YWxFdmVudChcIm1vdXNlb3ZlclwiLCBcImRvam90b3VjaG92ZXJcIiwgcG9pbnRlci5vdmVyKSxcclxuXHRcdG91dDogZHVhbEV2ZW50KFwibW91c2VvdXRcIiwgXCJkb2pvdG91Y2hvdXRcIiwgcG9pbnRlci5vdXQpLFxyXG5cdFx0ZW50ZXI6IG1vdXNlLl9ldmVudEhhbmRsZXIoZHVhbEV2ZW50KFwibW91c2VvdmVyXCIsXCJkb2pvdG91Y2hvdmVyXCIsIHBvaW50ZXIub3ZlcikpLFxyXG5cdFx0bGVhdmU6IG1vdXNlLl9ldmVudEhhbmRsZXIoZHVhbEV2ZW50KFwibW91c2VvdXRcIiwgXCJkb2pvdG91Y2hvdXRcIiwgcG9pbnRlci5vdXQpKVxyXG5cdH07XHJcblxyXG5cdC8qPT09PT1cclxuXHR0b3VjaCA9IHtcclxuXHRcdC8vIHN1bW1hcnk6XHJcblx0XHQvL1x0XHRUaGlzIG1vZHVsZSBwcm92aWRlcyB1bmlmaWVkIHRvdWNoIGV2ZW50IGhhbmRsZXJzIGJ5IGV4cG9ydGluZ1xyXG5cdFx0Ly9cdFx0cHJlc3MsIG1vdmUsIHJlbGVhc2UgYW5kIGNhbmNlbCB3aGljaCBjYW4gYWxzbyBydW4gd2VsbCBvbiBkZXNrdG9wLlxyXG5cdFx0Ly9cdFx0QmFzZWQgb24gaHR0cDovL2R2Y3MudzMub3JnL2hnL3dlYmV2ZW50cy9yYXctZmlsZS90aXAvdG91Y2hldmVudHMuaHRtbFxyXG5cdFx0Ly8gICAgICBBbHNvLCBpZiB0aGUgZG9qb0NsaWNrIHByb3BlcnR5IGlzIHNldCB0byB0cnV0aHkgb24gYSBET00gbm9kZSwgZG9qby90b3VjaCBnZW5lcmF0ZXNcclxuXHRcdC8vICAgICAgY2xpY2sgZXZlbnRzIGltbWVkaWF0ZWx5IGZvciB0aGlzIG5vZGUgYW5kIGl0cyBkZXNjZW5kYW50cyAoZXhjZXB0IGZvciBkZXNjZW5kYW50cyB0aGF0XHJcblx0XHQvLyAgICAgIGhhdmUgYSBkb2pvQ2xpY2sgcHJvcGVydHkgc2V0IHRvIGZhbHN5KSwgdG8gYXZvaWQgdGhlIGRlbGF5IGJlZm9yZSBuYXRpdmUgYnJvd3NlciBjbGljayBldmVudHMsXHJcblx0XHQvLyAgICAgIGFuZCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgZXZ0LnByZXZlbnREZWZhdWx0KCkgd2FzIGNhbGxlZCBpbiBhIHRvdWNoLnByZXNzIGV2ZW50IGxpc3RlbmVyLlxyXG5cdFx0Ly9cclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRVc2VkIHdpdGggZG9qby9vblxyXG5cdFx0Ly9cdFx0fFx0ZGVmaW5lKFtcImRvam8vb25cIiwgXCJkb2pvL3RvdWNoXCJdLCBmdW5jdGlvbihvbiwgdG91Y2gpe1xyXG5cdFx0Ly9cdFx0fFx0XHRvbihub2RlLCB0b3VjaC5wcmVzcywgZnVuY3Rpb24oZSl7fSk7XHJcblx0XHQvL1x0XHR8XHRcdG9uKG5vZGUsIHRvdWNoLm1vdmUsIGZ1bmN0aW9uKGUpe30pO1xyXG5cdFx0Ly9cdFx0fFx0XHRvbihub2RlLCB0b3VjaC5yZWxlYXNlLCBmdW5jdGlvbihlKXt9KTtcclxuXHRcdC8vXHRcdHxcdFx0b24obm9kZSwgdG91Y2guY2FuY2VsLCBmdW5jdGlvbihlKXt9KTtcclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRVc2VkIHdpdGggdG91Y2guKiBkaXJlY3RseVxyXG5cdFx0Ly9cdFx0fFx0dG91Y2gucHJlc3Mobm9kZSwgZnVuY3Rpb24oZSl7fSk7XHJcblx0XHQvL1x0XHR8XHR0b3VjaC5tb3ZlKG5vZGUsIGZ1bmN0aW9uKGUpe30pO1xyXG5cdFx0Ly9cdFx0fFx0dG91Y2gucmVsZWFzZShub2RlLCBmdW5jdGlvbihlKXt9KTtcclxuXHRcdC8vXHRcdHxcdHRvdWNoLmNhbmNlbChub2RlLCBmdW5jdGlvbihlKXt9KTtcclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRIYXZlIGRvam8vdG91Y2ggZ2VuZXJhdGUgY2xpY2tzIHdpdGhvdXQgZGVsYXksIHdpdGggYSBkZWZhdWx0IG1vdmUgdGhyZXNob2xkIG9mIDQgcGl4ZWxzXHJcblx0XHQvL1x0XHR8XHRub2RlLmRvam9DbGljayA9IHRydWU7XHJcblx0XHQvLyBleGFtcGxlOlxyXG5cdFx0Ly9cdFx0SGF2ZSBkb2pvL3RvdWNoIGdlbmVyYXRlIGNsaWNrcyB3aXRob3V0IGRlbGF5LCB3aXRoIGEgbW92ZSB0aHJlc2hvbGQgb2YgMTAgcGl4ZWxzIGhvcml6b250YWxseSBhbmQgdmVydGljYWxseVxyXG5cdFx0Ly9cdFx0fFx0bm9kZS5kb2pvQ2xpY2sgPSAxMDtcclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHRIYXZlIGRvam8vdG91Y2ggZ2VuZXJhdGUgY2xpY2tzIHdpdGhvdXQgZGVsYXksIHdpdGggYSBtb3ZlIHRocmVzaG9sZCBvZiA1MCBwaXhlbHMgaG9yaXpvbnRhbGx5IGFuZCAxMCBwaXhlbHMgdmVydGljYWxseVxyXG5cdFx0Ly9cdFx0fFx0bm9kZS5kb2pvQ2xpY2sgPSB7eDo1MCwgeTo1fTtcclxuXHRcdC8vIGV4YW1wbGU6XHJcblx0XHQvL1x0XHREaXNhYmxlIGNsaWNrcyB3aXRob3V0IGRlbGF5IGdlbmVyYXRlZCBieSBkb2pvL3RvdWNoIG9uIGEgbm9kZSB0aGF0IGhhcyBhbiBhbmNlc3RvciB3aXRoIHByb3BlcnR5IGRvam9DbGljayBzZXQgdG8gdHJ1dGh5XHJcblx0XHQvL1x0XHR8ICBub2RlLmRvam9DbGljayA9IGZhbHNlO1xyXG5cclxuXHRcdHByZXNzOiBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVyIGEgbGlzdGVuZXIgdG8gJ3RvdWNoc3RhcnQnfCdtb3VzZWRvd24nIGZvciB0aGUgZ2l2ZW4gbm9kZVxyXG5cdFx0XHQvLyBub2RlOiBEb21cclxuXHRcdFx0Ly9cdFx0VGFyZ2V0IG5vZGUgdG8gbGlzdGVuIHRvXHJcblx0XHRcdC8vIGxpc3RlbmVyOiBGdW5jdGlvblxyXG5cdFx0XHQvL1x0XHRDYWxsYmFjayBmdW5jdGlvblxyXG5cdFx0XHQvLyByZXR1cm5zOlxyXG5cdFx0XHQvL1x0XHRBIGhhbmRsZSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVtb3ZlIHRoZSBsaXN0ZW5lciBieSBoYW5kbGUucmVtb3ZlKClcclxuXHRcdH0sXHJcblx0XHRtb3ZlOiBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVyIGEgbGlzdGVuZXIgdGhhdCBmaXJlcyB3aGVuIHRoZSBtb3VzZSBjdXJzb3Igb3IgYSBmaW5nZXIgaXMgZHJhZ2dlZCBvdmVyIHRoZSBnaXZlbiBub2RlLlxyXG5cdFx0XHQvLyBub2RlOiBEb21cclxuXHRcdFx0Ly9cdFx0VGFyZ2V0IG5vZGUgdG8gbGlzdGVuIHRvXHJcblx0XHRcdC8vIGxpc3RlbmVyOiBGdW5jdGlvblxyXG5cdFx0XHQvL1x0XHRDYWxsYmFjayBmdW5jdGlvblxyXG5cdFx0XHQvLyByZXR1cm5zOlxyXG5cdFx0XHQvL1x0XHRBIGhhbmRsZSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVtb3ZlIHRoZSBsaXN0ZW5lciBieSBoYW5kbGUucmVtb3ZlKClcclxuXHRcdH0sXHJcblx0XHRyZWxlYXNlOiBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVyIGEgbGlzdGVuZXIgdG8gcmVsZWFzaW5nIHRoZSBtb3VzZSBidXR0b24gd2hpbGUgdGhlIGN1cnNvciBpcyBvdmVyIHRoZSBnaXZlbiBub2RlXHJcblx0XHRcdC8vXHRcdChpLmUuIFwibW91c2V1cFwiKSBvciBmb3IgcmVtb3ZpbmcgdGhlIGZpbmdlciBmcm9tIHRoZSBzY3JlZW4gd2hpbGUgdG91Y2hpbmcgdGhlIGdpdmVuIG5vZGUuXHJcblx0XHRcdC8vIG5vZGU6IERvbVxyXG5cdFx0XHQvL1x0XHRUYXJnZXQgbm9kZSB0byBsaXN0ZW4gdG9cclxuXHRcdFx0Ly8gbGlzdGVuZXI6IEZ1bmN0aW9uXHJcblx0XHRcdC8vXHRcdENhbGxiYWNrIGZ1bmN0aW9uXHJcblx0XHRcdC8vIHJldHVybnM6XHJcblx0XHRcdC8vXHRcdEEgaGFuZGxlIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZW1vdmUgdGhlIGxpc3RlbmVyIGJ5IGhhbmRsZS5yZW1vdmUoKVxyXG5cdFx0fSxcclxuXHRcdGNhbmNlbDogZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZWdpc3RlciBhIGxpc3RlbmVyIHRvICd0b3VjaGNhbmNlbCd8J21vdXNlbGVhdmUnIGZvciB0aGUgZ2l2ZW4gbm9kZVxyXG5cdFx0XHQvLyBub2RlOiBEb21cclxuXHRcdFx0Ly9cdFx0VGFyZ2V0IG5vZGUgdG8gbGlzdGVuIHRvXHJcblx0XHRcdC8vIGxpc3RlbmVyOiBGdW5jdGlvblxyXG5cdFx0XHQvL1x0XHRDYWxsYmFjayBmdW5jdGlvblxyXG5cdFx0XHQvLyByZXR1cm5zOlxyXG5cdFx0XHQvL1x0XHRBIGhhbmRsZSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVtb3ZlIHRoZSBsaXN0ZW5lciBieSBoYW5kbGUucmVtb3ZlKClcclxuXHRcdH0sXHJcblx0XHRvdmVyOiBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVyIGEgbGlzdGVuZXIgdG8gJ21vdXNlb3Zlcicgb3IgdG91Y2ggZXF1aXZhbGVudCBmb3IgdGhlIGdpdmVuIG5vZGVcclxuXHRcdFx0Ly8gbm9kZTogRG9tXHJcblx0XHRcdC8vXHRcdFRhcmdldCBub2RlIHRvIGxpc3RlbiB0b1xyXG5cdFx0XHQvLyBsaXN0ZW5lcjogRnVuY3Rpb25cclxuXHRcdFx0Ly9cdFx0Q2FsbGJhY2sgZnVuY3Rpb25cclxuXHRcdFx0Ly8gcmV0dXJuczpcclxuXHRcdFx0Ly9cdFx0QSBoYW5kbGUgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHJlbW92ZSB0aGUgbGlzdGVuZXIgYnkgaGFuZGxlLnJlbW92ZSgpXHJcblx0XHR9LFxyXG5cdFx0b3V0OiBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVyIGEgbGlzdGVuZXIgdG8gJ21vdXNlb3V0JyBvciB0b3VjaCBlcXVpdmFsZW50IGZvciB0aGUgZ2l2ZW4gbm9kZVxyXG5cdFx0XHQvLyBub2RlOiBEb21cclxuXHRcdFx0Ly9cdFx0VGFyZ2V0IG5vZGUgdG8gbGlzdGVuIHRvXHJcblx0XHRcdC8vIGxpc3RlbmVyOiBGdW5jdGlvblxyXG5cdFx0XHQvL1x0XHRDYWxsYmFjayBmdW5jdGlvblxyXG5cdFx0XHQvLyByZXR1cm5zOlxyXG5cdFx0XHQvL1x0XHRBIGhhbmRsZSB3aGljaCB3aWxsIGJlIHVzZWQgdG8gcmVtb3ZlIHRoZSBsaXN0ZW5lciBieSBoYW5kbGUucmVtb3ZlKClcclxuXHRcdH0sXHJcblx0XHRlbnRlcjogZnVuY3Rpb24obm9kZSwgbGlzdGVuZXIpe1xyXG5cdFx0XHQvLyBzdW1tYXJ5OlxyXG5cdFx0XHQvL1x0XHRSZWdpc3RlciBhIGxpc3RlbmVyIHRvIG1vdXNlLmVudGVyIG9yIHRvdWNoIGVxdWl2YWxlbnQgZm9yIHRoZSBnaXZlbiBub2RlXHJcblx0XHRcdC8vIG5vZGU6IERvbVxyXG5cdFx0XHQvL1x0XHRUYXJnZXQgbm9kZSB0byBsaXN0ZW4gdG9cclxuXHRcdFx0Ly8gbGlzdGVuZXI6IEZ1bmN0aW9uXHJcblx0XHRcdC8vXHRcdENhbGxiYWNrIGZ1bmN0aW9uXHJcblx0XHRcdC8vIHJldHVybnM6XHJcblx0XHRcdC8vXHRcdEEgaGFuZGxlIHdoaWNoIHdpbGwgYmUgdXNlZCB0byByZW1vdmUgdGhlIGxpc3RlbmVyIGJ5IGhhbmRsZS5yZW1vdmUoKVxyXG5cdFx0fSxcclxuXHRcdGxlYXZlOiBmdW5jdGlvbihub2RlLCBsaXN0ZW5lcil7XHJcblx0XHRcdC8vIHN1bW1hcnk6XHJcblx0XHRcdC8vXHRcdFJlZ2lzdGVyIGEgbGlzdGVuZXIgdG8gbW91c2UubGVhdmUgb3IgdG91Y2ggZXF1aXZhbGVudCBmb3IgdGhlIGdpdmVuIG5vZGVcclxuXHRcdFx0Ly8gbm9kZTogRG9tXHJcblx0XHRcdC8vXHRcdFRhcmdldCBub2RlIHRvIGxpc3RlbiB0b1xyXG5cdFx0XHQvLyBsaXN0ZW5lcjogRnVuY3Rpb25cclxuXHRcdFx0Ly9cdFx0Q2FsbGJhY2sgZnVuY3Rpb25cclxuXHRcdFx0Ly8gcmV0dXJuczpcclxuXHRcdFx0Ly9cdFx0QSBoYW5kbGUgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIHJlbW92ZSB0aGUgbGlzdGVuZXIgYnkgaGFuZGxlLnJlbW92ZSgpXHJcblx0XHR9XHJcblx0fTtcclxuXHQ9PT09PSovXHJcblxyXG5cdGhhcyhcImV4dGVuZC1kb2pvXCIpICYmIChkb2pvLnRvdWNoID0gdG91Y2gpO1xyXG5cclxuXHRyZXR1cm4gdG91Y2g7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLG8xQkFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojo/touch.js\n");

/***/ }),

/***/ "./node_modules/dojo/uacss.js":
/*!************************************!*\
  !*** ./node_modules/dojo/uacss.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! ./_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./domReady */ \"./node_modules/dojo/domReady.js\"), __webpack_require__(/*! ./sniff */ \"./node_modules/dojo/sniff.js\"), __webpack_require__(/*! ./_base/window */ \"./node_modules/dojo/_base/window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(geometry, lang, domReady, has, baseWindow){\r\n\r\n\t// module:\r\n\t//\t\tdojo/uacss\r\n\r\n\t/*=====\r\n\treturn {\r\n\t\t// summary:\r\n\t\t//\t\tApplies pre-set CSS classes to the top-level HTML node, based on:\r\n\t\t//\r\n\t\t//\t\t- browser (ex: dj_ie)\r\n\t\t//\t\t- browser version (ex: dj_ie6)\r\n\t\t//\t\t- box model (ex: dj_contentBox)\r\n\t\t//\t\t- text direction (ex: dijitRtl)\r\n\t\t//\r\n\t\t//\t\tIn addition, browser, browser version, and box model are\r\n\t\t//\t\tcombined with an RTL flag when browser text is RTL. ex: dj_ie-rtl.\r\n\t\t//\r\n\t\t//\t\tReturns the has() method.\r\n\t};\r\n\t=====*/\r\n\r\n\tvar\r\n\t\thtml = baseWindow.doc.documentElement,\r\n\t\tie = has(\"ie\"),\r\n\t\ttrident = has(\"trident\"),\r\n\t\topera = has(\"opera\"),\r\n\t\tmaj = Math.floor,\r\n\t\tff = has(\"ff\"),\r\n\t\tboxModel = geometry.boxModel.replace(/-/,''),\r\n\r\n\t\tclasses = {\r\n\t\t\t\"dj_quirks\": has(\"quirks\"),\r\n\r\n\t\t\t// NOTE: Opera not supported by dijit\r\n\t\t\t\"dj_opera\": opera,\r\n\r\n\t\t\t\"dj_khtml\": has(\"khtml\"),\r\n\r\n\t\t\t\"dj_webkit\": has(\"webkit\"),\r\n\t\t\t\"dj_safari\": has(\"safari\"),\r\n\t\t\t\"dj_chrome\": has(\"chrome\"),\r\n\t\t\t\"dj_edge\": has(\"edge\"),\r\n\r\n\t\t\t\"dj_gecko\": has(\"mozilla\"),\r\n\r\n\t\t\t\"dj_ios\": has(\"ios\"),\r\n\t\t\t\"dj_android\": has(\"android\")\r\n\t\t}; // no dojo unsupported browsers\r\n\r\n\tif(ie){\r\n\t\tclasses[\"dj_ie\"] = true;\r\n\t\tclasses[\"dj_ie\" + maj(ie)] = true;\r\n\t\tclasses[\"dj_iequirks\"] = has(\"quirks\");\r\n\t}\r\n\tif(trident){\r\n\t\tclasses[\"dj_trident\"] = true;\r\n\t\tclasses[\"dj_trident\" + maj(trident)] = true;\r\n\t}\r\n\tif(ff){\r\n\t\tclasses[\"dj_ff\" + maj(ff)] = true;\r\n\t}\r\n\r\n\tclasses[\"dj_\" + boxModel] = true;\r\n\r\n\t// apply browser, browser version, and box model class names\r\n\tvar classStr = \"\";\r\n\tfor(var clz in classes){\r\n\t\tif(classes[clz]){\r\n\t\t\tclassStr += clz + \" \";\r\n\t\t}\r\n\t}\r\n\thtml.className = lang.trim(html.className + \" \" + classStr);\r\n\r\n\t// If RTL mode, then add dj_rtl flag plus repeat existing classes with -rtl extension.\r\n\t// We can't run the code below until the <body> tag has loaded (so we can check for dir=rtl).\r\n\tdomReady(function(){\r\n\t\tif(!geometry.isBodyLtr()){\r\n\t\t\tvar rtlClassStr = \"dj_rtl dijitRtl \" + classStr.replace(/ /g, \"-rtl \");\r\n\t\t\thtml.className = lang.trim(html.className + \" \" + rtlClassStr + \"dj_rtl dijitRtl \" + classStr.replace(/ /g, \"-rtl \"));\r\n\t\t}\r\n\t});\r\n\treturn has;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZG9qby91YWNzcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb2pvL3VhY3NzLmpzPzE4ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKFtcIi4vZG9tLWdlb21ldHJ5XCIsIFwiLi9fYmFzZS9sYW5nXCIsIFwiLi9kb21SZWFkeVwiLCBcIi4vc25pZmZcIiwgXCIuL19iYXNlL3dpbmRvd1wiXSxcclxuXHRmdW5jdGlvbihnZW9tZXRyeSwgbGFuZywgZG9tUmVhZHksIGhhcywgYmFzZVdpbmRvdyl7XHJcblxyXG5cdC8vIG1vZHVsZTpcclxuXHQvL1x0XHRkb2pvL3VhY3NzXHJcblxyXG5cdC8qPT09PT1cclxuXHRyZXR1cm4ge1xyXG5cdFx0Ly8gc3VtbWFyeTpcclxuXHRcdC8vXHRcdEFwcGxpZXMgcHJlLXNldCBDU1MgY2xhc3NlcyB0byB0aGUgdG9wLWxldmVsIEhUTUwgbm9kZSwgYmFzZWQgb246XHJcblx0XHQvL1xyXG5cdFx0Ly9cdFx0LSBicm93c2VyIChleDogZGpfaWUpXHJcblx0XHQvL1x0XHQtIGJyb3dzZXIgdmVyc2lvbiAoZXg6IGRqX2llNilcclxuXHRcdC8vXHRcdC0gYm94IG1vZGVsIChleDogZGpfY29udGVudEJveClcclxuXHRcdC8vXHRcdC0gdGV4dCBkaXJlY3Rpb24gKGV4OiBkaWppdFJ0bClcclxuXHRcdC8vXHJcblx0XHQvL1x0XHRJbiBhZGRpdGlvbiwgYnJvd3NlciwgYnJvd3NlciB2ZXJzaW9uLCBhbmQgYm94IG1vZGVsIGFyZVxyXG5cdFx0Ly9cdFx0Y29tYmluZWQgd2l0aCBhbiBSVEwgZmxhZyB3aGVuIGJyb3dzZXIgdGV4dCBpcyBSVEwuIGV4OiBkal9pZS1ydGwuXHJcblx0XHQvL1xyXG5cdFx0Ly9cdFx0UmV0dXJucyB0aGUgaGFzKCkgbWV0aG9kLlxyXG5cdH07XHJcblx0PT09PT0qL1xyXG5cclxuXHR2YXJcclxuXHRcdGh0bWwgPSBiYXNlV2luZG93LmRvYy5kb2N1bWVudEVsZW1lbnQsXHJcblx0XHRpZSA9IGhhcyhcImllXCIpLFxyXG5cdFx0dHJpZGVudCA9IGhhcyhcInRyaWRlbnRcIiksXHJcblx0XHRvcGVyYSA9IGhhcyhcIm9wZXJhXCIpLFxyXG5cdFx0bWFqID0gTWF0aC5mbG9vcixcclxuXHRcdGZmID0gaGFzKFwiZmZcIiksXHJcblx0XHRib3hNb2RlbCA9IGdlb21ldHJ5LmJveE1vZGVsLnJlcGxhY2UoLy0vLCcnKSxcclxuXHJcblx0XHRjbGFzc2VzID0ge1xyXG5cdFx0XHRcImRqX3F1aXJrc1wiOiBoYXMoXCJxdWlya3NcIiksXHJcblxyXG5cdFx0XHQvLyBOT1RFOiBPcGVyYSBub3Qgc3VwcG9ydGVkIGJ5IGRpaml0XHJcblx0XHRcdFwiZGpfb3BlcmFcIjogb3BlcmEsXHJcblxyXG5cdFx0XHRcImRqX2todG1sXCI6IGhhcyhcImtodG1sXCIpLFxyXG5cclxuXHRcdFx0XCJkal93ZWJraXRcIjogaGFzKFwid2Via2l0XCIpLFxyXG5cdFx0XHRcImRqX3NhZmFyaVwiOiBoYXMoXCJzYWZhcmlcIiksXHJcblx0XHRcdFwiZGpfY2hyb21lXCI6IGhhcyhcImNocm9tZVwiKSxcclxuXHRcdFx0XCJkal9lZGdlXCI6IGhhcyhcImVkZ2VcIiksXHJcblxyXG5cdFx0XHRcImRqX2dlY2tvXCI6IGhhcyhcIm1vemlsbGFcIiksXHJcblxyXG5cdFx0XHRcImRqX2lvc1wiOiBoYXMoXCJpb3NcIiksXHJcblx0XHRcdFwiZGpfYW5kcm9pZFwiOiBoYXMoXCJhbmRyb2lkXCIpXHJcblx0XHR9OyAvLyBubyBkb2pvIHVuc3VwcG9ydGVkIGJyb3dzZXJzXHJcblxyXG5cdGlmKGllKXtcclxuXHRcdGNsYXNzZXNbXCJkal9pZVwiXSA9IHRydWU7XHJcblx0XHRjbGFzc2VzW1wiZGpfaWVcIiArIG1haihpZSldID0gdHJ1ZTtcclxuXHRcdGNsYXNzZXNbXCJkal9pZXF1aXJrc1wiXSA9IGhhcyhcInF1aXJrc1wiKTtcclxuXHR9XHJcblx0aWYodHJpZGVudCl7XHJcblx0XHRjbGFzc2VzW1wiZGpfdHJpZGVudFwiXSA9IHRydWU7XHJcblx0XHRjbGFzc2VzW1wiZGpfdHJpZGVudFwiICsgbWFqKHRyaWRlbnQpXSA9IHRydWU7XHJcblx0fVxyXG5cdGlmKGZmKXtcclxuXHRcdGNsYXNzZXNbXCJkal9mZlwiICsgbWFqKGZmKV0gPSB0cnVlO1xyXG5cdH1cclxuXHJcblx0Y2xhc3Nlc1tcImRqX1wiICsgYm94TW9kZWxdID0gdHJ1ZTtcclxuXHJcblx0Ly8gYXBwbHkgYnJvd3NlciwgYnJvd3NlciB2ZXJzaW9uLCBhbmQgYm94IG1vZGVsIGNsYXNzIG5hbWVzXHJcblx0dmFyIGNsYXNzU3RyID0gXCJcIjtcclxuXHRmb3IodmFyIGNseiBpbiBjbGFzc2VzKXtcclxuXHRcdGlmKGNsYXNzZXNbY2x6XSl7XHJcblx0XHRcdGNsYXNzU3RyICs9IGNseiArIFwiIFwiO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRodG1sLmNsYXNzTmFtZSA9IGxhbmcudHJpbShodG1sLmNsYXNzTmFtZSArIFwiIFwiICsgY2xhc3NTdHIpO1xyXG5cclxuXHQvLyBJZiBSVEwgbW9kZSwgdGhlbiBhZGQgZGpfcnRsIGZsYWcgcGx1cyByZXBlYXQgZXhpc3RpbmcgY2xhc3NlcyB3aXRoIC1ydGwgZXh0ZW5zaW9uLlxyXG5cdC8vIFdlIGNhbid0IHJ1biB0aGUgY29kZSBiZWxvdyB1bnRpbCB0aGUgPGJvZHk+IHRhZyBoYXMgbG9hZGVkIChzbyB3ZSBjYW4gY2hlY2sgZm9yIGRpcj1ydGwpLlxyXG5cdGRvbVJlYWR5KGZ1bmN0aW9uKCl7XHJcblx0XHRpZighZ2VvbWV0cnkuaXNCb2R5THRyKCkpe1xyXG5cdFx0XHR2YXIgcnRsQ2xhc3NTdHIgPSBcImRqX3J0bCBkaWppdFJ0bCBcIiArIGNsYXNzU3RyLnJlcGxhY2UoLyAvZywgXCItcnRsIFwiKTtcclxuXHRcdFx0aHRtbC5jbGFzc05hbWUgPSBsYW5nLnRyaW0oaHRtbC5jbGFzc05hbWUgKyBcIiBcIiArIHJ0bENsYXNzU3RyICsgXCJkal9ydGwgZGlqaXRSdGwgXCIgKyBjbGFzc1N0ci5yZXBsYWNlKC8gL2csIFwiLXJ0bCBcIikpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdHJldHVybiBoYXM7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLG9nQkFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dojo/uacss.js\n");

/***/ }),

/***/ "./node_modules/dojo/window.js":
/*!*************************************!*\
  !*** ./node_modules/dojo/window.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./sniff */ \"./node_modules/dojo/sniff.js\"), __webpack_require__(/*! ./_base/window */ \"./node_modules/dojo/_base/window.js\"), __webpack_require__(/*! ./dom */ \"./node_modules/dojo/dom.js\"), __webpack_require__(/*! ./dom-geometry */ \"./node_modules/dojo/dom-geometry.js\"), __webpack_require__(/*! ./dom-style */ \"./node_modules/dojo/dom-style.js\"), __webpack_require__(/*! ./dom-construct */ \"./node_modules/dojo/dom-construct.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang, has, baseWindow, dom, geom, style, domConstruct){\r\n\r\n\t// feature detection\r\n\t/* not needed but included here for future reference\r\n\thas.add(\"rtl-innerVerticalScrollBar-on-left\", function(win, doc){\r\n\t\tvar\tbody = baseWindow.body(doc),\r\n\t\t\tscrollable = domConstruct.create('div', {\r\n\t\t\t\tstyle: {overflow:'scroll', overflowX:'hidden', direction:'rtl', visibility:'hidden', position:'absolute', left:'0', width:'64px', height:'64px'}\r\n\t\t\t}, body, \"last\"),\r\n\t\t\tcenter = domConstruct.create('center', {\r\n\t\t\t\tstyle: {overflow:'hidden', direction:'ltr'}\r\n\t\t\t}, scrollable, \"last\"),\r\n\t\t\tinner = domConstruct.create('div', {\r\n\t\t\t\tstyle: {overflow:'visible', display:'inline' }\r\n\t\t\t}, center, \"last\");\r\n\t\tinner.innerHTML=\"&nbsp;\";\r\n\t\tvar midPoint = Math.max(inner.offsetLeft, geom.position(inner).x);\r\n\t\tvar ret = midPoint >= 32;\r\n\t\tcenter.removeChild(inner);\r\n\t\tscrollable.removeChild(center);\r\n\t\tbody.removeChild(scrollable);\r\n\t\treturn ret;\r\n\t});\r\n\t*/\r\n\thas.add(\"rtl-adjust-position-for-verticalScrollBar\", function(win, doc){\r\n\t\tvar\tbody = baseWindow.body(doc),\r\n\t\t\tscrollable = domConstruct.create('div', {\r\n\t\t\t\tstyle: {overflow:'scroll', overflowX:'visible', direction:'rtl', visibility:'hidden', position:'absolute', left:'0', top:'0', width:'64px', height:'64px'}\r\n\t\t\t}, body, \"last\"),\r\n\t\t\tdiv = domConstruct.create('div', {\r\n\t\t\t\tstyle: {overflow:'hidden', direction:'ltr'}\r\n\t\t\t}, scrollable, \"last\"),\r\n\t\t\tret = geom.position(div).x != 0;\r\n\t\tscrollable.removeChild(div);\r\n\t\tbody.removeChild(scrollable);\r\n\t\treturn ret;\r\n\t});\r\n\r\n\thas.add(\"position-fixed-support\", function(win, doc){\r\n\t\t// IE6, IE7+quirks, and some older mobile browsers don't support position:fixed\r\n\t\tvar\tbody = baseWindow.body(doc),\r\n\t\t\touter = domConstruct.create('span', {\r\n\t\t\t\tstyle: {visibility:'hidden', position:'fixed', left:'1px', top:'1px'}\r\n\t\t\t}, body, \"last\"),\r\n\t\t\tinner = domConstruct.create('span', {\r\n\t\t\t\tstyle: {position:'fixed', left:'0', top:'0'}\r\n\t\t\t}, outer, \"last\"),\r\n\t\t\tret = geom.position(inner).x != geom.position(outer).x;\r\n\t\touter.removeChild(inner);\r\n\t\tbody.removeChild(outer);\r\n\t\treturn ret;\r\n\t});\r\n\r\n\t// module:\r\n\t//\t\tdojo/window\r\n\r\n\tvar window = {\r\n\t\t// summary:\r\n\t\t//\t\tTODOC\r\n\r\n\t\tgetBox: function(/*Document?*/ doc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturns the dimensions and scroll position of the viewable area of a browser window\r\n\r\n\t\t\tdoc = doc || baseWindow.doc;\r\n\r\n\t\t\tvar\r\n\t\t\t\tscrollRoot = (doc.compatMode == 'BackCompat') ? baseWindow.body(doc) : doc.documentElement,\r\n\t\t\t\t// get scroll position\r\n\t\t\t\tscroll = geom.docScroll(doc), // scrollRoot.scrollTop/Left should work\r\n\t\t\t\tw, h;\r\n\r\n\t\t\tif(has(\"touch\")){ // if(scrollbars not supported)\r\n\t\t\t\tvar uiWindow = window.get(doc);   // use UI window, not dojo.global window\r\n\t\t\t\t// on mobile, scrollRoot.clientHeight <= uiWindow.innerHeight <= scrollRoot.offsetHeight, return uiWindow.innerHeight\r\n\t\t\t\tw = uiWindow.innerWidth || scrollRoot.clientWidth; // || scrollRoot.clientXXX probably never evaluated\r\n\t\t\t\th = uiWindow.innerHeight || scrollRoot.clientHeight;\r\n\t\t\t}else{\r\n\t\t\t\t// on desktops, scrollRoot.clientHeight <= scrollRoot.offsetHeight <= uiWindow.innerHeight, return scrollRoot.clientHeight\r\n\t\t\t\t// uiWindow.innerWidth/Height includes the scrollbar and cannot be used\r\n\t\t\t\tw = scrollRoot.clientWidth;\r\n\t\t\t\th = scrollRoot.clientHeight;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tl: scroll.x,\r\n\t\t\t\tt: scroll.y,\r\n\t\t\t\tw: w,\r\n\t\t\t\th: h\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tget: function(/*Document*/ doc){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tGet window object associated with document doc.\r\n\t\t\t// doc:\r\n\t\t\t//\t\tThe document to get the associated window for.\r\n\r\n\t\t\t// In some IE versions (at least 6.0), document.parentWindow does not return a\r\n\t\t\t// reference to the real window object (maybe a copy), so we must fix it as well\r\n\t\t\t// We use IE specific execScript to attach the real window reference to\r\n\t\t\t// document._parentWindow for later use\r\n\t\t\tif(has(\"ie\") && window !== document.parentWindow){\r\n\t\t\t\t/*\r\n\t\t\t\tIn IE 6, only the variable \"window\" can be used to connect events (others\r\n\t\t\t\tmay be only copies).\r\n\t\t\t\t*/\r\n\t\t\t\tdoc.parentWindow.execScript(\"document._parentWindow = window;\", \"Javascript\");\r\n\t\t\t\t//to prevent memory leak, unset it after use\r\n\t\t\t\t//another possibility is to add an onUnload handler which seems overkill to me (liucougar)\r\n\t\t\t\tvar win = doc._parentWindow;\r\n\t\t\t\tdoc._parentWindow = null;\r\n\t\t\t\treturn win;\t//\tWindow\r\n\t\t\t}\r\n\r\n\t\t\treturn doc.parentWindow || doc.defaultView;\t//\tWindow\r\n\t\t},\r\n\r\n\t\tscrollIntoView: function(/*DomNode*/ node, /*Object?*/ pos){\r\n\t\t\t// summary:\r\n\t\t\t//\t\tScroll the passed node into view using minimal movement, if it is not already.\r\n\r\n\t\t\t// Don't rely on node.scrollIntoView working just because the function is there since\r\n\t\t\t// it forces the node to the page's bottom or top (and left or right in IE) without consideration for the minimal movement.\r\n\t\t\t// WebKit's node.scrollIntoViewIfNeeded doesn't work either for inner scrollbars in right-to-left mode\r\n\t\t\t// and when there's a fixed position scrollable element\r\n\r\n\t\t\ttry{ // catch unexpected/unrecreatable errors (#7808) since we can recover using a semi-acceptable native method\r\n\t\t\t\tnode = dom.byId(node);\r\n\t\t\t\tvar\tdoc = node.ownerDocument || baseWindow.doc,\t// TODO: why baseWindow.doc?  Isn't node.ownerDocument always defined?\r\n\t\t\t\t\tbody = baseWindow.body(doc),\r\n\t\t\t\t\thtml = doc.documentElement || body.parentNode,\r\n\t\t\t\t\tisIE = has(\"ie\") || has(\"trident\"),\r\n\t\t\t\t\tisWK = has(\"webkit\");\r\n\t\t\t\t// if an untested browser, then use the native method\r\n\t\t\t\tif(node == body || node == html){ return; }\r\n\t\t\t\tif(!(has(\"mozilla\") || isIE || isWK || has(\"opera\") || has(\"trident\") || has(\"edge\"))\r\n\t\t\t\t\t\t&& (\"scrollIntoView\" in node)){\r\n\t\t\t\t\tnode.scrollIntoView(false); // short-circuit to native if possible\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar\tbackCompat = doc.compatMode == 'BackCompat',\r\n\t\t\t\t\trootWidth = Math.min(body.clientWidth || html.clientWidth, html.clientWidth || body.clientWidth),\r\n\t\t\t\t\trootHeight = Math.min(body.clientHeight || html.clientHeight, html.clientHeight || body.clientHeight),\r\n\t\t\t\t\tscrollRoot = (isWK || backCompat) ? body : html,\r\n\t\t\t\t\tnodePos = pos || geom.position(node),\r\n\t\t\t\t\tel = node.parentNode,\r\n\t\t\t\t\tisFixed = function(el){\r\n\t\t\t\t\t\treturn (isIE <= 6 || (isIE == 7 && backCompat))\r\n\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t: (has(\"position-fixed-support\") && (style.get(el, 'position').toLowerCase() == \"fixed\"));\r\n\t\t\t\t\t},\r\n\t\t\t\t\tself = this,\r\n\t\t\t\t\tscrollElementBy = function(el, x, y){\r\n\t\t\t\t\t\tif(el.tagName == \"BODY\" || el.tagName == \"HTML\"){\r\n\t\t\t\t\t\t\tself.get(el.ownerDocument).scrollBy(x, y);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tx && (el.scrollLeft += x);\r\n\t\t\t\t\t\t\ty && (el.scrollTop += y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\tif(isFixed(node)){ return; } // nothing to do\r\n\t\t\t\twhile(el){\r\n\t\t\t\t\tif(el == body){ el = scrollRoot; }\r\n\t\t\t\t\tvar\telPos = geom.position(el),\r\n\t\t\t\t\t\tfixedPos = isFixed(el),\r\n\t\t\t\t\t\trtl = style.getComputedStyle(el).direction.toLowerCase() == \"rtl\";\r\n\r\n\t\t\t\t\tif(el == scrollRoot){\r\n\t\t\t\t\t\telPos.w = rootWidth; elPos.h = rootHeight;\r\n\t\t\t\t\t\tif(scrollRoot == html && (isIE || has(\"trident\")) && rtl){\r\n\t\t\t\t\t\t\telPos.x += scrollRoot.offsetWidth-elPos.w;// IE workaround where scrollbar causes negative x\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telPos.x = 0;\r\n\t\t\t\t\t\telPos.y = 0;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar pb = geom.getPadBorderExtents(el);\r\n\t\t\t\t\t\telPos.w -= pb.w; elPos.h -= pb.h; elPos.x += pb.l; elPos.y += pb.t;\r\n\t\t\t\t\t\tvar clientSize = el.clientWidth,\r\n\t\t\t\t\t\t\tscrollBarSize = elPos.w - clientSize;\r\n\t\t\t\t\t\tif(clientSize > 0 && scrollBarSize > 0){\r\n\t\t\t\t\t\t\tif(rtl && has(\"rtl-adjust-position-for-verticalScrollBar\")){\r\n\t\t\t\t\t\t\t\telPos.x += scrollBarSize;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telPos.w = clientSize;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclientSize = el.clientHeight;\r\n\t\t\t\t\t\tscrollBarSize = elPos.h - clientSize;\r\n\t\t\t\t\t\tif(clientSize > 0 && scrollBarSize > 0){\r\n\t\t\t\t\t\t\telPos.h = clientSize;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(fixedPos){ // bounded by viewport, not parents\r\n\t\t\t\t\t\tif(elPos.y < 0){\r\n\t\t\t\t\t\t\telPos.h += elPos.y; elPos.y = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(elPos.x < 0){\r\n\t\t\t\t\t\t\telPos.w += elPos.x; elPos.x = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(elPos.y + elPos.h > rootHeight){\r\n\t\t\t\t\t\t\telPos.h = rootHeight - elPos.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(elPos.x + elPos.w > rootWidth){\r\n\t\t\t\t\t\t\telPos.w = rootWidth - elPos.x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// calculate overflow in all 4 directions\r\n\t\t\t\t\tvar\tl = nodePos.x - elPos.x, // beyond left: < 0\r\n//\t\t\t\t\t\tt = nodePos.y - Math.max(elPos.y, 0), // beyond top: < 0\r\n\t\t\t\t\t\tt = nodePos.y - elPos.y, // beyond top: < 0\r\n\t\t\t\t\t\tr = l + nodePos.w - elPos.w, // beyond right: > 0\r\n\t\t\t\t\t\tbot = t + nodePos.h - elPos.h; // beyond bottom: > 0\r\n\t\t\t\t\tvar s, old;\r\n\t\t\t\t\tif(r * l > 0 && (!!el.scrollLeft || el == scrollRoot || el.scrollWidth > el.offsetHeight)){\r\n\t\t\t\t\t\ts = Math[l < 0? \"max\" : \"min\"](l, r);\r\n\t\t\t\t\t\tif(rtl && ((isIE == 8 && !backCompat) || has(\"trident\") >= 5)){ s = -s; }\r\n\t\t\t\t\t\told = el.scrollLeft;\r\n\t\t\t\t\t\tscrollElementBy(el, s, 0);\r\n\t\t\t\t\t\ts = el.scrollLeft - old;\r\n\t\t\t\t\t\tnodePos.x -= s;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(bot * t > 0 && (!!el.scrollTop || el == scrollRoot || el.scrollHeight > el.offsetHeight)){\r\n\t\t\t\t\t\ts = Math.ceil(Math[t < 0? \"max\" : \"min\"](t, bot));\r\n\t\t\t\t\t\told = el.scrollTop;\r\n\t\t\t\t\t\tscrollElementBy(el, 0, s);\r\n\t\t\t\t\t\ts = el.scrollTop - old;\r\n\t\t\t\t\t\tnodePos.y -= s;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tel = (el != scrollRoot) && !fixedPos && el.parentNode;\r\n\t\t\t\t}\r\n\t\t\t}catch(error){\r\n\t\t\t\tconsole.error('scrollIntoView: ' + error);\r\n\t\t\t\tnode.scrollIntoView(false);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thas(\"extend-dojo\") && lang.setObject(\"dojo.window\", window);\r\n\r\n\treturn window;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojo/window.js\n");

/***/ })

}]);
(function(){
(this||window)["webpackJsonp"].registerAbsMids({
	'dojo/Stateful':"./node_modules/dojo/Stateful.js",
	'dojox/string/BidiEngine':"./node_modules/dojox/string/BidiEngine.js"
})
})(),(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[28],{

/***/ "./node_modules/dojo/Stateful.js":
/*!***************************************!*\
  !*** ./node_modules/dojo/Stateful.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! ./_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! ./_base/array */ \"./node_modules/dojo/_base/array.js\"), __webpack_require__(/*! ./when */ \"./node_modules/dojo/when.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(declare, lang, array, when){\r\n\t// module:\r\n\t//\t\tdojo/Stateful\r\n\r\nreturn declare(\"dojo.Stateful\", null, {\r\n\t// summary:\r\n\t//\t\tBase class for objects that provide named properties with optional getter/setter\r\n\t//\t\tcontrol and the ability to watch for property changes\r\n\t//\r\n\t//\t\tThe class also provides the functionality to auto-magically manage getters\r\n\t//\t\tand setters for object attributes/properties.\r\n\t//\t\t\r\n\t//\t\tGetters and Setters should follow the format of _xxxGetter or _xxxSetter where \r\n\t//\t\tthe xxx is a name of the attribute to handle.  So an attribute of \"foo\" \r\n\t//\t\twould have a custom getter of _fooGetter and a custom setter of _fooSetter.\r\n\t//\r\n\t// example:\r\n\t//\t|\trequire([\"dojo/Stateful\", function(Stateful) {\r\n\t//\t|\t\tvar obj = new Stateful();\r\n\t//\t|\t\tobj.watch(\"foo\", function(){\r\n\t//\t|\t\t\tconsole.log(\"foo changed to \" + this.get(\"foo\"));\r\n\t//\t|\t\t});\r\n\t//\t|\t\tobj.set(\"foo\",\"bar\");\r\n\t//\t|\t});\r\n\r\n\t// _attrPairNames: Hash\r\n\t//\t\tUsed across all instances a hash to cache attribute names and their getter \r\n\t//\t\tand setter names.\r\n\t_attrPairNames: {},\r\n\r\n\t_getAttrNames: function(name){\r\n\t\t// summary:\r\n\t\t//\t\tHelper function for get() and set().\r\n\t\t//\t\tCaches attribute name values so we don't do the string ops every time.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tvar apn = this._attrPairNames;\r\n\t\tif(apn[name]){ return apn[name]; }\r\n\t\treturn (apn[name] = {\r\n\t\t\ts: \"_\" + name + \"Setter\",\r\n\t\t\tg: \"_\" + name + \"Getter\"\r\n\t\t});\r\n\t},\r\n\r\n\tpostscript: function(/*Object?*/ params){\r\n\t\t// Automatic setting of params during construction\r\n\t\tif (params){ this.set(params); }\r\n\t},\r\n\r\n\t_get: function(name, names){\r\n\t\t// summary:\r\n\t\t//\t\tPrivate function that does a get based off a hash of names\r\n\t\t// names:\r\n\t\t//\t\tHash of names of custom attributes\r\n\t\treturn typeof this[names.g] === \"function\" ? this[names.g]() : this[name];\r\n\t},\r\n\tget: function(/*String*/name){\r\n\t\t// summary:\r\n\t\t//\t\tGet a property on a Stateful instance.\r\n\t\t// name:\r\n\t\t//\t\tThe property to get.\r\n\t\t// returns:\r\n\t\t//\t\tThe property value on this Stateful instance.\r\n\t\t// description:\r\n\t\t//\t\tGet a named property on a Stateful object. The property may\r\n\t\t//\t\tpotentially be retrieved via a getter method in subclasses. In the base class\r\n\t\t//\t\tthis just retrieves the object's property.\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/Stateful\", function(Stateful) {\r\n\t\t//\t|\t\tvar stateful = new Stateful({foo: 3});\r\n\t\t//\t|\t\tstateful.get(\"foo\") // returns 3\r\n\t\t//\t|\t\tstateful.foo // returns 3\r\n\t\t//\t|\t});\r\n\r\n\t\treturn this._get(name, this._getAttrNames(name)); //Any\r\n\t},\r\n\tset: function(/*String*/name, /*Object*/value){\r\n\t\t// summary:\r\n\t\t//\t\tSet a property on a Stateful instance\r\n\t\t// name:\r\n\t\t//\t\tThe property to set.\r\n\t\t// value:\r\n\t\t//\t\tThe value to set in the property.\r\n\t\t// returns:\r\n\t\t//\t\tThe function returns this dojo.Stateful instance.\r\n\t\t// description:\r\n\t\t//\t\tSets named properties on a stateful object and notifies any watchers of\r\n\t\t//\t\tthe property. A programmatic setter may be defined in subclasses.\r\n\t\t// example:\r\n\t\t//\t|\trequire([\"dojo/Stateful\", function(Stateful) {\r\n\t\t//\t|\t\tvar stateful = new Stateful();\r\n\t\t//\t|\t\tstateful.watch(function(name, oldValue, value){\r\n\t\t//\t|\t\t\t// this will be called on the set below\r\n\t\t//\t|\t\t}\r\n\t\t//\t|\t\tstateful.set(foo, 5);\r\n\t\t//\tset() may also be called with a hash of name/value pairs, ex:\r\n\t\t//\t|\t\tstateful.set({\r\n\t\t//\t|\t\t\tfoo: \"Howdy\",\r\n\t\t//\t|\t\t\tbar: 3\r\n\t\t//\t|\t\t});\r\n\t\t//\t|\t});\r\n\t\t//\tThis is equivalent to calling set(foo, \"Howdy\") and set(bar, 3)\r\n\r\n\t\t// If an object is used, iterate through object\r\n\t\tif(typeof name === \"object\"){\r\n\t\t\tfor(var x in name){\r\n\t\t\t\tif(name.hasOwnProperty(x) && x !=\"_watchCallbacks\"){\r\n\t\t\t\t\tthis.set(x, name[x]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar names = this._getAttrNames(name),\r\n\t\t\toldValue = this._get(name, names),\r\n\t\t\tsetter = this[names.s],\r\n\t\t\tresult;\r\n\t\tif(typeof setter === \"function\"){\r\n\t\t\t// use the explicit setter\r\n\t\t\tresult = setter.apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t}else{\r\n\t\t\t// no setter so set attribute directly\r\n\t\t\tthis[name] = value;\r\n\t\t}\r\n\t\tif(this._watchCallbacks){\r\n\t\t\tvar self = this;\r\n\t\t\t// If setter returned a promise, wait for it to complete, otherwise call watches immediately\r\n\t\t\twhen(result, function(){\r\n\t\t\t\tself._watchCallbacks(name, oldValue, value);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this; // dojo/Stateful\r\n\t},\r\n\t_changeAttrValue: function(name, value){\r\n\t\t// summary:\r\n\t\t//\t\tInternal helper for directly changing an attribute value.\r\n\t\t//\r\n\t\t// name: String\r\n\t\t//\t\tThe property to set.\r\n\t\t// value: Mixed\r\n\t\t//\t\tThe value to set in the property.\r\n\t\t//\r\n\t\t// description:\r\n\t\t//\t\tDirectly change the value of an attribute on an object, bypassing any \r\n\t\t//\t\taccessor setter.  Also handles the calling of watch and emitting events. \r\n\t\t//\t\tIt is designed to be used by descendant class when there are two values \r\n\t\t//\t\tof attributes that are linked, but calling .set() is not appropriate.\r\n\r\n\t\tvar oldValue = this.get(name);\r\n\t\tthis[name] = value;\r\n\t\tif(this._watchCallbacks){\r\n\t\t\tthis._watchCallbacks(name, oldValue, value);\r\n\t\t}\r\n\t\treturn this; // dojo/Stateful\r\n\t},\r\n\twatch: function(/*String?*/name, /*Function*/callback){\r\n\t\t// summary:\r\n\t\t//\t\tWatches a property for changes\r\n\t\t// name:\r\n\t\t//\t\tIndicates the property to watch. This is optional (the callback may be the\r\n\t\t//\t\tonly parameter), and if omitted, all the properties will be watched\r\n\t\t// returns:\r\n\t\t//\t\tAn object handle for the watch. The unwatch method of this object\r\n\t\t//\t\tcan be used to discontinue watching this property:\r\n\t\t//\t\t|\tvar watchHandle = obj.watch(\"foo\", callback);\r\n\t\t//\t\t|\twatchHandle.unwatch(); // callback won't be called now\r\n\t\t// callback:\r\n\t\t//\t\tThe function to execute when the property changes. This will be called after\r\n\t\t//\t\tthe property has been changed. The callback will be called with the |this|\r\n\t\t//\t\tset to the instance, the first argument as the name of the property, the\r\n\t\t//\t\tsecond argument as the old value and the third argument as the new value.\r\n\r\n\t\tvar callbacks = this._watchCallbacks;\r\n\t\tif(!callbacks){\r\n\t\t\tvar self = this;\r\n\t\t\tcallbacks = this._watchCallbacks = function(name, oldValue, value, ignoreCatchall){\r\n\t\t\t\tvar notify = function(propertyCallbacks){\r\n\t\t\t\t\tif(propertyCallbacks){\r\n\t\t\t\t\t\tpropertyCallbacks = propertyCallbacks.slice();\r\n\t\t\t\t\t\tfor(var i = 0, l = propertyCallbacks.length; i < l; i++){\r\n\t\t\t\t\t\t\tpropertyCallbacks[i].call(self, name, oldValue, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tnotify(callbacks['_' + name]);\r\n\t\t\t\tif(!ignoreCatchall){\r\n\t\t\t\t\tnotify(callbacks[\"*\"]); // the catch-all\r\n\t\t\t\t}\r\n\t\t\t}; // we use a function instead of an object so it will be ignored by JSON conversion\r\n\t\t}\r\n\t\tif(!callback && typeof name === \"function\"){\r\n\t\t\tcallback = name;\r\n\t\t\tname = \"*\";\r\n\t\t}else{\r\n\t\t\t// prepend with dash to prevent name conflicts with function (like \"name\" property)\r\n\t\t\tname = '_' + name;\r\n\t\t}\r\n\t\tvar propertyCallbacks = callbacks[name];\r\n\t\tif(typeof propertyCallbacks !== \"object\"){\r\n\t\t\tpropertyCallbacks = callbacks[name] = [];\r\n\t\t}\r\n\t\tpropertyCallbacks.push(callback);\r\n\r\n\t\t// TODO: Remove unwatch in 2.0\r\n\t\tvar handle = {};\r\n\t\thandle.unwatch = handle.remove = function(){\r\n\t\t\tvar index = array.indexOf(propertyCallbacks, callback);\r\n\t\t\tif(index > -1){\r\n\t\t\t\tpropertyCallbacks.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn handle; //Object\r\n\t}\r\n\r\n});\r\n\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojo/Stateful.js\n");

/***/ }),

/***/ "./node_modules/dojox/string/BidiEngine.js":
/*!*************************************************!*\
  !*** ./node_modules/dojox/string/BidiEngine.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! dojo/_base/lang */ \"./node_modules/dojo/_base/lang.js\"), __webpack_require__(/*! dojo/_base/declare */ \"./node_modules/dojo/_base/declare.js\"), __webpack_require__(/*! dojo/Stateful */ \"./node_modules/dojo/Stateful.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(lang,declare,Stateful) {\r\n\tlang.getObject(\"string\", true, dojox);\r\n\r\n\tvar BidiEngine = declare(\"dojox.string.BidiEngine\", Stateful, {\r\n\t\t// summary:\r\n\t\t//\t\tThis class provides a bidi transformation engine, i.e.\r\n\t\t//\t\tfunctions for reordering and shaping bidi text.\r\n\t\t// description:\r\n\t\t//\t\tBidi stands for support for languages with a bidirectional script.\r\n\t\t//\r\n\t\t//\t\tUsually Unicode Bidi Algorithm used by OS platform (and web browsers) is capable of properly\r\n\t\t//\t\ttransforming Bidi text and as a result it is adequately displayed on the screen.\r\n\t\t//\t\tHowever, in some situations, Unicode Bidi Algorithm is not invoked or is not properly applied.\r\n\t\t//\t\tThis may occur in situation in which software responsible for rendering the text is not leveraging\r\n\t\t//\t\tUnicode Bidi Algorithm implemented by OS (e.g. GFX renderers).\r\n\t\t//\r\n\t\t//\t\tBidi engine provided in this class implements Unicode Bidi Algorithm as specified at\r\n\t\t//\t\thttp://www.unicode.org/reports/tr9/.\r\n\t\t//\r\n\t\t//\t\tFor more information on basic Bidi concepts please read\r\n\t\t//\t\t\"Bidirectional script support - A primer\" available from\r\n\t\t//\t\thttp://www.ibm.com/developerworks/websphere/library/techarticles/bidi/bidigen.html.\r\n\t\t//\r\n\t\t//\t\tAs of February 2011, Bidi engine has following limitations:\r\n\t\t//\r\n\t\t//\t\t1. No support for following numeric shaping options:\r\n\t\t//\t\t\t- H - Hindi,\r\n\t\t//\t\t\t- C - Contextual,\r\n\t\t//\t\t\t- N - Nominal.\r\n\t\t//\t\t2. No support for following shaping options:\r\n\t\t//\t\t\t- I - Initial shaping,\r\n\t\t//\t\t\t- M - Middle shaping,\r\n\t\t//\t\t\t- F - Final shaping,\r\n\t\t//\t\t\t- B - Isolated shaping.\r\n\t\t//\t\t3. No support for LRE/RLE/LRO/RLO/PDF (they are handled like neutrals).\r\n\t\t//\t\t4. No support for Windows compatibility.\r\n\t\t//\t\t5. No support for  insert/remove marks.\r\n\t\t//\t\t6. No support for code pages.\r\n\t\t//\r\n\r\n\t\t// Input Bidi layout in which inputText is passed to the function.\r\n\t\tinputFormat: \"ILYNN\",\r\n\r\n\t\t// Output Bidi layout to which inputText should be transformed.\r\n\t\toutputFormat: \"VLNNN\",\r\n\r\n\t\t// Array, containing positions of each character from the source text in the resulting text.\r\n\t\tsourceToTarget: [],\r\n\r\n\t\t// Array, containing positions of each character from the resulting text in the source text.\r\n\t\ttargetToSource: [],\r\n\r\n\t\t// Array, containing bidi level of each character from the source text\r\n\t\tlevels: [],\r\n\r\n\t\tbidiTransform: function (/*String*/text, /*String*/formatIn, /*String*/formatOut) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tCentral public API for Bidi engine. Transforms the text according to formatIn, formatOut\r\n\t\t\t//\t\tparameters. If formatIn or formatOut parametrs are not valid throws an exception.\r\n\t\t\t// inputText:\r\n\t\t\t//\t\tInput text subject to application of Bidi transformation.\r\n\t\t\t// formatIn:\r\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\r\n\t\t\t// formatOut:\r\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\r\n\t\t\t// description:\r\n\t\t\t//\t\tBoth formatIn and formatOut parameters are 5 letters long strings.\r\n\t\t\t//\t\tFor example - \"ILYNN\". Each letter is associated with specific attribute of Bidi layout.\r\n\t\t\t//\t\tPossible and default values for each one of the letters are provided below:\r\n\t\t\t//\r\n\t\t\t//\t\tFirst letter:\r\n\t\t\t//\r\n\t\t\t//\t\t- Letter position/index:\r\n\t\t\t//\t\t\t1\r\n\t\t\t//\t\t- Letter meaning:\r\n\t\t\t//\t\t\tOrdering Schema.\r\n\t\t\t//\t\t- Possible values:\r\n\t\t\t//\t\t\t- I - Implicit (Logical).\r\n\t\t\t//\t\t\t- V - Visual.\r\n\t\t\t//\t\t- Default value:\r\n\t\t\t//\t\t\tI\r\n\t\t\t//\r\n\t\t\t//\t\tSecond letter:\r\n\t\t\t//\r\n\t\t\t//\t\t- Letter position/index:\r\n\t\t\t//\t\t\t2\r\n\t\t\t//\t\t- Letter meaning:\r\n\t\t\t//\t\t\tOrientation.\r\n\t\t\t//\t\t- Possible values:\r\n\t\t\t//\t\t\t- L - Left To Right.\r\n\t\t\t//\t\t\t- R - Right To Left.\r\n\t\t\t//\t\t\t- C - Contextual Left to Right.\r\n\t\t\t//\t\t\t- D - Contextual Right to Left.\r\n\t\t\t//\t\t- Default value:\r\n\t\t\t//\t\t\tL\r\n\t\t\t//\r\n\t\t\t//\t\tThird letter:\r\n\t\t\t//\r\n\t\t\t//\t\t- Letter position/index:\r\n\t\t\t//\t\t\t3\r\n\t\t\t//\t\t- Letter meaning:\r\n\t\t\t//\t\t\tSymmetric Swapping.\r\n\t\t\t//\t\t- Possible values:\r\n\t\t\t//\t\t\t- Y - Symmetric swapping is on.\r\n\t\t\t//\t\t\t- N - Symmetric swapping is off.\r\n\t\t\t//\t\t- Default value:\r\n\t\t\t//\t\t\tY\r\n\t\t\t//\r\n\t\t\t//\t\tFourth letter:\r\n\t\t\t//\r\n\t\t\t//\t\t- Letter position/index:\r\n\t\t\t//\t\t\t4\r\n\t\t\t//\t\t- Letter meaning:\r\n\t\t\t//\t\t\tShaping.\r\n\t\t\t//\t\t- Possible values:\r\n\t\t\t//\t\t\t- S - Text is shaped.\r\n\t\t\t//\t\t\t- N - Text is not shaped.\r\n\t\t\t//\t\t- Default value:\r\n\t\t\t//\t\t\tN\r\n\t\t\t//\r\n\t\t\t//\t\tFifth letter:\r\n\t\t\t//\r\n\t\t\t//\t\t- Letter position/index:\r\n\t\t\t//\t\t\t5\r\n\t\t\t//\t\t- Letter meaning:\r\n\t\t\t//\t\t\tNumeric Shaping.\r\n\t\t\t//\t\t- Possible values:\r\n\t\t\t//\t\t\t- N - Nominal.\r\n\t\t\t//\t\t- Default value:\r\n\t\t\t//\t\t\tN\r\n\t\t\t//\r\n\t\t\t//\t\tThe output of this function is original text (passed via first argument) transformed from\r\n\t\t\t//\t\tinput Bidi layout (second argument) to output Bidi layout (last argument).\r\n\t\t\t//\r\n\t\t\t//\t\tSample call:\r\n\t\t\t//\t|\tmytext = bidiTransform(\"HELLO WORLD\", \"ILYNN\", \"VLYNN\");\r\n\t\t\t//\t\tIn this case, \"HELLO WORLD\" text is transformed from Logical - LTR to Visual - LTR Bidi layout\r\n\t\t\t//\t\twith default values for symmetric swapping (Yes), shaping (Not shaped) and numeric shaping\r\n\t\t\t//\t\t(Nominal).\r\n\t\t\t// returns: String\r\n\t\t\t//\t\tOriginal text transformed from input Bidi layout (second argument)\r\n\t\t\t//\t\tto output Bidi layout (last argument).\r\n\t\t\t//\t\tThrows an exception if the bidi layout strings are not valid.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\r\n\t\t\tthis.sourceToTarget = [];\r\n\t\t\tthis.targetToSource = [];\r\n\t\t\tif (!text) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\tinitMaps(this.sourceToTarget, this.targetToSource, text.length);\r\n\t\t\tif (!this.checkParameters(formatIn, formatOut)) {\r\n\t\t\t\treturn text;\r\n\t\t\t}\r\n\r\n\t\t\tformatIn = this.inputFormat;\r\n\t\t\tformatOut = this.outputFormat;\r\n\t\t\tvar result = text;\r\n\t\t\tvar bdx = BDX;\r\n\t\t\tvar orientIn = getOrientation(formatIn.charAt(1)),\r\n\t\t\t\torientOut = getOrientation(formatOut.charAt(1)),\r\n\t\t\t\tosIn = (formatIn.charAt(0) === \"I\") ? \"L\" : formatIn.charAt(0),\r\n\t\t\t\tosOut = (formatOut.charAt(0) === \"I\") ? \"L\" : formatOut.charAt(0),\r\n\t\t\t\tinFormat = osIn + orientIn,\r\n\t\t\t\toutFormat = osOut + orientOut,\r\n\t\t\t\tswap = formatIn.charAt(2) + formatOut.charAt(2);\r\n\r\n\t\t\tbdx.defInFormat = inFormat;\r\n\t\t\tbdx.defOutFormat = outFormat;\r\n\t\t\tbdx.defSwap = swap;\r\n\r\n\t\t\tvar stage1Text = doBidiReorder(text, inFormat, outFormat, swap, bdx),\r\n\t\t\t\tisRtl = false;\r\n\r\n\t\t\tif (formatOut.charAt(1) === \"R\") {\r\n\t\t\t\tisRtl = true;\r\n\t\t\t} else if (formatOut.charAt(1) === \"C\" || formatOut.charAt(1) === \"D\") {\r\n\t\t\t\tisRtl = this.checkContextual(stage1Text);\r\n\t\t\t}\r\n\r\n\t\t\tthis.sourceToTarget = stMap;\r\n\t\t\tthis.targetToSource = reverseMap(this.sourceToTarget);\r\n\t\t\ttsMap = this.targetToSource;\r\n\r\n\t\t\tif (formatIn.charAt(3) === formatOut.charAt(3)) {\r\n\t\t\t\tresult = stage1Text;\r\n\t\t\t} else if (formatOut.charAt(3) === \"S\") {\r\n\t\t\t\tresult = shape(isRtl, stage1Text, true);\r\n\t\t\t} else {  //formatOut.charAt(3) === \"N\"\r\n\t\t\t\tresult = deshape(stage1Text, isRtl, true);\r\n\t\t\t}\r\n\t\t\tthis.sourceToTarget = stMap;\r\n\t\t\tthis.targetToSource = tsMap;\r\n\t\t\tthis.levels = lvMap;\r\n\t\t\treturn result;\r\n\t\t},\r\n\r\n\t\t_inputFormatSetter: function (format) {\r\n\t\t\tif (!validFormat.test(format)) {\r\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\r\n\t\t\t}\r\n\t\t\tthis.inputFormat = format;\r\n\t\t},\r\n\r\n\t\t_outputFormatSetter: function (format) {\r\n\t\t\tif (!validFormat.test(format)) {\r\n\t\t\t\tthrow new Error(\"dojox/string/BidiEngine: the bidi layout string is wrong!\");\r\n\t\t\t}\r\n\t\t\tthis.outputFormat = format;\r\n\t\t},\r\n\r\n\t\tcheckParameters: function (/*String*/formatIn, /*String*/formatOut) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tChecks layout parameters.\r\n\t\t\t// formatIn:\r\n\t\t\t//\t\tInput Bidi layout in which inputText is passed to the function.\r\n\t\t\t// formatOut:\r\n\t\t\t//\t\tOutput Bidi layout to which inputText should be transformed.\r\n\t\t\t// description:\r\n\t\t\t//\t\tChecks, that layout parameters are different and contain allowed values.\r\n\t\t\t//\t\tAllowed values for format string are:\r\n\t\t\t//\t\t\t- 1st letter: I, V\r\n\t\t\t//\t\t\t- 2nd letter: L, R, C, D\r\n\t\t\t//\t\t\t- 3rd letter: Y, N\r\n\t\t\t//\t\t\t- 4th letter: S, N\r\n\t\t\t//\t\t\t- 5th letter: N\r\n\t\t\t// returns: /*Boolean*/\r\n\t\t\t//\t\ttrue - if layout parameters are valid.\r\n\t\t\t//\t\tfalse - otherwise.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tprivate\r\n\r\n\t\t\tif (!formatIn) {\r\n\t\t\t\tformatIn = this.inputFormat;\r\n\t\t\t} else {\r\n\t\t\t\tthis.set(\"inputFormat\", formatIn);\r\n\t\t\t}\r\n\t\t\tif (!formatOut) {\r\n\t\t\t\tformatOut = this.outputFormat;\r\n\t\t\t} else {\r\n\t\t\t\tthis.set(\"outputFormat\", formatOut);\r\n\t\t\t}\r\n\t\t\tif (formatIn === formatOut) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tcheckContextual: function (/*String*/text) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tDetermine the base direction of a bidi text according\r\n\t\t\t//\t\tto its first strong directional character.\r\n\t\t\t// text:\r\n\t\t\t//\t\tThe text to check.\r\n\t\t\t// returns: /*String*/\r\n\t\t\t//\t\t\"ltr\" or \"rtl\" according to the first strong character.\r\n\t\t\t//\t\tIf there is no strong character, returns the value of the\r\n\t\t\t//\t\tdocument dir property.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\t\t\tvar dir = firstStrongDir(text);\r\n\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdir = document.dir.toLowerCase();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t}\r\n\t\t\t\tif (dir !== \"ltr\" && dir !== \"rtl\") {\r\n\t\t\t\t\tdir = \"ltr\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn dir;\r\n\t\t},\r\n\r\n\t\thasBidiChar: function (/*String*/text) {\r\n\t\t\t// summary:\r\n\t\t\t//\t\tReturn true if text contains RTL directed character.\r\n\t\t\t// text:\r\n\t\t\t//\t\tThe source string.\r\n\t\t\t// description:\r\n\t\t\t//\t\tSearches for RTL directed character.\r\n\t\t\t//\t\tReturns true if found, else returns false.\r\n\t\t\t// returns: /*Boolean*/\r\n\t\t\t//\t\ttrue - if text has a RTL directed character.\r\n\t\t\t//\t\tfalse - otherwise.\r\n\t\t\t// tags:\r\n\t\t\t//\t\tpublic\r\n\r\n\t\t    return bidiChars.test(text);\r\n\t\t}\r\n\t});\r\n\r\n\tfunction doBidiReorder(/*String*/text, /*String*/inFormat,\r\n\t\t\t\t/*String*/outFormat, /*String*/swap, /*Object*/bdx) {\r\n\t\t// summary:\r\n\t\t//\t\tReorder the source text according to the bidi attributes\r\n\t\t//\t\tof source and result.\r\n\t\t// text:\r\n\t\t//\t\tThe text to reorder.\r\n\t\t// inFormat:\r\n\t\t//\t\tOrdering scheme and base direction of the source text.\r\n\t\t//\t\tCan be \"LLTR\", \"LRTL\", \"LCLR\", \"LCRL\", \"VLTR\", \"VRTL\",\r\n\t\t//\t\t\"VCLR\", \"VCRL\".\r\n\t\t//\t\tThe first letter is \"L\" for logical ordering scheme,\r\n\t\t//\t\t\"V\" for visual ordering scheme.\r\n\t\t//\t\tThe other letters specify the base direction.\r\n\t\t//\t\t\"CLR\" means contextual direction defaulting to LTR if\r\n\t\t//\t\tthere is no strong letter.\r\n\t\t//\t\t\"CRL\" means contextual direction defaulting to RTL if\r\n\t\t//\t\tthere is no strong letter.\r\n\t\t//\t\tThe initial value is \"LLTR\", if none, the initial value is used.\r\n\t\t// outFormat:\r\n\t\t//\t\tRequired ordering scheme and base direction of the\r\n\t\t//\t\tresult. Has the same format as inFormat.\r\n\t\t//\t\tIf none, the initial value \"VLTR\" is used.\r\n\t\t// swap:\r\n\t\t//\t\tSymmetric swapping attributes of source and result.\r\n\t\t//\t\tThe allowed values can be \"YN\", \"NY\", \"YY\" and \"NN\".\r\n\t\t//\t\tThe first letter reflects the symmetric swapping attribute\r\n\t\t//\t\tof the source, the second letter that of the result.\r\n\t\t// bdx: Object\r\n\t\t//\t\tUsed for intermediate data storage\r\n\t\t// returns:\r\n\t\t//\t\tText reordered according to source and result attributes.\r\n\r\n\t\tvar params = prepareReorderingParameters(text, {inFormat: inFormat, outFormat: outFormat, swap: swap}, bdx);\r\n\t\tif (params.inFormat === params.outFormat) {\r\n\t\t\treturn text;\r\n\t\t}\r\n\t\tinFormat = params.inFormat;\r\n\t\toutFormat = params.outFormat;\r\n\t\tswap = params.swap;\r\n\t\tvar inOrdering = inFormat.substring(0, 1),\r\n\t\tinOrientation = inFormat.substring(1, 4),\r\n\t\toutOrdering = outFormat.substring(0, 1),\r\n\t\toutOrientation = outFormat.substring(1, 4);\r\n\t\tbdx.inFormat = inFormat;\r\n\t\tbdx.outFormat = outFormat;\r\n\t\tbdx.swap = swap;\r\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VLTR\")) { //core cases\r\n\t\t\t//cases: LLTR->VLTR, LRTL->VLTR\r\n\t\t\tif (inOrientation === \"LTR\") {\r\n\t\t\t\tbdx.dir = LTR;\r\n\t\t\t\treturn doReorder(text, bdx);\r\n\t\t\t}\r\n\t\t\tif (inOrientation === \"RTL\") {\r\n\t\t\t\tbdx.dir = RTL;\r\n\t\t\t\treturn doReorder(text, bdx);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"V\")) {\r\n\t\t\t//inOrientation != outOrientation\r\n\t\t\t//cases: VRTL->VLTR, VLTR->VRTL\r\n\t\t\tbdx.dir = inOrientation === \"RTL\"? RTL : LTR;\r\n\t\t\treturn invertStr(text, bdx);\r\n\t\t}\r\n\t\tif ((inOrdering === \"L\") && (outFormat === \"VRTL\")) {\r\n\t\t\t//cases: LLTR->VRTL, LRTL->VRTL\r\n\t\t\tif (inOrientation === \"LTR\") {\r\n\t\t\t\tbdx.dir = LTR;\r\n\t\t\t\ttext = doReorder(text, bdx);\r\n\t\t\t} else {\r\n\t\t\t\t//inOrientation == RTL\r\n\t\t\t\tbdx.dir = RTL;\r\n\t\t\t\ttext = doReorder(text, bdx);\r\n\t\t\t}\r\n\t\t\treturn invertStr(text);\r\n\t\t}\r\n\t\tif ((inFormat === \"VLTR\") && (outFormat === \"LLTR\")) {\r\n\t\t\t//case: VLTR->LLTR\r\n\t\t\tbdx.dir = LTR;\r\n\t\t\treturn doReorder(text, bdx);\r\n\t\t}\r\n\t\tif ((inOrdering === \"V\") && (outOrdering === \"L\") && (inOrientation !== outOrientation)) {\r\n\t\t\t//cases: VLTR->LRTL, VRTL->LLTR\r\n\t\t\ttext = invertStr(text);\r\n\t\t\treturn (inOrientation === \"RTL\") ? doBidiReorder(text, \"LLTR\", \"VLTR\", swap, bdx) :\r\n\t\t\t\t\t\t\t\t\t\t\t\tdoBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\r\n\t\t}\r\n\t\tif ((inFormat === \"VRTL\") && (outFormat === \"LRTL\")) {\r\n\t\t\t//case VRTL->LRTL\r\n\t\t\treturn doBidiReorder(text, \"LRTL\", \"VRTL\", swap, bdx);\r\n\t\t}\r\n\t\tif ((inOrdering === \"L\") && (outOrdering === \"L\")) {\r\n\t\t\t//inOrientation != outOrientation\r\n\t\t\t//cases: LRTL->LLTR, LLTR->LRTL\r\n\t\t\tvar saveSwap = bdx.swap;\r\n\t\t\tbdx.swap = saveSwap.substr(0, 1) + \"N\";\r\n\t\t\tif (inOrientation === \"RTL\") {\r\n\t\t\t\t//LRTL->LLTR\r\n\t\t\t\tbdx.dir = RTL;\r\n\t\t\t\ttext = doReorder(text, bdx);\r\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\r\n\t\t\t\tbdx.dir = LTR;\r\n\t\t\t\ttext = doReorder(text, bdx);\r\n\t\t\t} else { //LLTR->LRTL\r\n\t\t\t\tbdx.dir = LTR;\r\n\t\t\t\ttext = doReorder(text, bdx);\r\n\t\t\t\tbdx.swap = \"N\" + saveSwap.substr(1, 2);\r\n\t\t\t\ttext = doBidiReorder(text, \"VLTR\", \"LRTL\", bdx.swap, bdx);\r\n\t\t\t}\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction prepareReorderingParameters(/*String*/text, /*Object*/params, /*Object*/bdx) {\r\n\t\t// summary:\r\n\t\t//\t\tPrepare reordering parameters\r\n\t\t// text:\r\n\t\t//\t\tThe text to reorder.\r\n\t\t// params:\r\n\t\t//      Object, containing reordering parameters:\r\n\t\t//         - inFormat: Ordering scheme and base direction of the source text.\r\n\t\t//         - outFormat: Required ordering scheme and base direction of the result.\r\n\t\t//         - swap: Symmetric swapping attributes of source and result.\r\n\t\t// bdx: Object\r\n\t\t//\t\tUsed for intermediate data storage\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tif (params.inFormat === undefined) {\r\n\t\t\tparams.inFormat = bdx.defInFormat;\r\n\t\t}\r\n\t\tif (params.outFormat === undefined) {\r\n\t\t\tparams.outFormat = bdx.defOutFormat;\r\n\t\t}\r\n\t\tif (params.swap === undefined) {\r\n\t\t\tparams.swap = bdx.defSwap;\r\n\t\t}\r\n\t\tif (params.inFormat === params.outFormat) {\r\n\t\t\treturn params;\r\n\t\t}\r\n\t\tvar dir, inOrdering = params.inFormat.substring(0, 1),\r\n\t\tinOrientation = params.inFormat.substring(1, 4),\r\n\t\toutOrdering = params.outFormat.substring(0, 1),\r\n\t\toutOrientation = params.outFormat.substring(1, 4);\r\n\t\tif (inOrientation.charAt(0) === \"C\") {\r\n\t\t\tdir = firstStrongDir(text);\r\n\t\t\tif (dir === \"ltr\" || dir === \"rtl\") {\r\n\t\t\t\tinOrientation = dir.toUpperCase();\r\n\t\t\t} else {\r\n\t\t\t\tinOrientation = params.inFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\r\n\t\t\t}\r\n\t\t\tparams.inFormat = inOrdering + inOrientation;\r\n\t\t}\r\n\t\tif (outOrientation.charAt(0) === \"C\") {\r\n\t\t\tdir = firstStrongDir(text);\r\n\t\t\tif (dir === \"rtl\") {\r\n\t\t\t\toutOrientation = \"RTL\";\r\n\t\t\t} else if (dir === \"ltr\") {\r\n\t\t\t\tdir = lastStrongDir(text);\r\n\t\t\t\toutOrientation = dir.toUpperCase();\r\n\t\t\t} else {\r\n\t\t\t\toutOrientation = params.outFormat.charAt(2) === \"L\" ? \"LTR\" : \"RTL\";\r\n\t\t\t}\r\n\t\t\tparams.outFormat = outOrdering + outOrientation;\r\n\t\t}\r\n\t\treturn params;\r\n\t}\r\n\r\n\tfunction shape(/*boolean*/rtl, /*String*/text, /*boolean*/compress) {\r\n\t\t// summary:\r\n\t\t//\t\tShape the source text.\r\n\t\t// rtl:\r\n\t\t//\t\tFlag indicating if the text is in RTL direction (logical\r\n\t\t//\t\tdirection for Arabic words).\r\n\t\t// text:\r\n\t\t//\t\tThe text to shape.\r\n\t\t// compress:\r\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\r\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\r\n\t\t//\t\tto decrease the buffer size. This option can be:\r\n\t\t//\r\n\t\t//\t\t- true (default) to not insert extra space after compressing Lam+Alef into one character Lamalef\r\n\t\t//\t\t- false to insert an extra space after compressed Lamalef to preserve the buffer size\r\n\t\t// returns:\r\n\t\t//\t\ttext shaped.\r\n\t\t// tags:\r\n\t\t//\t\tprivate.\r\n\r\n\t\tif (text.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (rtl === undefined) {\r\n\t\t\trtl = true;\r\n\t\t}\r\n\t\tif (compress === undefined) {\r\n\t\t\tcompress = true;\r\n\t\t}\r\n\t\ttext = String(text);\r\n\r\n\t\tvar str06 = text.split(\"\"),\r\n\t\t\tIx = 0,\r\n\t\t\tstep = +1,\r\n\t\t\tnIEnd = str06.length;\r\n\t\tif (!rtl) {\r\n\t\t\tIx = str06.length - 1;\r\n\t\t\tstep = -1;\r\n\t\t\tnIEnd = 1;\r\n\t\t}\r\n\t\tvar compressArray = doShape(str06, Ix, step, nIEnd, compress);\r\n\t\tvar outBuf = \"\";\r\n\t\tfor (var idx = 0; idx < str06.length; idx++) {\r\n\t\t\tif (!(compress && indexOf(compressArray, compressArray.length, idx) > -1)) {\r\n\t\t\t\toutBuf += str06[idx];\r\n\t\t\t} else {\r\n\t\t\t\tupdateMap(tsMap, idx, !rtl, -1);\r\n\t\t\t\tstMap.splice(idx, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn outBuf;\r\n\t}\r\n\r\n\tfunction doShape(str06, Ix, step, nIEnd, compress) {\r\n\t\t// summary:\r\n\t\t//\t\tShape the source text.\r\n\t\t// str06:\r\n\t\t//\t\tArray containing source text\r\n\t\t// Ix:\r\n\t\t//\t\tIndex of the first handled element\r\n\t\t// step:\r\n\t\t//\t\tdirection of the process\r\n\t\t// nIEnd:\r\n\t\t//\t\tIndex of the last handled element\r\n\t\t// compress:\r\n\t\t//\t\tA flag indicates to insert extra space after the lam alef compression\r\n\t\t//\t\tto preserve the buffer size or not insert an extra space which will lead\r\n\t\t//\t\tto decrease the buffer size.\r\n\t\t// returns:\r\n\t\t//\t\tArray, contained shaped text.\r\n\t\t// tags:\r\n\t\t//\t\tprivate.\r\n\r\n\t\tvar previousCursive = 0, compressArray = [], compressArrayIndx = 0;\r\n\t\tfor (var index = Ix; index * step < nIEnd; index = index + step) {\r\n\t\t\tif (isArabicAlefbet(str06[index]) || isArabicDiacritics(str06[index])) {\r\n\t\t\t\t// Arabic letter Lam\r\n\t\t\t\tif (str06[index] === \"\\u0644\" && isNextAlef(str06, (index + step), step, nIEnd)) {\r\n\t\t\t\t\tstr06[index] = (previousCursive === 0) ?\r\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefInialTableFE) :\r\n\t\t\t\t\t\t\tgetLamAlefFE(str06[index + step], LamAlefMedialTableFE);\r\n\t\t\t\t\tindex += step;\r\n\t\t\t\t\tsetAlefToSpace(str06, index, step, nIEnd);\r\n\t\t\t\t\tif (compress) {\r\n\t\t\t\t\t\tcompressArray[compressArrayIndx] = index;\r\n\t\t\t\t\t\tcompressArrayIndx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousCursive = 0;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tvar currentChr = str06[index];\r\n\t\t\t\tif (previousCursive === 1) {\r\n\t\t\t\t\t// if next is Arabic\r\n\t\t\t\t\t// Character is in medial form\r\n\t\t\t\t\t// else character is in final form\r\n\t\t\t\t\tstr06[index] = (isNextArabic(str06, (index + step), step, nIEnd)) ?\r\n\t\t\t\t\t\tgetMedialFormCharacterFE(str06[index]) : getFormCharacterFE(str06[index], FinalForm);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (isNextArabic(str06, (index + step), step, nIEnd) === true) {\r\n\t\t\t\t\t\t//character is in Initial form\r\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], InitialForm);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstr06[index] = getFormCharacterFE(str06[index], IsolatedForm);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//exam if the current character is cursive\r\n\t\t\t\tif (!isArabicDiacritics(currentChr)) {\r\n\t\t\t\t\tpreviousCursive = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (isStandAlonCharacter(currentChr) === true) {\r\n\t\t\t\t\tpreviousCursive = 0;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpreviousCursive = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn compressArray;\r\n\t}\r\n\r\n\tfunction firstStrongDir(/*String*/text) {\r\n\t\t// summary:\r\n\t\t//\t\tReturn the first strong character direction\r\n\t\t// text:\r\n\t\t//\t\tThe source string.\r\n\t\t// description:\r\n\t\t//\t\tSearches for first \"strong\" character.\r\n\t\t//\t\tReturns if strong character was found with the direction defined by this\r\n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\r\n\t\t// returns: String\r\n\t\t//\t\t\"ltr\" - if the first strong character is Latin.\r\n\t\t//\t\t\"rtl\" - if the first strong character is RTL directed character.\r\n\t\t//\t\t\"\" - if the strong character wasn't found.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tvar fdc = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(text);\r\n\t\t// if found return the direction that defined by the character\r\n\t\treturn fdc ? (fdc[0] <= \"z\" ? \"ltr\" : \"rtl\") : \"\";\r\n\t}\r\n\r\n\tfunction lastStrongDir(text) {\r\n\t\t// summary:\r\n\t\t//\t\tReturn the last strong character direction\r\n\t\t// text:\r\n\t\t//\t\tThe source string.\r\n\t\t// description:\r\n\t\t//\t\tSearches for first (from the end) \"strong\" character.\r\n\t\t//\t\tReturns if strong character was found with the direction defined by this\r\n\t\t//\t\tcharacter, if no strong character was found returns an empty string.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar chars = text.split(\"\");\r\n\t\tchars.reverse();\r\n\t\treturn firstStrongDir(chars.join(\"\"));\r\n\t}\r\n\r\n\tfunction deshape(/*String*/text, /*boolean*/rtl, /*boolean*/consumeNextSpace) {\r\n\t\t// summary:\r\n\t\t//\t\tdeshape the source text.\r\n\t\t// text:\r\n\t\t//\t\tthe text to be deshape.\r\n\t\t// rtl:\r\n\t\t//\t\tflag indicating if the text is in RTL direction (logical\r\n\t\t//\t\tdirection for Arabic words).\r\n\t\t// consumeNextSpace:\r\n\t\t//\t\tflag indicating whether to consume the space next to the\r\n\t\t//\t\tthe lam alef if there is a space followed the Lamalef character to preserve the buffer size.\r\n\t\t//\t\tIn case there is no space next to the lam alef the buffer size will be increased due to the\r\n\t\t//\t\texpansion of the lam alef one character into lam+alef two characters\r\n\t\t// returns:\r\n\t\t//\t\ttext deshaped.\r\n\t\tif (text.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (consumeNextSpace === undefined) {\r\n\t\t\tconsumeNextSpace = true;\r\n\t\t}\r\n\t\tif (rtl === undefined) {\r\n\t\t\trtl = true;\r\n\t\t}\r\n\t\ttext = String(text);\r\n\r\n\t\tvar outBuf = \"\", strFE = [];\r\n\t\tstrFE = text.split(\"\");\r\n\t\tfor (var i = 0; i < text.length; i++) {\r\n\t\t\tvar increase = false;\r\n\t\t\tif (strFE[i] >= \"\\uFE70\" && strFE[i] < \"\\uFEFF\") {\r\n\t\t\t\tvar chNum = text.charCodeAt(i);\r\n\t\t\t\tif (strFE[i] >= \"\\uFEF5\" && strFE[i] <= \"\\uFEFC\") {\r\n\t\t\t\t\t//expand the LamAlef\r\n\t\t\t\t\tif (rtl) {\r\n\t\t\t\t\t\t//Lam + Alef\r\n\t\t\t\t\t\tif (i > 0 && consumeNextSpace && strFE[i - 1] === \" \") {\r\n\t\t\t\t\t\t\toutBuf = outBuf.substring(0, outBuf.length - 1) + \"\\u0644\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\toutBuf += \"\\u0644\";\r\n\t\t\t\t\t\t\tincrease = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutBuf += AlefTable[(chNum - 65269) / 2];\r\n\t\t\t\t\t\toutBuf += \"\\u0644\";\r\n\t\t\t\t\t\tif (i + 1 < text.length && consumeNextSpace && strFE[i + 1] === \" \") {\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tincrease = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (increase) {\r\n\t\t\t\t\t\tupdateMap(tsMap, i, true, 1);\r\n\t\t\t\t\t\tstMap.splice(i, 0, stMap[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toutBuf += FETo06Table[chNum - 65136];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\toutBuf += strFE[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn outBuf;\r\n\t}\r\n\r\n\tfunction doReorder(str, bdx) {\r\n\t\t// summary:\r\n\t\t//\t\tHelper to the doBidiReorder. Manages the UBA.\r\n\t\t// str:\r\n\t\t//\t\tthe string to reorder.\r\n\t\t// bdx: Object\r\n\t\t//\t\tUsed for intermediate data storage\r\n\t\t// returns:\r\n\t\t//\t\ttext reordered according to source and result attributes.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar chars = str.split(\"\"), levels = [];\r\n\r\n\t\tcomputeLevels(chars, levels, bdx);\r\n\t\tswapChars(chars, levels, bdx);\r\n\t\tinvertLevel(2, chars, levels, bdx);\r\n\t\tinvertLevel(1, chars, levels, bdx);\r\n\t\tlvMap = levels;\r\n\t\treturn chars.join(\"\");\r\n\t}\r\n\r\n\tfunction computeLevels(chars, levels, bdx) {\r\n\t\tvar len = chars.length,\r\n\t\t\timpTab = bdx.dir ? impTabRtl : impTabLtr,\r\n\t\t\tprevState = null, newClass = null, newLevel = null, newState = 0,\r\n\t\t\taction = null, cond = null, condPos = -1, i = null, ix = null,\r\n\t\t\ttypes = [],\r\n\t\t\tclasses = [];\r\n\t\tbdx.hiLevel = bdx.dir;\r\n\t\tbdx.lastArabic = false;\r\n\t\tbdx.hasUbatAl = false;\r\n\t\tbdx.hasUbatB = false;\r\n\t\tbdx.hasUbatS = false;\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\ttypes[i] = getCharacterType(chars[i]);\r\n\t\t}\r\n\t\tfor (ix = 0; ix < len; ix++) {\r\n\t\t\tprevState = newState;\r\n\t\t\tclasses[ix] = newClass = getCharClass(chars, types, classes, ix, bdx);\r\n\t\t\tnewState = impTab[prevState][newClass];\r\n\t\t\taction = newState & 0xF0;\r\n\t\t\tnewState &= 0x0F;\r\n\t\t\tlevels[ix] = newLevel = impTab[newState][ITIL];\r\n\t\t\tif (action > 0) {\r\n\t\t\t\tif (action === 0x10) {\t// set conditional run to level 1\r\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\r\n\t\t\t\t\t\tlevels[i] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcondPos = -1;\r\n\t\t\t\t} else {\t// 0x20 confirm the conditional run\r\n\t\t\t\t\tcondPos = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcond = impTab[newState][ITCOND];\r\n\t\t\tif (cond) {\r\n\t\t\t\tif (condPos === -1) {\r\n\t\t\t\t\tcondPos = ix;\r\n\t\t\t\t}\r\n\t\t\t} else {\t// unconditional level\r\n\t\t\t\tif (condPos > -1) {\r\n\t\t\t\t\tfor (i = condPos; i < ix; i++) {\r\n\t\t\t\t\t\tlevels[i] = newLevel;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcondPos = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (types[ix] === UBAT_B) {\r\n\t\t\t\tlevels[ix] = 0;\r\n\t\t\t}\r\n\t\t\tbdx.hiLevel |= newLevel;\r\n\t\t}\r\n\t\tif (bdx.hasUbatS) {\r\n\t\t\thandleUbatS(types, levels, len, bdx);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleUbatS(types, levels, len, bdx) {\r\n\t\tfor (var i = 0; i < len; i++) {\r\n\t\t\tif (types[i] === UBAT_S) {\r\n\t\t\t\tlevels[i] = bdx.dir;\r\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\r\n\t\t\t\t\tif (types[j] === UBAT_WS) {\r\n\t\t\t\t\t\tlevels[j] = bdx.dir;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction swapChars(chars, levels, bdx) {\r\n\t\t// summary:\r\n\t\t//\t\tSwap characters with symmetrical mirroring as all kinds of parenthesis.\r\n\t\t//\t\t(When needed).\r\n\t\t// chars:\r\n\t\t//\t\tThe source string as Array of characters.\r\n\t\t// levels:\r\n\t\t//\t\tAn array (like hash) of flags for each character in the source string,\r\n\t\t//\t\tthat defines if swapping should be applied on the following character.\r\n\t\t// bdx: Object\r\n\t\t//\t\tUsed for intermediate data storage\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\r\n\t\tif (bdx.hiLevel === 0 || bdx.swap.substr(0, 1) === bdx.swap.substr(1, 2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (var i = 0; i < chars.length; i++) {\r\n\t\t\tif (levels[i] === 1) {\r\n\t\t\t\tchars[i] = getMirror(chars[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getCharacterType(ch) {\r\n\t\t// summary:\r\n\t\t//\t\tReturn the type of the character.\r\n\t\t// ch:\r\n\t\t//\t\tThe character to be checked.\r\n\r\n\t\t// description:\r\n\t\t//\t\tCheck the type of the character according to MasterTable,\r\n\t\t//\t\ttype = LTR, RTL, neutral,Arabic-Indic digit etc.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar uc = ch.charCodeAt(0),\r\n\t\t\thi = MasterTable[uc >> 8];\r\n\t\treturn (hi < TBBASE) ? hi : UnicodeTable[hi - TBBASE][uc & 0xFF];\r\n\t}\r\n\r\n\tfunction invertStr(str, bdx) {\r\n\t\t// summary:\r\n\t\t//\t\tReturn the reversed string.\r\n\t\t// str:\r\n\t\t//\t\tThe string to be reversed.\r\n\t\t// description:\r\n\t\t//\t\tReverse the string str.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar chars = str.split(\"\");\r\n\t\tif (bdx) {\r\n\t\t\tvar levels = [];\r\n\t\t\tcomputeLevels(chars, levels, bdx);\r\n\t\t\tlvMap = levels;\r\n\t\t}\r\n\t\tchars.reverse();\r\n\t\tstMap.reverse();\r\n\t\treturn chars.join(\"\");\r\n\t}\r\n\r\n\tfunction indexOf(cArray, cLength, idx) {\r\n\t\tfor (var i = 0; i < cLength; i++) {\r\n\t\t\tif (cArray[i] === idx) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfunction isArabicAlefbet(c) {\r\n\t\tfor (var i = 0; i < ArabicAlefBetIntervalsBegine.length; i++) {\r\n\t\t\tif (c >= ArabicAlefBetIntervalsBegine[i] && c <= ArabicAlefBetIntervalsEnd[i]) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction isNextArabic(str06, index, step, nIEnd) {\r\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\r\n\t\t\tindex += step;\r\n\t\t}\r\n\t\tif (((index) * step) < nIEnd && isArabicAlefbet(str06[index])) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction isNextAlef(str06, index, step, nIEnd) {\r\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\r\n\t\t\tindex += step;\r\n\t\t}\r\n\t\tvar c = \" \";\r\n\t\tif (((index) * step) < nIEnd) {\r\n\t\t\tc = str06[index];\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\r\n\t\t\tif (AlefTable[i] === c) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction invertLevel(lev, chars, levels, bdx) {\r\n\t\tif (bdx.hiLevel < lev) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (lev === 1 && bdx.dir === RTL && !bdx.hasUbatB) {\r\n\t\t\tchars.reverse();\r\n\t\t\tstMap.reverse();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar len = chars.length, start = 0, end, lo, hi, tmp;\r\n\t\twhile (start < len) {\r\n\t\t\tif (levels[start] >= lev) {\r\n\t\t\t\tend = start + 1;\r\n\t\t\t\twhile (end < len && levels[end] >= lev) {\r\n\t\t\t\t\tend++;\r\n\t\t\t\t}\r\n\t\t\t\tfor (lo = start, hi = end - 1 ; lo < hi; lo++, hi--) {\r\n\t\t\t\t\ttmp = chars[lo];\r\n\t\t\t\t\tchars[lo] = chars[hi];\r\n\t\t\t\t\tchars[hi] = tmp;\r\n\t\t\t\t\ttmp = stMap[lo];\r\n\t\t\t\t\tstMap[lo] = stMap[hi];\r\n\t\t\t\t\tstMap[hi] = tmp;\r\n\t\t\t\t}\r\n\t\t\t\tstart = end;\r\n\t\t\t}\r\n\t\t\tstart++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getCharClass(chars, types, classes, ix, bdx) {\r\n\t\t// summary:\r\n\t\t//\t\tReturn the class if ix character in chars.\r\n\t\t// chars:\r\n\t\t//\t\tThe source string as Array of characters.\r\n\t\t// types:\r\n\t\t//\t\tArray of types, for each character in chars.\r\n\t\t// classes:\r\n\t\t//\t\tArray of classes that already been solved.\r\n\t\t// ix:\r\n\t\t//\t\tthe index of checked character.\r\n\t\t// bdx: Object\r\n\t\t//\t\tUsed for intermediate data storage\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar cType = types[ix],\r\n\t\t\tresults = {\r\n\t\t\t\tUBAT_L : function () { bdx.lastArabic = false; return UBAT_L; },\r\n\t\t\t\tUBAT_R : function () { bdx.lastArabic = false; return UBAT_R; },\r\n\t\t\t\tUBAT_ON : function () { return UBAT_ON; },\r\n\t\t\t\tUBAT_AN : function () { return UBAT_AN; },\r\n\t\t\t\tUBAT_EN : function () { return bdx.lastArabic ? UBAT_AN : UBAT_EN; },\r\n\t\t\t\tUBAT_AL : function () { bdx.lastArabic = true; bdx.hasUbatAl = true; return UBAT_R; },\r\n\t\t\t\tUBAT_WS : function () { return UBAT_ON; },\r\n\t\t\t\tUBAT_CS : function () {\r\n\t\t\t\t\t\t\t\t\t\tvar wType, nType;\r\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || (ix + 1) >= types.length ||\r\n\t\t\t\t\t\t\t\t\t\t\t((wType = classes[ix - 1]) !== UBAT_EN && wType !== UBAT_AN) ||\r\n\t\t\t\t\t\t\t\t\t\t\t((nType = types[ix + 1]) !== UBAT_EN && nType !== UBAT_AN)) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\r\n\t\t\t\t\t\t\t\t\t\t\tnType = UBAT_AN;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn nType === wType ? nType : UBAT_ON;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\tUBAT_ES : function () {\r\n\t\t\t\t\t\t\t\t\t\tvar wType = ix > 0 ? classes[ix - 1] : UBAT_B;\r\n\t\t\t\t\t\t\t\t\t\tif (wType === UBAT_EN && (ix + 1) < types.length && types[ix + 1] === UBAT_EN) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\tUBAT_ET : function () {\r\n\t\t\t\t\t\t\t\t\t\tif (ix > 0 && classes[ix - 1] === UBAT_EN) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (bdx.lastArabic) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tvar i = ix + 1,\r\n\t\t\t\t\t\t\t\t\t\t\tlen = types.length;\r\n\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_ET) {\r\n\t\t\t\t\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (i < len && types[i] === UBAT_EN) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_EN;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\tUBAT_NSM : function () {\r\n\t\t\t\t\t\t\t\t\t\tif (bdx.inFormat === \"VLTR\") {\t// visual to implicit transformation\r\n\t\t\t\t\t\t\t\t\t\t\tvar len = types.length,\r\n\t\t\t\t\t\t\t\t\t\t\t\ti = ix + 1;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (i < len && types[i] === UBAT_NSM) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (i < len) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar c = chars[ix],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trtlCandidate = (c >= 0x0591 && c <= 0x08FF) || c === 0xFB1E,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twType = types[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (rtlCandidate && (wType === UBAT_R || wType === UBAT_AL)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn UBAT_R;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (ix < 1 || types[ix - 1] === UBAT_B) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn UBAT_ON;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn classes[ix - 1];\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\tUBAT_B : function () { bdx.lastArabic = true; bdx.hasUbatB = true; return bdx.dir; },\r\n\t\t\t\tUBAT_S : function () { bdx.hasUbatS = true; return UBAT_ON; },\r\n\t\t\t\tUBAT_LRE : function () { bdx.lastArabic = false; return UBAT_ON; },\r\n\t\t\t\tUBAT_RLE : function () { bdx.lastArabic = false; return UBAT_ON; },\r\n\t\t\t\tUBAT_LRO : function () { bdx.lastArabic = false; return UBAT_ON; },\r\n\t\t\t\tUBAT_RLO : function () { bdx.lastArabic = false; return UBAT_ON; },\r\n\t\t\t\tUBAT_PDF : function () { bdx.lastArabic = false; return UBAT_ON; },\r\n\t\t\t\tUBAT_BN : function () { return UBAT_ON; }\r\n\t\t\t};\r\n\t\treturn results[TYPES_NAMES[cType]]();\r\n\t}\r\n\r\n\tfunction getMirror(c) {\r\n\t\t// summary:\r\n\t\t//\t\tCalculates the mirrored character of c\r\n\t\t// c:\r\n\t\t//\t\tThe character to be mirrored.\r\n\t\t// tags:\r\n\t\t//\t\tprivate\r\n\t\tvar mid, low = 0, high = SwapTable.length - 1;\r\n\r\n\t\twhile (low <= high) {\r\n\t\t\tmid = Math.floor((low + high) / 2);\r\n\t\t\tif (c < SwapTable[mid][0]) {\r\n\t\t\t\thigh = mid - 1;\r\n\t\t\t} else if (c > SwapTable[mid][0]) {\r\n\t\t\t\tlow = mid + 1;\r\n\t\t\t} else {\r\n\t\t\t\treturn SwapTable[mid][1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction isStandAlonCharacter(c) {\r\n\t\tfor (var i = 0; i < StandAlonForm.length; i++) {\r\n\t\t\tif (StandAlonForm[i] === c) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction getMedialFormCharacterFE(c) {\r\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\r\n\t\t\tif (c === BaseForm[i]) {\r\n\t\t\t\treturn MedialForm[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction getFormCharacterFE(/*char*/ c, /*char[]*/formArr) {\r\n\t\tfor (var i = 0; i < BaseForm.length; i++) {\r\n\t\t\tif (c === BaseForm[i]) {\r\n\t\t\t\treturn formArr[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\r\n\tfunction isArabicDiacritics(c) {\r\n\t\treturn\t(c >= \"\\u064b\" && c <= \"\\u0655\") ? true : false;\r\n\t}\r\n\r\n\tfunction getOrientation(/*Char*/ oc) {\r\n\t\tif (oc === \"L\") {\r\n\t\t\treturn \"LTR\";\r\n\t\t}\r\n\t\tif (oc === \"R\") {\r\n\t\t\treturn \"RTL\";\r\n\t\t}\r\n\t\tif (oc === \"C\") {\r\n\t\t\treturn \"CLR\";\r\n\t\t}\r\n\t\tif (oc === \"D\") {\r\n\t\t\treturn \"CRL\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setAlefToSpace(str06, index, step, nIEnd) {\r\n\t\twhile (((index) * step) < nIEnd && isArabicDiacritics(str06[index])) {\r\n\t\t\tindex += step;\r\n\t\t}\r\n\t\tif (((index) * step) < nIEnd) {\r\n\t\t\tstr06[index] = \" \";\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction getLamAlefFE(alef06, LamAlefForm) {\r\n\t\tfor (var i = 0; i < AlefTable.length; i++) {\r\n\t\t\tif (alef06 === AlefTable[i]) {\r\n\t\t\t\treturn LamAlefForm[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn alef06;\r\n\t}\r\n\r\n\tfunction initMaps(map1, map2, length) {\r\n\t\tstMap = [];\r\n\t\tlvMap = [];\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tmap1[i] = i;\r\n\t\t\tmap2[i] = i;\r\n\t\t\tstMap[i] = i;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reverseMap(sourceMap) {\r\n\t\tvar map = new Array(sourceMap.length);\r\n\t\tfor (var i = 0; i < sourceMap.length; i++) {\r\n\t\t\tmap[sourceMap[i]] = i;\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tfunction updateMap(map, value, isGreater, update) {\r\n\t\tfor (var i = 0; i < map.length; i++) {\r\n\t\t\tif (map[i] > value || (!isGreater && map[i] === value)) {\r\n\t\t\t\tmap[i] += update;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar stMap = [];\r\n\tvar tsMap = [];\r\n\tvar lvMap = [];\r\n\r\n\tvar\tBDX = {\r\n\t\t\tdir: 0,\r\n\t\t\tdefInFormat: \"LLTR\",\r\n\t\t\tdefoutFormat: \"VLTR\",\r\n\t\t\tdefSwap: \"YN\",\r\n\t\t\tinFormat: \"LLTR\",\r\n\t\t\toutFormat: \"VLTR\",\r\n\t\t\tswap: \"YN\",\r\n\t\t\thiLevel: 0,\r\n\t\t\tlastArabic: false,\r\n\t\t\thasUbatAl: false,\r\n\t\t\thasBlockSep: false,\r\n\t\t\thasSegSep: false\r\n\t\t};\r\n\r\n\tvar ITIL = 5;\r\n\r\n\tvar ITCOND = 6;\r\n\r\n\tvar LTR = 0;\r\n\r\n\tvar RTL = 1;\r\n\r\n\tvar validFormat = /^[(I|V)][(L|R|C|D)][(Y|N)][(S|N)][N]$/;\r\n\r\n\tvar bidiChars = /[\\u0591-\\u06ff\\ufb1d-\\ufefc]/;\r\n\r\n\t/****************************************************************************/\r\n\t/* Array in which directional characters are replaced by their symmetric.\t*/\r\n\t/****************************************************************************/\r\n\tvar SwapTable = [\r\n\t\t[ \"\\u0028\", \"\\u0029\" ],\t/* Round brackets\t\t\t\t\t*/\r\n\t\t[ \"\\u0029\", \"\\u0028\" ],\r\n\t\t[ \"\\u003C\", \"\\u003E\" ],\t/* Less than/greater than\t\t\t*/\r\n\t\t[ \"\\u003E\", \"\\u003C\" ],\r\n\t\t[ \"\\u005B\", \"\\u005D\" ],\t/* Square brackets\t\t\t\t\t*/\r\n\t\t[ \"\\u005D\", \"\\u005B\" ],\r\n\t\t[ \"\\u007B\", \"\\u007D\" ],\t/* Curly brackets\t\t\t\t\t*/\r\n\t\t[ \"\\u007D\", \"\\u007B\" ],\r\n\t\t[ \"\\u00AB\", \"\\u00BB\" ],\t/* Double angle quotation marks\t\t*/\r\n\t\t[ \"\\u00BB\", \"\\u00AB\" ],\r\n\t\t[ \"\\u2039\", \"\\u203A\" ],\t/* single angle quotation mark\t\t*/\r\n\t\t[ \"\\u203A\", \"\\u2039\" ],\r\n\t\t[ \"\\u207D\", \"\\u207E\" ],\t/* Superscript parentheses\t\t\t*/\r\n\t\t[ \"\\u207E\", \"\\u207D\" ],\r\n\t\t[ \"\\u208D\", \"\\u208E\" ],\t/* Subscript parentheses\t\t\t*/\r\n\t\t[ \"\\u208E\", \"\\u208D\" ],\r\n\t\t[ \"\\u2264\", \"\\u2265\" ],\t/* Less/greater than or equal\t\t*/\r\n\t\t[ \"\\u2265\", \"\\u2264\" ],\r\n\t\t[ \"\\u2329\", \"\\u232A\" ],\t/* Angle brackets\t\t\t\t\t*/\r\n\t\t[ \"\\u232A\", \"\\u2329\" ],\r\n\t\t[ \"\\uFE59\", \"\\uFE5A\" ],\t/* Small round brackets\t\t\t\t*/\r\n\t\t[ \"\\uFE5A\", \"\\uFE59\" ],\r\n\t\t[ \"\\uFE5B\", \"\\uFE5C\" ],\t/* Small curly brackets\t\t\t\t*/\r\n\t\t[ \"\\uFE5C\", \"\\uFE5B\" ],\r\n\t\t[ \"\\uFE5D\", \"\\uFE5E\" ],\t/* Small tortoise shell brackets\t*/\r\n\t\t[ \"\\uFE5E\", \"\\uFE5D\" ],\r\n\t\t[ \"\\uFE64\", \"\\uFE65\" ],\t/* Small less than/greater than\t\t*/\r\n\t\t[ \"\\uFE65\", \"\\uFE64\" ]\r\n\t];\r\n\tvar AlefTable = [\"\\u0622\", \"\\u0623\", \"\\u0625\", \"\\u0627\"];\r\n\r\n\tvar LamAlefInialTableFE = [\"\\ufef5\", \"\\ufef7\", \"\\ufef9\", \"\\ufefb\"];\r\n\r\n\tvar LamAlefMedialTableFE = [\"\\ufef6\", \"\\ufef8\", \"\\ufefa\", \"\\ufefc\"];\r\n\t/**\r\n\t * Arabic Characters in the base form\r\n\t */\r\n\tvar BaseForm = [\"\\u0627\", \"\\u0628\", \"\\u062A\", \"\\u062B\", \"\\u062C\", \"\\u062D\", \"\\u062E\", \"\\u062F\", \"\\u0630\", \"\\u0631\",\r\n                    \"\\u0632\", \"\\u0633\", \"\\u0634\", \"\\u0635\", \"\\u0636\", \"\\u0637\", \"\\u0638\", \"\\u0639\", \"\\u063A\", \"\\u0641\",\r\n                    \"\\u0642\", \"\\u0643\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\", \"\\u0623\",\r\n                    \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u0644\", \"\\u0645\", \"\\u0646\", \"\\u0647\", \"\\u0648\", \"\\u064A\", \"\\u0625\",\r\n                    \"\\u0623\", \"\\u0622\", \"\\u0629\", \"\\u0649\", \"\\u06CC\", \"\\u0626\", \"\\u0624\"];\r\n\r\n\t/**\r\n\t * Arabic shaped characters in Isolated form\r\n\t */\r\n\tvar IsolatedForm = [\"\\uFE8D\", \"\\uFE8F\", \"\\uFE95\", \"\\uFE99\", \"\\uFE9D\", \"\\uFEA1\", \"\\uFEA5\", \"\\uFEA9\", \"\\uFEAB\",\r\n                        \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB1\", \"\\uFEB5\", \"\\uFEB9\", \"\\uFEBD\", \"\\uFEC1\", \"\\uFEC5\", \"\\uFEC9\",\r\n                        \"\\uFECD\", \"\\uFED1\", \"\\uFED5\", \"\\uFED9\", \"\\uFEDD\", \"\\uFEE1\", \"\\uFEE5\", \"\\uFEE9\", \"\\uFEED\",\r\n                        \"\\uFEF1\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFC\", \"\\uFE89\", \"\\uFE85\",\r\n                        \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\",\r\n                        \"\\uFE89\", \"\\uFE85\"];\r\n\r\n\t/**\r\n\t * Arabic shaped characters in Final form\r\n\t */\r\n\tvar FinalForm = [\"\\uFE8E\", \"\\uFE90\", \"\\uFE96\", \"\\uFE9A\", \"\\uFE9E\", \"\\uFEA2\", \"\\uFEA6\", \"\\uFEAA\", \"\\uFEAC\", \"\\uFEAE\",\r\n                     \"\\uFEB0\", \"\\uFEB2\", \"\\uFEB6\", \"\\uFEBA\", \"\\uFEBE\", \"\\uFEC2\", \"\\uFEC6\", \"\\uFECA\", \"\\uFECE\", \"\\uFED2\",\r\n                     \"\\uFED6\", \"\\uFEDA\", \"\\uFEDE\", \"\\uFEE2\", \"\\uFEE6\", \"\\uFEEA\", \"\\uFEEE\", \"\\uFEF2\", \"\\uFE88\", \"\\uFE84\",\r\n                     \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFD\", \"\\uFE8A\", \"\\uFE86\", \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\",\r\n                     \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\", \"\\uFE8A\", \"\\uFE86\"];\r\n\r\n\t/**\r\n\t * Arabic shaped characters in Media form\r\n\t */\r\n\tvar MedialForm = [\"\\uFE8E\", \"\\uFE92\", \"\\uFE98\", \"\\uFE9C\", \"\\uFEA0\", \"\\uFEA4\", \"\\uFEA8\", \"\\uFEAA\", \"\\uFEAC\",\r\n                      \"\\uFEAE\", \"\\uFEB0\", \"\\uFEB4\", \"\\uFEB8\", \"\\uFEBC\", \"\\uFEC0\", \"\\uFEC4\", \"\\uFEC8\", \"\\uFECC\",\r\n                      \"\\uFED0\", \"\\uFED4\", \"\\uFED8\", \"\\uFEDC\", \"\\uFEE0\", \"\\uFEE4\", \"\\uFEE8\", \"\\uFEEC\", \"\\uFEEE\",\r\n                      \"\\uFEF4\", \"\\uFE88\", \"\\uFE84\", \"\\uFE82\", \"\\uFE94\", \"\\uFEF0\", \"\\uFBFF\", \"\\uFE8C\", \"\\uFE86\",\r\n                      \"\\uFE71\", \"\\uFE72\", \"\\uFE74\", \"\\uFE77\", \"\\uFE79\", \"\\uFE7B\", \"\\uFE7D\", \"\\uFE7F\", \"\\uFE80\",\r\n                      \"\\uFE8C\", \"\\uFE86\"];\r\n\r\n\t/**\r\n\t * Arabic shaped characters in Initial form\r\n\t */\r\n\tvar InitialForm = [\"\\uFE8D\", \"\\uFE91\", \"\\uFE97\", \"\\uFE9B\", \"\\uFE9F\", \"\\uFEA3\", \"\\uFEA7\", \"\\uFEA9\", \"\\uFEAB\",\r\n                       \"\\uFEAD\", \"\\uFEAF\", \"\\uFEB3\", \"\\uFEB7\", \"\\uFEBB\", \"\\uFEBF\", \"\\uFEC3\", \"\\uFEC7\", \"\\uFECB\",\r\n                       \"\\uFECF\", \"\\uFED3\", \"\\uFED7\", \"\\uFEDB\", \"\\uFEDF\", \"\\uFEE3\", \"\\uFEE7\", \"\\uFEEB\", \"\\uFEED\",\r\n                       \"\\uFEF3\", \"\\uFE87\", \"\\uFE83\", \"\\uFE81\", \"\\uFE93\", \"\\uFEEF\", \"\\uFBFE\", \"\\uFE8B\", \"\\uFE85\",\r\n                       \"\\uFE70\", \"\\uFE72\", \"\\uFE74\", \"\\uFE76\", \"\\uFE78\", \"\\uFE7A\", \"\\uFE7C\", \"\\uFE7E\", \"\\uFE80\",\r\n                       \"\\uFE8B\", \"\\uFE85\"];\r\n\r\n\t/**\r\n\t * Arabic characters that couldn't join to the next character\r\n\t */\r\n\tvar StandAlonForm = [\"\\u0621\", \"\\u0622\", \"\\u0623\", \"\\u0624\", \"\\u0625\", \"\\u0627\", \"\\u0629\", \"\\u062F\", \"\\u0630\",\r\n                         \"\\u0631\", \"\\u0632\", \"\\u0648\", \"\\u0649\"];\r\n\r\n\tvar FETo06Table = [\"\\u064B\", \"\\u064B\", \"\\u064C\", \"\\u061F\", \"\\u064D\", \"\\u061F\", \"\\u064E\", \"\\u064E\", \"\\u064F\",\r\n                       \"\\u064F\", \"\\u0650\", \"\\u0650\", \"\\u0651\", \"\\u0651\", \"\\u0652\", \"\\u0652\", \"\\u0621\", \"\\u0622\",\r\n                       \"\\u0622\", \"\\u0623\", \"\\u0623\", \"\\u0624\", \"\\u0624\", \"\\u0625\", \"\\u0625\", \"\\u0626\", \"\\u0626\",\r\n                       \"\\u0626\", \"\\u0626\", \"\\u0627\", \"\\u0627\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0628\", \"\\u0629\",\r\n                       \"\\u0629\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062A\", \"\\u062B\", \"\\u062B\", \"\\u062B\", \"\\u062B\",\r\n                       \"\\u062C\", \"\\u062C\", \"\\u062C\", \"\\u062c\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062D\", \"\\u062E\",\r\n                       \"\\u062E\", \"\\u062E\", \"\\u062E\", \"\\u062F\", \"\\u062F\", \"\\u0630\", \"\\u0630\", \"\\u0631\", \"\\u0631\",\r\n                       \"\\u0632\", \"\\u0632\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0633\", \"\\u0634\", \"\\u0634\", \"\\u0634\",\r\n                       \"\\u0634\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0635\", \"\\u0636\", \"\\u0636\", \"\\u0636\", \"\\u0636\",\r\n                       \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0637\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0638\", \"\\u0639\",\r\n                       \"\\u0639\", \"\\u0639\", \"\\u0639\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u063A\", \"\\u0641\", \"\\u0641\",\r\n                       \"\\u0641\", \"\\u0641\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0642\", \"\\u0643\", \"\\u0643\", \"\\u0643\",\r\n                       \"\\u0643\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0644\", \"\\u0645\", \"\\u0645\", \"\\u0645\", \"\\u0645\",\r\n                       \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0646\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0647\", \"\\u0648\",\r\n                       \"\\u0648\", \"\\u0649\", \"\\u0649\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\u064A\", \"\\uFEF5\", \"\\uFEF6\",\r\n                       \"\\uFEF7\", \"\\uFEF8\", \"\\uFEF9\", \"\\uFEFA\", \"\\uFEFB\", \"\\uFEFC\", \"\\u061F\", \"\\u061F\", \"\\u061F\"];\r\n\r\n\tvar ArabicAlefBetIntervalsBegine = [\"\\u0621\", \"\\u0641\"];\r\n\r\n\tvar ArabicAlefBetIntervalsEnd = [\"\\u063A\", \"\\u064a\"];\r\n\r\n\tvar\timpTabLtr = [\r\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\r\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t0,\t\t0,\t\t0\t], /* 0 LTR text\t*/\r\n\t\t[\t0,\t\t3,\t\t0,\t\t1,\t\t2,\t\t2,\t\t0\t], /* 1 LTR+AN\t\t*/\r\n\t\t[\t0,\t\t3,\t\t0,\t\t0x11,\t2,\t\t0,\t\t1\t], /* 2 LTR+AN+N\t*/\r\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t1,\t\t0\t], /* 3 RTL text\t*/\r\n\t\t[\t0,\t\t3,\t\t0x15,\t0x15,\t4,\t\t0,\t\t1\t], /* 4 RTL cont\t*/\r\n\t\t[\t0,\t\t3,\t\t5,\t\t5,\t\t4,\t\t2,\t\t0\t]  /* 5 RTL+EN/AN\t*/\r\n\t];\r\n\tvar impTabRtl = [\r\n\t/*\t\tL,\t\tR,\t\tEN,\t\tAN,\t\tN,\t\tIL,\t\tCond */\r\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t1,\t\t0\t], /* 0 RTL text\t*/\r\n\t\t[\t2,\t\t0,\t\t1,\t\t1,\t\t0,\t\t2,\t\t0\t], /* 1 RTL+EN/AN\t*/\r\n\t\t[\t2,\t\t0,\t\t2,\t\t1,\t\t3,\t\t2,\t\t0\t], /* 2 LTR text\t*/\r\n\t\t[\t2,\t\t0,\t\t2,\t\t0x21,\t3,\t\t1,\t\t1\t]  /* 3 LTR+cont\t*/\r\n\t];\r\n\r\n\tvar UBAT_L\t= 0; /* left to right\t\t\t\t*/\r\n\tvar UBAT_R\t= 1; /* right to left\t\t\t\t*/\r\n\tvar UBAT_EN = 2; /* European digit\t\t\t\t*/\r\n\tvar UBAT_AN = 3; /* Arabic-Indic digit\t\t\t*/\r\n\tvar UBAT_ON = 4; /* neutral\t\t\t\t\t\t*/\r\n\tvar UBAT_B\t= 5; /* block separator\t\t\t\t*/\r\n\tvar UBAT_S\t= 6; /* segment separator\t\t\t*/\r\n\tvar UBAT_AL = 7; /* Arabic Letter\t\t\t\t*/\r\n\tvar UBAT_WS = 8; /* white space\t\t\t\t\t*/\r\n\tvar UBAT_CS = 9; /* common digit separator\t\t*/\r\n\tvar UBAT_ES = 10; /* European digit separator\t*/\r\n\tvar UBAT_ET = 11; /* European digit terminator\t*/\r\n\tvar UBAT_NSM = 12; /* Non Spacing Mark\t\t\t*/\r\n\tvar UBAT_LRE = 13; /* LRE\t\t\t\t\t\t*/\r\n\tvar UBAT_RLE = 14; /* RLE\t\t\t\t\t\t*/\r\n\tvar UBAT_PDF = 15; /* PDF\t\t\t\t\t\t*/\r\n\tvar UBAT_LRO = 16; /* LRO\t\t\t\t\t\t*/\r\n\tvar UBAT_RLO = 17; /* RLO\t\t\t\t\t\t*/\r\n\tvar UBAT_BN\t= 18; /* Boundary Neutral\t\t\t*/\r\n\r\n\tvar TYPES_NAMES = [ \"UBAT_L\", \"UBAT_R\", \"UBAT_EN\", \"UBAT_AN\", \"UBAT_ON\", \"UBAT_B\", \"UBAT_S\", \"UBAT_AL\", \"UBAT_WS\",\r\n\t\t\t\t\t\t\"UBAT_CS\", \"UBAT_ES\", \"UBAT_ET\", \"UBAT_NSM\", \"UBAT_LRE\", \"UBAT_RLE\", \"UBAT_PDF\", \"UBAT_LRO\",\r\n\t\t\t\t\t\t\"UBAT_RLO\", \"UBAT_BN\" ];\r\n\tvar TBBASE = 100;\r\n\r\n\tvar TB00 = TBBASE + 0;\r\n\tvar TB05 = TBBASE + 1;\r\n\tvar TB06 = TBBASE + 2;\r\n\tvar TB07 = TBBASE + 3;\r\n\tvar TB20 = TBBASE + 4;\r\n\tvar TBFB = TBBASE + 5;\r\n\tvar TBFE = TBBASE + 6;\r\n\tvar TBFF = TBBASE + 7;\r\n\r\n\tvar L\t= UBAT_L;\r\n\tvar R\t= UBAT_R;\r\n\tvar EN\t= UBAT_EN;\r\n\tvar AN\t= UBAT_AN;\r\n\tvar ON\t= UBAT_ON;\r\n\tvar B\t= UBAT_B;\r\n\tvar S\t= UBAT_S;\r\n\tvar AL\t= UBAT_AL;\r\n\tvar WS\t= UBAT_WS;\r\n\tvar CS\t= UBAT_CS;\r\n\tvar ES\t= UBAT_ES;\r\n\tvar ET\t= UBAT_ET;\r\n\tvar NSM\t= UBAT_NSM;\r\n\tvar LRE\t= UBAT_LRE;\r\n\tvar RLE\t= UBAT_RLE;\r\n\tvar PDF\t= UBAT_PDF;\r\n\tvar LRO\t= UBAT_LRO;\r\n\tvar RLO\t= UBAT_RLO;\r\n\tvar BN\t= UBAT_BN;\r\n\r\n\tvar MasterTable = [\r\n /*******************************************************************************************************/\r\n /*     0     1     2     3     4     5     6     7     8     9     A     B     C     D     E     F     */\r\n /*******************************************************************************************************/\r\n /*0-*/ TB00, L,    L,    L,    L,    TB05, TB06, TB07, R,    L,    L,    L,    L,    L,    L,    L,\r\n /*1-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,\r\n /*2-*/ TB20, ON,   ON,   ON,   L,    ON,   L,    ON,   L,    ON,   ON,   ON,   L,    L,    ON,   ON,\r\n /*3-*/ L,    L,    L,    L,    L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*4-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,\r\n /*5-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*6-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*7-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*8-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*9-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,\r\n /*A-*/ L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    L,    ON,   ON,   ON,\r\n /*B-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*C-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*D-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    ON,   ON,   L,    L,    ON,   ON,   L,\r\n /*E-*/ L,    ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,\r\n /*F-*/ ON,   ON,   ON,   ON,   ON,   ON,   ON,   ON,   L,    L,    L,    TBFB, AL,   AL,   TBFE, TBFF\r\n\t];\r\n\r\n\tvar UnicodeTable = [\r\n        [ /*\tTable 00: Unicode 00xx */\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  S,   B,   S,   WS,  B,   BN,  BN,\r\n    /*1-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  B,   B,   B,   S,\r\n    /*2-*/  WS,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\r\n    /*3-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\r\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\r\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  BN,\r\n    /*8-*/  BN,  BN,  BN,  BN,  BN,  B,   BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\r\n    /*9-*/  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,  BN,\r\n    /*A-*/  CS,  ON,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  L,   ON,  ON,  BN,  ON,  ON,\r\n    /*B-*/  ET,  ET,  EN,  EN,  ON,  L,   ON,  ON,  ON,  EN,  L,   ON,  ON,  ON,  ON,  ON,\r\n    /*C-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*D-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*E-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*F-*/  L,   L,   L,   L,   L,   L,   L,   ON,  L,   L,   L,   L,   L,   L,   L,   L\r\n\t\t],\r\n\t\t[ /*\tTable 01: Unicode 05xx */\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*1-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*2-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*3-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*4-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,   L,\r\n    /*6-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   ON,  L,   ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*9-*/  ON,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*A-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*B-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, R,   NSM,\r\n    /*C-*/  R,   NSM, NSM, R,   NSM, NSM, R,   NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\r\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,\r\n    /*F-*/  R,   R,   R,   R,   R,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\r\n\t\t],\r\n\t\t[ /*\tTable 02: Unicode 06xx */\r\n    /****************************************************************************************/\r\n\t/*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n\t/****************************************************************************************/\r\n    /*0-*/  AN,  AN,  AN,  AN,  ON,  ON,  ON,  ON,  AL,  ET,  ET,  AL,  CS,  AL,  ON,  ON,\r\n    /*1-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, AL,  ON,  ON,  AL,  AL,\r\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*3-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*4-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM,\r\n    /*5-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*6-*/  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  AN,  ET,  AN,  AN,  AL,  AL,  AL,\r\n    /*7-*/  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, AN,  ON,  NSM,\r\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, AL,  AL,  NSM, NSM, ON,  NSM, NSM, NSM, NSM, AL,  AL,\r\n    /*F-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  AL,  AL,  AL,  AL,  AL,  AL\r\n\t\t],\r\n\t\t[\t/*\tTable\t03:\tUnicode\t07xx\t*/\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  AL,\r\n    /*1-*/  AL,  NSM, AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*2-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*3-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*4-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  AL,  AL,  AL,\r\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*B-*/  NSM, AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*C-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\r\n    /*D-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\r\n    /*E-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   R,   NSM, NSM, NSM, NSM, NSM,\r\n    /*F-*/  NSM, NSM, NSM, NSM, R,   R,   ON,  ON,  ON,  ON,  R,   ON,  ON,  ON,  ON,  ON\r\n\t\t],\r\n\t\t[\t/*\tTable\t04:\tUnicode\t20xx\t*/\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  WS,  BN,  BN,  BN,  L,   R,\r\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*2-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,  B,   LRE, RLE, PDF, LRO, RLO, CS,\r\n    /*3-*/  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*4-*/  ON,  ON,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*5-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  WS,\r\n    /*6-*/  BN,  BN,  BN,  BN,  BN,  ON,  ON,  ON,  ON,  ON,  BN,  BN,  BN,  BN,  BN,  BN,\r\n    /*7-*/  EN,  L,   ON,  ON,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  L,\r\n    /*8-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  ES,  ES,  ON,  ON,  ON,  ON,\r\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,\r\n    /*A-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,\r\n    /*B-*/  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*C-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*D-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*E-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*F-*/  NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\r\n\t\t],\r\n\t\t[\t/*\tTable\t05:\tUnicode\tFBxx\t*/\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*1-*/  ON,  ON,  ON,  L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,  R,   NSM, R,\r\n    /*2-*/  R,   R,   R,   R,   R,   R,   R,   R,   R,   ES,  R,   R,   R,   R,   R,   R,\r\n    /*3-*/  R,   R,   R,   R,   R,   R,   R,   ON,  R,   R,   R,   R,   R,   ON,  R,   ON,\r\n    /*4-*/  R,   R,   ON,  R,   R,   ON,  R,   R,   R,   R,   R,   R,   R,   R,   R,   R,\r\n    /*5-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*6-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*C-*/  AL,  AL,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*D-*/  ON,  ON,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL\r\n\t\t],\r\n\t\t[\t/*\tTable\t06:\tUnicode\tFExx\t*/\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM, NSM,\r\n    /*1-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*2-*/  NSM, NSM, NSM, NSM, NSM, NSM, NSM, ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*3-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*4-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*5-*/  CS,  ON,  CS,  ON,  ON,  CS,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ET,\r\n    /*6-*/  ON,  ON,  ES,  ES,  ON,  ON,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,\r\n    /*7-*/  AL,  AL,  AL,  AL,  AL,  ON,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*8-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*9-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*A-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*B-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*C-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*D-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*E-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,\r\n    /*F-*/  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  AL,  ON,  ON,  BN\r\n\t\t],\r\n\t\t[\t/*\tTable\t07:\tUnicode\tFFxx\t*/\r\n    /****************************************************************************************/\r\n    /*      0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F\t*/\r\n    /****************************************************************************************/\r\n    /*0-*/  ON,  ON,  ON,  ET,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ES,  CS,  ES,  CS,  CS,\r\n    /*1-*/  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  EN,  CS,  ON,  ON,  ON,  ON,  ON,\r\n    /*2-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*3-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\r\n    /*4-*/  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*5-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,  ON,  ON,  ON,  ON,\r\n    /*6-*/  ON,  ON,  ON,  ON,  ON,  ON,  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*7-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*8-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*9-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*A-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,\r\n    /*B-*/  L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   L,   ON,\r\n    /*C-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   L,   L,   L,\r\n    /*D-*/  ON,  ON,  L,   L,   L,   L,   L,   L,   ON,  ON,  L,   L,   L,   ON,  ON,  ON,\r\n    /*E-*/  ET,  ET,  ON,  ON,  ON,  ET,  ET,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,\r\n    /*F-*/  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON,  ON\r\n\t\t]\r\n\t];\r\n\r\n\treturn BidiEngine;\r\n}).apply(null, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dojox/string/BidiEngine.js\n");

/***/ })

}]);